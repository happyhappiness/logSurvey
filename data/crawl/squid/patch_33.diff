----++++src/client_side.cc
@@ -1313,10 +1313,14 @@ parseHttpRequest(ConnStateData *csd, const Http1::RequestParserPointer &amp;hp)
         }
 
         if (!parsedOk) {
-            if (hp-&gt;parseStatusCode == Http::scRequestHeaderFieldsTooLarge || hp-&gt;parseStatusCode == Http::scUriTooLong)
-                return csd-&gt;abortRequestParsing(&quot;error:request-too-large&quot;);
-
-            return csd-&gt;abortRequestParsing(&quot;error:invalid-request&quot;);
+            const bool tooBig =
+                hp-&gt;parseStatusCode == Http::scRequestHeaderFieldsTooLarge ||
+                hp-&gt;parseStatusCode == Http::scUriTooLong;
+            auto result = csd-&gt;abortRequestParsing(
+                              tooBig ? &quot;error:request-too-large&quot; : &quot;error:invalid-request&quot;);
+            // assume that remaining leftovers belong to this bad request
+            csd-&gt;consumeInput(csd-&gt;inBuf.length());
+            return result;
         }
     }
 
----++++GitHub