    aclNBCheck(http->acl_checklist, clientAccessCheckDone, http);
}

static char *
clientConstructProxyAuthReply(clientHttpRequest * http)
{
    LOCAL_ARRAY(char, buf, 8192);
    LOCAL_ARRAY(char, content, 4096);
    char *hdr;
    memset(buf, '\0', 8192);
    memset(content, '\0', 4096);
    snprintf(content, 4096,
	"<TITLE>Cache Access Denied</TITLE>\n"
	"<H2>Cache Access Denied</H2>\n"
	"<P>\n"
	"Sorry, you are not currently allowed to request:\n"
	"<PRE>    %s</PRE>\n"
	"from this cache until you have authenticated yourself.\n"
	"\n<p>"
	"You need to use Netscape version 2.0 or greater, or Microsoft\n"
	"Internet Explorer 3.0 or an HTTP/1.1 compliant browser for this\n"
	"to work.  Please contact the <a href=\"mailto:%s\">cache\n"
	"administrator</a> if you have difficulties authenticating\n"
	"yourself, or\n"
	"<a href=\"http://%s/cgi-bin/chpasswd.cgi\">change</a> your\n"
	"default password.\n"
	"<P>\n"
	"%s\n"
	"<HR>\n"
	"<ADDRESS>\n"
	"Generated by %s/%s@%s\n"
	"</ADDRESS>\n",
	http->url,
	Config.adminEmail,
	getMyHostname(),
	Config.errHtmlText,
	appname,
	version_string,
	getMyHostname());
    hdr = httpReplyHeader(1.0,
	HTTP_PROXY_AUTHENTICATION_REQUIRED,
	"text/html",
	strlen(content),
	-1,
	squid_curtime);
    snprintf(buf, 8192, "%s%s\r\n%s",
	hdr,
	proxy_auth_line,
	content);
    return buf;
}

void
clientAccessCheckDone(int answer, void *data)
{
    clientHttpRequest *http = data;
    ConnStateData *conn = http->conn;
    int fd = conn->fd;
    char *redirectUrl = NULL;
    char *buf;
    ErrorState *err = NULL;
    debug(33, 5) ("clientAccessCheckDone: '%s' answer=%d\n", http->url, answer);
    http->acl_checklist = NULL;
    if (answer == ACCESS_ALLOWED) {
	urlCanonical(http->request, http->url);
	if (http->redirect_state != REDIRECT_NONE)
	    fatal_dump("clientAccessCheckDone: wrong redirect_state");
	http->redirect_state = REDIRECT_PENDING;
	redirectStart(http, clientRedirectDone, http);
    } else if (answer == ACCESS_REQ_PROXY_AUTH) {
	http->al.http.code = HTTP_PROXY_AUTHENTICATION_REQUIRED;
	http->log_type = LOG_TCP_DENIED;
	buf = clientConstructProxyAuthReply(http);
	comm_write(fd,
	    xstrdup(buf),
	    strlen(buf),
	    clientShortWriteComplete,
	    http,
	    xfree);
    } else {
	debug(33, 5) ("Access Denied: %s\n", http->url);
	http->log_type = LOG_TCP_DENIED;
