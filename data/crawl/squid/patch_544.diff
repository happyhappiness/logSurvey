@@ -1,8 +1,8 @@
 #ifndef SQUID_FATAL_H
 #define SQUID_FATAL_H
 
-SQUIDCEXTERN void fatal(const char *message);
-SQUIDCEXTERN void fatalf(const char *fmt,...) PRINTF_FORMAT_ARG1;
+extern void fatal(const char *message);
+extern void fatalf(const char *fmt,...) PRINTF_FORMAT_ARG1;
 extern void fatal_dump(const char *message);
 
 #endif /* SQUID_FATAL_H */
@@ -13,6 +13,7 @@
 #include "Debug.h"
 #include "protos.h"
 #include "structs.h"
+#include "tools.h"
 
 #include <algorithm>
 
@@ -14,6 +14,7 @@
 #include "mgr/ActionWriter.h"
 #include "Store.h"
 #include "protos.h"
+#include "tools.h"
 
 DiskdActionData::DiskdActionData()
 {
@@ -23,6 +23,7 @@
 #include "protos.h"
 #include "SquidTime.h"
 #include "StatCounters.h"
+#include "tools.h"
 
 #if HAVE_ERRNO_H
 #include <errno.h>
@@ -1183,7 +1183,6 @@ tests_testHttpReply_LDADD=\
 	$(XTRA_LIBS)
 tests_testHttpReply_DEPENDENCIES= $(SQUID_CPPUNIT_LA)
 
-
 tests_testACLMaxUserIP_SOURCES= \
 	cbdata.cc \
 	ClientInfo.h \
@@ -1664,8 +1663,6 @@ tests_testDiskIO_SOURCES = \
 	tests/stub_store_stats.cc \
 	store_rebuild.h \
 	tests/stub_store_rebuild.cc \
-	tools.h \
-	tests/stub_tools.cc \
 	tests/stub_UdsOp.cc \
 	tests/testDiskIO.cc \
 	tests/testDiskIO.h \
@@ -1678,7 +1675,9 @@ tests_testDiskIO_SOURCES = \
 	URLScheme.cc \
 	$(WIN32_SOURCE) \
 	wordlist.h \
-	wordlist.cc
+	wordlist.cc \
+	tools.h \
+	tests/stub_tools.cc
 nodist_tests_testDiskIO_SOURCES= \
 	$(TESTSOURCES) \
 	$(DISKIO_GEN_SOURCE) \
@@ -15,6 +15,7 @@
 #include "mime_header.h"
 #include "protos.h"
 #include "StoreStats.h"
+#include "tools.h"
 
 /// shared memory segment path to use for MemStore maps
 static const char *ShmLabel = "cache_mem";
@@ -6,7 +6,7 @@
  */
 
 #include "squid.h"
-#include "protos.h" /* for xmemset only */
+#include "tools.h"
 #include "StoreStats.h"
 
 /* StoreInfoStats */
@@ -1,6 +1,4 @@
 /*
- * $Id$
- *
  * DEBUG: section 20    Swap Dir base object
  * AUTHOR: Robert Collins
  *
@@ -40,6 +38,7 @@
 #include "protos.h"
 #include "StoreFileSystem.h"
 #include "SwapDir.h"
+#include "tools.h"
 
 SwapDir::SwapDir(char const *aType): theType(aType),
         max_size(0),
@@ -1,7 +1,4 @@
-
 /*
- * $Id$
- *
  * DEBUG: section 16    Cache Manager Objects
  * AUTHOR: Duane Wessels
  *
@@ -51,9 +48,11 @@
 #include "mgr/FunAction.h"
 #include "mgr/QueryParams.h"
 #include "protos.h" /* rotate_logs() */
+#include "tools.h"
 #include "SquidTime.h"
 #include "Store.h"
 #include "wordlist.h"
+
 #include <algorithm>
 
 /// \ingroup CacheManagerInternal
@@ -40,6 +40,7 @@
 #include "SquidTime.h"
 #include "profiler/Profiler.h"
 #include "protos.h"
+#include "tools.h"
 
 /* The list of event processes */
 
@@ -9,6 +9,7 @@
 #include "fs/rock/RockDbCell.h"
 #include "md5.h"
 #include "protos.h"
+#include "tools.h"
 #include "typedefs.h"
 #include "SquidTime.h"
 #include "store_rebuild.h"
@@ -20,6 +20,8 @@
 #include "Parsing.h"
 #include "protos.h"
 #include "SquidMath.h"
+#include "tools.h"
+
 #include <cstdlib>
 #include <iomanip>
 
@@ -39,6 +39,7 @@
 #include "store_key_md5.h"
 #include "StoreSwapLogData.h"
 #include "store_rebuild.h"
+#include "tools.h"
 #include "UFSSwapLogParser.h"
 
 #if HAVE_MATH_H
@@ -48,6 +48,7 @@
 #include "StoreSwapLogData.h"
 #include "SquidTime.h"
 #include "StatCounters.h"
+#include "tools.h"
 #include "UFSSwapDir.h"
 
 #if HAVE_MATH_H
@@ -39,29 +39,30 @@
  */
 
 #include "squid.h"
-#include "icmp/net_db.h"
-#include "log/File.h"
 #include "cbdata.h"
+#include "disk.h"
 #include "event.h"
-#include "mgr/Registration.h"
-#include "Store.h"
-#include "SwapDir.h"
-#include "HttpRequest.h"
-#include "HttpReply.h"
-#include "MemObject.h"
 #include "fde.h"
 #include "forward.h"
+#include "HttpReply.h"
+#include "HttpRequest.h"
+#include "icmp/net_db.h"
 #include "internal.h"
+#include "ip/Address.h"
+#include "log/File.h"
+#include "Mem.h"
+#include "MemObject.h"
+#include "mgr/Registration.h"
 #include "mime_header.h"
+#include "neighbors.h"
 #include "protos.h"
 #include "SquidTime.h"
-#include "wordlist.h"
-#include "ip/Address.h"
-#include "neighbors.h"
-#include "URL.h"
-#include "Mem.h"
-#include "disk.h"
+#include "Store.h"
 #include "StoreClient.h"
+#include "SwapDir.h"
+#include "tools.h"
+#include "URL.h"
+#include "wordlist.h"
 
 #if HAVE_SYS_STAT_H
 #include <sys/stat.h>
@@ -9,6 +9,7 @@
 #include "base/TextException.h"
 #include "ipc/Kids.h"
 #include "protos.h"
+#include "tools.h"
 
 Kids TheKids;
 KidName TheKidName;
@@ -1,8 +1,5 @@
 /*
- * $Id$
- *
  * DEBUG: section 54    Interprocess Communication
- *
  */
 
 #include "squid.h"
@@ -17,6 +14,7 @@
 #include "ipc/StartListening.h"
 #include "ipc/SharedListen.h"
 #include "protos.h"
+#include "tools.h"
 
 #include <map>
 
@@ -1,14 +1,13 @@
 /*
- * $Id$
- *
  * DEBUG: section 54    Interprocess Communication
  */
 
 #include "squid.h"
+#include "ipc/StoreMap.h"
 #include "protos.h"
-#include "Store.h"
 #include "store_key_md5.h"
-#include "ipc/StoreMap.h"
+#include "Store.h"
+#include "tools.h"
 
 Ipc::StoreMap::Owner *
 Ipc::StoreMap::Init(const char *const path, const int limit, const size_t extrasSize)
@@ -9,6 +9,7 @@
 #include "protos.h"
 #include "base/TextException.h"
 #include "ipc/TypedMsgHdr.h"
+#include "tools.h"
 
 #include <string.h>
 
@@ -13,6 +13,7 @@
 #include "protos.h"
 #include "structs.h"
 #include "SwapDir.h"
+#include "tools.h"
 
 // Uses a single PagePool instance, for now.
 // Eventually, we may have pools dedicated to memory caching, disk I/O, etc.
@@ -10,6 +10,7 @@
 #include "compat/shm.h"
 #include "ipc/mem/Segment.h"
 #include "protos.h"
+#include "tools.h"
 
 #include <fcntl.h>
 #include <sys/mman.h>
@@ -13,6 +13,7 @@
 #include "protos.h"
 #include "SquidTime.h"
 #include "Store.h"
+#include "tools.h"
 
 extern void GetCountersStats(Mgr::CountersActionData& stats);
 extern void DumpCountersStats(Mgr::CountersActionData& stats, StoreEntry* sentry);
@@ -16,6 +16,7 @@
 #include "mgr/Request.h"
 #include "protos.h"
 #include "Store.h"
+#include "tools.h"
 
 Mgr::FunAction::Pointer
 Mgr::FunAction::Create(const Command::Pointer &aCmd, OBJH* aHandler)
@@ -20,6 +20,7 @@
 #include "protos.h"
 #include "SquidTime.h"
 #include "Store.h"
+#include "tools.h"
 
 extern void GetInfo(Mgr::InfoActionData& stats);
 extern void DumpInfo(Mgr::InfoActionData& stats, StoreEntry* sentry);
@@ -13,6 +13,7 @@
 #include "protos.h"
 #include "SquidMath.h"
 #include "Store.h"
+#include "tools.h"
 
 extern void GetAvgStat(Mgr::IntervalActionData& stats, int minutes, int hours);
 extern void DumpAvgStat(Mgr::IntervalActionData& stats, StoreEntry* sentry);
@@ -13,6 +13,7 @@
 #include "protos.h"
 #include "SquidMath.h"
 #include "Store.h"
+#include "tools.h"
 
 extern void GetIoStats(Mgr::IoActionData& stats);
 extern void DumpIoStats(Mgr::IoActionData& stats, StoreEntry* sentry);
@@ -12,6 +12,7 @@
 #include "mgr/ServiceTimesAction.h"
 #include "protos.h"
 #include "Store.h"
+#include "tools.h"
 
 extern void GetServiceTimesStats(Mgr::ServiceTimesActionData& stats);
 extern void DumpServiceTimesStats(Mgr::ServiceTimesActionData& stats, StoreEntry* sentry);
@@ -12,6 +12,7 @@
 #include "mgr/StoreIoAction.h"
 #include "protos.h"
 #include "Store.h"
+#include "tools.h"
 
 Mgr::StoreIoActionData::StoreIoActionData()
 {
@@ -90,33 +90,9 @@ class store_client;
 
 #include "fatal.h"
 
-/// whether the current process is the parent of all other Squid processes
-SQUIDCEXTERN bool IamMasterProcess();
-/**
-    whether the current process is dedicated to doing things that only
-    a single process should do, such as PID file maintenance and WCCP
-*/
-SQUIDCEXTERN bool IamPrimaryProcess();
-/// whether the current process coordinates worker processes
-SQUIDCEXTERN bool IamCoordinatorProcess();
-/// whether the current process handles HTTP transactions and such
-SQUIDCEXTERN bool IamWorkerProcess();
-/// whether the current process is dedicated to managing a cache_dir
-extern bool IamDiskProcess();
-/// Whether we are running in daemon mode
-SQUIDCEXTERN bool InDaemonMode(); // try using specific Iam*() checks above first
-/// Whether there should be more than one worker process running
-SQUIDCEXTERN bool UsingSmp(); // try using specific Iam*() checks above first
-/// number of Kid processes as defined in src/ipc/Kid.h
-SQUIDCEXTERN int NumberOfKids();
-/// a string describing this process roles such as worker or coordinator
-extern String ProcessRoles();
 SQUIDCEXTERN int DebugSignal;
 
-/* AYJ debugs function to show locations being reset with memset() */
-SQUIDCEXTERN void *xmemset(void *dst, int, size_t);
 
-SQUIDCEXTERN void debug_trap(const char *);
 SQUIDCEXTERN void logsFlush(void);
 SQUIDCEXTERN const char *checkNullString(const char *p);
 
@@ -12,6 +12,7 @@
 #include "snmp_core.h"
 #include "snmp/Pdu.h"
 #include "snmp/Var.h"
+#include "tools.h"
 #if HAVE_ALGORITHM
 #include <algorithm>
 #endif
@@ -10,6 +10,7 @@
 #include "ipc/TypedMsgHdr.h"
 #include "protos.h"
 #include "snmp/Session.h"
+#include "tools.h"
 
 Snmp::Session::Session()
 {
@@ -10,6 +10,7 @@
 #include "ipc/TypedMsgHdr.h"
 #include "protos.h"
 #include "snmp/Var.h"
+#include "tools.h"
 #if HAVE_ALGORITHM
 #include <algorithm>
 #endif
@@ -41,6 +41,7 @@
 #include "protos.h"
 #include "snmp_core.h"
 #include "snmp/Forwarder.h"
+#include "tools.h"
 
 static void snmpPortOpened(const Comm::ConnectionPointer &conn, int errNo);
 
@@ -63,6 +63,7 @@
 #include "StoreClient.h"
 #include "Store.h"
 #include "store_digest.h"
+#include "tools.h"
 #if USE_AUTH
 #include "auth/UserRequest.h"
 #endif
@@ -66,6 +66,7 @@
 #include "StrList.h"
 #include "swap_log_op.h"
 #include "SwapDir.h"
+#include "tools.h"
 #if USE_DELAY_POOLS
 #include "DelayPools.h"
 #endif
@@ -47,6 +47,7 @@
 #include "StoreHashIndex.h"
 #include "SwapDir.h"
 #include "swap_log_op.h"
+#include "tools.h"
 
 #if HAVE_STATVFS
 #if HAVE_SYS_STATVFS_H
@@ -1,6 +1,6 @@
 #include "squid.h"
-// tool functions still defined in protos.h - TODO extract
-#include "protos.h"
+// tool functions still defined in protos.h
+#include "tools.h"
 
 #define STUB_API "tools.cc"
 #include "tests/STUB.h"
@@ -33,7 +33,8 @@
 #ifndef SQUID_TOOLS_H_
 #define SQUID_TOOLS_H_
 
-/* for kb_t */
+#include "Packer.h"
+#include "SquidString.h"
 #include "typedefs.h"
 
 class MemBuf;
@@ -65,5 +66,29 @@ extern pid_t readPidFile(void);
 extern void keepCapabilities(void);
 extern void BroadcastSignalIfAny(int& sig);
 
+/// whether the current process is the parent of all other Squid processes
+extern bool IamMasterProcess();
+/**
+ *   whether the current process is dedicated to doing things that only
+ *   a single process should do, such as PID file maintenance and WCCP
+ */
+extern bool IamPrimaryProcess();
+/// whether the current process coordinates worker processes
+extern bool IamCoordinatorProcess();
+/// whether the current process handles HTTP transactions and such
+extern bool IamWorkerProcess();
+/// whether the current process is dedicated to managing a cache_dir
+extern bool IamDiskProcess();
+/// Whether we are running in daemon mode
+extern bool InDaemonMode(); // try using specific Iam*() checks above first
+/// Whether there should be more than one worker process running
+extern bool UsingSmp(); // try using specific Iam*() checks above first
+/// number of Kid processes as defined in src/ipc/Kid.h
+extern int NumberOfKids();
+/// a string describing this process roles such as worker or coordinator
+extern String ProcessRoles();
+
+extern void debug_trap(const char *);
+extern void *xmemset(void *dst, int, size_t);
 
 #endif /* SQUID_TOOLS_H_ */
@@ -43,6 +43,7 @@
 #include "SquidTime.h"
 #include "StatCounters.h"
 #include "SwapDir.h"
+#include "tools.h"
 
 /* This code gets linked to Squid */
 