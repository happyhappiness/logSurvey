url,date,title,changes,file_name,reason_for_consistence,is_trivial,old_hunk_file,new_hunk_file,old_log_locs,new_log_locs
https://github.com/collectd/collectd/commit/cc61d3adc20693ab3fe8f48c37eeb1167b41773a,05 Dec 2017,"liboconfig: Coding style changes.

Mostly whitespace.",16,data/crawl/collectd/hunk_0.cpp,,,data/crawl/collectd/old_hunk_0.cpp,data/crawl/collectd/new_hunk_0.cpp,[5],[5]
https://github.com/collectd/collectd/commit/cc61d3adc20693ab3fe8f48c37eeb1167b41773a,05 Dec 2017,"liboconfig: Coding style changes.

Mostly whitespace.",16,data/crawl/collectd/hunk_1.cpp,,,data/crawl/collectd/old_hunk_1.cpp,data/crawl/collectd/new_hunk_1.cpp,[5],[5]
https://github.com/collectd/collectd/commit/c01b130763a1b02d119897d2770f8f323e34daaa,05 Dec 2017,"liboconfig: Improve error handling.

  * Use the YYERROR macro instead of exit(3).
  * Remove newlines from strings passed to yyerror().
  * Change return valud or yyerror() from int to void.",19,data/crawl/collectd/hunk_2.cpp,,,data/crawl/collectd/old_hunk_2.cpp,data/crawl/collectd/new_hunk_2.cpp,[2],[2]
https://github.com/collectd/collectd/commit/c01b130763a1b02d119897d2770f8f323e34daaa,05 Dec 2017,"liboconfig: Improve error handling.

  * Use the YYERROR macro instead of exit(3).
  * Remove newlines from strings passed to yyerror().
  * Change return valud or yyerror() from int to void.",19,data/crawl/collectd/hunk_3.cpp,,,data/crawl/collectd/old_hunk_3.cpp,data/crawl/collectd/new_hunk_3.cpp,[2],[2]
https://github.com/collectd/collectd/commit/c01b130763a1b02d119897d2770f8f323e34daaa,05 Dec 2017,"liboconfig: Improve error handling.

  * Use the YYERROR macro instead of exit(3).
  * Remove newlines from strings passed to yyerror().
  * Change return valud or yyerror() from int to void.",19,data/crawl/collectd/hunk_4.cpp,,,data/crawl/collectd/old_hunk_4.cpp,data/crawl/collectd/new_hunk_4.cpp,[12],[14]
https://github.com/collectd/collectd/commit/ae299c233838bb1d7ddcb4b2826b3352a12af7e7,30 Nov 2017,"Auto-Merge pull request #2586 from octo/issue/2583

Automatically merged due to ""Automerge"" label",8,data/crawl/collectd/hunk_5.cpp,,,data/crawl/collectd/old_hunk_5.cpp,data/crawl/collectd/new_hunk_5.cpp,[7],[]
https://github.com/collectd/collectd/commit/4b5072913bf8da67ac39f26fccb94c3b1a8944d8,30 Nov 2017,"network_parse_test.c: Only test security features if libgcrypt is available.

Fixes: #2583",8,data/crawl/collectd/hunk_6.cpp,,,data/crawl/collectd/old_hunk_6.cpp,data/crawl/collectd/new_hunk_6.cpp,[7],[]
https://github.com/collectd/collectd/commit/6f08f35672576fccfce8f2dc5077d2f3ed73febe,20 Nov 2017,"Auto-Merge pull request #2558 from octo/refactor/plugin_load_file

Automatically merged due to ""Automerge"" label",44,data/crawl/collectd/hunk_7.cpp,,,data/crawl/collectd/old_hunk_7.cpp,data/crawl/collectd/new_hunk_7.cpp,[32],"[22, 24]"
https://github.com/collectd/collectd/commit/f9d2c85e5459dfedbb1e3c09307556a74d5dc3bd,20 Nov 2017,src/daemon/plugin.c: Refactor plugin_load_file().,44,data/crawl/collectd/hunk_8.cpp,,,data/crawl/collectd/old_hunk_8.cpp,data/crawl/collectd/new_hunk_8.cpp,[32],"[22, 24]"
https://github.com/collectd/collectd/commit/1804ab004b8c7e14eac8c3a662747fbae4cf4aad,06 Nov 2017,"Auto-Merge pull request #2519 from octo/ff/strerror

Automatically merged due to ""Automerge"" label",1493,data/crawl/collectd/hunk_9.cpp,,,data/crawl/collectd/old_hunk_9.cpp,data/crawl/collectd/new_hunk_9.cpp,[4],[3]
https://github.com/collectd/collectd/commit/1804ab004b8c7e14eac8c3a662747fbae4cf4aad,06 Nov 2017,"Auto-Merge pull request #2519 from octo/ff/strerror

Automatically merged due to ""Automerge"" label",1493,data/crawl/collectd/hunk_10.cpp,,,data/crawl/collectd/old_hunk_10.cpp,data/crawl/collectd/new_hunk_10.cpp,[4],[3]
https://github.com/collectd/collectd/commit/1804ab004b8c7e14eac8c3a662747fbae4cf4aad,06 Nov 2017,"Auto-Merge pull request #2519 from octo/ff/strerror

Automatically merged due to ""Automerge"" label",1493,data/crawl/collectd/hunk_11.cpp,,,data/crawl/collectd/old_hunk_11.cpp,data/crawl/collectd/new_hunk_11.cpp,"[4, 7]","[3, 6]"
https://github.com/collectd/collectd/commit/1804ab004b8c7e14eac8c3a662747fbae4cf4aad,06 Nov 2017,"Auto-Merge pull request #2519 from octo/ff/strerror

Automatically merged due to ""Automerge"" label",1493,data/crawl/collectd/hunk_12.cpp,,,data/crawl/collectd/old_hunk_12.cpp,data/crawl/collectd/new_hunk_12.cpp,"[4, 8]","[3, 7]"
https://github.com/collectd/collectd/commit/1804ab004b8c7e14eac8c3a662747fbae4cf4aad,06 Nov 2017,"Auto-Merge pull request #2519 from octo/ff/strerror

Automatically merged due to ""Automerge"" label",1493,data/crawl/collectd/hunk_13.cpp,,,data/crawl/collectd/old_hunk_13.cpp,data/crawl/collectd/new_hunk_13.cpp,[2],[2]
https://github.com/collectd/collectd/commit/1804ab004b8c7e14eac8c3a662747fbae4cf4aad,06 Nov 2017,"Auto-Merge pull request #2519 from octo/ff/strerror

Automatically merged due to ""Automerge"" label",1493,data/crawl/collectd/hunk_14.cpp,,,data/crawl/collectd/old_hunk_14.cpp,data/crawl/collectd/new_hunk_14.cpp,[2],[2]
https://github.com/collectd/collectd/commit/1804ab004b8c7e14eac8c3a662747fbae4cf4aad,06 Nov 2017,"Auto-Merge pull request #2519 from octo/ff/strerror

Automatically merged due to ""Automerge"" label",1493,data/crawl/collectd/hunk_15.cpp,,,data/crawl/collectd/old_hunk_15.cpp,data/crawl/collectd/new_hunk_15.cpp,[2],[2]
https://github.com/collectd/collectd/commit/1804ab004b8c7e14eac8c3a662747fbae4cf4aad,06 Nov 2017,"Auto-Merge pull request #2519 from octo/ff/strerror

Automatically merged due to ""Automerge"" label",1493,data/crawl/collectd/hunk_16.cpp,,,data/crawl/collectd/old_hunk_16.cpp,data/crawl/collectd/new_hunk_16.cpp,[2],[2]
https://github.com/collectd/collectd/commit/1804ab004b8c7e14eac8c3a662747fbae4cf4aad,06 Nov 2017,"Auto-Merge pull request #2519 from octo/ff/strerror

Automatically merged due to ""Automerge"" label",1493,data/crawl/collectd/hunk_17.cpp,,,data/crawl/collectd/old_hunk_17.cpp,data/crawl/collectd/new_hunk_17.cpp,[2],[2]
https://github.com/collectd/collectd/commit/1804ab004b8c7e14eac8c3a662747fbae4cf4aad,06 Nov 2017,"Auto-Merge pull request #2519 from octo/ff/strerror

Automatically merged due to ""Automerge"" label",1493,data/crawl/collectd/hunk_18.cpp,,,data/crawl/collectd/old_hunk_18.cpp,data/crawl/collectd/new_hunk_18.cpp,[2],[2]
https://github.com/collectd/collectd/commit/0b7cd83a5e6bac068ea83a88a5ddcfb07c09fbec,04 Nov 2017,Tree wide: Replace sstrerror() with STRERRNO.,1424,data/crawl/collectd/hunk_19.cpp,,,data/crawl/collectd/old_hunk_19.cpp,data/crawl/collectd/new_hunk_19.cpp,[4],[3]
https://github.com/collectd/collectd/commit/0b7cd83a5e6bac068ea83a88a5ddcfb07c09fbec,04 Nov 2017,Tree wide: Replace sstrerror() with STRERRNO.,1424,data/crawl/collectd/hunk_20.cpp,,,data/crawl/collectd/old_hunk_20.cpp,data/crawl/collectd/new_hunk_20.cpp,[4],[3]
https://github.com/collectd/collectd/commit/0b7cd83a5e6bac068ea83a88a5ddcfb07c09fbec,04 Nov 2017,Tree wide: Replace sstrerror() with STRERRNO.,1424,data/crawl/collectd/hunk_21.cpp,,,data/crawl/collectd/old_hunk_21.cpp,data/crawl/collectd/new_hunk_21.cpp,"[4, 7]","[3, 6]"
https://github.com/collectd/collectd/commit/0b7cd83a5e6bac068ea83a88a5ddcfb07c09fbec,04 Nov 2017,Tree wide: Replace sstrerror() with STRERRNO.,1424,data/crawl/collectd/hunk_22.cpp,,,data/crawl/collectd/old_hunk_22.cpp,data/crawl/collectd/new_hunk_22.cpp,"[4, 8]","[3, 7]"
https://github.com/collectd/collectd/commit/0b7cd83a5e6bac068ea83a88a5ddcfb07c09fbec,04 Nov 2017,Tree wide: Replace sstrerror() with STRERRNO.,1424,data/crawl/collectd/hunk_23.cpp,,,data/crawl/collectd/old_hunk_23.cpp,data/crawl/collectd/new_hunk_23.cpp,[2],[2]
https://github.com/collectd/collectd/commit/0b7cd83a5e6bac068ea83a88a5ddcfb07c09fbec,04 Nov 2017,Tree wide: Replace sstrerror() with STRERRNO.,1424,data/crawl/collectd/hunk_24.cpp,,,data/crawl/collectd/old_hunk_24.cpp,data/crawl/collectd/new_hunk_24.cpp,[2],[2]
https://github.com/collectd/collectd/commit/0b7cd83a5e6bac068ea83a88a5ddcfb07c09fbec,04 Nov 2017,Tree wide: Replace sstrerror() with STRERRNO.,1424,data/crawl/collectd/hunk_25.cpp,,,data/crawl/collectd/old_hunk_25.cpp,data/crawl/collectd/new_hunk_25.cpp,[2],[2]
https://github.com/collectd/collectd/commit/0b7cd83a5e6bac068ea83a88a5ddcfb07c09fbec,04 Nov 2017,Tree wide: Replace sstrerror() with STRERRNO.,1424,data/crawl/collectd/hunk_26.cpp,,,data/crawl/collectd/old_hunk_26.cpp,data/crawl/collectd/new_hunk_26.cpp,[2],[2]
https://github.com/collectd/collectd/commit/0b7cd83a5e6bac068ea83a88a5ddcfb07c09fbec,04 Nov 2017,Tree wide: Replace sstrerror() with STRERRNO.,1424,data/crawl/collectd/hunk_27.cpp,,,data/crawl/collectd/old_hunk_27.cpp,data/crawl/collectd/new_hunk_27.cpp,[2],[2]
https://github.com/collectd/collectd/commit/0b7cd83a5e6bac068ea83a88a5ddcfb07c09fbec,04 Nov 2017,Tree wide: Replace sstrerror() with STRERRNO.,1424,data/crawl/collectd/hunk_28.cpp,,,data/crawl/collectd/old_hunk_28.cpp,data/crawl/collectd/new_hunk_28.cpp,[2],[2]
https://github.com/collectd/collectd/commit/4207aaf6ec9ab59f77f18d234f4a6ce40a34840e,10 Oct 2017,ipmi plugin: Fixed remarks found while review,88,data/crawl/collectd/hunk_29.cpp,,,data/crawl/collectd/old_hunk_29.cpp,data/crawl/collectd/new_hunk_29.cpp,"[3, 7]",[]
https://github.com/collectd/collectd/commit/689b59231ea00f607fd27b0feaf0bd79bff0fb80,07 Oct 2017,"ipmi plugin: Implemented IPMI LAN connection and plugin improved

* Added instances support
* Removed the sensor removal in case of reading errors
* Added the lock to do not request new readings until previous reading is complete
* Disabled SDRs local cache
* Added the check for sensors 'is readable' flag
* Added the check for sensor event reading type (if sensor is discrete or not)
* Added checks for sensor states 'scanning disabled' and 'initial update in progress'
* Changes in error reporting",842,data/crawl/collectd/hunk_30.cpp,,,data/crawl/collectd/old_hunk_30.cpp,data/crawl/collectd/new_hunk_30.cpp,[],"[28, 32]"
https://github.com/collectd/collectd/commit/970765372717ce052a85c06d2d626f466ffaa0b6,05 Jul 2017,Add CollectdError exception which can be thrown without causing a stacktrace to be logged.,93,data/crawl/collectd/hunk_31.cpp,,,data/crawl/collectd/old_hunk_31.cpp,data/crawl/collectd/new_hunk_31.cpp,[2],[2]
https://github.com/collectd/collectd/commit/970765372717ce052a85c06d2d626f466ffaa0b6,05 Jul 2017,Add CollectdError exception which can be thrown without causing a stacktrace to be logged.,93,data/crawl/collectd/hunk_32.cpp,,,data/crawl/collectd/old_hunk_32.cpp,data/crawl/collectd/new_hunk_32.cpp,"[3, 12, 21, 30]","[4, 15, 26, 37]"
https://github.com/collectd/collectd/commit/970765372717ce052a85c06d2d626f466ffaa0b6,05 Jul 2017,Add CollectdError exception which can be thrown without causing a stacktrace to be logged.,93,data/crawl/collectd/hunk_33.cpp,,,data/crawl/collectd/old_hunk_33.cpp,data/crawl/collectd/new_hunk_33.cpp,[3],[4]
https://github.com/collectd/collectd/commit/970765372717ce052a85c06d2d626f466ffaa0b6,05 Jul 2017,Add CollectdError exception which can be thrown without causing a stacktrace to be logged.,93,data/crawl/collectd/hunk_34.cpp,,,data/crawl/collectd/old_hunk_34.cpp,data/crawl/collectd/new_hunk_34.cpp,[5],"[5, 8]"
https://github.com/collectd/collectd/commit/7853bfa986aee41b596174e7ecdc8fdeefc7d25a,30 May 2017,"intel_pmu: address PR comments

  - cleanup of configure.ac
  - add config option EventList to avoid dependency on environment variables

Change-Id: I987095b6e71bcf05103e773793c0a40c815f729b
Signed-off-by: Serhiy Pshyk <serhiyx.pshyk@intel.com>",97,data/crawl/collectd/hunk_35.cpp,,,data/crawl/collectd/old_hunk_35.cpp,data/crawl/collectd/new_hunk_35.cpp,[26],[]
https://github.com/collectd/collectd/commit/08e419e462e8373538a7aef768bae0b2478e0e89,12 May 2017,"intel_pmu: Implement performance monitoring plugin

The intel_pmu plugin collects information about system performance
counters using kernel Linux perf interface.

Signed-off-by: Serhiy Pshyk <serhiyx.pshyk@intel.com>",722,data/crawl/collectd/hunk_36.cpp,,,data/crawl/collectd/old_hunk_36.cpp,data/crawl/collectd/new_hunk_36.cpp,[],[54]
https://github.com/collectd/collectd/commit/619adc097bbc8f26e846db9a6cdfcb0322ba9944,12 May 2017,"src/utils_cmd_putval.c: Fix multi-value PUTVAL.

vl.values was allocated outside of the loop and then copied into each
ret_putval->vl[]. This means that later values overwrote the values
stored in previous ret_putval->vl[].",36,data/crawl/collectd/hunk_37.cpp,,,data/crawl/collectd/old_hunk_37.cpp,data/crawl/collectd/new_hunk_37.cpp,"[6, 13]",[5]
https://github.com/collectd/collectd/commit/619adc097bbc8f26e846db9a6cdfcb0322ba9944,12 May 2017,"src/utils_cmd_putval.c: Fix multi-value PUTVAL.

vl.values was allocated outside of the loop and then copied into each
ret_putval->vl[]. This means that later values overwrote the values
stored in previous ret_putval->vl[].",36,data/crawl/collectd/hunk_38.cpp,,,data/crawl/collectd/old_hunk_38.cpp,data/crawl/collectd/new_hunk_38.cpp,"[5, 13]","[6, 13, 23]"
https://github.com/collectd/collectd/commit/a21477bc160169035f250724d7fa027fe3da1106,13 Apr 2017,libcollectdclient: Separate module for lcc_network_parse().,1263,data/crawl/collectd/hunk_39.cpp,,,data/crawl/collectd/old_hunk_39.cpp,data/crawl/collectd/new_hunk_39.cpp,[],"[44, 412]"
https://github.com/collectd/collectd/commit/a21477bc160169035f250724d7fa027fe3da1106,13 Apr 2017,libcollectdclient: Separate module for lcc_network_parse().,1263,data/crawl/collectd/hunk_40.cpp,,,data/crawl/collectd/old_hunk_40.cpp,data/crawl/collectd/new_hunk_40.cpp,[23],[15]
https://github.com/collectd/collectd/commit/a21477bc160169035f250724d7fa027fe3da1106,13 Apr 2017,libcollectdclient: Separate module for lcc_network_parse().,1263,data/crawl/collectd/hunk_41.cpp,,,data/crawl/collectd/old_hunk_41.cpp,data/crawl/collectd/new_hunk_41.cpp,[333],[]
https://github.com/collectd/collectd/commit/c3eb1f9dd670b0d112820ed2894e6d5ecb09c286,13 Apr 2017,libcollectdclient: Implement parsing of signed and encrypted network data.,348,data/crawl/collectd/hunk_42.cpp,,,data/crawl/collectd/old_hunk_42.cpp,data/crawl/collectd/new_hunk_42.cpp,[10],[14]
https://github.com/collectd/collectd/commit/c3eb1f9dd670b0d112820ed2894e6d5ecb09c286,13 Apr 2017,libcollectdclient: Implement parsing of signed and encrypted network data.,348,data/crawl/collectd/hunk_43.cpp,,,data/crawl/collectd/old_hunk_43.cpp,data/crawl/collectd/new_hunk_43.cpp,[],[81]
https://github.com/collectd/collectd/commit/c3eb1f9dd670b0d112820ed2894e6d5ecb09c286,13 Apr 2017,libcollectdclient: Implement parsing of signed and encrypted network data.,348,data/crawl/collectd/hunk_44.cpp,,,data/crawl/collectd/old_hunk_44.cpp,data/crawl/collectd/new_hunk_44.cpp,[5],[8]
https://github.com/collectd/collectd/commit/c3eb1f9dd670b0d112820ed2894e6d5ecb09c286,13 Apr 2017,libcollectdclient: Implement parsing of signed and encrypted network data.,348,data/crawl/collectd/hunk_45.cpp,,,data/crawl/collectd/old_hunk_45.cpp,data/crawl/collectd/new_hunk_45.cpp,[],"[14, 26, 45, 57, 65]"
https://github.com/collectd/collectd/commit/10d95b0cf8d2ffe1472cc65a4d403c9c1ca4118d,13 Apr 2017,"libcollectdclient: Implement server code.

The implementation is intentionally similar to the Golang implementation.
Security features (signing, encryption) are still missing.",1085,data/crawl/collectd/hunk_46.cpp,,,data/crawl/collectd/old_hunk_46.cpp,data/crawl/collectd/new_hunk_46.cpp,[],[50]
https://github.com/collectd/collectd/commit/10d95b0cf8d2ffe1472cc65a4d403c9c1ca4118d,13 Apr 2017,"libcollectdclient: Implement server code.

The implementation is intentionally similar to the Golang implementation.
Security features (signing, encryption) are still missing.",1085,data/crawl/collectd/hunk_47.cpp,,,data/crawl/collectd/old_hunk_47.cpp,data/crawl/collectd/new_hunk_47.cpp,[],"[250, 259, 264, 288, 309, 339, 344, 347, 373, 378, 386, 393, 398, 403, 417]"
https://github.com/collectd/collectd/commit/9d534e1f24505fa5a5042a1db2d5dbd3030e5263,10 Mar 2017,"virt: add support for new metrics

Add support for new libvirt metrics:
- Performance monitoring events
- Domain state & reason
- Percentage CPU usage
- CPU pinning (affinity)
- Disk errors
- File system info
- Job stats

Change-Id: I233fb18653d218c7e906a157743606c6818f9feb
Signed-off-by: Przemyslaw Szczerbik <przemyslawx.szczerbik@intel.com>",1063,data/crawl/collectd/hunk_48.cpp,,,data/crawl/collectd/old_hunk_48.cpp,data/crawl/collectd/new_hunk_48.cpp,"[3, 5]","[3, 5]"
https://github.com/collectd/collectd/commit/25a2a0a9204610245b245656c91ad326725ef72d,22 Feb 2017,"log_logstash: send log messages to STDERR by default

See also dec394e08",8,data/crawl/collectd/hunk_49.cpp,,,data/crawl/collectd/old_hunk_49.cpp,data/crawl/collectd/new_hunk_49.cpp,"[3, 7]","[3, 6]"
https://github.com/collectd/collectd/commit/9cb3abd9449a7f909c3434ec2ff0939939371269,22 Feb 2017,"logfile: send log messages to STDERR by default

This prevents early startup log messages from going unnoticed if the
default logfile isn't writeable.

Fixes: #2057",8,data/crawl/collectd/hunk_50.cpp,,,data/crawl/collectd/old_hunk_50.cpp,data/crawl/collectd/new_hunk_50.cpp,[3],[3]
https://github.com/collectd/collectd/commit/acb5a3393b5ffcd73eeaa06c91e98e4ba9a58469,06 Jan 2017,"python: Extend Notification class

Extended python Notification class to support metadata in the same
way as it is implemented in Values class. The Values metadata class
implementation has been used as a example/source.

Change-Id: I4beab887c1dffb369864b9167e3f6c7ca21bc83f
Signed-off-by: Mytnyk, VolodymyrX <volodymyrx.mytnyk@intel.com>",205,data/crawl/collectd/hunk_51.cpp,,,data/crawl/collectd/old_hunk_51.cpp,data/crawl/collectd/new_hunk_51.cpp,[13],[13]
https://github.com/collectd/collectd/commit/acb5a3393b5ffcd73eeaa06c91e98e4ba9a58469,06 Jan 2017,"python: Extend Notification class

Extended python Notification class to support metadata in the same
way as it is implemented in Values class. The Values metadata class
implementation has been used as a example/source.

Change-Id: I4beab887c1dffb369864b9167e3f6c7ca21bc83f
Signed-off-by: Mytnyk, VolodymyrX <volodymyrx.mytnyk@intel.com>",205,data/crawl/collectd/hunk_52.cpp,,,data/crawl/collectd/old_hunk_52.cpp,data/crawl/collectd/new_hunk_52.cpp,[0],"[0, 4]"
https://github.com/collectd/collectd/commit/acb5a3393b5ffcd73eeaa06c91e98e4ba9a58469,06 Jan 2017,"python: Extend Notification class

Extended python Notification class to support metadata in the same
way as it is implemented in Values class. The Values metadata class
implementation has been used as a example/source.

Change-Id: I4beab887c1dffb369864b9167e3f6c7ca21bc83f
Signed-off-by: Mytnyk, VolodymyrX <volodymyrx.mytnyk@intel.com>",205,data/crawl/collectd/hunk_53.cpp,,,data/crawl/collectd/old_hunk_53.cpp,data/crawl/collectd/new_hunk_53.cpp,[5],[7]
https://github.com/collectd/collectd/commit/1e8a95944f39cf4d552f2afed8e26b93febd50ec,31 Dec 2016,"dpdkstat plugin rework

This patch contains rework of existing dpdkstat plugin. Changes are focused on
extracting common dpdk related features into utils file that could be reused by
other DPDK plugins. Also some related structural changes are introduced.

List of changes:
- introduction of new utils_dpdk.c that handles child process spawning,
  and terminating, messaging between parent and child, DPDK configuration
  and initialization and DPDK commands execution
- DPDK EAL specific options put into separate subsection of
  dpdkstat configuration
- documentation update

Those changes are preparatory steps for upstreaming dpdkevent plugin
that is going to collect DPDK ports and logical cores status info.

Signed-off-by: Krzysztof Matczak <krzysztofx.matczak@intel.com>",2068,data/crawl/collectd/hunk_54.cpp,,,data/crawl/collectd/old_hunk_54.cpp,data/crawl/collectd/new_hunk_54.cpp,[],"[516, 518, 520]"
https://github.com/collectd/collectd/commit/1e8a95944f39cf4d552f2afed8e26b93febd50ec,31 Dec 2016,"dpdkstat plugin rework

This patch contains rework of existing dpdkstat plugin. Changes are focused on
extracting common dpdk related features into utils file that could be reused by
other DPDK plugins. Also some related structural changes are introduced.

List of changes:
- introduction of new utils_dpdk.c that handles child process spawning,
  and terminating, messaging between parent and child, DPDK configuration
  and initialization and DPDK commands execution
- DPDK EAL specific options put into separate subsection of
  dpdkstat configuration
- documentation update

Those changes are preparatory steps for upstreaming dpdkevent plugin
that is going to collect DPDK ports and logical cores status info.

Signed-off-by: Krzysztof Matczak <krzysztofx.matczak@intel.com>",2068,data/crawl/collectd/hunk_55.cpp,,,data/crawl/collectd/old_hunk_55.cpp,data/crawl/collectd/new_hunk_55.cpp,[],"[90, 92]"
https://github.com/collectd/collectd/commit/6c17c8ccba745714c4d7cc10dc3ca57f2d0d293f,28 Nov 2016,Even more renormalization.,278,data/crawl/collectd/hunk_56.cpp,,,data/crawl/collectd/old_hunk_56.cpp,data/crawl/collectd/new_hunk_56.cpp,[3],[3]
https://github.com/collectd/collectd/commit/936c450a86c841eea89888c8550c9118fae90c25,28 Nov 2016,Tree wide: Reformat with clang-format.,141000,data/crawl/collectd/hunk_57.cpp,,,data/crawl/collectd/old_hunk_57.cpp,data/crawl/collectd/new_hunk_57.cpp,"[76, 89, 94, 96, 102, 106, 127, 130, 133, 136, 139, 142, 144]","[69, 82, 87, 89, 95, 98, 119, 122, 125, 128, 131, 134, 136]"
https://github.com/collectd/collectd/commit/936c450a86c841eea89888c8550c9118fae90c25,28 Nov 2016,Tree wide: Reformat with clang-format.,141000,data/crawl/collectd/hunk_58.cpp,,,data/crawl/collectd/old_hunk_58.cpp,data/crawl/collectd/new_hunk_58.cpp,"[43, 100]","[40, 89]"
https://github.com/collectd/collectd/commit/936c450a86c841eea89888c8550c9118fae90c25,28 Nov 2016,Tree wide: Reformat with clang-format.,141000,data/crawl/collectd/hunk_59.cpp,,,data/crawl/collectd/old_hunk_59.cpp,data/crawl/collectd/new_hunk_59.cpp,"[28, 35, 48, 62, 140, 178, 186, 202, 211, 220, 256, 275, 279, 281, 283, 306, 317, 339, 341, 342, 364, 375, 395, 397, 398, 414, 425, 435, 457, 459, 479, 489, 571, 584, 592, 610, 621]","[26, 32, 43, 56, 126, 171, 179, 194, 203, 212, 243, 256, 259, 261, 263, 283, 292, 309, 311, 312, 331, 340, 355, 357, 358, 372, 381, 389, 406, 408, 425, 433, 511, 519, 525, 541, 551]"
https://github.com/collectd/collectd/commit/936c450a86c841eea89888c8550c9118fae90c25,28 Nov 2016,Tree wide: Reformat with clang-format.,141000,data/crawl/collectd/hunk_60.cpp,,,data/crawl/collectd/old_hunk_60.cpp,data/crawl/collectd/new_hunk_60.cpp,[6],[5]
https://github.com/collectd/collectd/commit/936c450a86c841eea89888c8550c9118fae90c25,28 Nov 2016,Tree wide: Reformat with clang-format.,141000,data/crawl/collectd/hunk_61.cpp,,,data/crawl/collectd/old_hunk_61.cpp,data/crawl/collectd/new_hunk_61.cpp,"[14, 21, 29, 83, 100, 106, 111, 129, 135, 140, 208, 215, 225, 236, 245, 251, 263, 291]","[14, 20, 27, 81, 97, 101, 104, 121, 125, 128, 192, 198, 205, 216, 223, 229, 239, 266]"
https://github.com/collectd/collectd/commit/79963d13c1884d1d92667cc502ad20758b084a12,28 Nov 2016,Tree wide: Reformat with clang-format.,145385,data/crawl/collectd/hunk_62.cpp,,,data/crawl/collectd/old_hunk_62.cpp,data/crawl/collectd/new_hunk_62.cpp,"[63, 76, 81, 83, 89, 93, 114, 117, 120, 123, 126, 129, 131]","[57, 70, 75, 77, 83, 86, 107, 110, 113, 116, 119, 122, 124]"
https://github.com/collectd/collectd/commit/79963d13c1884d1d92667cc502ad20758b084a12,28 Nov 2016,Tree wide: Reformat with clang-format.,145385,data/crawl/collectd/hunk_63.cpp,,,data/crawl/collectd/old_hunk_63.cpp,data/crawl/collectd/new_hunk_63.cpp,"[43, 100]","[40, 89]"
https://github.com/collectd/collectd/commit/79963d13c1884d1d92667cc502ad20758b084a12,28 Nov 2016,Tree wide: Reformat with clang-format.,145385,data/crawl/collectd/hunk_64.cpp,,,data/crawl/collectd/old_hunk_64.cpp,data/crawl/collectd/new_hunk_64.cpp,"[28, 35, 48, 62, 140, 178, 186, 202, 211, 220, 256, 275, 279, 281, 283, 306, 317, 339, 341, 342, 364, 375, 395, 397, 398, 414, 425, 435, 457, 459, 479, 489, 571, 584, 592, 610, 621]","[26, 32, 43, 56, 126, 171, 179, 194, 203, 212, 243, 256, 259, 261, 263, 283, 292, 309, 311, 312, 331, 340, 355, 357, 358, 372, 381, 389, 406, 408, 425, 433, 511, 519, 525, 541, 551]"
https://github.com/collectd/collectd/commit/79963d13c1884d1d92667cc502ad20758b084a12,28 Nov 2016,Tree wide: Reformat with clang-format.,145385,data/crawl/collectd/hunk_65.cpp,,,data/crawl/collectd/old_hunk_65.cpp,data/crawl/collectd/new_hunk_65.cpp,[6],[5]
https://github.com/collectd/collectd/commit/79963d13c1884d1d92667cc502ad20758b084a12,28 Nov 2016,Tree wide: Reformat with clang-format.,145385,data/crawl/collectd/hunk_66.cpp,,,data/crawl/collectd/old_hunk_66.cpp,data/crawl/collectd/new_hunk_66.cpp,"[14, 21, 29, 83, 100, 106, 111, 129, 135, 140, 208, 215, 225, 236, 245, 251, 263, 291]","[14, 20, 27, 81, 97, 101, 104, 121, 125, 128, 192, 198, 205, 216, 223, 229, 239, 266]"
https://github.com/collectd/collectd/commit/8c61dbce195987d352034663204d5df32776e9cb,27 Nov 2016,"src/utils_latency.[ch]: Improve accuracy, update unit test.",262,data/crawl/collectd/hunk_67.cpp,,,data/crawl/collectd/old_hunk_67.cpp,data/crawl/collectd/new_hunk_67.cpp,[95],[]
https://github.com/collectd/collectd/commit/9515f607aa5d401e288b26d64e2f90f6ea4dd6fe,27 Nov 2016,+ utils_latency: Added latency_counter_get_rate(),240,data/crawl/collectd/hunk_68.cpp,,,data/crawl/collectd/old_hunk_68.cpp,data/crawl/collectd/new_hunk_68.cpp,[],[95]
https://github.com/collectd/collectd/commit/f5fdf24ccec9318baf11eec25d6dba881dc77332,25 Sep 2016,"command parser: Add support for parser options.

These can be used to tune the parser behavior. For now, there's an option to
specify the default hostname in an identifier.",177,data/crawl/collectd/hunk_69.cpp,,,data/crawl/collectd/old_hunk_69.cpp,data/crawl/collectd/new_hunk_69.cpp,[8],[10]
https://github.com/collectd/collectd/commit/f5fdf24ccec9318baf11eec25d6dba881dc77332,25 Sep 2016,"command parser: Add support for parser options.

These can be used to tune the parser behavior. For now, there's an option to
specify the default hostname in an identifier.",177,data/crawl/collectd/hunk_70.cpp,,,data/crawl/collectd/old_hunk_70.cpp,data/crawl/collectd/new_hunk_70.cpp,[5],[5]
https://github.com/collectd/collectd/commit/f5fdf24ccec9318baf11eec25d6dba881dc77332,25 Sep 2016,"command parser: Add support for parser options.

These can be used to tune the parser behavior. For now, there's an option to
specify the default hostname in an identifier.",177,data/crawl/collectd/hunk_71.cpp,,,data/crawl/collectd/old_hunk_71.cpp,data/crawl/collectd/new_hunk_71.cpp,[],[12]
https://github.com/collectd/collectd/commit/f5fdf24ccec9318baf11eec25d6dba881dc77332,25 Sep 2016,"command parser: Add support for parser options.

These can be used to tune the parser behavior. For now, there's an option to
specify the default hostname in an identifier.",177,data/crawl/collectd/hunk_72.cpp,,,data/crawl/collectd/old_hunk_72.cpp,data/crawl/collectd/new_hunk_72.cpp,[5],"[6, 12]"
https://github.com/collectd/collectd/commit/7535ee83bf0b12a168cee3c70e5fb97ed6dfc96c,25 Sep 2016,utils_cmds_test: Add various unit tests for the command parser.,298,data/crawl/collectd/hunk_73.cpp,,,data/crawl/collectd/old_hunk_73.cpp,data/crawl/collectd/new_hunk_73.cpp,[3],[18]
https://github.com/collectd/collectd/commit/7535ee83bf0b12a168cee3c70e5fb97ed6dfc96c,25 Sep 2016,utils_cmds_test: Add various unit tests for the command parser.,298,data/crawl/collectd/hunk_74.cpp,,,data/crawl/collectd/old_hunk_74.cpp,data/crawl/collectd/new_hunk_74.cpp,[5],[4]
https://github.com/collectd/collectd/commit/7535ee83bf0b12a168cee3c70e5fb97ed6dfc96c,25 Sep 2016,utils_cmds_test: Add various unit tests for the command parser.,298,data/crawl/collectd/hunk_75.cpp,,,data/crawl/collectd/old_hunk_75.cpp,data/crawl/collectd/new_hunk_75.cpp,[],"[36, 38]"
https://github.com/collectd/collectd/commit/6e6c1eecf05ac8bc9e59b0967cb87e578253d5a0,25 Sep 2016,"command parser: Add support for the GETVAL command.

Implement the generic interface for GETVAL and switch the GETVAL
implementation to use the generic interface.",182,data/crawl/collectd/hunk_76.cpp,,,data/crawl/collectd/old_hunk_76.cpp,data/crawl/collectd/new_hunk_76.cpp,[5],"[12, 14, 29, 41, 72, 83, 94, 104]"
https://github.com/collectd/collectd/commit/6e6c1eecf05ac8bc9e59b0967cb87e578253d5a0,25 Sep 2016,"command parser: Add support for the GETVAL command.

Implement the generic interface for GETVAL and switch the GETVAL
implementation to use the generic interface.",182,data/crawl/collectd/hunk_77.cpp,,,data/crawl/collectd/old_hunk_77.cpp,data/crawl/collectd/new_hunk_77.cpp,[6],[6]
https://github.com/collectd/collectd/commit/6108316e4008edce45c6d861b49e339c1360181f,25 Sep 2016,"command parser: Add support for the LISTVAL command.

Implement the generic interface for LISTVAL and switch the LISTVAL
implementation to use the generic interface.",85,data/crawl/collectd/hunk_78.cpp,,,data/crawl/collectd/old_hunk_78.cpp,data/crawl/collectd/new_hunk_78.cpp,[],[9]
https://github.com/collectd/collectd/commit/6108316e4008edce45c6d861b49e339c1360181f,25 Sep 2016,"command parser: Add support for the LISTVAL command.

Implement the generic interface for LISTVAL and switch the LISTVAL
implementation to use the generic interface.",85,data/crawl/collectd/hunk_79.cpp,,,data/crawl/collectd/old_hunk_79.cpp,data/crawl/collectd/new_hunk_79.cpp,[],"[25, 34]"
https://github.com/collectd/collectd/commit/938471bee8cc86d32615144c5037f17338b19e70,25 Sep 2016,"command parser: Add support for the FLUSH command.

That is, implement the generic interface for FLUSH and switch the FLUSH
implementation to use the generic interface.",230,data/crawl/collectd/hunk_80.cpp,,,data/crawl/collectd/old_hunk_80.cpp,data/crawl/collectd/new_hunk_80.cpp,[16],"[9, 25, 42, 54, 71, 84, 115]"
https://github.com/collectd/collectd/commit/938471bee8cc86d32615144c5037f17338b19e70,25 Sep 2016,"command parser: Add support for the FLUSH command.

That is, implement the generic interface for FLUSH and switch the FLUSH
implementation to use the generic interface.",230,data/crawl/collectd/hunk_81.cpp,,,data/crawl/collectd/old_hunk_81.cpp,data/crawl/collectd/new_hunk_81.cpp,[],[3]
https://github.com/collectd/collectd/commit/1aa4295ba6875ceb02a7383237bc2485ffab9c1e,25 Sep 2016,"command parser: Add a vector-based interface.

The new interface expects a parsed list of fields. Parsing of input buffers
is now done centrally in the generic code and the existing parser is a
wrapper around this and the new vector-based parser. The actual command
parsers (PUTVAL for now) receive the parsed list of fields.

As a side-effect, this changes the parser behavior a little:

 - ""foo=a string with spaces or \\ special characters"" is now valid syntax
   for specifying options in addition to foo=""value with spaces, etc."".
 - foo= is now a valid option even without quotes around the empty value.",308,data/crawl/collectd/hunk_82.cpp,,,data/crawl/collectd/old_hunk_82.cpp,data/crawl/collectd/new_hunk_82.cpp,"[9, 25]","[7, 25]"
https://github.com/collectd/collectd/commit/1aa4295ba6875ceb02a7383237bc2485ffab9c1e,25 Sep 2016,"command parser: Add a vector-based interface.

The new interface expects a parsed list of fields. Parsing of input buffers
is now done centrally in the generic code and the existing parser is a
wrapper around this and the new vector-based parser. The actual command
parsers (PUTVAL for now) receive the parsed list of fields.

As a side-effect, this changes the parser behavior a little:

 - ""foo=a string with spaces or \\ special characters"" is now valid syntax
   for specifying options in addition to foo=""value with spaces, etc."".
 - foo= is now a valid option even without quotes around the empty value.",308,data/crawl/collectd/hunk_83.cpp,,,data/crawl/collectd/old_hunk_83.cpp,data/crawl/collectd/new_hunk_83.cpp,"[13, 20, 38, 55, 64]","[11, 19, 53]"
https://github.com/collectd/collectd/commit/1aa4295ba6875ceb02a7383237bc2485ffab9c1e,25 Sep 2016,"command parser: Add a vector-based interface.

The new interface expects a parsed list of fields. Parsing of input buffers
is now done centrally in the generic code and the existing parser is a
wrapper around this and the new vector-based parser. The actual command
parsers (PUTVAL for now) receive the parsed list of fields.

As a side-effect, this changes the parser behavior a little:

 - ""foo=a string with spaces or \\ special characters"" is now valid syntax
   for specifying options in addition to foo=""value with spaces, etc."".
 - foo= is now a valid option even without quotes around the empty value.",308,data/crawl/collectd/hunk_84.cpp,,,data/crawl/collectd/old_hunk_84.cpp,data/crawl/collectd/new_hunk_84.cpp,[],"[40, 107, 127]"
https://github.com/collectd/collectd/commit/1aa4295ba6875ceb02a7383237bc2485ffab9c1e,25 Sep 2016,"command parser: Add a vector-based interface.

The new interface expects a parsed list of fields. Parsing of input buffers
is now done centrally in the generic code and the existing parser is a
wrapper around this and the new vector-based parser. The actual command
parsers (PUTVAL for now) receive the parsed list of fields.

As a side-effect, this changes the parser behavior a little:

 - ""foo=a string with spaces or \\ special characters"" is now valid syntax
   for specifying options in addition to foo=""value with spaces, etc."".
 - foo= is now a valid option even without quotes around the empty value.",308,data/crawl/collectd/hunk_85.cpp,,,data/crawl/collectd/old_hunk_85.cpp,data/crawl/collectd/new_hunk_85.cpp,"[12, 18]",[11]
https://github.com/collectd/collectd/commit/1aa4295ba6875ceb02a7383237bc2485ffab9c1e,25 Sep 2016,"command parser: Add a vector-based interface.

The new interface expects a parsed list of fields. Parsing of input buffers
is now done centrally in the generic code and the existing parser is a
wrapper around this and the new vector-based parser. The actual command
parsers (PUTVAL for now) receive the parsed list of fields.

As a side-effect, this changes the parser behavior a little:

 - ""foo=a string with spaces or \\ special characters"" is now valid syntax
   for specifying options in addition to foo=""value with spaces, etc."".
 - foo= is now a valid option even without quotes around the empty value.",308,data/crawl/collectd/hunk_86.cpp,,,data/crawl/collectd/old_hunk_86.cpp,data/crawl/collectd/new_hunk_86.cpp,[],[11]
https://github.com/collectd/collectd/commit/3090a8852788aaca0d8063fdf9ac4ba66f048cd8,25 Sep 2016,"Add a generic interface for parsing the text protocol.

Implement it for PUTVAL for now.

The text protocol is used in multiple places and the parser will avoid code
duplication in client programs which can, instead, use it to generate the
respective requests.

Use the 'cmd_' prefix for public functions related to command handling.",484,data/crawl/collectd/hunk_87.cpp,,,data/crawl/collectd/old_hunk_87.cpp,data/crawl/collectd/new_hunk_87.cpp,[15],[]
https://github.com/collectd/collectd/commit/3090a8852788aaca0d8063fdf9ac4ba66f048cd8,25 Sep 2016,"Add a generic interface for parsing the text protocol.

Implement it for PUTVAL for now.

The text protocol is used in multiple places and the parser will avoid code
duplication in client programs which can, instead, use it to generate the
respective requests.

Use the 'cmd_' prefix for public functions related to command handling.",484,data/crawl/collectd/hunk_88.cpp,,,data/crawl/collectd/old_hunk_88.cpp,data/crawl/collectd/new_hunk_88.cpp,[],[30]
https://github.com/collectd/collectd/commit/3090a8852788aaca0d8063fdf9ac4ba66f048cd8,25 Sep 2016,"Add a generic interface for parsing the text protocol.

Implement it for PUTVAL for now.

The text protocol is used in multiple places and the parser will avoid code
duplication in client programs which can, instead, use it to generate the
respective requests.

Use the 'cmd_' prefix for public functions related to command handling.",484,data/crawl/collectd/hunk_89.cpp,,,data/crawl/collectd/old_hunk_89.cpp,data/crawl/collectd/new_hunk_89.cpp,[],[5]
https://github.com/collectd/collectd/commit/3090a8852788aaca0d8063fdf9ac4ba66f048cd8,25 Sep 2016,"Add a generic interface for parsing the text protocol.

Implement it for PUTVAL for now.

The text protocol is used in multiple places and the parser will avoid code
duplication in client programs which can, instead, use it to generate the
respective requests.

Use the 'cmd_' prefix for public functions related to command handling.",484,data/crawl/collectd/hunk_90.cpp,,,data/crawl/collectd/old_hunk_90.cpp,data/crawl/collectd/new_hunk_90.cpp,[],[3]
https://github.com/collectd/collectd/commit/3090a8852788aaca0d8063fdf9ac4ba66f048cd8,25 Sep 2016,"Add a generic interface for parsing the text protocol.

Implement it for PUTVAL for now.

The text protocol is used in multiple places and the parser will avoid code
duplication in client programs which can, instead, use it to generate the
respective requests.

Use the 'cmd_' prefix for public functions related to command handling.",484,data/crawl/collectd/hunk_91.cpp,,,data/crawl/collectd/old_hunk_91.cpp,data/crawl/collectd/new_hunk_91.cpp,[],[5]
https://github.com/collectd/collectd/commit/3090a8852788aaca0d8063fdf9ac4ba66f048cd8,25 Sep 2016,"Add a generic interface for parsing the text protocol.

Implement it for PUTVAL for now.

The text protocol is used in multiple places and the parser will avoid code
duplication in client programs which can, instead, use it to generate the
respective requests.

Use the 'cmd_' prefix for public functions related to command handling.",484,data/crawl/collectd/hunk_92.cpp,,,data/crawl/collectd/old_hunk_92.cpp,data/crawl/collectd/new_hunk_92.cpp,[],"[3, 10]"
https://github.com/collectd/collectd/commit/3090a8852788aaca0d8063fdf9ac4ba66f048cd8,25 Sep 2016,"Add a generic interface for parsing the text protocol.

Implement it for PUTVAL for now.

The text protocol is used in multiple places and the parser will avoid code
duplication in client programs which can, instead, use it to generate the
respective requests.

Use the 'cmd_' prefix for public functions related to command handling.",484,data/crawl/collectd/hunk_93.cpp,,,data/crawl/collectd/old_hunk_93.cpp,data/crawl/collectd/new_hunk_93.cpp,[],[3]
https://github.com/collectd/collectd/commit/3090a8852788aaca0d8063fdf9ac4ba66f048cd8,25 Sep 2016,"Add a generic interface for parsing the text protocol.

Implement it for PUTVAL for now.

The text protocol is used in multiple places and the parser will avoid code
duplication in client programs which can, instead, use it to generate the
respective requests.

Use the 'cmd_' prefix for public functions related to command handling.",484,data/crawl/collectd/hunk_94.cpp,,,data/crawl/collectd/old_hunk_94.cpp,data/crawl/collectd/new_hunk_94.cpp,[],"[3, 12, 21, 70, 80]"
https://github.com/collectd/collectd/commit/3090a8852788aaca0d8063fdf9ac4ba66f048cd8,25 Sep 2016,"Add a generic interface for parsing the text protocol.

Implement it for PUTVAL for now.

The text protocol is used in multiple places and the parser will avoid code
duplication in client programs which can, instead, use it to generate the
respective requests.

Use the 'cmd_' prefix for public functions related to command handling.",484,data/crawl/collectd/hunk_95.cpp,,,data/crawl/collectd/old_hunk_95.cpp,data/crawl/collectd/new_hunk_95.cpp,[],"[38, 60, 66, 81, 117]"
https://github.com/collectd/collectd/commit/3090a8852788aaca0d8063fdf9ac4ba66f048cd8,25 Sep 2016,"Add a generic interface for parsing the text protocol.

Implement it for PUTVAL for now.

The text protocol is used in multiple places and the parser will avoid code
duplication in client programs which can, instead, use it to generate the
respective requests.

Use the 'cmd_' prefix for public functions related to command handling.",484,data/crawl/collectd/hunk_96.cpp,,,data/crawl/collectd/old_hunk_96.cpp,data/crawl/collectd/new_hunk_96.cpp,[],"[95, 100]"
https://github.com/collectd/collectd/commit/a656aa08957763edbb36300688393382c7f7056a,19 Sep 2016,"dpdkstat: Addressed PR comments

1) Added missing option description
2) Replaced strerror with sstrerror
3) Do not return from helper code
4) Use generic collectd Interval implementation
5) Removed ""\n"" from log messages

Signed-off-by: Taras Chornyi <tarasx.chornyi@intel.com>",586,data/crawl/collectd/hunk_97.cpp,,,data/crawl/collectd/old_hunk_97.cpp,data/crawl/collectd/new_hunk_97.cpp,"[3, 4, 6, 8]",[]
https://github.com/collectd/collectd/commit/46a35862cb9ff3caddad1fc01e02141b6e0a9f72,22 Aug 2016,"python plugin: Fixing possible problems with the GIL.

If AfterFork is called after threads have been initialized.
Also handle SIGTERM while reading from an interactive session slightly more gracefully.",55,data/crawl/collectd/hunk_98.cpp,,,data/crawl/collectd/old_hunk_98.cpp,data/crawl/collectd/new_hunk_98.cpp,[],"[4, 5, 6, 7, 8, 9, 10]"
https://github.com/collectd/collectd/commit/46a35862cb9ff3caddad1fc01e02141b6e0a9f72,22 Aug 2016,"python plugin: Fixing possible problems with the GIL.

If AfterFork is called after threads have been initialized.
Also handle SIGTERM while reading from an interactive session slightly more gracefully.",55,data/crawl/collectd/hunk_99.cpp,,,data/crawl/collectd/old_hunk_99.cpp,data/crawl/collectd/new_hunk_99.cpp,[6],[5]
https://github.com/collectd/collectd/commit/46a35862cb9ff3caddad1fc01e02141b6e0a9f72,22 Aug 2016,"python plugin: Fixing possible problems with the GIL.

If AfterFork is called after threads have been initialized.
Also handle SIGTERM while reading from an interactive session slightly more gracefully.",55,data/crawl/collectd/hunk_100.cpp,,,data/crawl/collectd/old_hunk_100.cpp,data/crawl/collectd/new_hunk_100.cpp,[8],[22]
https://github.com/collectd/collectd/commit/023092323ca617c8ff95b1efd4a055c29b1aaa3b,12 Aug 2016,Add a Lua plugin for Collectd,1045,data/crawl/collectd/hunk_101.cpp,,,data/crawl/collectd/old_hunk_101.cpp,data/crawl/collectd/new_hunk_101.cpp,[],"[217, 224, 231, 238, 245]"
https://github.com/collectd/collectd/commit/30c111183bf529381359a411edf5e5b1feb6ba9e,06 Aug 2016,src/utils_format_json.[ch]: Implement format_json_notification().,392,data/crawl/collectd/hunk_102.cpp,,,data/crawl/collectd/old_hunk_102.cpp,data/crawl/collectd/new_hunk_102.cpp,[],[141]
https://github.com/collectd/collectd/commit/000a676164789647800cf6b265eb6b5e75bb9fdf,06 Aug 2016,"libcollectdclient: Don't print anything to STDOUT by default.

Even with --enable-debug. This behavior is now controlled by the
""COLLECTD_TRACE"" environment variable.

Fixes: #105",36,data/crawl/collectd/hunk_103.cpp,,,data/crawl/collectd/old_hunk_103.cpp,data/crawl/collectd/new_hunk_103.cpp,[4],[]
https://github.com/collectd/collectd/commit/000a676164789647800cf6b265eb6b5e75bb9fdf,06 Aug 2016,"libcollectdclient: Don't print anything to STDOUT by default.

Even with --enable-debug. This behavior is now controlled by the
""COLLECTD_TRACE"" environment variable.

Fixes: #105",36,data/crawl/collectd/hunk_104.cpp,,,data/crawl/collectd/old_hunk_104.cpp,data/crawl/collectd/new_hunk_104.cpp,[5],[5]
https://github.com/collectd/collectd/commit/8af74098eb65ff4c0c0cc65dfaa40973fe741a63,04 Aug 2016,"python plugin: Fix conversion of value-lists from Python to C.

This affects data-sets with more than one data-source of different types.
Previously, the type of the first data-source would have been used to convert
all values.",34,data/crawl/collectd/hunk_105.cpp,,,data/crawl/collectd/old_hunk_105.cpp,data/crawl/collectd/new_hunk_105.cpp,[33],[38]
https://github.com/collectd/collectd/commit/8af74098eb65ff4c0c0cc65dfaa40973fe741a63,04 Aug 2016,"python plugin: Fix conversion of value-lists from Python to C.

This affects data-sets with more than one data-source of different types.
Previously, the type of the first data-source would have been used to convert
all values.",34,data/crawl/collectd/hunk_106.cpp,,,data/crawl/collectd/old_hunk_106.cpp,data/crawl/collectd/new_hunk_106.cpp,[33],[38]
https://github.com/collectd/collectd/commit/13c83b972a8ade7dff6f8f2d00832d446ef6f502,04 Aug 2016,uuid plugin: some coding style cleanups,79,data/crawl/collectd/hunk_107.cpp,,,data/crawl/collectd/old_hunk_107.cpp,data/crawl/collectd/new_hunk_107.cpp,[43],[]
https://github.com/collectd/collectd/commit/8a7ec0cfb7aaab52e53fbb21cdc887cee4cccd6d,28 Jul 2016,"dpdkstat: enable a plugin for DPDK stats

This patch enables support to retrieve statistics for DPDK
interfaces. An overview of the threading is as follows:
1. collectd init() or read() calls dpdk_helper_spawn() to retrieve
   the required size of xstats to allocate.
   1.1. DPDK counts ports, stats and length, writing them to
        shared-memory (SHM).
   1.2. DPDK helper (secondary) process quits, allowing cleanup of
        the shared memory.
2. collectd resizes shared-memory to size of stats as provided by
   DPDK.
3. collectd respawns the DPDK helper.
   3.1. Helper blocks on a semaphore until told to read the stats
        from DPDK and write them to SHM.
4. collectd dispatches statistics
   4.1. Thread blocks on semaphore until stats are available.
This threading model is required to allow the plugin to detect when
the DPDK primary process/application has been killed/reset, and to avoid
the plugin from stopping another DPDK primary process from starting.
Some extra housekeeping is in place to ensure collectd is never
stalled by using sem_timedwait() with a timeout. If collectd dies, the
helper process will automatically quit after a timeout, as it detects
its ppid has changed.

Signed-off-by: Harry van Haaren <harry.van.haaren@intel.com>
Signed-off-by: Maryam Tahhan <maryam.tahhan@intel.com>",1020,data/crawl/collectd/hunk_108.cpp,,,data/crawl/collectd/old_hunk_108.cpp,data/crawl/collectd/new_hunk_108.cpp,[],"[417, 418, 420, 422]"
https://github.com/collectd/collectd/commit/73a6f82a63747f088352a61e201beac2d185b2ac,24 Jul 2016,fix configure.ac,4643,data/crawl/collectd/hunk_109.cpp,,,data/crawl/collectd/old_hunk_109.cpp,data/crawl/collectd/new_hunk_109.cpp,"[4, 8]","[6, 10]"
https://github.com/collectd/collectd/commit/ce14025ed2ca305737f18a94005f1ec417d325ec,04 Jun 2016,testing: Evaluate expressions only once in EXPECT_EQ_STR().,8,data/crawl/collectd/hunk_110.cpp,,,data/crawl/collectd/old_hunk_110.cpp,data/crawl/collectd/new_hunk_110.cpp,"[4, 8]","[6, 10]"
https://github.com/collectd/collectd/commit/7383e7cf33edb331e0ec64ba2c1f67b297856dc8,01 Apr 2016,liboconfig: malloc + memset -> calloc,11,data/crawl/collectd/hunk_111.cpp,,,data/crawl/collectd/old_hunk_111.cpp,data/crawl/collectd/new_hunk_111.cpp,[6],[6]
https://github.com/collectd/collectd/commit/4743f198cfd38e2776bf1a8af8b31c37c4ea537e,28 Mar 2016,collectd-tg: malloc + memset -> calloc,5,data/crawl/collectd/hunk_112.cpp,,,data/crawl/collectd/old_hunk_112.cpp,data/crawl/collectd/new_hunk_112.cpp,[6],[6]
https://github.com/collectd/collectd/commit/2facdd7eef91949c1594f06703afeb6dd87e51cc,28 Mar 2016,"treewide: fix a few error messages

Don't log that malloc failed when we call calloc",26,data/crawl/collectd/hunk_113.cpp,,,data/crawl/collectd/old_hunk_113.cpp,data/crawl/collectd/new_hunk_113.cpp,"[3, 10]","[3, 10]"
https://github.com/collectd/collectd/commit/9fd3d670c4e85d840e618647c15b64d728a3f193,11 Dec 2015,"src/utils_ignorelist.c: Refactoring / code style fixes.

One of the goals was to remove uses of smalloc().",111,data/crawl/collectd/hunk_114.cpp,,,data/crawl/collectd/old_hunk_114.cpp,data/crawl/collectd/new_hunk_114.cpp,"[27, 34]",[]
https://github.com/collectd/collectd/commit/374d5b33a80a31a9e25bc4b1e9404091a4017761,20 Nov 2015,"Applied comments from Florian FOSTER, added more documentation, pause, fixed some typos.",193,data/crawl/collectd/hunk_115.cpp,,,data/crawl/collectd/old_hunk_115.cpp,data/crawl/collectd/new_hunk_115.cpp,[3],[]
https://github.com/collectd/collectd/commit/374d5b33a80a31a9e25bc4b1e9404091a4017761,20 Nov 2015,"Applied comments from Florian FOSTER, added more documentation, pause, fixed some typos.",193,data/crawl/collectd/hunk_116.cpp,,,data/crawl/collectd/old_hunk_116.cpp,data/crawl/collectd/new_hunk_116.cpp,[18],[]
https://github.com/collectd/collectd/commit/374d5b33a80a31a9e25bc4b1e9404091a4017761,20 Nov 2015,"Applied comments from Florian FOSTER, added more documentation, pause, fixed some typos.",193,data/crawl/collectd/hunk_117.cpp,,,data/crawl/collectd/old_hunk_117.cpp,data/crawl/collectd/new_hunk_117.cpp,[3],[]
https://github.com/collectd/collectd/commit/ad2caf6750e5e584e39cf6c76a32937e1cef621c,19 Nov 2015,"Applied comments from Florian FOSTER, added more documentation, pause, fixed some typos.",193,data/crawl/collectd/hunk_118.cpp,,,data/crawl/collectd/old_hunk_118.cpp,data/crawl/collectd/new_hunk_118.cpp,[3],[]
https://github.com/collectd/collectd/commit/ad2caf6750e5e584e39cf6c76a32937e1cef621c,19 Nov 2015,"Applied comments from Florian FOSTER, added more documentation, pause, fixed some typos.",193,data/crawl/collectd/hunk_119.cpp,,,data/crawl/collectd/old_hunk_119.cpp,data/crawl/collectd/new_hunk_119.cpp,[18],[]
https://github.com/collectd/collectd/commit/ad2caf6750e5e584e39cf6c76a32937e1cef621c,19 Nov 2015,"Applied comments from Florian FOSTER, added more documentation, pause, fixed some typos.",193,data/crawl/collectd/hunk_120.cpp,,,data/crawl/collectd/old_hunk_120.cpp,data/crawl/collectd/new_hunk_120.cpp,[3],[]
https://github.com/collectd/collectd/commit/26314b8c3fb08e1f0017ee9a6277b7fe370bf2a0,10 Nov 2015,Initial support of GPSd in collectd.,368,data/crawl/collectd/hunk_121.cpp,,,data/crawl/collectd/old_hunk_121.cpp,data/crawl/collectd/new_hunk_121.cpp,[],"[59, 136, 173]"
https://github.com/collectd/collectd/commit/67ea18d2b08da3c5442cb2bb2c7b2059e3da94a8,21 Aug 2015,"src/testing.h: Rename the EXPECT_EQ_{DOUBLE,INT,STR} macros.

Let all equality macros follow a common naming and logging schema.",180,data/crawl/collectd/hunk_122.cpp,,,data/crawl/collectd/old_hunk_122.cpp,data/crawl/collectd/new_hunk_122.cpp,"[5, 9, 14, 18, 23, 27]","[5, 9, 16, 20]"
https://github.com/collectd/collectd/commit/67ea18d2b08da3c5442cb2bb2c7b2059e3da94a8,21 Aug 2015,"src/testing.h: Rename the EXPECT_EQ_{DOUBLE,INT,STR} macros.

Let all equality macros follow a common naming and logging schema.",180,data/crawl/collectd/hunk_123.cpp,,,data/crawl/collectd/old_hunk_123.cpp,data/crawl/collectd/new_hunk_123.cpp,"[0, 6, 10, 14]","[0, 7, 11, 15]"
https://github.com/collectd/collectd/commit/55d2ddae29c2ba150d5b1f97015cd9593e5f66c6,21 Aug 2015,"src/testing.h: Rewrite the EXPECT_EQ_UINT64() macro.

Cast the input to uint64_t, so we don't need to do this when calling the
macro. This results in cleaner log messages and prevents macros to be
expanded in the log output.",22,data/crawl/collectd/hunk_124.cpp,,,data/crawl/collectd/old_hunk_124.cpp,data/crawl/collectd/new_hunk_124.cpp,[0],"[0, 7, 11]"
https://github.com/collectd/collectd/commit/db1391aaa66b8b8fad82219494f61f3452441f62,19 Aug 2015,"src/daemon/utils_time.h: Improve precision of conversion macros.

This patch also adds test cases for most conversions. It is inspired by
collectd/go-collectd#5 and uses some of the same test cases.",178,data/crawl/collectd/hunk_125.cpp,,,data/crawl/collectd/old_hunk_125.cpp,data/crawl/collectd/new_hunk_125.cpp,"[0, 5]","[0, 5, 9, 14]"
https://github.com/collectd/collectd/commit/db1391aaa66b8b8fad82219494f61f3452441f62,19 Aug 2015,"src/daemon/utils_time.h: Improve precision of conversion macros.

This patch also adds test cases for most conversions. It is inspired by
collectd/go-collectd#5 and uses some of the same test cases.",178,data/crawl/collectd/hunk_126.cpp,,,data/crawl/collectd/old_hunk_126.cpp,data/crawl/collectd/new_hunk_126.cpp,[0],[0]
https://github.com/collectd/collectd/commit/95e71d0a6659875380fdb5d2c8c75d18d8e1692c,15 Jul 2015,"src/utils_latency_test.c: Log result of  DOUBLE_TO_CDTIME_T() conversion.

The test fails on some i386 architectures. Time for some printf debugging.",2,data/crawl/collectd/hunk_127.cpp,,,data/crawl/collectd/old_hunk_127.cpp,data/crawl/collectd/new_hunk_127.cpp,[],[3]
https://github.com/collectd/collectd/commit/08a2128ac248150b50f9c54c9c71f573e54df3c3,10 Jul 2015,"Testing: Return failure from OK1() and other fixes.

* The tests for common and meta_data logged ""not ok"" but didn't signal
  failure because OK1() didn't include a return(-1) line. Adding this line
  caused some restructuring of the utils_vl_lookup test, because it used
  that macro in non-int functions.
* Fix DBLEQ() to work correctly with an expected NaN. Previously, the
  if condition would fall through to the ""expect != actual"" part, which
  is true for ""NaN != NaN"".
* Let the mock cdtime() return a non-zero value, as the (invalid) zero
  value is used in parse_values() to detect whether the time has been
  parsed already. This lead to the ""N:..."" tests failing.
* Correct the expected behavior of meta_data_add_*() when keys already
  exist: they're replaced rather than causing an error.",77,data/crawl/collectd/hunk_128.cpp,,,data/crawl/collectd/old_hunk_128.cpp,data/crawl/collectd/new_hunk_128.cpp,[2],[2]
https://github.com/collectd/collectd/commit/08a2128ac248150b50f9c54c9c71f573e54df3c3,10 Jul 2015,"Testing: Return failure from OK1() and other fixes.

* The tests for common and meta_data logged ""not ok"" but didn't signal
  failure because OK1() didn't include a return(-1) line. Adding this line
  caused some restructuring of the utils_vl_lookup test, because it used
  that macro in non-int functions.
* Fix DBLEQ() to work correctly with an expected NaN. Previously, the
  if condition would fall through to the ""expect != actual"" part, which
  is true for ""NaN != NaN"".
* Let the mock cdtime() return a non-zero value, as the (invalid) zero
  value is used in parse_values() to detect whether the time has been
  parsed already. This lead to the ""N:..."" tests failing.
* Correct the expected behavior of meta_data_add_*() when keys already
  exist: they're replaced rather than causing an error.",77,data/crawl/collectd/hunk_129.cpp,,,data/crawl/collectd/old_hunk_129.cpp,data/crawl/collectd/new_hunk_129.cpp,"[4, 8]","[5, 9, 13]"
https://github.com/collectd/collectd/commit/2e0fdac6f329c2ddf556aa47f45156e1544332a5,10 Jul 2015,src/daemon/meta_data.[ch]: Add unit test.,139,data/crawl/collectd/hunk_130.cpp,,,data/crawl/collectd/old_hunk_130.cpp,data/crawl/collectd/new_hunk_130.cpp,"[0, 5]","[0, 5, 9, 14]"
https://github.com/collectd/collectd/commit/21b0365e24e1e7bd56ec27c5b539e9b5779d19b5,08 Jul 2015,"oconfig: Fix -Wshadow and -Wsign-compare warnings.

Also re-indent oconfig_clone().",21,data/crawl/collectd/hunk_131.cpp,,,data/crawl/collectd/old_hunk_131.cpp,data/crawl/collectd/new_hunk_131.cpp,[7],[6]
https://github.com/collectd/collectd/commit/710586ae652d56ddeaafd530621e129a580fb780,03 Jul 2015,"src/utils_ignorelist.c: Reimplement ignorelist_append_regex().

There's a signed / unsigned conversion in that function ...
... aaaaand it's fully rewritten. Oops.",93,data/crawl/collectd/hunk_132.cpp,,,data/crawl/collectd/old_hunk_132.cpp,data/crawl/collectd/new_hunk_132.cpp,"[29, 36]",[]
https://github.com/collectd/collectd/commit/9461848421c468d9117bf6c57335b344db0a420e,28 Jun 2015,"src/daemon/common.c: Fix handling of counter_t in value_to_rate().

Also fixes an off-by-one error in counter_diff() and adds a unit test for
the function.",55,data/crawl/collectd/hunk_133.cpp,,,data/crawl/collectd/old_hunk_133.cpp,data/crawl/collectd/new_hunk_133.cpp,[0],"[0, 5, 9]"
https://github.com/collectd/collectd/commit/f19159854c272e5a8bb9f6915c456cf3a0f2d20e,25 Jun 2015,"src/daemon/plugin.h: Change ""values_len"" to type ""size_t"".",171,data/crawl/collectd/hunk_134.cpp,,,data/crawl/collectd/old_hunk_134.cpp,data/crawl/collectd/new_hunk_134.cpp,"[0, 5]","[0, 5]"
https://github.com/collectd/collectd/commit/f19159854c272e5a8bb9f6915c456cf3a0f2d20e,25 Jun 2015,"src/daemon/plugin.h: Change ""values_len"" to type ""size_t"".",171,data/crawl/collectd/hunk_135.cpp,,,data/crawl/collectd/old_hunk_135.cpp,data/crawl/collectd/new_hunk_135.cpp,"[0, 5]","[0, 5]"
https://github.com/collectd/collectd/commit/a7850b871becb5121794a7fc6c1f7242588ee33f,19 Jun 2015,src/utils_cmd_flush.c: Fix memory leak.,115,data/crawl/collectd/hunk_136.cpp,,,data/crawl/collectd/old_hunk_136.cpp,data/crawl/collectd/new_hunk_136.cpp,[5],[18]
https://github.com/collectd/collectd/commit/dc691c71359a11632fd0ad3882ba0cdb6d8f9cee,06 Jun 2015,Fix VERSION->PACKAGE_VERSION and PACKAGE->PACKAGE_NAME so they're always defined,8,data/crawl/collectd/hunk_137.cpp,,,data/crawl/collectd/old_hunk_137.cpp,data/crawl/collectd/new_hunk_137.cpp,[3],[3]
https://github.com/collectd/collectd/commit/aa5f0f3fdce6e92fd7f9654fda72e039852a1693,28 Feb 2015,Turbostat: fix some WARNING/ERROR calls,27,data/crawl/collectd/hunk_138.cpp,,,data/crawl/collectd/old_hunk_138.cpp,data/crawl/collectd/new_hunk_138.cpp,[4],[]
https://github.com/collectd/collectd/commit/733294e6d07326c46ae55ceb0180a05b7c1339c9,28 Feb 2015,"Turbostat: refactor cpu probing

Reorganization and rewriting of the cpu-probing code:
- Only support genuine_intel CPUs
- Remove variables that are always expected to be true
- Make supported pkg/core cstates more comprehensive
- Simplify rafl code (remove unused warning feature: intervals too long)",437,data/crawl/collectd/hunk_139.cpp,,,data/crawl/collectd/old_hunk_139.cpp,data/crawl/collectd/new_hunk_139.cpp,[87],[]
https://github.com/collectd/collectd/commit/304b23aceb3f78f29afeb143f4f66462e2d1b956,28 Feb 2015,Add sources for new turbostat plugin,2042,data/crawl/collectd/hunk_140.cpp,,,data/crawl/collectd/old_hunk_140.cpp,data/crawl/collectd/new_hunk_140.cpp,[],"[1023, 1282]"
https://github.com/collectd/collectd/commit/5416295cbf519eee82bfc96e4ffd503562ea1189,01 Dec 2014,Wrap the content of macro with do/while to make it safer as per code review comment,80,data/crawl/collectd/hunk_141.cpp,,,data/crawl/collectd/old_hunk_141.cpp,data/crawl/collectd/new_hunk_141.cpp,[3],[4]
https://github.com/collectd/collectd/commit/5416295cbf519eee82bfc96e4ffd503562ea1189,01 Dec 2014,Wrap the content of macro with do/while to make it safer as per code review comment,80,data/crawl/collectd/hunk_142.cpp,,,data/crawl/collectd/old_hunk_142.cpp,data/crawl/collectd/new_hunk_142.cpp,[3],[4]
https://github.com/collectd/collectd/commit/5416295cbf519eee82bfc96e4ffd503562ea1189,01 Dec 2014,Wrap the content of macro with do/while to make it safer as per code review comment,80,data/crawl/collectd/hunk_143.cpp,,,data/crawl/collectd/old_hunk_143.cpp,data/crawl/collectd/new_hunk_143.cpp,[3],[4]
https://github.com/collectd/collectd/commit/5416295cbf519eee82bfc96e4ffd503562ea1189,01 Dec 2014,Wrap the content of macro with do/while to make it safer as per code review comment,80,data/crawl/collectd/hunk_144.cpp,,,data/crawl/collectd/old_hunk_144.cpp,data/crawl/collectd/new_hunk_144.cpp,[3],[4]
https://github.com/collectd/collectd/commit/5416295cbf519eee82bfc96e4ffd503562ea1189,01 Dec 2014,Wrap the content of macro with do/while to make it safer as per code review comment,80,data/crawl/collectd/hunk_145.cpp,,,data/crawl/collectd/old_hunk_145.cpp,data/crawl/collectd/new_hunk_145.cpp,[3],[4]
https://github.com/collectd/collectd/commit/b9ebf85bd59b7b314b2b37c8a3357ab51b534581,23 Oct 2014,"Add get_dataset() as a way to get the definition of a dataset from python.
https://github.com/collectd/collectd/issues/771",52,data/crawl/collectd/hunk_146.cpp,,,data/crawl/collectd/old_hunk_146.cpp,data/crawl/collectd/new_hunk_146.cpp,[],[20]
https://github.com/collectd/collectd/commit/797727e080fa8d932864b6e677fd0c56e9cd73b2,28 Jul 2014,Tests: Make the self-rolled test framework a bit more useful and consistent.,199,data/crawl/collectd/hunk_147.cpp,,,data/crawl/collectd/old_hunk_147.cpp,data/crawl/collectd/new_hunk_147.cpp,"[10, 12, 18, 24, 28]",[]
https://github.com/collectd/collectd/commit/797727e080fa8d932864b6e677fd0c56e9cd73b2,28 Jul 2014,Tests: Make the self-rolled test framework a bit more useful and consistent.,199,data/crawl/collectd/hunk_148.cpp,,,data/crawl/collectd/old_hunk_148.cpp,data/crawl/collectd/new_hunk_148.cpp,[],"[34, 36, 44, 50, 54]"
https://github.com/collectd/collectd/commit/797727e080fa8d932864b6e677fd0c56e9cd73b2,28 Jul 2014,Tests: Make the self-rolled test framework a bit more useful and consistent.,199,data/crawl/collectd/hunk_149.cpp,,,data/crawl/collectd/old_hunk_149.cpp,data/crawl/collectd/new_hunk_149.cpp,"[11, 13, 19, 25, 29]",[]
https://github.com/collectd/collectd/commit/fe2858b9a390a76b17b51c9431067cd3efc26f17,28 Jul 2014,src/utils_avltree_test.c: Add partial check for the AVL tree.,122,data/crawl/collectd/hunk_150.cpp,,,data/crawl/collectd/old_hunk_150.cpp,data/crawl/collectd/new_hunk_150.cpp,[],"[35, 37, 43, 49, 53]"
https://github.com/collectd/collectd/commit/855ba3880b50bc4a774a8c8d23612bba3550b3e7,28 Jul 2014,src/common_test.c: Add some tests for files in src/common.c.,411,data/crawl/collectd/hunk_151.cpp,,,data/crawl/collectd/old_hunk_151.cpp,data/crawl/collectd/new_hunk_151.cpp,[],"[34, 36, 42, 48, 52]"
https://github.com/collectd/collectd/commit/855ba3880b50bc4a774a8c8d23612bba3550b3e7,28 Jul 2014,src/common_test.c: Add some tests for files in src/common.c.,411,data/crawl/collectd/hunk_152.cpp,,,data/crawl/collectd/old_hunk_152.cpp,data/crawl/collectd/new_hunk_152.cpp,[],"[29, 38]"
https://github.com/collectd/collectd/commit/ad459d91bd8d24dc02737f398943b325cd446d48,25 Jul 2014,forgotten printf,1,data/crawl/collectd/hunk_153.cpp,,,data/crawl/collectd/old_hunk_153.cpp,data/crawl/collectd/new_hunk_153.cpp,[3],[]
https://github.com/collectd/collectd/commit/8f9558f46fc372a015e719ed83f4ea1103ca7d44,24 Jul 2014,make kafka logs go through collectd's logging,8,data/crawl/collectd/hunk_154.cpp,,,data/crawl/collectd/old_hunk_154.cpp,data/crawl/collectd/new_hunk_154.cpp,[],[8]
https://github.com/collectd/collectd/commit/5fb890c2735d16034fc3fb3ca7467e9d13d8f450,07 Aug 2013,"sigrok plugin: Ensure consistent logging prefix.

* Make sure all logging is using the ""sigrok plugin: "" prefix.
* Improved logging when handling the ""LogLevel"" option.
* Renamed free_drvopts() to sigrok_free_drvopts(). All functions now use the
  ""sigrok_"" prefix.
* Don't abort parsing a ""Device"" block when encountering an incorrect number of
  arguments. The cf_util_* functions will complain about that.",79,data/crawl/collectd/hunk_155.cpp,,,data/crawl/collectd/old_hunk_155.cpp,data/crawl/collectd/new_hunk_155.cpp,[3],[3]
https://github.com/collectd/collectd/commit/07a084327b6fa7e54a5101f1e9a23fee7e0721ce,26 Jul 2013,sigrok plugin,441,data/crawl/collectd/hunk_156.cpp,,,data/crawl/collectd/old_hunk_156.cpp,data/crawl/collectd/new_hunk_156.cpp,[],[61]
https://github.com/collectd/collectd/commit/c7d196de1e4a8329b60b32004f93743bcf9b143d,07 Apr 2013,"added the use of df_complex and changed fprintf to ERROR for error
messages.  Also changed variable names to follow recommended standard
from the website.",37,data/crawl/collectd/hunk_157.cpp,,,data/crawl/collectd/old_hunk_157.cpp,data/crawl/collectd/new_hunk_157.cpp,"[8, 13]",[]
https://github.com/collectd/collectd/commit/e9689629670c2cf9969f9105fb64e53fed9051c0,06 Apr 2013,initial commit of volume.c,77,data/crawl/collectd/hunk_158.cpp,,,data/crawl/collectd/old_hunk_158.cpp,data/crawl/collectd/new_hunk_158.cpp,[],"[55, 60]"
https://github.com/collectd/collectd/commit/5b7a7ff99f191d419cf19df001b81d123c93783f,17 Mar 2013,"uuid plugin: Improve parsing of the dmidecode output.

The entire business of dividing by sizeof(char) only made the code
unreadable, because by specification sizeof(char) evaluates to 1. The
defines were expanded and the parsing is now less sensitive to
formatting changes in the dmidecode output. Module global variables have
been moved to the top.

Fixes Github issue #267 in the process.",124,data/crawl/collectd/hunk_159.cpp,,,data/crawl/collectd/old_hunk_159.cpp,data/crawl/collectd/new_hunk_159.cpp,"[11, 15, 19, 27, 34]",[]
https://github.com/collectd/collectd/commit/f990546f248a34c6f8c175db2025ce405ddab307,21 Jan 2013,"src/plugin.c: Improve error messages in plugin_load().

Fixes Github issue #237.",26,data/crawl/collectd/hunk_160.cpp,,,data/crawl/collectd/old_hunk_160.cpp,data/crawl/collectd/new_hunk_160.cpp,"[29, 36]",[]
https://github.com/collectd/collectd/commit/2c23a06de59e9cdb91ad9f72dc379733970e7a33,17 Nov 2012,libcollectdclient: Update to the high-resolution time format.,77,data/crawl/collectd/hunk_161.cpp,,,data/crawl/collectd/old_hunk_161.cpp,data/crawl/collectd/new_hunk_161.cpp,[],"[13, 19, 24]"
https://github.com/collectd/collectd/commit/9cb2694409620ae217ede92f78fe45c9eba83504,15 Nov 2012,"src/configfile.[ch]: Implement the cf_get_default_interval() function.

This should be able to replace ""interval_g"" in a global (i.e. non-plugin)
context, such as the interval in which timeouts are being checked.

The default value (10 seconds) is also configurable at compile time using
a define.",81,data/crawl/collectd/hunk_162.cpp,,,data/crawl/collectd/old_hunk_162.cpp,data/crawl/collectd/new_hunk_162.cpp,[17],[]
https://github.com/collectd/collectd/commit/fbb3f791c3b072dc09e8ecd339f6e4808fdd8299,25 Oct 2012,"oconfig: Allow empty statement lists (in blocks and files).

This allows to use empty blocks (which is useful during development and
testing) and empty files (which may happen when including config directories,
cf. Debian #592881).

In order not to generate a shift/reduce error, rather than allowing a
'statement_list' to be empty, this has been implemented by explicitly allowing
empty blocks and an empty 'entire_file'.",20,data/crawl/collectd/hunk_163.cpp,,,data/crawl/collectd/old_hunk_163.cpp,data/crawl/collectd/new_hunk_163.cpp,[],[7]
https://github.com/collectd/collectd/commit/e1da538180881c6dcc1d686e504128327a1f56b9,14 Oct 2012,python: Fix memory leaks.,228,data/crawl/collectd/hunk_164.cpp,,,data/crawl/collectd/old_hunk_164.cpp,data/crawl/collectd/new_hunk_164.cpp,[7],[7]
https://github.com/collectd/collectd/commit/e1da538180881c6dcc1d686e504128327a1f56b9,14 Oct 2012,python: Fix memory leaks.,228,data/crawl/collectd/hunk_165.cpp,,,data/crawl/collectd/old_hunk_165.cpp,data/crawl/collectd/new_hunk_165.cpp,[9],[10]
https://github.com/collectd/collectd/commit/e1da538180881c6dcc1d686e504128327a1f56b9,14 Oct 2012,python: Fix memory leaks.,228,data/crawl/collectd/hunk_166.cpp,,,data/crawl/collectd/old_hunk_166.cpp,data/crawl/collectd/new_hunk_166.cpp,[9],[10]
https://github.com/collectd/collectd/commit/e1da538180881c6dcc1d686e504128327a1f56b9,14 Oct 2012,python: Fix memory leaks.,228,data/crawl/collectd/hunk_167.cpp,,,data/crawl/collectd/old_hunk_167.cpp,data/crawl/collectd/new_hunk_167.cpp,[10],[11]
https://github.com/collectd/collectd/commit/e1da538180881c6dcc1d686e504128327a1f56b9,14 Oct 2012,python: Fix memory leaks.,228,data/crawl/collectd/hunk_168.cpp,,,data/crawl/collectd/old_hunk_168.cpp,data/crawl/collectd/new_hunk_168.cpp,"[6, 15, 24, 33, 43]","[6, 16, 26, 36, 47]"
https://github.com/collectd/collectd/commit/e1da538180881c6dcc1d686e504128327a1f56b9,14 Oct 2012,python: Fix memory leaks.,228,data/crawl/collectd/hunk_169.cpp,,,data/crawl/collectd/old_hunk_169.cpp,data/crawl/collectd/new_hunk_169.cpp,[12],[12]
https://github.com/collectd/collectd/commit/e1da538180881c6dcc1d686e504128327a1f56b9,14 Oct 2012,python: Fix memory leaks.,228,data/crawl/collectd/hunk_170.cpp,,,data/crawl/collectd/old_hunk_170.cpp,data/crawl/collectd/new_hunk_170.cpp,[4],[4]
https://github.com/collectd/collectd/commit/e1da538180881c6dcc1d686e504128327a1f56b9,14 Oct 2012,python: Fix memory leaks.,228,data/crawl/collectd/hunk_171.cpp,,,data/crawl/collectd/old_hunk_171.cpp,data/crawl/collectd/new_hunk_171.cpp,"[4, 9]","[10, 16]"
https://github.com/collectd/collectd/commit/e1da538180881c6dcc1d686e504128327a1f56b9,14 Oct 2012,python: Fix memory leaks.,228,data/crawl/collectd/hunk_172.cpp,,,data/crawl/collectd/old_hunk_172.cpp,data/crawl/collectd/new_hunk_172.cpp,[3],[3]
https://github.com/collectd/collectd/commit/e1da538180881c6dcc1d686e504128327a1f56b9,14 Oct 2012,python: Fix memory leaks.,228,data/crawl/collectd/hunk_173.cpp,,,data/crawl/collectd/old_hunk_173.cpp,data/crawl/collectd/new_hunk_173.cpp,[3],[3]
https://github.com/collectd/collectd/commit/e1da538180881c6dcc1d686e504128327a1f56b9,14 Oct 2012,python: Fix memory leaks.,228,data/crawl/collectd/hunk_174.cpp,,,data/crawl/collectd/old_hunk_174.cpp,data/crawl/collectd/new_hunk_174.cpp,"[18, 23]","[19, 24]"
https://github.com/collectd/collectd/commit/e1da538180881c6dcc1d686e504128327a1f56b9,14 Oct 2012,python: Fix memory leaks.,228,data/crawl/collectd/hunk_175.cpp,,,data/crawl/collectd/old_hunk_175.cpp,data/crawl/collectd/new_hunk_175.cpp,[3],[3]
https://github.com/collectd/collectd/commit/e1da538180881c6dcc1d686e504128327a1f56b9,14 Oct 2012,python: Fix memory leaks.,228,data/crawl/collectd/hunk_176.cpp,,,data/crawl/collectd/old_hunk_176.cpp,data/crawl/collectd/new_hunk_176.cpp,[3],[3]
https://github.com/collectd/collectd/commit/e1da538180881c6dcc1d686e504128327a1f56b9,14 Oct 2012,python: Fix memory leaks.,228,data/crawl/collectd/hunk_177.cpp,,,data/crawl/collectd/old_hunk_177.cpp,data/crawl/collectd/new_hunk_177.cpp,[4],[4]
https://github.com/collectd/collectd/commit/e1da538180881c6dcc1d686e504128327a1f56b9,14 Oct 2012,python: Fix memory leaks.,228,data/crawl/collectd/hunk_178.cpp,,,data/crawl/collectd/old_hunk_178.cpp,data/crawl/collectd/new_hunk_178.cpp,"[4, 9]","[16, 21]"
https://github.com/collectd/collectd/commit/e95c6a7731455136b68bbf075739506db8d5c447,13 Sep 2012,"pf plugin: Rearrange functions to get rid of prototypes.

* Add collectd specific includes.
* Make global variables and functions static.
* Remove main() function and associated code.",96,data/crawl/collectd/hunk_179.cpp,,,data/crawl/collectd/old_hunk_179.cpp,data/crawl/collectd/new_hunk_179.cpp,[23],[]
https://github.com/collectd/collectd/commit/40dfca383199dfd178b3359f69d5732732f29b29,18 Jan 2012,python: Fixed memory leaks during dispatch.,65,data/crawl/collectd/hunk_180.cpp,,,data/crawl/collectd/old_hunk_180.cpp,data/crawl/collectd/new_hunk_180.cpp,[],[5]
https://github.com/collectd/collectd/commit/40dfca383199dfd178b3359f69d5732732f29b29,18 Jan 2012,python: Fixed memory leaks during dispatch.,65,data/crawl/collectd/hunk_181.cpp,,,data/crawl/collectd/old_hunk_181.cpp,data/crawl/collectd/new_hunk_181.cpp,[26],[34]
https://github.com/collectd/collectd/commit/40dfca383199dfd178b3359f69d5732732f29b29,18 Jan 2012,python: Fixed memory leaks during dispatch.,65,data/crawl/collectd/hunk_182.cpp,,,data/crawl/collectd/old_hunk_182.cpp,data/crawl/collectd/new_hunk_182.cpp,[4],[6]
https://github.com/collectd/collectd/commit/40dfca383199dfd178b3359f69d5732732f29b29,18 Jan 2012,python: Fixed memory leaks during dispatch.,65,data/crawl/collectd/hunk_183.cpp,,,data/crawl/collectd/old_hunk_183.cpp,data/crawl/collectd/new_hunk_183.cpp,[26],[34]
https://github.com/collectd/collectd/commit/40dfca383199dfd178b3359f69d5732732f29b29,18 Jan 2012,python: Fixed memory leaks during dispatch.,65,data/crawl/collectd/hunk_184.cpp,,,data/crawl/collectd/old_hunk_184.cpp,data/crawl/collectd/new_hunk_184.cpp,[4],[6]
https://github.com/collectd/collectd/commit/bda3bcdf4eeddb0198cfbaac8f682bf651be7a7e,02 Sep 2011,"irq plugin: Use the standard ignorelist for filtering interrupts.

Change-Id: I7d15318c3c1d519d5e7bc715566a9b298f087bcc",64,data/crawl/collectd/hunk_185.cpp,,,data/crawl/collectd/old_hunk_185.cpp,data/crawl/collectd/new_hunk_185.cpp,[22],[]
https://github.com/collectd/collectd/commit/66bdee8d4c974e893826335977e1cc52410380eb,02 Sep 2011,"irq plugin: Implement collection of non-numeric interrupts.

Hi all!

I've created a patch that enables collectd to collect all irqs present in
/proc/interrupts, with numeric and string names (NMI, LOC, RES, etc).

Two notices:
a) Unfortunately I was unable to build collectd from git repo (build.sh
   failures), therefore I created this patch for latest stable release: 4.10.1
b) I am fairly unexperienced in C programming, so please inform me gently of my
   mistakes:) But I am already using a patched version and it works fine.

Any feedback on code quality or recommendations are welcome.

Change-Id: Ia17bd953921051dfe53e838b76672adbef9e73c3
Signed-off-by: Florian Forster <octo@collectd.org>",81,data/crawl/collectd/hunk_186.cpp,,,data/crawl/collectd/old_hunk_186.cpp,data/crawl/collectd/new_hunk_186.cpp,[10],[8]
https://github.com/collectd/collectd/commit/66bdee8d4c974e893826335977e1cc52410380eb,02 Sep 2011,"irq plugin: Implement collection of non-numeric interrupts.

Hi all!

I've created a patch that enables collectd to collect all irqs present in
/proc/interrupts, with numeric and string names (NMI, LOC, RES, etc).

Two notices:
a) Unfortunately I was unable to build collectd from git repo (build.sh
   failures), therefore I created this patch for latest stable release: 4.10.1
b) I am fairly unexperienced in C programming, so please inform me gently of my
   mistakes:) But I am already using a patched version and it works fine.

Any feedback on code quality or recommendations are welcome.

Change-Id: Ia17bd953921051dfe53e838b76672adbef9e73c3
Signed-off-by: Florian Forster <octo@collectd.org>",81,data/crawl/collectd/hunk_187.cpp,,,data/crawl/collectd/old_hunk_187.cpp,data/crawl/collectd/new_hunk_187.cpp,[9],[]
https://github.com/collectd/collectd/commit/36d3cd820b5f977fcd349250a22a932f5af5a062,16 May 2011,"collectd-nagios: Sort LISTVAL output.

Also, output the data for each host in a separate ""section"", printing the
hostname as the heading and leaving it out from any further output.

This way, the strings may directly be used as options for -H and -n.",24,data/crawl/collectd/hunk_188.cpp,,,data/crawl/collectd/old_hunk_188.cpp,data/crawl/collectd/new_hunk_188.cpp,[],"[5, 22]"
https://github.com/collectd/collectd/commit/36d3cd820b5f977fcd349250a22a932f5af5a062,16 May 2011,"collectd-nagios: Sort LISTVAL output.

Also, output the data for each host in a separate ""section"", printing the
hostname as the heading and leaving it out from any further output.

This way, the strings may directly be used as options for -H and -n.",24,data/crawl/collectd/hunk_189.cpp,,,data/crawl/collectd/old_hunk_189.cpp,data/crawl/collectd/new_hunk_189.cpp,[3],[4]
https://github.com/collectd/collectd/commit/03326eeaf8819d87786b132b80a0e772a9c5e2b0,16 May 2011,collectd-nagios: Let '-n LIST' list all available datasets.,76,data/crawl/collectd/hunk_190.cpp,,,data/crawl/collectd/old_hunk_190.cpp,data/crawl/collectd/new_hunk_190.cpp,[],"[13, 25, 31]"
https://github.com/collectd/collectd/commit/03326eeaf8819d87786b132b80a0e772a9c5e2b0,16 May 2011,collectd-nagios: Let '-n LIST' list all available datasets.,76,data/crawl/collectd/hunk_191.cpp,,,data/crawl/collectd/old_hunk_191.cpp,data/crawl/collectd/new_hunk_191.cpp,[26],[]
https://github.com/collectd/collectd/commit/03326eeaf8819d87786b132b80a0e772a9c5e2b0,16 May 2011,collectd-nagios: Let '-n LIST' list all available datasets.,76,data/crawl/collectd/hunk_192.cpp,,,data/crawl/collectd/old_hunk_192.cpp,data/crawl/collectd/new_hunk_192.cpp,[5],"[5, 16]"
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,"[215, 217, 220, 222, 225, 227, 231, 234, 236, 247, 249, 251, 254, 256, 258, 261, 263, 265, 267, 269, 273, 276, 278, 280, 284, 286, 288, 290, 292, 296, 299, 301, 305, 307, 309, 311, 313, 319, 321, 327, 329, 340, 342, 348, 354, 356, 358, 360, 366, 368, 372, 374, 376, 378, 380, 394, 411, 413, 418, 419, 424, 425, 427, 429, 434, 435, 440, 441, 446, 447, 454, 455, 460, 461, 463, 465, 469, 470, 475, 476, 481, 482, 490, 496, 500, 503, 505, 507, 509, 511, 513, 515, 518, 521, 523, 525, 528, 530, 532, 534, 537, 538, 541, 544, 549, 552, 554, 555, 560, 641, 651, 653, 655, 662, 664, 671, 673, 678, 680, 690, 693, 696, 701, 705, 707, 724, 726, 728, 735, 738, 740, 756, 770, 778, 780, 782, 784, 786, 789, 791, 793, 798, 800, 803, 809, 811, 813, 815, 821, 827, 829, 833, 836, 839, 842, 853, 861, 863, 865, 867, 869, 871, 873, 875, 877, 908]",[]
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,"[216, 218, 222, 224, 227, 230, 233, 235, 246, 248, 250, 253, 255, 257, 260, 262, 264, 266, 268, 272, 275, 277, 279, 283, 285, 287, 289, 291, 293, 297, 300, 302, 306, 308, 312, 314, 320, 322, 327, 335, 337, 343, 349, 351, 353, 355, 361, 363, 367, 369, 371, 373, 375, 389, 408, 410, 415, 416, 421, 422, 424, 426, 431, 432, 437, 438, 443, 444, 451, 452, 457, 458, 460, 462, 466, 467, 472, 473, 478, 479, 487, 493, 497, 501, 504, 507, 512, 513, 518, 519, 524, 525, 530, 531, 536, 537, 540, 544, 546, 548, 550, 552, 555, 556, 559, 562, 567, 570, 572, 573, 577, 579, 584, 590, 592, 594, 595, 607, 609, 617, 619, 624, 626, 636, 639, 642, 647, 651, 653, 661, 663, 665, 667, 669, 672, 674, 676, 681, 683, 686, 692, 694, 696, 698, 704, 710, 712, 716, 719, 722, 725, 736, 772, 774, 776, 783, 786, 788, 808, 819, 821, 823, 825, 827, 829, 831, 833, 835, 845, 855]",[]
https://github.com/collectd/collectd/commit/22d0859f5c5c43adc8c58ff0dd40be79528681eb,21 Apr 2011,pf plugin: some code cleanup,43,data/crawl/collectd/hunk_195.cpp,,,data/crawl/collectd/old_hunk_195.cpp,data/crawl/collectd/new_hunk_195.cpp,[20],[]
https://github.com/collectd/collectd/commit/22d0859f5c5c43adc8c58ff0dd40be79528681eb,21 Apr 2011,pf plugin: some code cleanup,43,data/crawl/collectd/hunk_196.cpp,,,data/crawl/collectd/old_hunk_196.cpp,data/crawl/collectd/new_hunk_196.cpp,[],[20]
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,[],"[216, 218, 222, 224, 227, 230, 233, 235, 246, 248, 250, 253, 255, 257, 260, 262, 264, 266, 268, 272, 275, 277, 279, 283, 285, 287, 289, 291, 293, 297, 300, 302, 306, 308, 312, 314, 320, 322, 327, 335, 337, 343, 349, 351, 353, 355, 361, 363, 367, 369, 371, 373, 375, 389, 408, 410, 415, 416, 421, 422, 424, 426, 431, 432, 437, 438, 443, 444, 451, 452, 457, 458, 460, 462, 466, 467, 472, 473, 478, 479, 487, 493, 497, 501, 504, 507, 512, 513, 518, 519, 524, 525, 530, 531, 536, 537, 540, 544, 546, 548, 550, 552, 555, 556, 559, 562, 567, 570, 572, 573, 577, 579, 584, 590, 592, 594, 595, 607, 609, 617, 619, 624, 626, 636, 639, 642, 647, 651, 653, 661, 663, 665, 667, 669, 672, 674, 676, 681, 683, 686, 692, 694, 696, 698, 704, 710, 712, 716, 719, 722, 725, 736, 772, 774, 776, 783, 786, 788, 808, 819, 821, 823, 825, 827, 829, 831, 833, 835, 845, 855]"
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,[],"[215, 217, 220, 222, 225, 227, 231, 234, 236, 247, 249, 251, 254, 256, 258, 261, 263, 265, 267, 269, 273, 276, 278, 280, 284, 286, 288, 290, 292, 296, 299, 301, 305, 307, 309, 311, 313, 319, 321, 327, 329, 340, 342, 348, 354, 356, 358, 360, 366, 368, 372, 374, 376, 378, 380, 394, 411, 413, 418, 419, 424, 425, 427, 429, 434, 435, 440, 441, 446, 447, 454, 455, 460, 461, 463, 465, 469, 470, 475, 476, 481, 482, 490, 496, 500, 503, 505, 507, 509, 511, 513, 515, 518, 521, 523, 525, 528, 530, 532, 534, 537, 538, 541, 544, 549, 552, 554, 555, 560, 641, 651, 653, 655, 662, 664, 671, 673, 678, 680, 690, 693, 696, 701, 705, 707, 724, 726, 728, 735, 738, 740, 756, 770, 778, 780, 782, 784, 786, 789, 791, 793, 798, 800, 803, 809, 811, 813, 815, 821, 827, 829, 833, 836, 839, 842, 853, 861, 863, 865, 867, 869, 871, 873, 875, 877, 908]"
https://github.com/collectd/collectd/commit/3fdb55938b0e70e042f893dadcc62cfe7a92a914,14 Apr 2011,pf plugin: init commit - import pf.c from pyr@openbsd.org,136,data/crawl/collectd/hunk_199.cpp,,,data/crawl/collectd/old_hunk_199.cpp,data/crawl/collectd/new_hunk_199.cpp,[],[67]
https://github.com/collectd/collectd/commit/99364c70a7039ed496dbe429fb86ee41e464fc76,03 Apr 2011,"iptables plugin: Remove the shipped version of libiptc.

Since libiptc is now publicly available as a shared library, we don't really
have any need to ship it with collectd anymore.",5264,data/crawl/collectd/hunk_200.cpp,,,data/crawl/collectd/old_hunk_200.cpp,data/crawl/collectd/new_hunk_200.cpp,"[151, 153, 155, 157, 159, 160, 162, 163, 164, 165, 166, 168, 173, 178, 185, 187, 189, 456]",[]
https://github.com/collectd/collectd/commit/99364c70a7039ed496dbe429fb86ee41e464fc76,03 Apr 2011,"iptables plugin: Remove the shipped version of libiptc.

Since libiptc is now publicly available as a shared library, we don't really
have any need to ship it with collectd anymore.",5264,data/crawl/collectd/hunk_201.cpp,,,data/crawl/collectd/old_hunk_201.cpp,data/crawl/collectd/new_hunk_201.cpp,"[158, 166, 179, 186, 188, 189, 191, 192, 194, 195, 196, 197, 199, 204, 209, 215, 217, 219, 392, 415]",[]
https://github.com/collectd/collectd/commit/99364c70a7039ed496dbe429fb86ee41e464fc76,03 Apr 2011,"iptables plugin: Remove the shipped version of libiptc.

Since libiptc is now publicly available as a shared library, we don't really
have any need to ship it with collectd anymore.",5264,data/crawl/collectd/hunk_202.cpp,,,data/crawl/collectd/old_hunk_202.cpp,data/crawl/collectd/new_hunk_202.cpp,"[54, 55, 62, 250, 357, 477, 1336, 1348, 1350, 1351, 1357, 1552, 1916]",[]
https://github.com/collectd/collectd/commit/a63ec989fa64dc13da40fc9b96b4c3bc73fdfbc1,09 Feb 2011,"src/plugin.c: Print a more verbose error message if lt_dlopen() fails.

Since the Debian package doesn't depend on the libraries used by the
collectd plugins, some plugins may fail to load. ltdl reports this with
the very confusing error message ""file not found"". Since the plugin is
in fact available, many users don't realize a dependency is missing and
assume collectd is looking in the wrong directory -- and they are hardly
to blame for this.

This commit introduces a lengthy error message which hopefully points
users into the right direction.",24,data/crawl/collectd/hunk_203.cpp,,,data/crawl/collectd/old_hunk_203.cpp,data/crawl/collectd/new_hunk_203.cpp,[13],[24]
https://github.com/collectd/collectd/commit/a04ffbda508739433df0975328100e33e7986c87,03 Nov 2010,"Many plugins and files: Convert ""interval_g"" and ""vl->interval"" to cdtime_t.",366,data/crawl/collectd/hunk_204.cpp,,,data/crawl/collectd/old_hunk_204.cpp,data/crawl/collectd/new_hunk_204.cpp,[7],[13]
https://github.com/collectd/collectd/commit/a04ffbda508739433df0975328100e33e7986c87,03 Nov 2010,"Many plugins and files: Convert ""interval_g"" and ""vl->interval"" to cdtime_t.",366,data/crawl/collectd/hunk_205.cpp,,,data/crawl/collectd/old_hunk_205.cpp,data/crawl/collectd/new_hunk_205.cpp,[2],[2]
https://github.com/collectd/collectd/commit/4da9a97a7024960ef8210e10b76204ef2fdaf979,09 Aug 2010,collectdctl: Improved error reporting.,4,data/crawl/collectd/hunk_206.cpp,,,data/crawl/collectd/old_hunk_206.cpp,data/crawl/collectd/new_hunk_206.cpp,[],[4]
https://github.com/collectd/collectd/commit/666394e4a4fe8efe6a98266b9dbac32e30064f45,09 Aug 2010,collectdctl: Added support for the ‘putval’ command.,182,data/crawl/collectd/hunk_207.cpp,,,data/crawl/collectd/old_hunk_207.cpp,data/crawl/collectd/new_hunk_207.cpp,[],"[18, 48, 53, 58, 68, 85, 90, 123, 128, 140, 147]"
https://github.com/collectd/collectd/commit/666394e4a4fe8efe6a98266b9dbac32e30064f45,09 Aug 2010,collectdctl: Added support for the ‘putval’ command.,182,data/crawl/collectd/hunk_208.cpp,,,data/crawl/collectd/old_hunk_208.cpp,data/crawl/collectd/new_hunk_208.cpp,[4],[6]
https://github.com/collectd/collectd/commit/d0d5d5fa42cd77042d4c3077bb67cfeb8c9cd701,09 Aug 2010,"collectdctl: ‘flush’ now supports multiple plugins/identifiers.

… just like the ‘unixsock’ plugin does.",108,data/crawl/collectd/hunk_209.cpp,,,data/crawl/collectd/old_hunk_209.cpp,data/crawl/collectd/new_hunk_209.cpp,[],[11]
https://github.com/collectd/collectd/commit/d0d5d5fa42cd77042d4c3077bb67cfeb8c9cd701,09 Aug 2010,"collectdctl: ‘flush’ now supports multiple plugins/identifiers.

… just like the ‘unixsock’ plugin does.",108,data/crawl/collectd/hunk_210.cpp,,,data/crawl/collectd/old_hunk_210.cpp,data/crawl/collectd/new_hunk_210.cpp,[1],[1]
https://github.com/collectd/collectd/commit/d0d5d5fa42cd77042d4c3077bb67cfeb8c9cd701,09 Aug 2010,"collectdctl: ‘flush’ now supports multiple plugins/identifiers.

… just like the ‘unixsock’ plugin does.",108,data/crawl/collectd/hunk_211.cpp,,,data/crawl/collectd/old_hunk_211.cpp,data/crawl/collectd/new_hunk_211.cpp,[2],[2]
https://github.com/collectd/collectd/commit/d0d5d5fa42cd77042d4c3077bb67cfeb8c9cd701,09 Aug 2010,"collectdctl: ‘flush’ now supports multiple plugins/identifiers.

… just like the ‘unixsock’ plugin does.",108,data/crawl/collectd/hunk_212.cpp,,,data/crawl/collectd/old_hunk_212.cpp,data/crawl/collectd/new_hunk_212.cpp,"[1, 6, 26]","[1, 6, 45, 57]"
https://github.com/collectd/collectd/commit/5b4655df8b9d8e60d0502b0c6ecdcb05e99f7fc7,08 Aug 2010,collectdctl: Improved error reporting.,10,data/crawl/collectd/hunk_213.cpp,,,data/crawl/collectd/old_hunk_213.cpp,data/crawl/collectd/new_hunk_213.cpp,[7],"[4, 9]"
https://github.com/collectd/collectd/commit/5b4655df8b9d8e60d0502b0c6ecdcb05e99f7fc7,08 Aug 2010,collectdctl: Improved error reporting.,10,data/crawl/collectd/hunk_214.cpp,,,data/crawl/collectd/old_hunk_214.cpp,data/crawl/collectd/new_hunk_214.cpp,[11],"[4, 13]"
https://github.com/collectd/collectd/commit/1252d60cdbd86328ecb815e978dbfa380c29b385,08 Aug 2010,collectdctl: Added ‘listval’ command.,47,data/crawl/collectd/hunk_215.cpp,,,data/crawl/collectd/old_hunk_215.cpp,data/crawl/collectd/new_hunk_215.cpp,[],"[17, 38, 43]"
https://github.com/collectd/collectd/commit/1252d60cdbd86328ecb815e978dbfa380c29b385,08 Aug 2010,collectdctl: Added ‘listval’ command.,47,data/crawl/collectd/hunk_216.cpp,,,data/crawl/collectd/old_hunk_216.cpp,data/crawl/collectd/new_hunk_216.cpp,[4],[6]
https://github.com/collectd/collectd/commit/dfdde4f67574cc6c02ca4bb26a1b54b3b7250fcd,08 Aug 2010,collectd-flush: Added support for the ‘getval’ command.,124,data/crawl/collectd/hunk_217.cpp,,,data/crawl/collectd/old_hunk_217.cpp,data/crawl/collectd/new_hunk_217.cpp,[],"[18, 34, 55, 83]"
https://github.com/collectd/collectd/commit/dfdde4f67574cc6c02ca4bb26a1b54b3b7250fcd,08 Aug 2010,collectd-flush: Added support for the ‘getval’ command.,124,data/crawl/collectd/hunk_218.cpp,,,data/crawl/collectd/old_hunk_218.cpp,data/crawl/collectd/new_hunk_218.cpp,[3],[3]
https://github.com/collectd/collectd/commit/dfdde4f67574cc6c02ca4bb26a1b54b3b7250fcd,08 Aug 2010,collectd-flush: Added support for the ‘getval’ command.,124,data/crawl/collectd/hunk_219.cpp,,,data/crawl/collectd/old_hunk_219.cpp,data/crawl/collectd/new_hunk_219.cpp,"[13, 29]",[]
https://github.com/collectd/collectd/commit/dfdde4f67574cc6c02ca4bb26a1b54b3b7250fcd,08 Aug 2010,collectd-flush: Added support for the ‘getval’ command.,124,data/crawl/collectd/hunk_220.cpp,,,data/crawl/collectd/old_hunk_220.cpp,data/crawl/collectd/new_hunk_220.cpp,[6],[8]
https://github.com/collectd/collectd/commit/677cdefc79b8317c0013521f7f9e3eff7af7c282,08 Aug 2010,collectd-flush: Moved connection handling out of ‘flush()’.,38,data/crawl/collectd/hunk_221.cpp,,,data/crawl/collectd/old_hunk_221.cpp,data/crawl/collectd/new_hunk_221.cpp,[6],[]
https://github.com/collectd/collectd/commit/677cdefc79b8317c0013521f7f9e3eff7af7c282,08 Aug 2010,collectd-flush: Moved connection handling out of ‘flush()’.,38,data/crawl/collectd/hunk_222.cpp,,,data/crawl/collectd/old_hunk_222.cpp,data/crawl/collectd/new_hunk_222.cpp,"[5, 16]","[5, 15]"
https://github.com/collectd/collectd/commit/677cdefc79b8317c0013521f7f9e3eff7af7c282,08 Aug 2010,collectd-flush: Moved connection handling out of ‘flush()’.,38,data/crawl/collectd/hunk_223.cpp,,,data/crawl/collectd/old_hunk_223.cpp,data/crawl/collectd/new_hunk_223.cpp,[6],"[6, 14]"
https://github.com/collectd/collectd/commit/91c09b4a499872e92c845859b912dcc049fdf712,08 Aug 2010,"collectd-flush: Switched to a command based syntax.

Basically, the command line now looks similar to the ‘unixsock’ text protocol,
i.e., a command is specified as first non-option argument followed by any
options of that command as defined by the protocol.",247,data/crawl/collectd/hunk_224.cpp,,,data/crawl/collectd/old_hunk_224.cpp,data/crawl/collectd/new_hunk_224.cpp,"[31, 40, 51, 64]",[21]
https://github.com/collectd/collectd/commit/91c09b4a499872e92c845859b912dcc049fdf712,08 Aug 2010,"collectd-flush: Switched to a command based syntax.

Basically, the command line now looks similar to the ‘unixsock’ text protocol,
i.e., a command is specified as first non-option argument followed by any
options of that command as defined by the protocol.",247,data/crawl/collectd/hunk_225.cpp,,,data/crawl/collectd/old_hunk_225.cpp,data/crawl/collectd/new_hunk_225.cpp,[],"[23, 35, 48, 53, 71, 87, 98]"
https://github.com/collectd/collectd/commit/91c09b4a499872e92c845859b912dcc049fdf712,08 Aug 2010,"collectd-flush: Switched to a command based syntax.

Basically, the command line now looks similar to the ‘unixsock’ text protocol,
i.e., a command is specified as first non-option argument followed by any
options of that command as defined by the protocol.",247,data/crawl/collectd/hunk_226.cpp,,,data/crawl/collectd/old_hunk_226.cpp,data/crawl/collectd/new_hunk_226.cpp,[12],[]
https://github.com/collectd/collectd/commit/91c09b4a499872e92c845859b912dcc049fdf712,08 Aug 2010,"collectd-flush: Switched to a command based syntax.

Basically, the command line now looks similar to the ‘unixsock’ text protocol,
i.e., a command is specified as first non-option argument followed by any
options of that command as defined by the protocol.",247,data/crawl/collectd/hunk_227.cpp,,,data/crawl/collectd/old_hunk_227.cpp,data/crawl/collectd/new_hunk_227.cpp,[],"[4, 11]"
https://github.com/collectd/collectd/commit/8856d7def89bebef924ef90d04a0baf088744bbc,07 Aug 2010,"collectd-flush: Do not use ‘getopt_long()’.

This is a GNU extension and, thus, not portable.

Also, pimped the usage output a bit.",110,data/crawl/collectd/hunk_228.cpp,,,data/crawl/collectd/old_hunk_228.cpp,data/crawl/collectd/new_hunk_228.cpp,[3],[3]
https://github.com/collectd/collectd/commit/8856d7def89bebef924ef90d04a0baf088744bbc,07 Aug 2010,"collectd-flush: Do not use ‘getopt_long()’.

This is a GNU extension and, thus, not portable.

Also, pimped the usage output a bit.",110,data/crawl/collectd/hunk_229.cpp,,,data/crawl/collectd/old_hunk_229.cpp,data/crawl/collectd/new_hunk_229.cpp,[30],[26]
https://github.com/collectd/collectd/commit/552e81eebd54e4dc7a5d290a1ec4be769bef4a24,07 Aug 2010,collectd-flush: Simplified ‘usage()’ a bit.,16,data/crawl/collectd/hunk_230.cpp,,,data/crawl/collectd/old_hunk_230.cpp,data/crawl/collectd/new_hunk_230.cpp,[4],[4]
https://github.com/collectd/collectd/commit/135331b30a334a934e12c6026432ec144e56b887,06 Aug 2010,collectd-flush: Minor coding style changes.,30,data/crawl/collectd/hunk_231.cpp,,,data/crawl/collectd/old_hunk_231.cpp,data/crawl/collectd/new_hunk_231.cpp,"[12, 22]","[11, 20]"
https://github.com/collectd/collectd/commit/135331b30a334a934e12c6026432ec144e56b887,06 Aug 2010,collectd-flush: Minor coding style changes.,30,data/crawl/collectd/hunk_232.cpp,,,data/crawl/collectd/old_hunk_232.cpp,data/crawl/collectd/new_hunk_232.cpp,[7],[7]
https://github.com/collectd/collectd/commit/35ad86ccb95a7808ad2cf7ad266292cb877c5eb8,06 Aug 2010,"Add collectd-flush command line utility.

collectd-flush is a small command-line utility which uses libcollectdclient
to flush collectd through the unixsock plugin. As far as I know, there is
no easy way to work with unix sockets from the shell, so if someone
wanted to flush collectd without this program, they would need to do it
through some other language (or restart the deamon).

I am no C wizard, so please bear with me if I have
done something a stupid way. :)
The code is based on/inspired by collectd-nagios.

If this message is not properly encoded as utf-8, something wrong must have
happened with my mailer. If that's the case, I'm sorry.  The only non-ascii character
in the patch is the second character of my name, which is an &aring;.

Signed-off-by: Håkon J Dugstad Johnsen <hakon-dugstad.johnsen@telenor.com>
Signed-off-by: Florian Forster <octo@huhu.verplant.org>",246,data/crawl/collectd/hunk_233.cpp,,,data/crawl/collectd/old_hunk_233.cpp,data/crawl/collectd/new_hunk_233.cpp,[],"[49, 59, 69, 82, 147]"
https://github.com/collectd/collectd/commit/7017d8cd9cff36c1dd757869d9428c50906aaa2b,30 Jun 2010,"collectd-nagios: Implement the ""-m"" option (treat NaNs as critical).",63,data/crawl/collectd/hunk_234.cpp,,,data/crawl/collectd/old_hunk_234.cpp,data/crawl/collectd/new_hunk_234.cpp,[],[8]
https://github.com/collectd/collectd/commit/7017d8cd9cff36c1dd757869d9428c50906aaa2b,30 Jun 2010,"collectd-nagios: Implement the ""-m"" option (treat NaNs as critical).",63,data/crawl/collectd/hunk_235.cpp,,,data/crawl/collectd/old_hunk_235.cpp,data/crawl/collectd/new_hunk_235.cpp,[],[8]
https://github.com/collectd/collectd/commit/7017d8cd9cff36c1dd757869d9428c50906aaa2b,30 Jun 2010,"collectd-nagios: Implement the ""-m"" option (treat NaNs as critical).",63,data/crawl/collectd/hunk_236.cpp,,,data/crawl/collectd/old_hunk_236.cpp,data/crawl/collectd/new_hunk_236.cpp,[],[9]
https://github.com/collectd/collectd/commit/106e2016957fe53e4d249f1352bb5a7ec9caa76b,25 Apr 2010,"collectd-nagios.c: Output performance data with the ""%f"" format string.

Apparently the parser used by nagios is dumb as bread. Thanks to Lao Wai
for pointing this out. For more information, see:
<http://nagiosplug.sourceforge.net/developer-guidelines.html#AEN201>",6,data/crawl/collectd/hunk_237.cpp,,,data/crawl/collectd/old_hunk_237.cpp,data/crawl/collectd/new_hunk_237.cpp,"[1, 3, 5]","[1, 3, 5]"
https://github.com/collectd/collectd/commit/106e2016957fe53e4d249f1352bb5a7ec9caa76b,25 Apr 2010,"collectd-nagios.c: Output performance data with the ""%f"" format string.

Apparently the parser used by nagios is dumb as bread. Thanks to Lao Wai
for pointing this out. For more information, see:
<http://nagiosplug.sourceforge.net/developer-guidelines.html#AEN201>",6,data/crawl/collectd/hunk_238.cpp,,,data/crawl/collectd/old_hunk_238.cpp,data/crawl/collectd/new_hunk_238.cpp,"[1, 3, 4]","[1, 3, 4]"
https://github.com/collectd/collectd/commit/106e2016957fe53e4d249f1352bb5a7ec9caa76b,25 Apr 2010,"collectd-nagios.c: Output performance data with the ""%f"" format string.

Apparently the parser used by nagios is dumb as bread. Thanks to Lao Wai
for pointing this out. For more information, see:
<http://nagiosplug.sourceforge.net/developer-guidelines.html#AEN201>",6,data/crawl/collectd/hunk_239.cpp,,,data/crawl/collectd/old_hunk_239.cpp,data/crawl/collectd/new_hunk_239.cpp,"[1, 3, 4]","[1, 3, 4]"
https://github.com/collectd/collectd/commit/26be7bb8e6eaab8d1b24a721a634d273337185af,25 Apr 2010,"Timeout for missing values

Hi!

I attach here a patch which adds Timeout option in configuration file.
This option is global (i.e. at the same level as Interval) and it's
the max number of intervals that a package can be missed before a
missing notification would be raised. By dafault collectd wait 2
intervals and it's a hardcoded value AFAIK, if plugin cannot get data
for more than 2 intervals, then (if it's an interesting value),
collectd send a missing notification. Setting Timeout to an high value
you can be more tolerant with that missing.

It's usefull on large networks. In my case, the company LAN is
distributed on distant locations and sometimes (due to network issues)
UDP packages are lost, I use the Timeout to be more tolerant to this
networks fails. For example setting Internval to 10 and Timeout to 6,
a  missing notification will be raised only if none data was reported
in last 60s.

I hope that things explained well enough, and (who knows!) maybe this
could be usefull to anybody ;)

Regards,
  Andrés

Signed-off-by: Florian Forster <octo@huhu.verplant.org>",17,data/crawl/collectd/hunk_240.cpp,,,data/crawl/collectd/old_hunk_240.cpp,data/crawl/collectd/new_hunk_240.cpp,[],[9]
https://github.com/collectd/collectd/commit/a841b5f2882acf431f4fd0783f602f3ae80716c5,21 Apr 2010,"src/plugin.c: plugin_log: Append newline to message …

… even when no log-plugin was loaded.",14,data/crawl/collectd/hunk_241.cpp,,,data/crawl/collectd/old_hunk_241.cpp,data/crawl/collectd/new_hunk_241.cpp,[],[5]
https://github.com/collectd/collectd/commit/9002a0d29362705ae26f819dd6426626e667505b,27 Mar 2010,"modbus plugin: Downgrade to use the libmodbus 1.2.5 API.

The API of the library changes every other month, so be conservative and
use the ""stable"" version, released in May 2008, and hope *that* API is
somewhat stable.",59,data/crawl/collectd/hunk_242.cpp,,,data/crawl/collectd/old_hunk_242.cpp,data/crawl/collectd/new_hunk_242.cpp,"[13, 25, 32, 37]",[]
https://github.com/collectd/collectd/commit/fb483e3c027045b44f9b78ad4e0787ed8f11f0a6,17 Mar 2010,modbus plugin: Actually get into a working state.,589,data/crawl/collectd/hunk_243.cpp,,,data/crawl/collectd/old_hunk_243.cpp,data/crawl/collectd/new_hunk_243.cpp,[58],[]
https://github.com/collectd/collectd/commit/cbc244bc1f4493784282ba6c5f8efc33158f18f1,14 Mar 2010,Impove level print,19,data/crawl/collectd/hunk_244.cpp,,,data/crawl/collectd/old_hunk_244.cpp,data/crawl/collectd/new_hunk_244.cpp,"[3, 7]","[3, 5]"
https://github.com/collectd/collectd/commit/b70741d312c381569444e65add2ca831b04d049c,10 Mar 2010,"Modbus plugin: Started working on a ""Modbus-TCP"" plugin for collectd.",419,data/crawl/collectd/hunk_245.cpp,,,data/crawl/collectd/old_hunk_245.cpp,data/crawl/collectd/new_hunk_245.cpp,[],"[306, 349, 361, 368, 373]"
https://github.com/collectd/collectd/commit/ffa4409610e34e6f0945f365de44b986688b2353,27 Feb 2010,Add an option to add the severity of the message in the logfile plugin,47,data/crawl/collectd/hunk_246.cpp,,,data/crawl/collectd/old_hunk_246.cpp,data/crawl/collectd/new_hunk_246.cpp,"[3, 5]","[3, 7]"
https://github.com/collectd/collectd/commit/f7cf0dad2e933ac6066ca5f27645ee577f065710,29 Jan 2010,python: Full meta data support.,173,data/crawl/collectd/hunk_247.cpp,,,data/crawl/collectd/old_hunk_247.cpp,data/crawl/collectd/new_hunk_247.cpp,[],[3]
https://github.com/collectd/collectd/commit/f7cf0dad2e933ac6066ca5f27645ee577f065710,29 Jan 2010,python: Full meta data support.,173,data/crawl/collectd/hunk_248.cpp,,,data/crawl/collectd/old_hunk_248.cpp,data/crawl/collectd/new_hunk_248.cpp,[3],[3]
https://github.com/collectd/collectd/commit/f7cf0dad2e933ac6066ca5f27645ee577f065710,29 Jan 2010,python: Full meta data support.,173,data/crawl/collectd/hunk_249.cpp,,,data/crawl/collectd/old_hunk_249.cpp,data/crawl/collectd/new_hunk_249.cpp,[5],[9]
https://github.com/collectd/collectd/commit/f7cf0dad2e933ac6066ca5f27645ee577f065710,29 Jan 2010,python: Full meta data support.,173,data/crawl/collectd/hunk_250.cpp,,,data/crawl/collectd/old_hunk_250.cpp,data/crawl/collectd/new_hunk_250.cpp,[],[73]
https://github.com/collectd/collectd/commit/f7cf0dad2e933ac6066ca5f27645ee577f065710,29 Jan 2010,python: Full meta data support.,173,data/crawl/collectd/hunk_251.cpp,,,data/crawl/collectd/old_hunk_251.cpp,data/crawl/collectd/new_hunk_251.cpp,"[0, 5]","[0, 4, 9]"
https://github.com/collectd/collectd/commit/112e161c8cfab6e3edb3a4cff25c13379fed5534,05 Jan 2010,python: Made the plugin unicode save.,124,data/crawl/collectd/hunk_252.cpp,,,data/crawl/collectd/old_hunk_252.cpp,data/crawl/collectd/new_hunk_252.cpp,[9],[14]
https://github.com/collectd/collectd/commit/112e161c8cfab6e3edb3a4cff25c13379fed5534,05 Jan 2010,python: Made the plugin unicode save.,124,data/crawl/collectd/hunk_253.cpp,,,data/crawl/collectd/old_hunk_253.cpp,data/crawl/collectd/new_hunk_253.cpp,[11],[18]
https://github.com/collectd/collectd/commit/112e161c8cfab6e3edb3a4cff25c13379fed5534,05 Jan 2010,python: Made the plugin unicode save.,124,data/crawl/collectd/hunk_254.cpp,,,data/crawl/collectd/old_hunk_254.cpp,data/crawl/collectd/new_hunk_254.cpp,[5],[5]
https://github.com/collectd/collectd/commit/112e161c8cfab6e3edb3a4cff25c13379fed5534,05 Jan 2010,python: Made the plugin unicode save.,124,data/crawl/collectd/hunk_255.cpp,,,data/crawl/collectd/old_hunk_255.cpp,data/crawl/collectd/new_hunk_255.cpp,[5],[5]
https://github.com/collectd/collectd/commit/112e161c8cfab6e3edb3a4cff25c13379fed5534,05 Jan 2010,python: Made the plugin unicode save.,124,data/crawl/collectd/hunk_256.cpp,,,data/crawl/collectd/old_hunk_256.cpp,data/crawl/collectd/new_hunk_256.cpp,[5],[5]
https://github.com/collectd/collectd/commit/112e161c8cfab6e3edb3a4cff25c13379fed5534,05 Jan 2010,python: Made the plugin unicode save.,124,data/crawl/collectd/hunk_257.cpp,,,data/crawl/collectd/old_hunk_257.cpp,data/crawl/collectd/new_hunk_257.cpp,[5],[5]
https://github.com/collectd/collectd/commit/112e161c8cfab6e3edb3a4cff25c13379fed5534,05 Jan 2010,python: Made the plugin unicode save.,124,data/crawl/collectd/hunk_258.cpp,,,data/crawl/collectd/old_hunk_258.cpp,data/crawl/collectd/new_hunk_258.cpp,[5],[5]
https://github.com/collectd/collectd/commit/112e161c8cfab6e3edb3a4cff25c13379fed5534,05 Jan 2010,python: Made the plugin unicode save.,124,data/crawl/collectd/hunk_259.cpp,,,data/crawl/collectd/old_hunk_259.cpp,data/crawl/collectd/new_hunk_259.cpp,[5],[5]
https://github.com/collectd/collectd/commit/112e161c8cfab6e3edb3a4cff25c13379fed5534,05 Jan 2010,python: Made the plugin unicode save.,124,data/crawl/collectd/hunk_260.cpp,,,data/crawl/collectd/old_hunk_260.cpp,data/crawl/collectd/new_hunk_260.cpp,[5],[5]
https://github.com/collectd/collectd/commit/112e161c8cfab6e3edb3a4cff25c13379fed5534,05 Jan 2010,python: Made the plugin unicode save.,124,data/crawl/collectd/hunk_261.cpp,,,data/crawl/collectd/old_hunk_261.cpp,data/crawl/collectd/new_hunk_261.cpp,[5],[5]
https://github.com/collectd/collectd/commit/112e161c8cfab6e3edb3a4cff25c13379fed5534,05 Jan 2010,python: Made the plugin unicode save.,124,data/crawl/collectd/hunk_262.cpp,,,data/crawl/collectd/old_hunk_262.cpp,data/crawl/collectd/new_hunk_262.cpp,[],[16]
https://github.com/collectd/collectd/commit/112e161c8cfab6e3edb3a4cff25c13379fed5534,05 Jan 2010,python: Made the plugin unicode save.,124,data/crawl/collectd/hunk_263.cpp,,,data/crawl/collectd/old_hunk_263.cpp,data/crawl/collectd/new_hunk_263.cpp,[],[16]
https://github.com/collectd/collectd/commit/1f17cc084351bd1170385927d22fc9bd10ecd8d7,05 Jan 2010,Somewhat workable python3 support. This breaks python2 support and the __repr__ functions.,199,data/crawl/collectd/hunk_264.cpp,,,data/crawl/collectd/old_hunk_264.cpp,data/crawl/collectd/new_hunk_264.cpp,[],[8]
https://github.com/collectd/collectd/commit/1f17cc084351bd1170385927d22fc9bd10ecd8d7,05 Jan 2010,Somewhat workable python3 support. This breaks python2 support and the __repr__ functions.,199,data/crawl/collectd/hunk_265.cpp,,,data/crawl/collectd/old_hunk_265.cpp,data/crawl/collectd/new_hunk_265.cpp,[13],[8]
https://github.com/collectd/collectd/commit/1f17cc084351bd1170385927d22fc9bd10ecd8d7,05 Jan 2010,Somewhat workable python3 support. This breaks python2 support and the __repr__ functions.,199,data/crawl/collectd/hunk_266.cpp,,,data/crawl/collectd/old_hunk_266.cpp,data/crawl/collectd/new_hunk_266.cpp,[4],[5]
https://github.com/collectd/collectd/commit/1f17cc084351bd1170385927d22fc9bd10ecd8d7,05 Jan 2010,Somewhat workable python3 support. This breaks python2 support and the __repr__ functions.,199,data/crawl/collectd/hunk_267.cpp,,,data/crawl/collectd/old_hunk_267.cpp,data/crawl/collectd/new_hunk_267.cpp,"[13, 21]","[8, 19]"
https://github.com/collectd/collectd/commit/1f17cc084351bd1170385927d22fc9bd10ecd8d7,05 Jan 2010,Somewhat workable python3 support. This breaks python2 support and the __repr__ functions.,199,data/crawl/collectd/hunk_268.cpp,,,data/crawl/collectd/old_hunk_268.cpp,data/crawl/collectd/new_hunk_268.cpp,[0],[0]
https://github.com/collectd/collectd/commit/1f17cc084351bd1170385927d22fc9bd10ecd8d7,05 Jan 2010,Somewhat workable python3 support. This breaks python2 support and the __repr__ functions.,199,data/crawl/collectd/hunk_269.cpp,,,data/crawl/collectd/old_hunk_269.cpp,data/crawl/collectd/new_hunk_269.cpp,[2],[2]
https://github.com/collectd/collectd/commit/1f17cc084351bd1170385927d22fc9bd10ecd8d7,05 Jan 2010,Somewhat workable python3 support. This breaks python2 support and the __repr__ functions.,199,data/crawl/collectd/hunk_270.cpp,,,data/crawl/collectd/old_hunk_270.cpp,data/crawl/collectd/new_hunk_270.cpp,[0],[0]
https://github.com/collectd/collectd/commit/1f17cc084351bd1170385927d22fc9bd10ecd8d7,05 Jan 2010,Somewhat workable python3 support. This breaks python2 support and the __repr__ functions.,199,data/crawl/collectd/hunk_271.cpp,,,data/crawl/collectd/old_hunk_271.cpp,data/crawl/collectd/new_hunk_271.cpp,"[0, 7]","[0, 11]"
https://github.com/collectd/collectd/commit/1f17cc084351bd1170385927d22fc9bd10ecd8d7,05 Jan 2010,Somewhat workable python3 support. This breaks python2 support and the __repr__ functions.,199,data/crawl/collectd/hunk_272.cpp,,,data/crawl/collectd/old_hunk_272.cpp,data/crawl/collectd/new_hunk_272.cpp,[0],[0]
https://github.com/collectd/collectd/commit/ec25cce87378f12ecec1f3286fa94d265bab6ea8,09 Dec 2009,monitorus plugin: Removed the log function.,11,data/crawl/collectd/hunk_273.cpp,,,data/crawl/collectd/old_hunk_273.cpp,data/crawl/collectd/new_hunk_273.cpp,[3],[]
https://github.com/collectd/collectd/commit/706cc847954b52da039d86f2655874c83a3d3140,08 Dec 2009,perl/…/Monitorus.pm: Added Perl-based plugin to query statistics from mon.itor.us.,115,data/crawl/collectd/hunk_274.cpp,,,data/crawl/collectd/old_hunk_274.cpp,data/crawl/collectd/new_hunk_274.cpp,[],[104]
https://github.com/collectd/collectd/commit/28d55c0f8ae5aeadffd778ec1bf9ad9c16fde1f3,08 Dec 2009,src/pyvalues.c: Don't use Py_ssize_t - it's new in Python 2.5.,12,data/crawl/collectd/hunk_275.cpp,,,data/crawl/collectd/old_hunk_275.cpp,data/crawl/collectd/new_hunk_275.cpp,"[0, 5]","[0, 5]"
https://github.com/collectd/collectd/commit/28d55c0f8ae5aeadffd778ec1bf9ad9c16fde1f3,08 Dec 2009,src/pyvalues.c: Don't use Py_ssize_t - it's new in Python 2.5.,12,data/crawl/collectd/hunk_276.cpp,,,data/crawl/collectd/old_hunk_276.cpp,data/crawl/collectd/new_hunk_276.cpp,"[0, 5]","[0, 5]"
https://github.com/collectd/collectd/commit/8df545ad514074ac26714cebfa6f3584811d3952,06 Dec 2009,Better unicode support.,25,data/crawl/collectd/hunk_277.cpp,,,data/crawl/collectd/old_hunk_277.cpp,data/crawl/collectd/new_hunk_277.cpp,[],[8]
https://github.com/collectd/collectd/commit/89eebe98be9968c165800503971782e28a40ce00,05 Dec 2009,Added write method to Values.,116,data/crawl/collectd/hunk_278.cpp,,,data/crawl/collectd/old_hunk_278.cpp,data/crawl/collectd/new_hunk_278.cpp,[],"[27, 32, 36, 41, 70, 96]"
https://github.com/collectd/collectd/commit/61de587a2c493d61be81701fc025b1aef9e20a3e,02 Dec 2009,Some signal dodging stuff.,58,data/crawl/collectd/hunk_279.cpp,,,data/crawl/collectd/old_hunk_279.cpp,data/crawl/collectd/new_hunk_279.cpp,[11],[42]
https://github.com/collectd/collectd/commit/da81fce3576301e1e7e9837aa0e91d692cfb177a,01 Dec 2009,Finished inline documentation.,221,data/crawl/collectd/hunk_280.cpp,,,data/crawl/collectd/old_hunk_280.cpp,data/crawl/collectd/new_hunk_280.cpp,[3],[3]
https://github.com/collectd/collectd/commit/a6ce5dbab98419162c5430f08261a4bc27bfe3a1,28 Nov 2009,Added notification support.,240,data/crawl/collectd/hunk_281.cpp,,,data/crawl/collectd/old_hunk_281.cpp,data/crawl/collectd/new_hunk_281.cpp,[],[13]
https://github.com/collectd/collectd/commit/a6ce5dbab98419162c5430f08261a4bc27bfe3a1,28 Nov 2009,Added notification support.,240,data/crawl/collectd/hunk_282.cpp,,,data/crawl/collectd/old_hunk_282.cpp,data/crawl/collectd/new_hunk_282.cpp,[5],[7]
https://github.com/collectd/collectd/commit/a6ce5dbab98419162c5430f08261a4bc27bfe3a1,28 Nov 2009,Added notification support.,240,data/crawl/collectd/hunk_283.cpp,,,data/crawl/collectd/old_hunk_283.cpp,data/crawl/collectd/new_hunk_283.cpp,[],"[64, 69, 92, 115]"
https://github.com/collectd/collectd/commit/0a7107bef48f170b2b6ef192e86c0afa98dbb47b,16 Nov 2009,"Added unregister functions for all callbacks.
Also removed useless plugin_unregister_complex_read declaration.",91,data/crawl/collectd/hunk_284.cpp,,,data/crawl/collectd/old_hunk_284.cpp,data/crawl/collectd/new_hunk_284.cpp,[],"[12, 23, 46, 54]"
https://github.com/collectd/collectd/commit/e96f4a12d900bb76e7983e04ae42f7c74bd73c0c,15 Nov 2009,"Added flush and register_flush functions.
Also changed name generation.",102,data/crawl/collectd/hunk_285.cpp,,,data/crawl/collectd/old_hunk_285.cpp,data/crawl/collectd/new_hunk_285.cpp,[],[14]
https://github.com/collectd/collectd/commit/e96f4a12d900bb76e7983e04ae42f7c74bd73c0c,15 Nov 2009,"Added flush and register_flush functions.
Also changed name generation.",102,data/crawl/collectd/hunk_286.cpp,,,data/crawl/collectd/old_hunk_286.cpp,data/crawl/collectd/new_hunk_286.cpp,"[0, 8]",[0]
https://github.com/collectd/collectd/commit/e96f4a12d900bb76e7983e04ae42f7c74bd73c0c,15 Nov 2009,"Added flush and register_flush functions.
Also changed name generation.",102,data/crawl/collectd/hunk_287.cpp,,,data/crawl/collectd/old_hunk_287.cpp,data/crawl/collectd/new_hunk_287.cpp,[0],[0]
https://github.com/collectd/collectd/commit/e96f4a12d900bb76e7983e04ae42f7c74bd73c0c,15 Nov 2009,"Added flush and register_flush functions.
Also changed name generation.",102,data/crawl/collectd/hunk_288.cpp,,,data/crawl/collectd/old_hunk_288.cpp,data/crawl/collectd/new_hunk_288.cpp,[0],[0]
https://github.com/collectd/collectd/commit/f96813067819f4a8d6752af11f741b599b3d1651,11 Nov 2009,Proper exception logging.,110,data/crawl/collectd/hunk_289.cpp,,,data/crawl/collectd/old_hunk_289.cpp,data/crawl/collectd/new_hunk_289.cpp,[],"[3, 60]"
https://github.com/collectd/collectd/commit/f96813067819f4a8d6752af11f741b599b3d1651,11 Nov 2009,Proper exception logging.,110,data/crawl/collectd/hunk_290.cpp,,,data/crawl/collectd/old_hunk_290.cpp,data/crawl/collectd/new_hunk_290.cpp,[],[3]
https://github.com/collectd/collectd/commit/f96813067819f4a8d6752af11f741b599b3d1651,11 Nov 2009,Proper exception logging.,110,data/crawl/collectd/hunk_291.cpp,,,data/crawl/collectd/old_hunk_291.cpp,data/crawl/collectd/new_hunk_291.cpp,[],[3]
https://github.com/collectd/collectd/commit/f96813067819f4a8d6752af11f741b599b3d1651,11 Nov 2009,Proper exception logging.,110,data/crawl/collectd/hunk_292.cpp,,,data/crawl/collectd/old_hunk_292.cpp,data/crawl/collectd/new_hunk_292.cpp,[],[3]
https://github.com/collectd/collectd/commit/f96813067819f4a8d6752af11f741b599b3d1651,11 Nov 2009,Proper exception logging.,110,data/crawl/collectd/hunk_293.cpp,,,data/crawl/collectd/old_hunk_293.cpp,data/crawl/collectd/new_hunk_293.cpp,[],[3]
https://github.com/collectd/collectd/commit/f96813067819f4a8d6752af11f741b599b3d1651,11 Nov 2009,Proper exception logging.,110,data/crawl/collectd/hunk_294.cpp,,,data/crawl/collectd/old_hunk_294.cpp,data/crawl/collectd/new_hunk_294.cpp,[],[3]
https://github.com/collectd/collectd/commit/f96813067819f4a8d6752af11f741b599b3d1651,11 Nov 2009,Proper exception logging.,110,data/crawl/collectd/hunk_295.cpp,,,data/crawl/collectd/old_hunk_295.cpp,data/crawl/collectd/new_hunk_295.cpp,[],[3]
https://github.com/collectd/collectd/commit/f96813067819f4a8d6752af11f741b599b3d1651,11 Nov 2009,Proper exception logging.,110,data/crawl/collectd/hunk_296.cpp,,,data/crawl/collectd/old_hunk_296.cpp,data/crawl/collectd/new_hunk_296.cpp,[],"[3, 9]"
https://github.com/collectd/collectd/commit/f96813067819f4a8d6752af11f741b599b3d1651,11 Nov 2009,Proper exception logging.,110,data/crawl/collectd/hunk_297.cpp,,,data/crawl/collectd/old_hunk_297.cpp,data/crawl/collectd/new_hunk_297.cpp,[],"[18, 24]"
https://github.com/collectd/collectd/commit/f96813067819f4a8d6752af11f741b599b3d1651,11 Nov 2009,Proper exception logging.,110,data/crawl/collectd/hunk_298.cpp,,,data/crawl/collectd/old_hunk_298.cpp,data/crawl/collectd/new_hunk_298.cpp,[],"[3, 9]"
https://github.com/collectd/collectd/commit/f96813067819f4a8d6752af11f741b599b3d1651,11 Nov 2009,Proper exception logging.,110,data/crawl/collectd/hunk_299.cpp,,,data/crawl/collectd/old_hunk_299.cpp,data/crawl/collectd/new_hunk_299.cpp,[],[3]
https://github.com/collectd/collectd/commit/f96813067819f4a8d6752af11f741b599b3d1651,11 Nov 2009,Proper exception logging.,110,data/crawl/collectd/hunk_300.cpp,,,data/crawl/collectd/old_hunk_300.cpp,data/crawl/collectd/new_hunk_300.cpp,[],[3]
https://github.com/collectd/collectd/commit/7ee1b9ecea5a261b82d5a91416d8ae25e5fdd237,07 Nov 2009,"Added read callback. And ""read"" in this case means ""plugin_register_complex_read"".",58,data/crawl/collectd/hunk_301.cpp,,,data/crawl/collectd/old_hunk_301.cpp,data/crawl/collectd/new_hunk_301.cpp,[],[15]
https://github.com/collectd/collectd/commit/54c1aa1fb0fd0b5a1e8a1f13bd9c92a1de3d6445,03 Nov 2009,Added write callbacks.,132,data/crawl/collectd/hunk_302.cpp,,,data/crawl/collectd/old_hunk_302.cpp,data/crawl/collectd/new_hunk_302.cpp,[8],[7]
https://github.com/collectd/collectd/commit/54c1aa1fb0fd0b5a1e8a1f13bd9c92a1de3d6445,03 Nov 2009,Added write callbacks.,132,data/crawl/collectd/hunk_303.cpp,,,data/crawl/collectd/old_hunk_303.cpp,data/crawl/collectd/new_hunk_303.cpp,"[0, 9]",[0]
https://github.com/collectd/collectd/commit/c98b98bfaaeb26894229d7da66ad145c75fb9b69,27 Oct 2009,"Added new python class ""Values"". Only ""dispatch"" is implemented right now.",335,data/crawl/collectd/hunk_304.cpp,,,data/crawl/collectd/old_hunk_304.cpp,data/crawl/collectd/new_hunk_304.cpp,[],"[41, 123, 138, 145, 177, 182, 186, 191, 220, 246]"
https://github.com/collectd/collectd/commit/f131f0347f58929bdb992ca4dabcb40120757ffc,17 Oct 2009,"Added a workaround to module loading to allow Python scripts to do imports.
Redid the python thread handling.
Added log callback.",165,data/crawl/collectd/hunk_305.cpp,,,data/crawl/collectd/old_hunk_305.cpp,data/crawl/collectd/new_hunk_305.cpp,"[10, 17, 24, 31]","[12, 21, 48, 57, 66, 75]"
https://github.com/collectd/collectd/commit/67b914e6f0f5e6c51c01716e520326348ff0e8aa,12 Oct 2009,Added logging.,42,data/crawl/collectd/hunk_306.cpp,,,data/crawl/collectd/old_hunk_306.cpp,data/crawl/collectd/new_hunk_306.cpp,[],"[6, 13, 20, 27, 35]"
https://github.com/collectd/collectd/commit/8d6c9e224c4a719b6cec6f13c27c8e1e3bdff0d8,11 Oct 2009,"Added python plugin.

It adds a ""collectd"" module to the embedded python interpreter
which contains a ""register_config"" method to register config
callbacks and ""Config"" class which contains a config item.",336,data/crawl/collectd/hunk_307.cpp,,,data/crawl/collectd/old_hunk_307.cpp,data/crawl/collectd/new_hunk_307.cpp,[],"[157, 166]"
https://github.com/collectd/collectd/commit/5b5fff5bbdc5515d7f4c2a01df47373f4ac44847,30 Sep 2009,"unixsock plugin: Fix a (well hidden) race condition.

Within the client handling thread, fdopen is called twice on the file
descriptor passed to the thread. Later those file handles are closed like:

  fclose (fhin);
  fclose (fhout);

This is a race condition, because the first call to fclose will close the file
descriptor. The second call to fclose will try the same. Usually, it would fail
silently and all is well. On a busy machine, however, another thread may just
have opened a file or accepted a socket. In that case an arbitrary file
descriptor is closed. If the file descriptor is opened yet again fast enough,
data may even end up in a totally wrong location.

As a work-around the file descriptor is not dup'ed so each fdopen operates on
its own file descriptor. As an alternative the ""r+"" mode and a single file
handle may be suitable, too.

Many thanks to Sven Trenkel for pointing me into the right directioin :)",34,data/crawl/collectd/hunk_308.cpp,,,data/crawl/collectd/old_hunk_308.cpp,data/crawl/collectd/new_hunk_308.cpp,[],[5]
https://github.com/collectd/collectd/commit/41ddd132cde95c42a7efb6832b8b1c8d8831dc83,24 Sep 2009,netapp plugin: collect_perf_system_data: Use the submit functions.,155,data/crawl/collectd/hunk_309.cpp,,,data/crawl/collectd/old_hunk_309.cpp,data/crawl/collectd/new_hunk_309.cpp,[90],[]
https://github.com/collectd/collectd/commit/04a38278e1194016d9cc5f0931c54b83ba7ad3c8,23 Sep 2009,netapp plugin: Convert C++-style comments to C-style comments.,48,data/crawl/collectd/hunk_310.cpp,,,data/crawl/collectd/old_hunk_310.cpp,data/crawl/collectd/new_hunk_310.cpp,[3],[3]
https://github.com/collectd/collectd/commit/235e731905fc81a379ba7ba0717dd96a69ac2737,23 Sep 2009,"netapp plugin: New plugin to collect statistics from NetApp filers.

Moin,

ich wollts ja eigentlich letzte Woche schon geschickt haben, aber hier ists
nun doch noch: Das collectd netapp Plugin. Es ist noch einiges an doppeltem
Code vorhanden, er ist noch nicht schön und der Configurationscode ist noch
nicht in der angemessenen Ausführlichkeit getestet, aber zumindest hier bei
mir funktioniert jetzt alles und ist voll konfiguriertbar.

Kompilieren tut ich das Ganze so:
gcc -g -c -Wall -I include -I /home/ifst/collectd-4.4.2/src netapp.c
gcc -g -o netapp.so -lnetapp -lxml -lpthread -ladt -lssl -lm -shared netapp.o

Mit freundlichen Grüßen

Sven Trenkel",1489,data/crawl/collectd/hunk_311.cpp,,,data/crawl/collectd/old_hunk_311.cpp,data/crawl/collectd/new_hunk_311.cpp,[],[613]
https://github.com/collectd/collectd/commit/f4dbf81c3905ad55805a4c8bf7362e2594c7ec98,06 Sep 2009,"unixsock plugin: Implement the “GETTHRESHOLD” command.

Example session:
 -> GETTHRESHOLD ""leeloo.lan.home.verplant.org/cpu-3/cpu-idle""
 <- 6 Threshold found
 <- Type: cpu
 <- Type Instance: idle
 <- Warning Min: 5
 <- Warning Max: 100
 <- Failure Min: 1
 <- Failure Max: 120",215,data/crawl/collectd/hunk_312.cpp,,,data/crawl/collectd/old_hunk_312.cpp,data/crawl/collectd/new_hunk_312.cpp,[],[30]
https://github.com/collectd/collectd/commit/6fc85b952084c71e040bec17740b2811c5574f01,21 Aug 2009,http plugin: Remove some debugging info,8,data/crawl/collectd/hunk_313.cpp,,,data/crawl/collectd/old_hunk_313.cpp,data/crawl/collectd/new_hunk_313.cpp,"[3, 4, 5]",[]
https://github.com/collectd/collectd/commit/6fc85b952084c71e040bec17740b2811c5574f01,21 Aug 2009,http plugin: Remove some debugging info,8,data/crawl/collectd/hunk_314.cpp,,,data/crawl/collectd/old_hunk_314.cpp,data/crawl/collectd/new_hunk_314.cpp,"[3, 4, 5]",[]
https://github.com/collectd/collectd/commit/c5f030fa12d743cbcf9d2d53f06e1621faa3a32d,21 Aug 2009,http plugin: POST when a 4K buffer is nearly full,67,data/crawl/collectd/hunk_315.cpp,,,data/crawl/collectd/old_hunk_315.cpp,data/crawl/collectd/new_hunk_315.cpp,[],"[12, 13, 14]"
https://github.com/collectd/collectd/commit/c5f030fa12d743cbcf9d2d53f06e1621faa3a32d,21 Aug 2009,http plugin: POST when a 4K buffer is nearly full,67,data/crawl/collectd/hunk_316.cpp,,,data/crawl/collectd/old_hunk_316.cpp,data/crawl/collectd/new_hunk_316.cpp,[10],"[10, 11, 12]"
https://github.com/collectd/collectd/commit/968d1bd9a97944a52820b6d542089765b59f9bf2,21 Aug 2009,http plugin: Separate values into multiple lines,106,data/crawl/collectd/hunk_317.cpp,,,data/crawl/collectd/old_hunk_317.cpp,data/crawl/collectd/new_hunk_317.cpp,[],[47]
https://github.com/collectd/collectd/commit/2b9ba6a970b33397dc3b58b22b4c84e39ab53378,21 Aug 2009,"http plugin: it works, i think",119,data/crawl/collectd/hunk_318.cpp,,,data/crawl/collectd/old_hunk_318.cpp,data/crawl/collectd/new_hunk_318.cpp,[3],[]
https://github.com/collectd/collectd/commit/86928d3feaa0ba8f85dc3cbe0d3c34219d201a33,21 Aug 2009,http plugin: Start in http plugin that can output csv to stdout,252,data/crawl/collectd/hunk_319.cpp,,,data/crawl/collectd/old_hunk_319.cpp,data/crawl/collectd/new_hunk_319.cpp,[],[230]
https://github.com/collectd/collectd/commit/d278a40cab2bcb6bb0387176d087ce13cd3e843b,18 Aug 2009,rrdtool plugin: Optimize away the ‘random_timeout_mod’ variable.,37,data/crawl/collectd/hunk_320.cpp,,,data/crawl/collectd/old_hunk_320.cpp,data/crawl/collectd/new_hunk_320.cpp,[6],[8]
https://github.com/collectd/collectd/commit/fd48357ddeb1b58d5795015e845f3105a7ba3103,17 Aug 2009,"Random write timeout for rrdtool plugin

Hi,

i was thinking how to ""spread out"" writes to rrd files a bit, because
now its big spike every CacheTimeout or little smaller ""square"" on
graph if u use WritesPerSecond. So ive written little patch which
""spreads out"" writing by changing Cache timeout every time rrdtool
plugin finds data to save. Basically instead of moving data older than
CacheTimeout to write queue it moves it if its older than CacheTimeout
+- RandomTimeout. What it changes?

Without it, gathered data is ""synchronised"" with eachother, for
example (CacheTimeout = 600):
1.collectd starts
2. after 10 minutes, data from all plugins get ""too old"" and get
pushed into write queue and get saved
3. after another 10 minutes, same thing, all data ""ages"" at same time
and get saved in one big chunk

With it (RandomTimeout=300) it works like that
1. collectd starts
2. after 5 minutes some data (lets call it A) starts to go into write queue
3. after 10 minutes from start about 50% (on average) data is saved
(lets call it B)
4. finally, after 15 minutes, all ""leftover"" data gets saved (lets call it C)
5. next ""cycle""
6. data A ages first (cos it was put to disk first) and like before,
some of it gets writen earlier, some of it gets written later)
7. after that data B ages and like before writes are spread over 10 mins
8. same with C

so first cycle (looking at i/o) looks like sinus, next 10 minute cycle
is same sinus but flattened a bit and so on (looks like fading sinus),
and after few cycles it gives pretty much same amount on writes per
sec, no ugly spikes.
Effect looks like that:
http://img24.imageshack.us/img24/7294/drrawcgi.png
(after few more h it will be more ""smooth"")

Regards
Mariusz

Signed-off-by: Florian Forster <octo@huhu.verplant.org>",21,data/crawl/collectd/hunk_321.cpp,,,data/crawl/collectd/old_hunk_321.cpp,data/crawl/collectd/new_hunk_321.cpp,[],[8]
https://github.com/collectd/collectd/commit/7fb680ede5c3190a2cd1e87a4062c0d5023d15c0,22 May 2009,"olsrd plugin: Send a line to the daemon, so it answers.",3,data/crawl/collectd/hunk_322.cpp,,,data/crawl/collectd/old_hunk_322.cpp,data/crawl/collectd/new_hunk_322.cpp,[],[3]
https://github.com/collectd/collectd/commit/f8b596a3e11e7afe2b69e72008d8e1de5d9fbc64,01 May 2009,"fscache plugin: Add new plugin for Linux' file-system based caching framework.

Tried to submit the patch via ""git send-mail"" but I don't think it worked if
you already have the patch disregard the attachment.

Looking forward to your feedback, I am sure there are a few issues its been a
few years since I programmed in C. I have been running this in my test lab at
work for a few days now with no issues.

With 62 metrics I would like to modify the code to group them by their
classification and possibly add configuration support. If the changes are
finished this weekend is it ok to send an updated patch?

Thanks
Edward

Signed-off-by: Edward ""Koko"" Konetzko <konetzed@quixoticagony.com>
Signed-off-by: Florian Forster <octo@leeloo.lan.home.verplant.org>",238,data/crawl/collectd/hunk_323.cpp,,,data/crawl/collectd/old_hunk_323.cpp,data/crawl/collectd/new_hunk_323.cpp,[],[214]
https://github.com/collectd/collectd/commit/d1e62aa4497458ed86d20f5ef1b6c00d50596da0,23 Apr 2009,"php-collection: add basic support for meta-selections

Add support for new meta selections allowing addition of graphs
with wildcard behavior.
This adds support for @all selection which matches any values
for the given identifier part.
In addition those types for which meta graphs exist now also list the
individual type instances in addition to the meta graph key for separate
graphing.

In order to support such new groups the lookup code has been refactored
to use a single scanning function which recursively traveses the
collectd RRD output directory for hosts, plugins, types and passing the
discovered data to callback functions for use. The callbacks returns
true to indicate traversal should continue on to next depth level and
false to tell it to continue with next element.
e.g. true on a host means it should look for plugins for given host,
false to continue with next host.

Signed-off-by: Florian Forster <octo@huhu.verplant.org>",458,data/crawl/collectd/hunk_324.cpp,,,data/crawl/collectd/old_hunk_324.cpp,data/crawl/collectd/new_hunk_324.cpp,[],"[8, 11]"
https://github.com/collectd/collectd/commit/1f80f30f3eace7f9917d04ac12f63c765475d00c,23 Apr 2009,"php-collection: New graph toolbox

This patch creates a new toolbox which can be show on a per-graph base
by clicking on a graph.

This box allows changing the displayed period of the selected graph
as well as toggle the logarithmic scale and legend details flags.

The graph reordering, refresh and delete tools have been moved from
right graph edge to this new toolbox.

Signed-off-by: Florian Forster <octo@huhu.verplant.org>",250,data/crawl/collectd/hunk_325.cpp,,,data/crawl/collectd/old_hunk_325.cpp,data/crawl/collectd/new_hunk_325.cpp,[],[8]
https://github.com/collectd/collectd/commit/0f60795bc1b2b409ba5eb132975714de8d0cec89,07 Apr 2009,"src/liboping: Remove the shipped version of the ‘oping’ library.

There's no real reason for this special handling, since liboping is
developed separately now.",1831,data/crawl/collectd/hunk_326.cpp,,,data/crawl/collectd/old_hunk_326.cpp,data/crawl/collectd/new_hunk_326.cpp,[90],[]
https://github.com/collectd/collectd/commit/cc5c9640e4e5b766473e227d38ee24c123d9bea6,17 Mar 2009,"configfile, types_list: Improved error messages when handling ""TypesDB"".",13,data/crawl/collectd/hunk_327.cpp,,,data/crawl/collectd/old_hunk_327.cpp,data/crawl/collectd/new_hunk_327.cpp,[],[3]
https://github.com/collectd/collectd/commit/dd34a5b4e62b2fb9b60377d0c5da2f2bc2ef4532,12 Mar 2009,src/liboping/test_liboping.c: Remove legacy file.,59,data/crawl/collectd/hunk_328.cpp,,,data/crawl/collectd/old_hunk_328.cpp,data/crawl/collectd/new_hunk_328.cpp,"[14, 20, 26, 30, 39, 51]",[]
https://github.com/collectd/collectd/commit/5f19536990c9e5043c17ed2278b331102de88594,22 Feb 2009,java plugin: Expose `plugin_log' to Java plugins.,83,data/crawl/collectd/hunk_329.cpp,,,data/crawl/collectd/old_hunk_329.cpp,data/crawl/collectd/new_hunk_329.cpp,[],[15]
https://github.com/collectd/collectd/commit/5f19536990c9e5043c17ed2278b331102de88594,22 Feb 2009,java plugin: Expose `plugin_log' to Java plugins.,83,data/crawl/collectd/hunk_330.cpp,,,data/crawl/collectd/old_hunk_330.cpp,data/crawl/collectd/new_hunk_330.cpp,[],[20]
https://github.com/collectd/collectd/commit/08d2e13121e70afcf65d3925a16b4c8a6f41c915,18 Feb 2009,"src/liboconfig/oconfig.[ch]: Add `oconfig_clone'.

This new function clones an entire sub-tree, that can be free'd again
using `oconfig_free'.",98,data/crawl/collectd/hunk_331.cpp,,,data/crawl/collectd/old_hunk_331.cpp,data/crawl/collectd/new_hunk_331.cpp,[],"[10, 21, 34, 50, 70]"
https://github.com/collectd/collectd/commit/49f55f7f02eeb1b9ef72703d7f5cbb7cde202415,16 Feb 2009,collectd.conf(5): Add documentation for the `notify_email' plugin.,55,data/crawl/collectd/hunk_332.cpp,,,data/crawl/collectd/old_hunk_332.cpp,data/crawl/collectd/new_hunk_332.cpp,[],[50]
https://github.com/collectd/collectd/commit/a019b6c8144745db63c599680bd693ac02f11666,10 Feb 2009,"contrib/php-collection: Add a PHP frontend for graph generation.

Hi,

Attached is a patch with a set of PHP files for a complete graphing
environment for collectd-generated RRDs.
Before generating a graph with rrdtool it can tell collectd to flush
the RRDs that are about to be used.

The interface is built with dynamic HTML.
It provides following options:
 - host selection
 -> plugin selection
 --> plugin instance selection
 ---> type selection
 ----> type instance selection (or meta graph)
 - linear / logarithmic Y-scale
 - verbose / minimal legend
 - [Add Graph] [Remove all Graphs] [Refresh Graphs]
For each displayed graph:
 - Move above previous graph
 - Refresh graph
 - Remove graph
 - Move below following graph

I tested on following browsers:
- Firefox-3.0
- Safari-3.2 (Win32)
- Konqueror (KDE-4.1.3)
- Webkit (webkit-gtk-0_p40220)
- Internet Explorer (6, 7, 8rc - CSS layout issues with <8)

Dependencies:
- PHP-5 (might run with PHP-4)
  > GD suport for error images
  > Ability to execute rrdtool binary
  > Unix socket for FLUSH support
- RRDTool (rrdtool graph, rrdtool info)

TODO: complete/improve graph definitions in definitions.php
 though there is code to generate basic graph for any RRD of
 unknown type, so definitions are rather a matter of color,
 DS combination and stacking.

Bruno

File listing with short description:
- config.php
  (configuration)
- functions.php
  (common functions)
- definitions.php
  (graph definitions for most? types from types.db
   - based on collection.cgi)
- definitions.local.php
  (place for site-local graph definitions, e.g. for
   unixsock, tail, snmp generated RRDs)
- index.php
  (main page)
- graph.php
  (page returning the graph's PNG image)
- browser.js
  (whole bunch of Javascript logic to show/hide/update graphs)

Not included are a few images:
- collectd-logo.png
  (16x16, e.g. use collectd.org's favicon)
- favicon.png
  (e.g. use the one in share/collection*)
- refresh.png
- move-up.png
- move-down.png
- delete.png
  (16x16 take matching ones from your system's action-icons)",3809,data/crawl/collectd/hunk_333.cpp,,,data/crawl/collectd/old_hunk_333.cpp,data/crawl/collectd/new_hunk_333.cpp,[],[195]
https://github.com/collectd/collectd/commit/a019b6c8144745db63c599680bd693ac02f11666,10 Feb 2009,"contrib/php-collection: Add a PHP frontend for graph generation.

Hi,

Attached is a patch with a set of PHP files for a complete graphing
environment for collectd-generated RRDs.
Before generating a graph with rrdtool it can tell collectd to flush
the RRDs that are about to be used.

The interface is built with dynamic HTML.
It provides following options:
 - host selection
 -> plugin selection
 --> plugin instance selection
 ---> type selection
 ----> type instance selection (or meta graph)
 - linear / logarithmic Y-scale
 - verbose / minimal legend
 - [Add Graph] [Remove all Graphs] [Refresh Graphs]
For each displayed graph:
 - Move above previous graph
 - Refresh graph
 - Remove graph
 - Move below following graph

I tested on following browsers:
- Firefox-3.0
- Safari-3.2 (Win32)
- Konqueror (KDE-4.1.3)
- Webkit (webkit-gtk-0_p40220)
- Internet Explorer (6, 7, 8rc - CSS layout issues with <8)

Dependencies:
- PHP-5 (might run with PHP-4)
  > GD suport for error images
  > Ability to execute rrdtool binary
  > Unix socket for FLUSH support
- RRDTool (rrdtool graph, rrdtool info)

TODO: complete/improve graph definitions in definitions.php
 though there is code to generate basic graph for any RRD of
 unknown type, so definitions are rather a matter of color,
 DS combination and stacking.

Bruno

File listing with short description:
- config.php
  (configuration)
- functions.php
  (common functions)
- definitions.php
  (graph definitions for most? types from types.db
   - based on collection.cgi)
- definitions.local.php
  (place for site-local graph definitions, e.g. for
   unixsock, tail, snmp generated RRDs)
- index.php
  (main page)
- graph.php
  (page returning the graph's PNG image)
- browser.js
  (whole bunch of Javascript logic to show/hide/update graphs)

Not included are a few images:
- collectd-logo.png
  (16x16, e.g. use collectd.org's favicon)
- favicon.png
  (e.g. use the one in share/collection*)
- refresh.png
- move-up.png
- move-down.png
- delete.png
  (16x16 take matching ones from your system's action-icons)",3809,data/crawl/collectd/hunk_334.cpp,,,data/crawl/collectd/old_hunk_334.cpp,data/crawl/collectd/new_hunk_334.cpp,[],"[33, 36, 128]"
https://github.com/collectd/collectd/commit/f950fcd91292616b3c4d98cbc4f44e0b4f781d8b,17 Jan 2009,"csv plugin: Make it possible to write values to STDOUT.

Signed-off-by: Doug MacEachern <dougm@hyperic.com>
Signed-off-by: Florian Forster <octo@leeloo.lan.home.verplant.org>",22,data/crawl/collectd/hunk_335.cpp,,,data/crawl/collectd/old_hunk_335.cpp,data/crawl/collectd/new_hunk_335.cpp,[],[5]
https://github.com/collectd/collectd/commit/f5edd182195cb7a13fa32846ae869a8b8dcc1e3f,19 Dec 2008,"Do not use *printf() to report errors / debugging messages.

The only exception to that is during configuration (which is done before
daemonization) to let the user know about problems immediately.",29,data/crawl/collectd/hunk_336.cpp,,,data/crawl/collectd/old_hunk_336.cpp,data/crawl/collectd/new_hunk_336.cpp,"[3, 8]",[]
https://github.com/collectd/collectd/commit/f5edd182195cb7a13fa32846ae869a8b8dcc1e3f,19 Dec 2008,"Do not use *printf() to report errors / debugging messages.

The only exception to that is during configuration (which is done before
daemonization) to let the user know about problems immediately.",29,data/crawl/collectd/hunk_337.cpp,,,data/crawl/collectd/old_hunk_337.cpp,data/crawl/collectd/new_hunk_337.cpp,"[0, 6]","[0, 9]"
https://github.com/collectd/collectd/commit/f5edd182195cb7a13fa32846ae869a8b8dcc1e3f,19 Dec 2008,"Do not use *printf() to report errors / debugging messages.

The only exception to that is during configuration (which is done before
daemonization) to let the user know about problems immediately.",29,data/crawl/collectd/hunk_338.cpp,,,data/crawl/collectd/old_hunk_338.cpp,data/crawl/collectd/new_hunk_338.cpp,[3],[]
https://github.com/collectd/collectd/commit/f5edd182195cb7a13fa32846ae869a8b8dcc1e3f,19 Dec 2008,"Do not use *printf() to report errors / debugging messages.

The only exception to that is during configuration (which is done before
daemonization) to let the user know about problems immediately.",29,data/crawl/collectd/hunk_339.cpp,,,data/crawl/collectd/old_hunk_339.cpp,data/crawl/collectd/new_hunk_339.cpp,[3],[]
https://github.com/collectd/collectd/commit/f5edd182195cb7a13fa32846ae869a8b8dcc1e3f,19 Dec 2008,"Do not use *printf() to report errors / debugging messages.

The only exception to that is during configuration (which is done before
daemonization) to let the user know about problems immediately.",29,data/crawl/collectd/hunk_340.cpp,,,data/crawl/collectd/old_hunk_340.cpp,data/crawl/collectd/new_hunk_340.cpp,[1],[1]
https://github.com/collectd/collectd/commit/f5edd182195cb7a13fa32846ae869a8b8dcc1e3f,19 Dec 2008,"Do not use *printf() to report errors / debugging messages.

The only exception to that is during configuration (which is done before
daemonization) to let the user know about problems immediately.",29,data/crawl/collectd/hunk_341.cpp,,,data/crawl/collectd/old_hunk_341.cpp,data/crawl/collectd/new_hunk_341.cpp,[1],[1]
https://github.com/collectd/collectd/commit/f5edd182195cb7a13fa32846ae869a8b8dcc1e3f,19 Dec 2008,"Do not use *printf() to report errors / debugging messages.

The only exception to that is during configuration (which is done before
daemonization) to let the user know about problems immediately.",29,data/crawl/collectd/hunk_342.cpp,,,data/crawl/collectd/old_hunk_342.cpp,data/crawl/collectd/new_hunk_342.cpp,[1],[1]
https://github.com/collectd/collectd/commit/f5edd182195cb7a13fa32846ae869a8b8dcc1e3f,19 Dec 2008,"Do not use *printf() to report errors / debugging messages.

The only exception to that is during configuration (which is done before
daemonization) to let the user know about problems immediately.",29,data/crawl/collectd/hunk_343.cpp,,,data/crawl/collectd/old_hunk_343.cpp,data/crawl/collectd/new_hunk_343.cpp,[2],[2]
https://github.com/collectd/collectd/commit/f5edd182195cb7a13fa32846ae869a8b8dcc1e3f,19 Dec 2008,"Do not use *printf() to report errors / debugging messages.

The only exception to that is during configuration (which is done before
daemonization) to let the user know about problems immediately.",29,data/crawl/collectd/hunk_344.cpp,,,data/crawl/collectd/old_hunk_344.cpp,data/crawl/collectd/new_hunk_344.cpp,[1],[1]
https://github.com/collectd/collectd/commit/f5edd182195cb7a13fa32846ae869a8b8dcc1e3f,19 Dec 2008,"Do not use *printf() to report errors / debugging messages.

The only exception to that is during configuration (which is done before
daemonization) to let the user know about problems immediately.",29,data/crawl/collectd/hunk_345.cpp,,,data/crawl/collectd/old_hunk_345.cpp,data/crawl/collectd/new_hunk_345.cpp,[3],[]
https://github.com/collectd/collectd/commit/f5edd182195cb7a13fa32846ae869a8b8dcc1e3f,19 Dec 2008,"Do not use *printf() to report errors / debugging messages.

The only exception to that is during configuration (which is done before
daemonization) to let the user know about problems immediately.",29,data/crawl/collectd/hunk_346.cpp,,,data/crawl/collectd/old_hunk_346.cpp,data/crawl/collectd/new_hunk_346.cpp,[3],[]
https://github.com/collectd/collectd/commit/f5edd182195cb7a13fa32846ae869a8b8dcc1e3f,19 Dec 2008,"Do not use *printf() to report errors / debugging messages.

The only exception to that is during configuration (which is done before
daemonization) to let the user know about problems immediately.",29,data/crawl/collectd/hunk_347.cpp,,,data/crawl/collectd/old_hunk_347.cpp,data/crawl/collectd/new_hunk_347.cpp,[3],[]
https://github.com/collectd/collectd/commit/bc86995088a08d4d355517dd78d3d2b2027bc338,09 Dec 2008,collectd-nagios: Be more verbose before bailing out with usage().,7,data/crawl/collectd/hunk_348.cpp,,,data/crawl/collectd/old_hunk_348.cpp,data/crawl/collectd/new_hunk_348.cpp,[],[4]
https://github.com/collectd/collectd/commit/bc86995088a08d4d355517dd78d3d2b2027bc338,09 Dec 2008,collectd-nagios: Be more verbose before bailing out with usage().,7,data/crawl/collectd/hunk_349.cpp,,,data/crawl/collectd/old_hunk_349.cpp,data/crawl/collectd/new_hunk_349.cpp,[],[4]
https://github.com/collectd/collectd/commit/2ca211b327b5e1689937a93ac6a4d0b9754d3627,09 Dec 2008,"collectd-nagios: Generalized the ""percentage"" consolidation function.

Calculation of the percentage is not limited to two values any more but an
arbitrary number may be used now. This allows a more flexible usage.

Also, the documentation has been updated.",61,data/crawl/collectd/hunk_350.cpp,,,data/crawl/collectd/old_hunk_350.cpp,data/crawl/collectd/new_hunk_350.cpp,"[17, 19, 23, 28, 32]","[15, 25, 47, 49]"
https://github.com/collectd/collectd/commit/d324b71f4a80712261490d2c98bcca22a147c6c8,09 Dec 2008,"collectd-nagios: add new ""percentage"" aggregate function.

the percentage aggregate function takes exactly two values. it
computes the percentage of the first value versus the sum of the first
and the second value. very useful for checking df values like:

sudo collectd-nagios -s /var/run/collectd-unixsock -H localhost -n df/df-root -d used -d free -g percentage -w 20: -c 10:

which will warn if there is less than 20% free space.

Signed-off-by: Sebastian Harl <sh@tokkee.org>",38,data/crawl/collectd/hunk_351.cpp,,,data/crawl/collectd/old_hunk_351.cpp,data/crawl/collectd/new_hunk_351.cpp,[],"[17, 19, 23, 28, 32]"
https://github.com/collectd/collectd/commit/cd3a0c6f7928a34da21f670f627e8e8a21943546,09 Dec 2008,"collectd-nagios: If DSs are specified, sort the values accordingly.

If a user specifies DSs on the command line, the order or the values might
matter (e.g. when using the upcoming ""percentage"" consolidation function). So,
in this case we now order the values according to the order of the specified
DSs.

This patch replaces the function ignore_ds() with filter_ds() which is called
once in do_check(). This removes the need to check for ignored values in all
consolidation function implementations.",90,data/crawl/collectd/hunk_352.cpp,,,data/crawl/collectd/old_hunk_352.cpp,data/crawl/collectd/new_hunk_352.cpp,[],"[17, 24, 37, 51]"
https://github.com/collectd/collectd/commit/67a926821b3b6e39d9fd5e1c10b5a2d0ecdd237a,06 Dec 2008,"perl plugin, utils_complain: Fixed errors identified by -Wformat-security.

A few ""format not a string literal and no format arguments"" errors have been
fixed by using ""%s"" as the format argument.

Thanks to Kevin (onebinary) for reporting this.",6,data/crawl/collectd/hunk_353.cpp,,,data/crawl/collectd/old_hunk_353.cpp,data/crawl/collectd/new_hunk_353.cpp,[3],[3]
https://github.com/collectd/collectd/commit/67a926821b3b6e39d9fd5e1c10b5a2d0ecdd237a,06 Dec 2008,"perl plugin, utils_complain: Fixed errors identified by -Wformat-security.

A few ""format not a string literal and no format arguments"" errors have been
fixed by using ""%s"" as the format argument.

Thanks to Kevin (onebinary) for reporting this.",6,data/crawl/collectd/hunk_354.cpp,,,data/crawl/collectd/old_hunk_354.cpp,data/crawl/collectd/new_hunk_354.cpp,[3],[3]
https://github.com/collectd/collectd/commit/67a926821b3b6e39d9fd5e1c10b5a2d0ecdd237a,06 Dec 2008,"perl plugin, utils_complain: Fixed errors identified by -Wformat-security.

A few ""format not a string literal and no format arguments"" errors have been
fixed by using ""%s"" as the format argument.

Thanks to Kevin (onebinary) for reporting this.",6,data/crawl/collectd/hunk_355.cpp,,,data/crawl/collectd/old_hunk_355.cpp,data/crawl/collectd/new_hunk_355.cpp,[3],[3]
https://github.com/collectd/collectd/commit/05a85bbebdef9f8e7c1b0c09d5a2145c2f2d10af,02 Dec 2008,"src/plugin.[ch]: Don't use unnamed unions.

They're non-standard and cause a lot of trouble.",48,data/crawl/collectd/hunk_356.cpp,,,data/crawl/collectd/old_hunk_356.cpp,data/crawl/collectd/new_hunk_356.cpp,"[3, 5, 7, 9, 11, 15]","[3, 5, 7, 9, 11, 15]"
https://github.com/collectd/collectd/commit/d1125cb9d1bbe3bd77f90366bf64b44904f69e54,08 Nov 2008,"collectd-nagios: Use `libcollectdclient' and various improvements.

The improvements include:
- Copyright and license header.
- More consistent output.
- Frees some more memory that was allocated..
- Better standards compliance.
- Make all functions `static' (except `main', of course).
- Use `%g' instead of `%lf' to print floating point values.",416,data/crawl/collectd/hunk_357.cpp,,,data/crawl/collectd/old_hunk_357.cpp,data/crawl/collectd/new_hunk_357.cpp,"[24, 37, 45, 54, 60, 65, 86, 94, 116, 130, 138]",[]
https://github.com/collectd/collectd/commit/d1125cb9d1bbe3bd77f90366bf64b44904f69e54,08 Nov 2008,"collectd-nagios: Use `libcollectdclient' and various improvements.

The improvements include:
- Copyright and license header.
- More consistent output.
- Frees some more memory that was allocated..
- Better standards compliance.
- Make all functions `static' (except `main', of course).
- Use `%g' instead of `%lf' to print floating point values.",416,data/crawl/collectd/hunk_358.cpp,,,data/crawl/collectd/old_hunk_358.cpp,data/crawl/collectd/new_hunk_358.cpp,"[3, 7, 9, 11]","[5, 24, 28, 30, 32]"
https://github.com/collectd/collectd/commit/d1125cb9d1bbe3bd77f90366bf64b44904f69e54,08 Nov 2008,"collectd-nagios: Use `libcollectdclient' and various improvements.

The improvements include:
- Copyright and license header.
- More consistent output.
- Frees some more memory that was allocated..
- Better standards compliance.
- Make all functions `static' (except `main', of course).
- Use `%g' instead of `%lf' to print floating point values.",416,data/crawl/collectd/hunk_359.cpp,,,data/crawl/collectd/old_hunk_359.cpp,data/crawl/collectd/new_hunk_359.cpp,"[6, 8]","[4, 26, 28, 29]"
https://github.com/collectd/collectd/commit/d1125cb9d1bbe3bd77f90366bf64b44904f69e54,08 Nov 2008,"collectd-nagios: Use `libcollectdclient' and various improvements.

The improvements include:
- Copyright and license header.
- More consistent output.
- Frees some more memory that was allocated..
- Better standards compliance.
- Make all functions `static' (except `main', of course).
- Use `%g' instead of `%lf' to print floating point values.",416,data/crawl/collectd/hunk_360.cpp,,,data/crawl/collectd/old_hunk_360.cpp,data/crawl/collectd/new_hunk_360.cpp,"[3, 8, 13, 28]","[17, 19, 20, 48, 57, 67]"
https://github.com/collectd/collectd/commit/d1125cb9d1bbe3bd77f90366bf64b44904f69e54,08 Nov 2008,"collectd-nagios: Use `libcollectdclient' and various improvements.

The improvements include:
- Copyright and license header.
- More consistent output.
- Frees some more memory that was allocated..
- Better standards compliance.
- Make all functions `static' (except `main', of course).
- Use `%g' instead of `%lf' to print floating point values.",416,data/crawl/collectd/hunk_361.cpp,,,data/crawl/collectd/old_hunk_361.cpp,data/crawl/collectd/new_hunk_361.cpp,[6],[6]
https://github.com/collectd/collectd/commit/2090dc52cf05a0b05e5d31f1f47737a2be4006e5,08 Nov 2008,src/libcollectdclient: Add a library which abstracts talking to the `unixsock' plugin.,987,data/crawl/collectd/hunk_362.cpp,,,data/crawl/collectd/old_hunk_362.cpp,data/crawl/collectd/new_hunk_362.cpp,[],"[74, 207]"
https://github.com/collectd/collectd/commit/953bd0f881faa40c415a1f1a9d7e2da739d343ff,06 Oct 2008,"src/collectd-nagios.c: Improve handling of lines returned from `GETVAL'.

Then selecting only certain data sources with the `-d' option, the program
would try to read more lines from the server than the server reports, resulting
in the communication never finishing.

This patch resolves that problem and introduces a couple other error handling
blocks.

Thanks to Fabian Linzberger for pointing this out.",54,data/crawl/collectd/hunk_363.cpp,,,data/crawl/collectd/old_hunk_363.cpp,data/crawl/collectd/new_hunk_363.cpp,[],"[20, 34, 42]"
https://github.com/collectd/collectd/commit/2e12aacc24a6765c17c2fc0e5909d2138c3a6114,03 Oct 2008,"libiptc: Updated from version 1.4.0 to 1.4.1.1.

This brings the library in sync with the latest stable upstream release. Now,
libiptc.c:standard_target_map() is declared static in the upstream sources, so
we no longer need to modify that ourselves.

The update includes, amongst others, fixes for a build failure with glibc 2.8,
some compiler warnings, an incorrect ruleset dump (netfilter issue #104) and a
scalability issue for chain list ""name"" searching.

Signed-off-by: Sebastian Harl <sh@tokkee.org>
Signed-off-by: Florian Forster <octo@huhu.verplant.org>",488,data/crawl/collectd/hunk_364.cpp,,,data/crawl/collectd/old_hunk_364.cpp,data/crawl/collectd/new_hunk_364.cpp,[],[4]
https://github.com/collectd/collectd/commit/2e12aacc24a6765c17c2fc0e5909d2138c3a6114,03 Oct 2008,"libiptc: Updated from version 1.4.0 to 1.4.1.1.

This brings the library in sync with the latest stable upstream release. Now,
libiptc.c:standard_target_map() is declared static in the upstream sources, so
we no longer need to modify that ourselves.

The update includes, amongst others, fixes for a build failure with glibc 2.8,
some compiler warnings, an incorrect ruleset dump (netfilter issue #104) and a
scalability issue for chain list ""name"" searching.

Signed-off-by: Sebastian Harl <sh@tokkee.org>
Signed-off-by: Florian Forster <octo@huhu.verplant.org>",488,data/crawl/collectd/hunk_365.cpp,,,data/crawl/collectd/old_hunk_365.cpp,data/crawl/collectd/new_hunk_365.cpp,[],"[69, 189]"
https://github.com/collectd/collectd/commit/2e12aacc24a6765c17c2fc0e5909d2138c3a6114,03 Oct 2008,"libiptc: Updated from version 1.4.0 to 1.4.1.1.

This brings the library in sync with the latest stable upstream release. Now,
libiptc.c:standard_target_map() is declared static in the upstream sources, so
we no longer need to modify that ourselves.

The update includes, amongst others, fixes for a build failure with glibc 2.8,
some compiler warnings, an incorrect ruleset dump (netfilter issue #104) and a
scalability issue for chain list ""name"" searching.

Signed-off-by: Sebastian Harl <sh@tokkee.org>
Signed-off-by: Florian Forster <octo@huhu.verplant.org>",488,data/crawl/collectd/hunk_366.cpp,,,data/crawl/collectd/old_hunk_366.cpp,data/crawl/collectd/new_hunk_366.cpp,"[2, 4, 5]","[2, 4, 5]"
https://github.com/collectd/collectd/commit/5b8102adb3d8d11a9c1e02081cc228101de80064,27 Aug 2008,onewire plugin: Imported the code for DS2409 hubs.,95,data/crawl/collectd/hunk_367.cpp,,,data/crawl/collectd/old_hunk_367.cpp,data/crawl/collectd/new_hunk_367.cpp,"[19, 32]",[]
https://github.com/collectd/collectd/commit/ea90b50563a778907ea83ca031b7253905947798,22 Aug 2008,"rrdtool plugin: Implemented the `WritesPerSecond' option.

This option lets you slow down the `queue thread' within the rrdtool
plugin, so that the system stays responsive while writing all values
to disk. When FLUSH'ing values and during shutdown this limit is not
in effect.",277,data/crawl/collectd/hunk_368.cpp,,,data/crawl/collectd/old_hunk_368.cpp,data/crawl/collectd/new_hunk_368.cpp,[],[9]
https://github.com/collectd/collectd/commit/3c4034226f6b8dd9846fa52903f93fa17f868e25,21 Aug 2008,src/plugin.c: Include the shared object when reporting errors with `lt_dlopen'.,6,data/crawl/collectd/hunk_369.cpp,,,data/crawl/collectd/old_hunk_369.cpp,data/crawl/collectd/new_hunk_369.cpp,[4],[4]
https://github.com/collectd/collectd/commit/11ba6e7c5a57c9bb73f389cfaf79b50b56b7544f,23 Jul 2008,"onewire plugin: Add a plugin to read onewire sensors.

This plugin allows to read _temperature_ sensors connected over a
onewire bus using the `owcapi' library from the `owfs' project. Other
sensors can be added easily, but without hardware to test this it's
kind of hard to be sure it all works.

ToDo's: Document the plugin, make the `Alias' configuration option work.",365,data/crawl/collectd/hunk_370.cpp,,,data/crawl/collectd/old_hunk_370.cpp,data/crawl/collectd/new_hunk_370.cpp,[],"[269, 282]"
https://github.com/collectd/collectd/commit/56322d3b2ef2502ec52bf3633c6e808b2299b805,15 Jul 2008,"liboconfig/scanner.l: Added support for wrapping lines.

Lines may now be wrapped by using ""\"" as the last character before the
newline. This allows long lines to be split into multiple lines. This also
applies to quoted strings, which are, however, treated special in that
whitespace at the beginning of the following lines will be ignored. This
allows for nicely indenting the wrapped lines.

The following example:

  Foo a very very very long list of options \
      that does not fit on one line
  Bar ""a very very very long string \
      which does not fit on one line""

... is equivalent to:

  Foo a very very very long list of options that does not fit on one line
  Bar ""a very very very long string which does not fit on one line""

Signed-off-by: Sebastian Harl <sh@tokkee.org>
Signed-off-by: Florian Forster <octo@huhu.verplant.org>",69,data/crawl/collectd/hunk_371.cpp,,,data/crawl/collectd/old_hunk_371.cpp,data/crawl/collectd/new_hunk_371.cpp,[],"[39, 44]"
https://github.com/collectd/collectd/commit/cc1d8ce8d6f95e0c0eb6d51c6abe527806ed60ab,02 Jul 2008,qmail plugin: Various cleanups and bugfixes.,327,data/crawl/collectd/hunk_372.cpp,,,data/crawl/collectd/old_hunk_372.cpp,data/crawl/collectd/new_hunk_372.cpp,"[81, 136]",[]
https://github.com/collectd/collectd/commit/6337579783cb9c96f5ccb647b53decf4f1ba4f6e,02 Jul 2008,"qmail plugin: Added a plugin to count messages in qmail queues.

Hello.
Here is my first collectd plugin.
It shows the two values of qmail queues, messages and todo.
The latter should be zero in normal cases. I included it because it
may help diagnose problems.
Maybe a config parameter could be added for it.

It supports a parameter for the Qmail base directory:

<Plugin qmail_queue>
       QmailDir ""/var/qmail""
</Plugin>

Feel free to modify it if you need.
Alessandro",222,data/crawl/collectd/hunk_373.cpp,,,data/crawl/collectd/old_hunk_373.cpp,data/crawl/collectd/new_hunk_373.cpp,[],"[107, 162]"
https://github.com/collectd/collectd/commit/33fc797e4095b55a815cc2fa755f384204583dd5,30 Jun 2008,"src/{exec,types_list,utils_cache}.c: Fix format strings.",8,data/crawl/collectd/hunk_374.cpp,,,data/crawl/collectd/old_hunk_374.cpp,data/crawl/collectd/new_hunk_374.cpp,"[1, 3, 5, 7]","[1, 3, 5, 7]"
https://github.com/collectd/collectd/commit/09c94b19a261e38a512fd6b59b2356160ea36977,12 Jun 2008,exec plugin: Added support for notification meta information.,20,data/crawl/collectd/hunk_375.cpp,,,data/crawl/collectd/old_hunk_375.cpp,data/crawl/collectd/new_hunk_375.cpp,"[1, 3]","[1, 6, 8, 10, 12, 14, 18]"
https://github.com/collectd/collectd/commit/b886f9aaf7675f1f9f242a2b9dfe119ce0672d66,06 Jun 2008,"src/plugin.h: Use __attribute__((format)) for plugin_log.

All __attribute__'s will be automatically set to /**/ when not using the
GNU CC via a macro in src/collectd.h. This way this should be portable.",9,data/crawl/collectd/hunk_376.cpp,,,data/crawl/collectd/old_hunk_376.cpp,data/crawl/collectd/new_hunk_376.cpp,"[3, 4, 5, 6]","[3, 6, 7, 8]"
https://github.com/collectd/collectd/commit/0c06f2fab0b95bee81d319883c4fb6e552e32de5,14 Apr 2008,"build system: Check if strtok_r needs _REENTRANT

Resolves: #8",62,data/crawl/collectd/hunk_377.cpp,,,data/crawl/collectd/old_hunk_377.cpp,data/crawl/collectd/new_hunk_377.cpp,[],"[23, 56]"
https://github.com/collectd/collectd/commit/20d7c9833c8c11d4a1039b5bf0eab4ad8e8f5281,31 Mar 2008,"plugin.c: Tell the user if a plugin could not be found.

Up to now this error was silently ignored, letting the user believe that
everything went fine.

Signed-off-by: Sebastian Harl <sh@tokkee.org>
Signed-off-by: Florian Forster <octo@huhu.verplant.org>",5,data/crawl/collectd/hunk_378.cpp,,,data/crawl/collectd/old_hunk_378.cpp,data/crawl/collectd/new_hunk_378.cpp,[],[4]
https://github.com/collectd/collectd/commit/583b04d5826669eb182cb6ea538cf68266721ccb,26 Mar 2008,"unixsock plugin: Open two different IO stream handles for reading and writing.

Full-duplex standard IO streams are not really supported on sockets.
Mixing input and output functions involves calls to lseek(2) which is
not supported on sockets and thus causes the IO operations to fail.
Opening two IO streams solves the problem.

This is a backport of 43df21461d523023951746ef669f1bb95f61366d.

Signed-off-by: Sebastian Harl <sh@tokkee.org>
Signed-off-by: Florian Forster <octo@huhu.verplant.org>",31,data/crawl/collectd/hunk_379.cpp,,,data/crawl/collectd/old_hunk_379.cpp,data/crawl/collectd/new_hunk_379.cpp,[15],[15]
https://github.com/collectd/collectd/commit/ac03ae49d85c01fe2da58dd78f66db58416d81cc,26 Mar 2008,"unixsock plugin: Open two different IO stream handles for reading and writing.

Full-duplex standard IO streams are not really supported on sockets.
Mixing input and output functions involves calls to lseek(2) which is
not supported on sockets and thus causes the IO operations to fail.
Opening two IO streams solves the problem.

This is a backport of 43df21461d523023951746ef669f1bb95f61366d.

Signed-off-by: Sebastian Harl <sh@tokkee.org>
Signed-off-by: Florian Forster <octo@huhu.verplant.org>",33,data/crawl/collectd/hunk_380.cpp,,,data/crawl/collectd/old_hunk_380.cpp,data/crawl/collectd/new_hunk_380.cpp,[19],[19]
https://github.com/collectd/collectd/commit/ebbe15f56430838df4397150f6c3089d5851216d,26 Mar 2008,"utils_cmd_*: Terminate all lines printed to the socket with newline.

This is a backport of 1ca0b79a4274784e4cc15d45e46e2cfa0c2039cf.

Signed-off-by: Sebastian Harl <sh@tokkee.org>
Signed-off-by: Florian Forster <octo@huhu.verplant.org>",10,data/crawl/collectd/hunk_381.cpp,,,data/crawl/collectd/old_hunk_381.cpp,data/crawl/collectd/new_hunk_381.cpp,[3],[3]
https://github.com/collectd/collectd/commit/ebbe15f56430838df4397150f6c3089d5851216d,26 Mar 2008,"utils_cmd_*: Terminate all lines printed to the socket with newline.

This is a backport of 1ca0b79a4274784e4cc15d45e46e2cfa0c2039cf.

Signed-off-by: Sebastian Harl <sh@tokkee.org>
Signed-off-by: Florian Forster <octo@huhu.verplant.org>",10,data/crawl/collectd/hunk_382.cpp,,,data/crawl/collectd/old_hunk_382.cpp,data/crawl/collectd/new_hunk_382.cpp,[3],[3]
https://github.com/collectd/collectd/commit/ebbe15f56430838df4397150f6c3089d5851216d,26 Mar 2008,"utils_cmd_*: Terminate all lines printed to the socket with newline.

This is a backport of 1ca0b79a4274784e4cc15d45e46e2cfa0c2039cf.

Signed-off-by: Sebastian Harl <sh@tokkee.org>
Signed-off-by: Florian Forster <octo@huhu.verplant.org>",10,data/crawl/collectd/hunk_383.cpp,,,data/crawl/collectd/old_hunk_383.cpp,data/crawl/collectd/new_hunk_383.cpp,[3],[3]
https://github.com/collectd/collectd/commit/ebbe15f56430838df4397150f6c3089d5851216d,26 Mar 2008,"utils_cmd_*: Terminate all lines printed to the socket with newline.

This is a backport of 1ca0b79a4274784e4cc15d45e46e2cfa0c2039cf.

Signed-off-by: Sebastian Harl <sh@tokkee.org>
Signed-off-by: Florian Forster <octo@huhu.verplant.org>",10,data/crawl/collectd/hunk_384.cpp,,,data/crawl/collectd/old_hunk_384.cpp,data/crawl/collectd/new_hunk_384.cpp,[3],[3]
https://github.com/collectd/collectd/commit/ebbe15f56430838df4397150f6c3089d5851216d,26 Mar 2008,"utils_cmd_*: Terminate all lines printed to the socket with newline.

This is a backport of 1ca0b79a4274784e4cc15d45e46e2cfa0c2039cf.

Signed-off-by: Sebastian Harl <sh@tokkee.org>
Signed-off-by: Florian Forster <octo@huhu.verplant.org>",10,data/crawl/collectd/hunk_385.cpp,,,data/crawl/collectd/old_hunk_385.cpp,data/crawl/collectd/new_hunk_385.cpp,[3],[3]
https://github.com/collectd/collectd/commit/7aee817a090f1f825e68c3a0288a373c52e16e03,24 Mar 2008,"liboconfig: Include the filename in error messages.

As collectd now supports more than one config file, this is more
convenient.

A module-global variable is used for that purpose. If no filename is
available (e.g. if the user uses oconfig_parse_fh() directly), a string
like ""<fd#X>"" is used instead, where X is replaced by the file descriptor.

Signed-off-by: Sebastian Harl <sh@tokkee.org>
Signed-off-by: Florian Forster <octo@huhu.verplant.org>",34,data/crawl/collectd/hunk_386.cpp,,,data/crawl/collectd/old_hunk_386.cpp,data/crawl/collectd/new_hunk_386.cpp,[8],[24]
https://github.com/collectd/collectd/commit/7aee817a090f1f825e68c3a0288a373c52e16e03,24 Mar 2008,"liboconfig: Include the filename in error messages.

As collectd now supports more than one config file, this is more
convenient.

A module-global variable is used for that purpose. If no filename is
available (e.g. if the user uses oconfig_parse_fh() directly), a string
like ""<fd#X>"" is used instead, where X is replaced by the file descriptor.

Signed-off-by: Sebastian Harl <sh@tokkee.org>
Signed-off-by: Florian Forster <octo@huhu.verplant.org>",34,data/crawl/collectd/hunk_387.cpp,,,data/crawl/collectd/old_hunk_387.cpp,data/crawl/collectd/new_hunk_387.cpp,[3],[10]
https://github.com/collectd/collectd/commit/660aebd9a5216d2f143d5f30c4e87bcfa4502ea6,11 Feb 2008,"exec plugin: Changed the format in which notifications are passed to the programs.

Using a `Message:' header field restricts us to one-line messages, which is
probably not very farsighted.",36,data/crawl/collectd/hunk_388.cpp,,,data/crawl/collectd/old_hunk_388.cpp,data/crawl/collectd/new_hunk_388.cpp,[3],[3]
https://github.com/collectd/collectd/commit/660aebd9a5216d2f143d5f30c4e87bcfa4502ea6,11 Feb 2008,"exec plugin: Changed the format in which notifications are passed to the programs.

Using a `Message:' header field restricts us to one-line messages, which is
probably not very farsighted.",36,data/crawl/collectd/hunk_389.cpp,,,data/crawl/collectd/old_hunk_389.cpp,data/crawl/collectd/new_hunk_389.cpp,"[1, 4]","[1, 3]"
https://github.com/collectd/collectd/commit/23f2ac0835c5cf2760bd1b687e868fd033c7639c,11 Feb 2008,src/configfile.c: Use wordexp(3) to expand shell wildcards if available.,85,data/crawl/collectd/hunk_390.cpp,,,data/crawl/collectd/old_hunk_390.cpp,data/crawl/collectd/new_hunk_390.cpp,[3],[]
https://github.com/collectd/collectd/commit/94105804a59bf3e2a5d4b1320550f8aad1a0c288,09 Feb 2008,"contrib/examples/: Added an example for a notification callback.

Signed-off-by: Sebastian Harl <sh@tokkee.org>
Signed-off-by: Florian Forster <octo@huhu.verplant.org>",85,data/crawl/collectd/hunk_391.cpp,,,data/crawl/collectd/old_hunk_391.cpp,data/crawl/collectd/new_hunk_391.cpp,[3],[3]
https://github.com/collectd/collectd/commit/94105804a59bf3e2a5d4b1320550f8aad1a0c288,09 Feb 2008,"contrib/examples/: Added an example for a notification callback.

Signed-off-by: Sebastian Harl <sh@tokkee.org>
Signed-off-by: Florian Forster <octo@huhu.verplant.org>",85,data/crawl/collectd/hunk_392.cpp,,,data/crawl/collectd/old_hunk_392.cpp,data/crawl/collectd/new_hunk_392.cpp,[],"[20, 23, 26, 29, 32, 35, 37]"
https://github.com/collectd/collectd/commit/f1a764777b71e54407293163aefb07586977b147,09 Feb 2008,"src/configfile.c: Extend the `Include' statement to handle directories, too.

Directories are included recursively. Files and directories begnning with a dot
are ignored. Symlinks are followed. You can crash collectd by looping the
symlinks.",256,data/crawl/collectd/hunk_393.cpp,,,data/crawl/collectd/old_hunk_393.cpp,data/crawl/collectd/new_hunk_393.cpp,[],[77]
https://github.com/collectd/collectd/commit/963766d0bcbbcdaeb7ebf567046c613455133666,23 Jan 2008,"src/utils_cmd_putnotif.[ch]: Added a new module which handles parsing of notifications from some command line or similar.

Of course, this is similar to the `utils_cmd_putval' module.",202,data/crawl/collectd/hunk_394.cpp,,,data/crawl/collectd/old_hunk_394.cpp,data/crawl/collectd/new_hunk_394.cpp,[],"[109, 125, 135, 144, 149, 154, 163]"
https://github.com/collectd/collectd/commit/0e3895c00ea46efccac1a7cf27483b6556cf8741,23 Jan 2008,"collectd: Added ``associative'' members to the notification_t structure.

A notification does not need to be related to any performance data collected by
collectd, but now it *may* be related. This is used in the threshold stuff
already and passed via ExecNotification in the exec plugin, too.
The new `notification_init' function in `src/common.c' and the
`NOTIFICATION_INIT_VL' macro simplify the initialization of these new fields.",102,data/crawl/collectd/hunk_395.cpp,,,data/crawl/collectd/old_hunk_395.cpp,data/crawl/collectd/new_hunk_395.cpp,[1],"[1, 8, 10, 12, 14, 16, 19]"
https://github.com/collectd/collectd/commit/c41e4859301c69b1489abcd9e2e7c7959d5ddf50,25 Dec 2007,exec plugin: Added the possibility to execute programs upon notifications (EXPERIMENTAL),205,data/crawl/collectd/hunk_396.cpp,,,data/crawl/collectd/old_hunk_396.cpp,data/crawl/collectd/new_hunk_396.cpp,[],[44]
https://github.com/collectd/collectd/commit/e3f63afc6fc07e04540a42e69bdeab4928f1cd49,09 Dec 2007,src/plugin.[ch]: Removed the complain functions.,57,data/crawl/collectd/hunk_397.cpp,,,data/crawl/collectd/old_hunk_397.cpp,data/crawl/collectd/new_hunk_397.cpp,"[29, 47]",[]
https://github.com/collectd/collectd/commit/3e9c24b5cb8a0891b0daf49d6f574435afb3233d,04 Dec 2007,"examples/MyPlugin.pm: Updated for new version of the perl plugin.

 * use Collectd.pm and removed ""Collectd::"" prefix
 * pass callbacks by name to plugin_register()

Signed-off-by: Sebastian Harl <sh@tokkee.org>
Signed-off-by: Florian Forster <octo@huhu.verplant.org>",21,data/crawl/collectd/hunk_398.cpp,,,data/crawl/collectd/old_hunk_398.cpp,data/crawl/collectd/new_hunk_398.cpp,[3],[3]
https://github.com/collectd/collectd/commit/69e5d982e7adf27a0eca6e6431f748f4913d80ac,04 Dec 2007,"collectdmon: Added a small daemon monitoring collectd.

This is a small ""wrapper"" daemon which starts and monitors the collectd
daemon. If collectd terminates it will automatically be restarted, unless
collectdmon was told to shut it down.

Current features:

 * restarting the daemon
 * logging to syslog
 * detection of quickly, repeatedly respawning processes
   (similar to SysV init)

collectdmon is similar to mysqld_safe.

Signed-off-by: Sebastian Harl <sh@tokkee.org>
Signed-off-by: Florian Forster <octo@huhu.verplant.org>",359,data/crawl/collectd/hunk_399.cpp,,,data/crawl/collectd/old_hunk_399.cpp,data/crawl/collectd/new_hunk_399.cpp,[],"[63, 91, 116, 121, 126, 281]"
https://github.com/collectd/collectd/commit/6c9b15cd22b4c1f56b5012b89dd12f0996fa0e4e,13 Nov 2007,"collectd: The new `FQDNLookup' option controls whether or not the FQDN should be used.

So far the hostname as returned by `gethostname(2)' was used. This is not
practical for large setups.

To stay backwards compatible the option is disabled by default, but the sample
config file includes a line which sets this option so that (new) default
installations will have it enabled.",100,data/crawl/collectd/hunk_400.cpp,,,data/crawl/collectd/old_hunk_400.cpp,data/crawl/collectd/new_hunk_400.cpp,[16],[22]
https://github.com/collectd/collectd/commit/f69ce75eded538c77c7af468fe983139658d69aa,06 Nov 2007,"libvirtstats plugin: Added a plugin to collect virtual host statistics.

  - rebased to git
  - includes updates to the manpage
  - ignorelist code now fixed
  - removed debugging messages

Attached is a plugin allowing collectd to use libvirt to collect CPU, disk and
network statistics for domains.

Usage

Signed-off-by: Florian Forster <octo@huhu.verplant.org>",829,data/crawl/collectd/hunk_401.cpp,,,data/crawl/collectd/old_hunk_401.cpp,data/crawl/collectd/new_hunk_401.cpp,[],"[221, 223, 227]"
https://github.com/collectd/collectd/commit/30f3e7b81e938d2fcf0512acb46e639a8cb37ae7,06 Nov 2007,"uuid plugin: Add a plugin which sets the hostname to an UUID.

Florian Forster wrote:
> Just out of curiosity: Why don't hostnames work for you?

For guests there's the question of what we put in the hostname field. The
previous plugin (libvirtstats) puts the guest's name in this field, but there
are some problems with this:

   physicalserver1 <--- (hostname of physical server)
     |
      \--- database <--- (name of guest)
      \--- web

   physicalserver2
     |
      \--- database
      \--- web

   coldbackupserver
     |
     (no guests)

Guest names aren't really unique. Different physical servers may have guests
with overlapping names as in the example above. Also guest names aren't fixed.
Xen in particular renames guests at will. For example if a guest is about to
migrate then Xen renames the guest as 'migrating-foo' and if the guest is about
to shutdown Xen renames it as 'Zombie-foo'. The administrator of the physical
server can also rename guests.

While you're migrating you'll have an intermediate situation like this:

   physicalserver1
     |
      \--- migrating-database
      \--- migrating-web     |
                             | migration
   coldbackupserver          |
     |                       V
      \--- database
      \--- web

During live migrations the old instance ('migrating-foo') is still running.

The UUID is unique across physical servers, and is copied by migration and
preserved across shutdowns so if you care about which guest your stats ""really""
came from then only the UUID tells you this.

Guests also have a hostname which is separate from the guest's name (the
guest's name is stored in the hypervisor, the hostname is stored inside the
guest's kernel). However it's not feasible to access the guest's hostname from
the hypervisor since this would involve some sort of snooping into the guest
kernel. The guest might be running Windows or FreeBSD etc. The only feasible
way to get this is to run an instance of collectd inside each guest, but then
the uuid plugin will also work in this scenario and can get the UUID since it
is exposed inside the guest either through an emulated BIOS or in
/sys/hypervisor/uuid.

Rich.

Signed-off-by: Florian Forster <octo@huhu.verplant.org>",349,data/crawl/collectd/hunk_402.cpp,,,data/crawl/collectd/old_hunk_402.cpp,data/crawl/collectd/new_hunk_402.cpp,[],"[75, 79, 83, 91, 98, 178]"
https://github.com/collectd/collectd/commit/b0c3db2d98b74ec6fef30973500cdcab30a890f6,28 Oct 2007,"plugin.h: Make DEBUG() a noop when compiling without debugging support.

This saves a couple of useless calls to plugin_log() which the compiler
does not detect and remove itself.

A couple of DEBUG()'s in the apcups, hddtemp, mbmon and ntpd plugins have
been upgraded to INFO()'s. All of them provide error messages of failed
system / libc calls which should be available to the user somehow.
Besides, they use a local string buffer which generates an ""unused
variable"" warning if DEBUG() expands to a noop.

Signed-off-by: Sebastian Harl <sh@tokkee.org>
Signed-off-by: Florian Forster <octo@huhu.verplant.org>",16,data/crawl/collectd/hunk_403.cpp,,,data/crawl/collectd/old_hunk_403.cpp,data/crawl/collectd/new_hunk_403.cpp,"[0, 1, 2, 3]","[0, 1, 2, 4]"
https://github.com/collectd/collectd/commit/f0f7f5cda17991d16b42c8a1e925595115825d7f,26 Oct 2007,logfile plugin: Implemented an option to prefix logged lines with a timestamp.,35,data/crawl/collectd/hunk_404.cpp,,,data/crawl/collectd/old_hunk_404.cpp,data/crawl/collectd/new_hunk_404.cpp,[3],"[4, 6]"
https://github.com/collectd/collectd/commit/7f27b191564dc366eab17f1515fc183b24911dbf,01 Oct 2007,"perl plugin: Reimplemented plugin_{,un}register() in plain Perl.

As this involves only Perl data structures, it makes more sense to write
the algorithms in plain Perl as well. I suppose the perl interpreter can
do a better job optimizing the code :-)

Signed-off-by: Sebastian Harl <sh@tokkee.org>",485,data/crawl/collectd/hunk_405.cpp,,,data/crawl/collectd/old_hunk_405.cpp,data/crawl/collectd/new_hunk_405.cpp,[],"[13, 72]"
https://github.com/collectd/collectd/commit/7f27b191564dc366eab17f1515fc183b24911dbf,01 Oct 2007,"perl plugin: Reimplemented plugin_{,un}register() in plain Perl.

As this involves only Perl data structures, it makes more sense to write
the algorithms in plain Perl as well. I suppose the perl interpreter can
do a better job optimizing the code :-)

Signed-off-by: Sebastian Harl <sh@tokkee.org>",485,data/crawl/collectd/hunk_406.cpp,,,data/crawl/collectd/old_hunk_406.cpp,data/crawl/collectd/new_hunk_406.cpp,[5],[3]
https://github.com/collectd/collectd/commit/ad52e3aa2f9fcc61bb3e999af11d162bc790921c,28 Sep 2007,"Added myplugin.c to contrib/examples/.

This is a sample/template C plugin.

Signed-off-by: Sebastian Harl <sh@tokkee.org>
Signed-off-by: Florian Forster <octo@huhu.verplant.org>",171,data/crawl/collectd/hunk_407.cpp,,,data/crawl/collectd/old_hunk_407.cpp,data/crawl/collectd/new_hunk_407.cpp,[],"[113, 126, 131, 133, 139, 143]"
https://github.com/collectd/collectd/commit/1ff419f97e259936d93474a0e50551f4e05911a1,28 Sep 2007,"Added MyPlugin.pm to contrib/examples/.

This is a sample/template Perl plugin.

Signed-off-by: Sebastian Harl <sh@tokkee.org>
Signed-off-by: Florian Forster <octo@huhu.verplant.org>",125,data/crawl/collectd/hunk_408.cpp,,,data/crawl/collectd/old_hunk_408.cpp,data/crawl/collectd/new_hunk_408.cpp,[],"[84, 115]"
https://github.com/collectd/collectd/commit/3d8b009c04400cc4e7075e49da38774867b29102,12 Sep 2007,"plugin.c: Print lt_dlopen() error messages to STDERR as well.

This makes sure the user will get the message on the terminal in any case.

Signed-off-by: Sebastian Harl <sh@tokkee.org>
Signed-off-by: Florian Forster <octo@huhu.verplant.org>",5,data/crawl/collectd/hunk_409.cpp,,,data/crawl/collectd/old_hunk_409.cpp,data/crawl/collectd/new_hunk_409.cpp,[],[3]
https://github.com/collectd/collectd/commit/3d8b009c04400cc4e7075e49da38774867b29102,12 Sep 2007,"plugin.c: Print lt_dlopen() error messages to STDERR as well.

This makes sure the user will get the message on the terminal in any case.

Signed-off-by: Sebastian Harl <sh@tokkee.org>
Signed-off-by: Florian Forster <octo@huhu.verplant.org>",5,data/crawl/collectd/hunk_410.cpp,,,data/crawl/collectd/old_hunk_410.cpp,data/crawl/collectd/new_hunk_410.cpp,[],[5]
https://github.com/collectd/collectd/commit/4ba48e6280455f0e3ab13584b5909d5aece1ad6a,30 Aug 2007,netlink plugin: Fix the submitted values.,8,data/crawl/collectd/hunk_411.cpp,,,data/crawl/collectd/old_hunk_411.cpp,data/crawl/collectd/new_hunk_411.cpp,[3],[]
https://github.com/collectd/collectd/commit/5d99fadf9afc1de198576e1ce5f24ef423333f72,29 Aug 2007,"netlink plugin: Added a plugin for (very) enhanced Linux traffic statistics.

This plugin uses the netlink sockets provided by Linux 2.2 and later to get
information about the links, qdiscs, classes, and filters in the network stack
of a Linux system. With this plugin it's possible to get some _very_ detailed
statistics.

Still to do: Update the `types.db', `collectd.conf(5)', and `configure.conf.in'.",542,data/crawl/collectd/hunk_412.cpp,,,data/crawl/collectd/old_hunk_412.cpp,data/crawl/collectd/new_hunk_412.cpp,[],[261]
https://github.com/collectd/collectd/commit/6e779261c08a8996ed476d23638fc62ad867fa5f,23 Aug 2007,"exec and unixsock plugin: Move the shared `PUTVAL' code into src/utils_cmd_putval.[ch].

The putval code itself has been extended to allow `options' which can currently
be used to set the interval of the value-list(s) being submitted. Also,
submiting multiple value-lists in one command has been implemented. The
manpages should be up to date.",560,data/crawl/collectd/hunk_413.cpp,,,data/crawl/collectd/old_hunk_413.cpp,data/crawl/collectd/new_hunk_413.cpp,"[21, 33, 45, 61, 80, 107, 118, 140]",[]
https://github.com/collectd/collectd/commit/6e779261c08a8996ed476d23638fc62ad867fa5f,23 Aug 2007,"exec and unixsock plugin: Move the shared `PUTVAL' code into src/utils_cmd_putval.[ch].

The putval code itself has been extended to allow `options' which can currently
be used to set the interval of the value-list(s) being submitted. Also,
submiting multiple value-lists in one command has been implemented. The
manpages should be up to date.",560,data/crawl/collectd/hunk_414.cpp,,,data/crawl/collectd/old_hunk_414.cpp,data/crawl/collectd/new_hunk_414.cpp,[],"[38, 78, 130, 143, 155, 174, 193, 209]"
https://github.com/collectd/collectd/commit/c5bab65db542b276a776dc0643abcea91da60913,04 Jul 2007,collectd-nagios: Display performance data and generally be more verbose.,60,data/crawl/collectd/hunk_415.cpp,,,data/crawl/collectd/old_hunk_415.cpp,data/crawl/collectd/new_hunk_415.cpp,"[5, 11, 17]","[3, 7, 9, 11]"
https://github.com/collectd/collectd/commit/c5bab65db542b276a776dc0643abcea91da60913,04 Jul 2007,collectd-nagios: Display performance data and generally be more verbose.,60,data/crawl/collectd/hunk_416.cpp,,,data/crawl/collectd/old_hunk_416.cpp,data/crawl/collectd/new_hunk_416.cpp,"[4, 10, 16, 22]","[6, 8]"
https://github.com/collectd/collectd/commit/c76c5061f8717a5045132e60804a03936dd35489,18 Jun 2007,"unixsock plugin: Implemented the `LISTVAL' command.

The LISTVAL command returnes a list of all available values and their timestamps.",75,data/crawl/collectd/hunk_417.cpp,,,data/crawl/collectd/old_hunk_417.cpp,data/crawl/collectd/new_hunk_417.cpp,[],"[15, 45, 47]"
https://github.com/collectd/collectd/commit/c76c5061f8717a5045132e60804a03936dd35489,18 Jun 2007,"unixsock plugin: Implemented the `LISTVAL' command.

The LISTVAL command returnes a list of all available values and their timestamps.",75,data/crawl/collectd/hunk_418.cpp,,,data/crawl/collectd/old_hunk_418.cpp,data/crawl/collectd/new_hunk_418.cpp,[5],[9]
https://github.com/collectd/collectd/commit/fa9717086dd2591b99e138931ad716239578e415,06 Jun 2007,rrdtool plugin: Use the interval in the value lists to calculate the RRA sizes.,109,data/crawl/collectd/hunk_419.cpp,,,data/crawl/collectd/old_hunk_419.cpp,data/crawl/collectd/new_hunk_419.cpp,"[6, 17]",[]
https://github.com/collectd/collectd/commit/90885f2e932708b8596a71ec8861bcd5e1cf51a8,19 May 2007,"unixsock plugin: Return a message in any case.

This removes a fair amount of `FIXME's :)",22,data/crawl/collectd/hunk_420.cpp,,,data/crawl/collectd/old_hunk_420.cpp,data/crawl/collectd/new_hunk_420.cpp,[],[5]
https://github.com/collectd/collectd/commit/90885f2e932708b8596a71ec8861bcd5e1cf51a8,19 May 2007,"unixsock plugin: Return a message in any case.

This removes a fair amount of `FIXME's :)",22,data/crawl/collectd/hunk_421.cpp,,,data/crawl/collectd/old_hunk_421.cpp,data/crawl/collectd/new_hunk_421.cpp,[],[10]
https://github.com/collectd/collectd/commit/90885f2e932708b8596a71ec8861bcd5e1cf51a8,19 May 2007,"unixsock plugin: Return a message in any case.

This removes a fair amount of `FIXME's :)",22,data/crawl/collectd/hunk_422.cpp,,,data/crawl/collectd/old_hunk_422.cpp,data/crawl/collectd/new_hunk_422.cpp,[],[4]
https://github.com/collectd/collectd/commit/90885f2e932708b8596a71ec8861bcd5e1cf51a8,19 May 2007,"unixsock plugin: Return a message in any case.

This removes a fair amount of `FIXME's :)",22,data/crawl/collectd/hunk_423.cpp,,,data/crawl/collectd/old_hunk_423.cpp,data/crawl/collectd/new_hunk_423.cpp,[],[5]
https://github.com/collectd/collectd/commit/90885f2e932708b8596a71ec8861bcd5e1cf51a8,19 May 2007,"unixsock plugin: Return a message in any case.

This removes a fair amount of `FIXME's :)",22,data/crawl/collectd/hunk_424.cpp,,,data/crawl/collectd/old_hunk_424.cpp,data/crawl/collectd/new_hunk_424.cpp,[],[3]
https://github.com/collectd/collectd/commit/90885f2e932708b8596a71ec8861bcd5e1cf51a8,19 May 2007,"unixsock plugin: Return a message in any case.

This removes a fair amount of `FIXME's :)",22,data/crawl/collectd/hunk_425.cpp,,,data/crawl/collectd/old_hunk_425.cpp,data/crawl/collectd/new_hunk_425.cpp,[],[3]
https://github.com/collectd/collectd/commit/90885f2e932708b8596a71ec8861bcd5e1cf51a8,19 May 2007,"unixsock plugin: Return a message in any case.

This removes a fair amount of `FIXME's :)",22,data/crawl/collectd/hunk_426.cpp,,,data/crawl/collectd/old_hunk_426.cpp,data/crawl/collectd/new_hunk_426.cpp,[3],[3]
https://github.com/collectd/collectd/commit/7c0bcfba668deb45426cf33b5ac721d5a444e8f2,19 Apr 2007,rrdtool plugin: Add a config option to configure the RRA-timespans at runtime.,61,data/crawl/collectd/hunk_427.cpp,,,data/crawl/collectd/old_hunk_427.cpp,data/crawl/collectd/new_hunk_427.cpp,[],[19]
https://github.com/collectd/collectd/commit/21ebca2d467304ebd3dc187d3ecdda6e5aff9d52,11 Apr 2007,"perl plugin: Exported plugin_log() to Perl.

This adds the following function to collectd's Perl API:

Collectd::plugin_log:
  pass a message to collectd's logging mechanism

  arguments:
  level - log level
  message - log message

The log level should be any of the Collectd::LOG_* constants.

Signed-off-by: Sebastian Harl <sh@tokkee.org>",40,data/crawl/collectd/hunk_428.cpp,,,data/crawl/collectd/old_hunk_428.cpp,data/crawl/collectd/new_hunk_428.cpp,[],"[4, 17, 23]"
https://github.com/collectd/collectd/commit/f59d051e2087090f15545c65facbc507699ac7e6,11 Apr 2007,"perl plugin: Exported plugin_log() to Perl.

This adds the following function to collectd's Perl API:

Collectd::plugin_log:
  pass a message to collectd's logging mechanism

  arguments:
  level - log level
  message - log message

The log level should be any of the Collectd::LOG_* constants.

Signed-off-by: Sebastian Harl <sh@tokkee.org>",40,data/crawl/collectd/hunk_429.cpp,,,data/crawl/collectd/old_hunk_429.cpp,data/crawl/collectd/new_hunk_429.cpp,[],"[4, 17, 23]"
https://github.com/collectd/collectd/commit/55d30cc280696e7f7533c294961a44e246d812f0,27 Mar 2007,"logfile plugin: Don't use `access' when adding a logfile: It does not work as expected.

Of as advertised in the manpage, for that matter.",13,data/crawl/collectd/hunk_430.cpp,,,data/crawl/collectd/old_hunk_430.cpp,data/crawl/collectd/new_hunk_430.cpp,[11],[]
https://github.com/collectd/collectd/commit/d60759821fc7cfa47d279fe69307e80ec206ddf6,26 Mar 2007,unixsock plugin: Fixed many issues. `GETVAL' and `PUTVAL' are now mostly working as intended.,69,data/crawl/collectd/hunk_431.cpp,,,data/crawl/collectd/old_hunk_431.cpp,data/crawl/collectd/new_hunk_431.cpp,[],"[5, 18]"
https://github.com/collectd/collectd/commit/d60759821fc7cfa47d279fe69307e80ec206ddf6,26 Mar 2007,unixsock plugin: Fixed many issues. `GETVAL' and `PUTVAL' are now mostly working as intended.,69,data/crawl/collectd/hunk_432.cpp,,,data/crawl/collectd/old_hunk_432.cpp,data/crawl/collectd/new_hunk_432.cpp,[],"[5, 17]"
https://github.com/collectd/collectd/commit/d60759821fc7cfa47d279fe69307e80ec206ddf6,26 Mar 2007,unixsock plugin: Fixed many issues. `GETVAL' and `PUTVAL' are now mostly working as intended.,69,data/crawl/collectd/hunk_433.cpp,,,data/crawl/collectd/old_hunk_433.cpp,data/crawl/collectd/new_hunk_433.cpp,[],[11]
https://github.com/collectd/collectd/commit/7b08f89792c84c47b824cd4a7309c948819915fe,26 Mar 2007,logfile plugin: Renamed functions and changed error-messages to reflect the renaming.,18,data/crawl/collectd/hunk_434.cpp,,,data/crawl/collectd/old_hunk_434.cpp,data/crawl/collectd/new_hunk_434.cpp,[3],[3]
https://github.com/collectd/collectd/commit/7b08f89792c84c47b824cd4a7309c948819915fe,26 Mar 2007,logfile plugin: Renamed functions and changed error-messages to reflect the renaming.,18,data/crawl/collectd/hunk_435.cpp,,,data/crawl/collectd/old_hunk_435.cpp,data/crawl/collectd/new_hunk_435.cpp,[3],[3]
https://github.com/collectd/collectd/commit/f271d4b45ee7fffb6d55408c1138140f145df7cd,26 Mar 2007,Removed `utils_debug.[ch]' since debugging output is now handeled by the logging-statements.,234,data/crawl/collectd/hunk_436.cpp,,,data/crawl/collectd/old_hunk_436.cpp,data/crawl/collectd/new_hunk_436.cpp,"[48, 51]",[]
https://github.com/collectd/collectd/commit/15fff44a08575748b6dd9f5f9c44f0d3c91f166d,26 Mar 2007,"stderr plugin: Add `File' config option to log to a certain file.

Also make the actual log-action thread-safe.",55,data/crawl/collectd/hunk_437.cpp,,,data/crawl/collectd/old_hunk_437.cpp,data/crawl/collectd/new_hunk_437.cpp,[],[11]
https://github.com/collectd/collectd/commit/15fff44a08575748b6dd9f5f9c44f0d3c91f166d,26 Mar 2007,"stderr plugin: Add `File' config option to log to a certain file.

Also make the actual log-action thread-safe.",55,data/crawl/collectd/hunk_438.cpp,,,data/crawl/collectd/old_hunk_438.cpp,data/crawl/collectd/new_hunk_438.cpp,[6],"[24, 30]"
https://github.com/collectd/collectd/commit/cfb8c142cd23432d965f00a69cc9337168916c90,26 Mar 2007,"stderr plugin: Added ""stderr"" plugin to log to stderr.

This plugin is heavily based on Florian's syslog plugin.

Signed-off-by: Sebastian Harl <sh@tokkee.org>",95,data/crawl/collectd/hunk_439.cpp,,,data/crawl/collectd/old_hunk_439.cpp,data/crawl/collectd/new_hunk_439.cpp,[],[69]
https://github.com/collectd/collectd/commit/39d723f4cb1d50b7ebb90c3251f0ebabad576412,26 Mar 2007,"Replace all calls to `strerror' with `sstrerror'

.. which internally uses the thread-safe function `strerror_r'.",822,data/crawl/collectd/hunk_440.cpp,,,data/crawl/collectd/old_hunk_440.cpp,data/crawl/collectd/new_hunk_440.cpp,[3],[4]
https://github.com/collectd/collectd/commit/39d723f4cb1d50b7ebb90c3251f0ebabad576412,26 Mar 2007,"Replace all calls to `strerror' with `sstrerror'

.. which internally uses the thread-safe function `strerror_r'.",822,data/crawl/collectd/hunk_441.cpp,,,data/crawl/collectd/old_hunk_441.cpp,data/crawl/collectd/new_hunk_441.cpp,[1],[1]
https://github.com/collectd/collectd/commit/39d723f4cb1d50b7ebb90c3251f0ebabad576412,26 Mar 2007,"Replace all calls to `strerror' with `sstrerror'

.. which internally uses the thread-safe function `strerror_r'.",822,data/crawl/collectd/hunk_442.cpp,,,data/crawl/collectd/old_hunk_442.cpp,data/crawl/collectd/new_hunk_442.cpp,[5],[9]
https://github.com/collectd/collectd/commit/838af4cdc6c8674ed3e14a95fea172118c707a85,15 Mar 2007,Replace all syslog-calls with one of the new logging-macros.,933,data/crawl/collectd/hunk_443.cpp,,,data/crawl/collectd/old_hunk_443.cpp,data/crawl/collectd/new_hunk_443.cpp,[2],[2]
https://github.com/collectd/collectd/commit/838af4cdc6c8674ed3e14a95fea172118c707a85,15 Mar 2007,Replace all syslog-calls with one of the new logging-macros.,933,data/crawl/collectd/hunk_444.cpp,,,data/crawl/collectd/old_hunk_444.cpp,data/crawl/collectd/new_hunk_444.cpp,[1],[1]
https://github.com/collectd/collectd/commit/838af4cdc6c8674ed3e14a95fea172118c707a85,15 Mar 2007,Replace all syslog-calls with one of the new logging-macros.,933,data/crawl/collectd/hunk_445.cpp,,,data/crawl/collectd/old_hunk_445.cpp,data/crawl/collectd/new_hunk_445.cpp,[],[3]
https://github.com/collectd/collectd/commit/838af4cdc6c8674ed3e14a95fea172118c707a85,15 Mar 2007,Replace all syslog-calls with one of the new logging-macros.,933,data/crawl/collectd/hunk_446.cpp,,,data/crawl/collectd/old_hunk_446.cpp,data/crawl/collectd/new_hunk_446.cpp,[],[3]
https://github.com/collectd/collectd/commit/838af4cdc6c8674ed3e14a95fea172118c707a85,15 Mar 2007,Replace all syslog-calls with one of the new logging-macros.,933,data/crawl/collectd/hunk_447.cpp,,,data/crawl/collectd/old_hunk_447.cpp,data/crawl/collectd/new_hunk_447.cpp,"[9, 14]","[9, 14]"
https://github.com/collectd/collectd/commit/838af4cdc6c8674ed3e14a95fea172118c707a85,15 Mar 2007,Replace all syslog-calls with one of the new logging-macros.,933,data/crawl/collectd/hunk_448.cpp,,,data/crawl/collectd/old_hunk_448.cpp,data/crawl/collectd/new_hunk_448.cpp,"[1, 8]","[1, 8]"
https://github.com/collectd/collectd/commit/d9e0b91f78a3063551908d3a268d2b020509970b,14 Mar 2007,src/plugin.[ch]: Add `log' callbacks.,66,data/crawl/collectd/hunk_449.cpp,,,data/crawl/collectd/old_hunk_449.cpp,data/crawl/collectd/new_hunk_449.cpp,[],[3]
https://github.com/collectd/collectd/commit/d9e0b91f78a3063551908d3a268d2b020509970b,14 Mar 2007,src/plugin.[ch]: Add `log' callbacks.,66,data/crawl/collectd/hunk_450.cpp,,,data/crawl/collectd/old_hunk_450.cpp,data/crawl/collectd/new_hunk_450.cpp,[],"[3, 4, 5, 6, 7, 8]"
https://github.com/collectd/collectd/commit/8de91034a0186feba7079b92711b0d140278ce7a,03 Mar 2007,"iptables plugin: Use a global `libiptc' if it exists.

Will likely not build under non-Linux systems yet.",4275,data/crawl/collectd/hunk_451.cpp,,,data/crawl/collectd/old_hunk_451.cpp,data/crawl/collectd/new_hunk_451.cpp,"[133, 135, 137, 139, 141, 142, 144, 145, 146, 147, 148, 150, 151, 152, 153, 158, 162, 169, 171, 173, 441]",[]
https://github.com/collectd/collectd/commit/8de91034a0186feba7079b92711b0d140278ce7a,03 Mar 2007,"iptables plugin: Use a global `libiptc' if it exists.

Will likely not build under non-Linux systems yet.",4275,data/crawl/collectd/hunk_452.cpp,,,data/crawl/collectd/old_hunk_452.cpp,data/crawl/collectd/new_hunk_452.cpp,"[140, 148, 161, 168, 170, 171, 173, 174, 176, 177, 178, 179, 181, 182, 183, 184, 189, 193, 199, 201, 203, 377, 400]",[]
https://github.com/collectd/collectd/commit/8de91034a0186feba7079b92711b0d140278ce7a,03 Mar 2007,"iptables plugin: Use a global `libiptc' if it exists.

Will likely not build under non-Linux systems yet.",4275,data/crawl/collectd/hunk_453.cpp,,,data/crawl/collectd/old_hunk_453.cpp,data/crawl/collectd/new_hunk_453.cpp,"[35, 36, 224, 906, 918, 920, 921, 927, 1120, 1482, 2180]",[]
https://github.com/collectd/collectd/commit/863dfcdf274509e4e1836c2c8f1f10f09e1d13be,03 Mar 2007,"iptables plugin: Adds a plugin to collect iptables'-counters.

My first attempt at a module for this is an iptables modules This will try to
read out the rules from iptables for a specific table and chain.
It will go through the rules looking for ones with ""comment"" matches and will
use the comment as a base for the generated filename.

So basically looking for lines like
 $ iptables -t mangle -A incoming -p tcp -m comment --comment ""tcp""
will generate a iptables-incoming/tcp.rrd file from the byte counters

There used to also be an account iptables module but that seems to have been
neglected, which would generate /proc entries for specific rules, don't know
what would work better. Either way, this seems to work somewhat.",4451,data/crawl/collectd/hunk_454.cpp,,,data/crawl/collectd/old_hunk_454.cpp,data/crawl/collectd/new_hunk_454.cpp,[],"[133, 135, 137, 139, 141, 142, 144, 145, 146, 147, 148, 150, 151, 152, 153, 158, 162, 169, 171, 173, 441]"
https://github.com/collectd/collectd/commit/863dfcdf274509e4e1836c2c8f1f10f09e1d13be,03 Mar 2007,"iptables plugin: Adds a plugin to collect iptables'-counters.

My first attempt at a module for this is an iptables modules This will try to
read out the rules from iptables for a specific table and chain.
It will go through the rules looking for ones with ""comment"" matches and will
use the comment as a base for the generated filename.

So basically looking for lines like
 $ iptables -t mangle -A incoming -p tcp -m comment --comment ""tcp""
will generate a iptables-incoming/tcp.rrd file from the byte counters

There used to also be an account iptables module but that seems to have been
neglected, which would generate /proc entries for specific rules, don't know
what would work better. Either way, this seems to work somewhat.",4451,data/crawl/collectd/hunk_455.cpp,,,data/crawl/collectd/old_hunk_455.cpp,data/crawl/collectd/new_hunk_455.cpp,[],"[140, 148, 161, 168, 170, 171, 173, 174, 176, 177, 178, 179, 181, 182, 183, 184, 189, 193, 199, 201, 203, 377, 400]"
https://github.com/collectd/collectd/commit/863dfcdf274509e4e1836c2c8f1f10f09e1d13be,03 Mar 2007,"iptables plugin: Adds a plugin to collect iptables'-counters.

My first attempt at a module for this is an iptables modules This will try to
read out the rules from iptables for a specific table and chain.
It will go through the rules looking for ones with ""comment"" matches and will
use the comment as a base for the generated filename.

So basically looking for lines like
 $ iptables -t mangle -A incoming -p tcp -m comment --comment ""tcp""
will generate a iptables-incoming/tcp.rrd file from the byte counters

There used to also be an account iptables module but that seems to have been
neglected, which would generate /proc entries for specific rules, don't know
what would work better. Either way, this seems to work somewhat.",4451,data/crawl/collectd/hunk_456.cpp,,,data/crawl/collectd/old_hunk_456.cpp,data/crawl/collectd/new_hunk_456.cpp,[],"[35, 36, 224, 906, 918, 920, 921, 927, 1120, 1482, 2180]"
https://github.com/collectd/collectd/commit/1ea16edee7a91e5fa077c2e368f4f608cd4330e6,28 Feb 2007,"rrdtool plugin: Implemented the settings `StepSize', `HeartBeat', `RRARows', and `XFF'.

The documentation has been updated, too.",173,data/crawl/collectd/hunk_457.cpp,,,data/crawl/collectd/old_hunk_457.cpp,data/crawl/collectd/new_hunk_457.cpp,[10],[10]
https://github.com/collectd/collectd/commit/1ea16edee7a91e5fa077c2e368f4f608cd4330e6,28 Feb 2007,"rrdtool plugin: Implemented the settings `StepSize', `HeartBeat', `RRARows', and `XFF'.

The documentation has been updated, too.",173,data/crawl/collectd/hunk_458.cpp,,,data/crawl/collectd/old_hunk_458.cpp,data/crawl/collectd/new_hunk_458.cpp,[6],[6]
https://github.com/collectd/collectd/commit/1ea16edee7a91e5fa077c2e368f4f608cd4330e6,28 Feb 2007,"rrdtool plugin: Implemented the settings `StepSize', `HeartBeat', `RRARows', and `XFF'.

The documentation has been updated, too.",173,data/crawl/collectd/hunk_459.cpp,,,data/crawl/collectd/old_hunk_459.cpp,data/crawl/collectd/new_hunk_459.cpp,[],"[8, 19, 30, 41]"
https://github.com/collectd/collectd/commit/2d897a731bd23f7a33b89e7b7e3004b6b26b5a94,28 Feb 2007,"Introduce two global variables: `hostname_g' and `interval_g'.

hostname_g: Hostname we're running on. May be set in the configfile with the
  `Hostname'-option. This replaces the global `hostname'-variable exported by
  `plugin.c'.
interval_g: Interval in which we query the read plugins. This replaces the
  `COLLECTD_STEP'-define and is configurable using the `Interval'-option.",190,data/crawl/collectd/hunk_460.cpp,,,data/crawl/collectd/old_hunk_460.cpp,data/crawl/collectd/new_hunk_460.cpp,[],"[16, 29]"
https://github.com/collectd/collectd/commit/2d897a731bd23f7a33b89e7b7e3004b6b26b5a94,28 Feb 2007,"Introduce two global variables: `hostname_g' and `interval_g'.

hostname_g: Hostname we're running on. May be set in the configfile with the
  `Hostname'-option. This replaces the global `hostname'-variable exported by
  `plugin.c'.
interval_g: Interval in which we query the read plugins. This replaces the
  `COLLECTD_STEP'-define and is configurable using the `Interval'-option.",190,data/crawl/collectd/hunk_461.cpp,,,data/crawl/collectd/old_hunk_461.cpp,data/crawl/collectd/new_hunk_461.cpp,"[5, 10]","[5, 10]"
https://github.com/collectd/collectd/commit/6517e56f02007d10a46a33916c1f94b3e88a159c,28 Feb 2007,"irq plugin: Fixed some issues, renamed RRD-files.

I've looked into your plugin in more detail just now and fixed the
following issues:
- Moved the RRD-files into a subdirectory called `irq'. That's how it's
  going to be done in the next major version.
- Renamed the DS to `value' and set the maximum value to 65535. I'm not
  sure if this maximum value is big enough..?
- Don't use `LOG_EMERG' when config-problems are found. Rather, print to
  `STDERR' since it's still available during configuration.
- Use `strsplit' when parsing `/proc/interrupts'. This makes much of the
  pointer-arithmetic obsolete and the code much more readable.
- The device names are not used in the filename, though I'm not certain
  if that's the way to go here.. On my workstation there is a line like
  this:
    193:      28492   IO-APIC-level  uhci_hcd, uhci_hcd, uhci_hcd, ehci_hcd
  Apparently the interrupt is shared among several USB-controllers. My
  problem here is, that as soon as one device is deactivated or the
  order changes, so does the filename. Besides, a filename along the
  lines of `irq-193-uhci_hcd-ehci_hcd.rrd' would be nice.
  On another machine I have this line:
    217:   50173955          0   IO-APIC-level  3ware Storage Controller
  Where one device somehow manages to write a _description_ in there.
  This makes detection of such shared interrupts as above tricky.
  If anyone has a good idea how to use the last part of the lines for a
  filename, please let me know.",113,data/crawl/collectd/hunk_462.cpp,,,data/crawl/collectd/old_hunk_462.cpp,data/crawl/collectd/new_hunk_462.cpp,[],"[12, 24]"
https://github.com/collectd/collectd/commit/fa67d36eb4ef20d3b1988b153c86e57c19ed2e2b,15 Feb 2007,rrdtool plugin: Use the AVL-tree to implement the cache.,137,data/crawl/collectd/hunk_463.cpp,,,data/crawl/collectd/old_hunk_463.cpp,data/crawl/collectd/new_hunk_463.cpp,[],[8]
https://github.com/collectd/collectd/commit/276490e1d23db4c7db710075954655583c728e3e,12 Feb 2007,Removed `src/libconfig/*'.,2235,data/crawl/collectd/hunk_464.cpp,,,data/crawl/collectd/old_hunk_464.cpp,data/crawl/collectd/new_hunk_464.cpp,"[173, 174, 188, 244, 266, 272, 310, 318, 338, 345]",[]
https://github.com/collectd/collectd/commit/276490e1d23db4c7db710075954655583c728e3e,12 Feb 2007,Removed `src/libconfig/*'.,2235,data/crawl/collectd/hunk_465.cpp,,,data/crawl/collectd/old_hunk_465.cpp,data/crawl/collectd/new_hunk_465.cpp,"[74, 85, 117, 125, 134, 170, 175, 191]",[]
https://github.com/collectd/collectd/commit/276490e1d23db4c7db710075954655583c728e3e,12 Feb 2007,Removed `src/libconfig/*'.,2235,data/crawl/collectd/hunk_466.cpp,,,data/crawl/collectd/old_hunk_466.cpp,data/crawl/collectd/new_hunk_466.cpp,"[89, 94]",[]
https://github.com/collectd/collectd/commit/276490e1d23db4c7db710075954655583c728e3e,12 Feb 2007,Removed `src/libconfig/*'.,2235,data/crawl/collectd/hunk_467.cpp,,,data/crawl/collectd/old_hunk_467.cpp,data/crawl/collectd/new_hunk_467.cpp,"[369, 658, 680, 710, 734]",[]
https://github.com/collectd/collectd/commit/276490e1d23db4c7db710075954655583c728e3e,12 Feb 2007,Removed `src/libconfig/*'.,2235,data/crawl/collectd/hunk_468.cpp,,,data/crawl/collectd/old_hunk_468.cpp,data/crawl/collectd/new_hunk_468.cpp,"[4, 5, 10, 19, 23, 27, 52, 58, 65, 67, 69, 70, 71, 72, 74]",[]
https://github.com/collectd/collectd/commit/108c20b23f2ca3d0ae67a44dfd8da31a7db7544c,11 Feb 2007,"Changed from the old `libconfig' to the new `liboconfig'.

Much work lies in front of us.. :/",1437,data/crawl/collectd/hunk_469.cpp,,,data/crawl/collectd/old_hunk_469.cpp,data/crawl/collectd/new_hunk_469.cpp,[5],[5]
https://github.com/collectd/collectd/commit/108c20b23f2ca3d0ae67a44dfd8da31a7db7544c,11 Feb 2007,"Changed from the old `libconfig' to the new `liboconfig'.

Much work lies in front of us.. :/",1437,data/crawl/collectd/hunk_470.cpp,,,data/crawl/collectd/old_hunk_470.cpp,data/crawl/collectd/new_hunk_470.cpp,[6],[]
https://github.com/collectd/collectd/commit/108c20b23f2ca3d0ae67a44dfd8da31a7db7544c,11 Feb 2007,"Changed from the old `libconfig' to the new `liboconfig'.

Much work lies in front of us.. :/",1437,data/crawl/collectd/hunk_471.cpp,,,data/crawl/collectd/old_hunk_471.cpp,data/crawl/collectd/new_hunk_471.cpp,"[112, 122, 171, 179, 185, 244, 250, 281, 302]",[]
https://github.com/collectd/collectd/commit/108c20b23f2ca3d0ae67a44dfd8da31a7db7544c,11 Feb 2007,"Changed from the old `libconfig' to the new `liboconfig'.

Much work lies in front of us.. :/",1437,data/crawl/collectd/hunk_472.cpp,,,data/crawl/collectd/old_hunk_472.cpp,data/crawl/collectd/new_hunk_472.cpp,[],"[41, 60]"
https://github.com/collectd/collectd/commit/108c20b23f2ca3d0ae67a44dfd8da31a7db7544c,11 Feb 2007,"Changed from the old `libconfig' to the new `liboconfig'.

Much work lies in front of us.. :/",1437,data/crawl/collectd/hunk_473.cpp,,,data/crawl/collectd/old_hunk_473.cpp,data/crawl/collectd/new_hunk_473.cpp,[],"[131, 187]"
https://github.com/collectd/collectd/commit/b32df633638e1869ecba45290bf502b243092241,28 Jan 2007,"unixsock plugin, collectd-nagios: Use the hostname, too, to identify values.

This is, of course, necessary, because many hosts may submit their values.",46,data/crawl/collectd/hunk_474.cpp,,,data/crawl/collectd/old_hunk_474.cpp,data/crawl/collectd/new_hunk_474.cpp,[3],[3]
https://github.com/collectd/collectd/commit/b32df633638e1869ecba45290bf502b243092241,28 Jan 2007,"unixsock plugin, collectd-nagios: Use the hostname, too, to identify values.

This is, of course, necessary, because many hosts may submit their values.",46,data/crawl/collectd/hunk_475.cpp,,,data/crawl/collectd/old_hunk_475.cpp,data/crawl/collectd/new_hunk_475.cpp,[3],[3]
https://github.com/collectd/collectd/commit/88def4953cea36e3425dfa0a9caa5b5aa52c45f1,28 Jan 2007,collectd-nagios: Added an option to select certain DSes and updated the usage.,74,data/crawl/collectd/hunk_476.cpp,,,data/crawl/collectd/old_hunk_476.cpp,data/crawl/collectd/new_hunk_476.cpp,[0],[0]
https://github.com/collectd/collectd/commit/88def4953cea36e3425dfa0a9caa5b5aa52c45f1,28 Jan 2007,collectd-nagios: Added an option to select certain DSes and updated the usage.,74,data/crawl/collectd/hunk_477.cpp,,,data/crawl/collectd/old_hunk_477.cpp,data/crawl/collectd/new_hunk_477.cpp,"[7, 12]",[6]
https://github.com/collectd/collectd/commit/88def4953cea36e3425dfa0a9caa5b5aa52c45f1,28 Jan 2007,collectd-nagios: Added an option to select certain DSes and updated the usage.,74,data/crawl/collectd/hunk_478.cpp,,,data/crawl/collectd/old_hunk_478.cpp,data/crawl/collectd/new_hunk_478.cpp,[],"[11, 19]"
https://github.com/collectd/collectd/commit/76c0a54209a25f62b1fe16d9b00b41dde5725ae0,28 Jan 2007,collectd-nagios: Added a small program to perform Nagios-compatible checks on values.,434,data/crawl/collectd/hunk_479.cpp,,,data/crawl/collectd/old_hunk_479.cpp,data/crawl/collectd/new_hunk_479.cpp,[],"[121, 134, 142, 148, 153, 167, 175, 214, 247, 253, 259, 285, 291, 297, 303, 330, 336, 341, 346, 362, 367]"
https://github.com/collectd/collectd/commit/f34da8f00133da85d1538f8bc7dd118f30f853ea,28 Jan 2007,unixsock plugin: Transmit the DS name so clients can chose which values they need.,38,data/crawl/collectd/hunk_480.cpp,,,data/crawl/collectd/old_hunk_480.cpp,data/crawl/collectd/new_hunk_480.cpp,"[5, 9, 11]","[9, 14, 17, 19, 21]"
https://github.com/collectd/collectd/commit/86090b3d409634d016da7bbb0cbe43ed5a851d30,28 Jan 2007,"unixsock plugin: Added a first version of a UNIX-socket output plugin.

The goal is to build a nagios-interface on top of this.",670,data/crawl/collectd/hunk_481.cpp,,,data/crawl/collectd/old_hunk_481.cpp,data/crawl/collectd/new_hunk_481.cpp,[],"[464, 468, 470, 476, 524]"
https://github.com/collectd/collectd/commit/1f4c5bf162c41be72423020bfe61c9fabe5fea47,22 Jan 2007,apcups plugin: Converted to the new plugin interface.,290,data/crawl/collectd/hunk_482.cpp,,,data/crawl/collectd/old_hunk_482.cpp,data/crawl/collectd/new_hunk_482.cpp,[31],[]
https://github.com/collectd/collectd/commit/a163637d3ee97e553ea7024608deb5e2d9e3d9f3,16 Jan 2007,"src/common.c: Removed `log_update_file' and `log_create_file'.

Also changed the license to GPLv2-only and updated the copyright date.",188,data/crawl/collectd/hunk_483.cpp,,,data/crawl/collectd/old_hunk_483.cpp,data/crawl/collectd/new_hunk_483.cpp,"[19, 48, 50, 130]",[]
https://github.com/collectd/collectd/commit/f5b4f424b9a0eb11c4cc98513971e1a3ddf40b3b,16 Jan 2007,"csv plugin: Added this plugin which writes to CSV files.

This is basically the old `logfile' functionality.",219,data/crawl/collectd/hunk_484.cpp,,,data/crawl/collectd/old_hunk_484.cpp,data/crawl/collectd/new_hunk_484.cpp,[],"[129, 131, 133, 194]"
https://github.com/collectd/collectd/commit/19af98473c1468ad538d5d2b9246ca58c624a422,14 Jan 2007,"rrdtool plugin: Implemented caching of values to minimize IO operations.

Use the `CacheTimeout' option to enable this feature.",256,data/crawl/collectd/hunk_485.cpp,,,data/crawl/collectd/old_hunk_485.cpp,data/crawl/collectd/new_hunk_485.cpp,[],[37]
https://github.com/collectd/collectd/commit/5b9630d76f7a899633037045e753ebf0542ebbef,03 Dec 2006,"email plugin: Limit the `MaxConns' option by a hardcoded value.

Because typos (and ``typos'', i. e. dumb users) happen, it's better to not
allow INT_MAX connections. The problem is that on 32bit machines this would
 a) create 2147483648 threads
 b) allocate (at least) 512 GBytes of memory
which would result in certain death of either the daemon or the system.

This patch limits the number of connections (and thus threads and allocated
memory) to 16384, which ought to be enough for most people. Those, who need
more connections (and can accomplish this, even though there are quite narrow
OS limits) will need to recompile themselves.",14,data/crawl/collectd/hunk_486.cpp,,,data/crawl/collectd/old_hunk_486.cpp,data/crawl/collectd/new_hunk_486.cpp,[],"[4, 10]"
https://github.com/collectd/collectd/commit/403e429f70e11ac11b6d5af174322b01e45b810a,20 Nov 2006,"src/utils_ignorelist.[ch]: Renamed some functions. Internal changes.

Mostly renamed variables, but also changed some return values and inserted
asserts where appropriate.",281,data/crawl/collectd/hunk_487.cpp,,,data/crawl/collectd/old_hunk_487.cpp,data/crawl/collectd/new_hunk_487.cpp,[],"[5, 12]"
https://github.com/collectd/collectd/commit/dba2d8d17d4ec56bcd3f74c1f13c378aceec7ab6,22 Oct 2006,"More improvements on the named/dns plugin.

The `dnstop.c' code now contains my IPv6 patch to capture IPv6 traffic. The
plugin captures both, queries and replies, and collects statistics
accordingly. This means that the qtype of queries and the rcode of replies are
collected. The plugin can now be configured to ignore certain sources, but
this functionality is to be improved.",997,data/crawl/collectd/hunk_488.cpp,,,data/crawl/collectd/old_hunk_488.cpp,data/crawl/collectd/new_hunk_488.cpp,[37],[23]
https://github.com/collectd/collectd/commit/dba2d8d17d4ec56bcd3f74c1f13c378aceec7ab6,22 Oct 2006,"More improvements on the named/dns plugin.

The `dnstop.c' code now contains my IPv6 patch to capture IPv6 traffic. The
plugin captures both, queries and replies, and collects statistics
accordingly. This means that the qtype of queries and the rcode of replies are
collected. The plugin can now be configured to ignore certain sources, but
this functionality is to be improved.",997,data/crawl/collectd/hunk_489.cpp,,,data/crawl/collectd/old_hunk_489.cpp,data/crawl/collectd/new_hunk_489.cpp,"[22, 60, 77]",[]
https://github.com/collectd/collectd/commit/dba2d8d17d4ec56bcd3f74c1f13c378aceec7ab6,22 Oct 2006,"More improvements on the named/dns plugin.

The `dnstop.c' code now contains my IPv6 patch to capture IPv6 traffic. The
plugin captures both, queries and replies, and collects statistics
accordingly. This means that the qtype of queries and the rcode of replies are
collected. The plugin can now be configured to ignore certain sources, but
this functionality is to be improved.",997,data/crawl/collectd/hunk_490.cpp,,,data/crawl/collectd/old_hunk_490.cpp,data/crawl/collectd/new_hunk_490.cpp,[3],[]
https://github.com/collectd/collectd/commit/dba2d8d17d4ec56bcd3f74c1f13c378aceec7ab6,22 Oct 2006,"More improvements on the named/dns plugin.

The `dnstop.c' code now contains my IPv6 patch to capture IPv6 traffic. The
plugin captures both, queries and replies, and collects statistics
accordingly. This means that the qtype of queries and the rcode of replies are
collected. The plugin can now be configured to ignore certain sources, but
this functionality is to be improved.",997,data/crawl/collectd/hunk_491.cpp,,,data/crawl/collectd/old_hunk_491.cpp,data/crawl/collectd/new_hunk_491.cpp,[2],[2]
https://github.com/collectd/collectd/commit/dba2d8d17d4ec56bcd3f74c1f13c378aceec7ab6,22 Oct 2006,"More improvements on the named/dns plugin.

The `dnstop.c' code now contains my IPv6 patch to capture IPv6 traffic. The
plugin captures both, queries and replies, and collects statistics
accordingly. This means that the qtype of queries and the rcode of replies are
collected. The plugin can now be configured to ignore certain sources, but
this functionality is to be improved.",997,data/crawl/collectd/hunk_492.cpp,,,data/crawl/collectd/old_hunk_492.cpp,data/crawl/collectd/new_hunk_492.cpp,[8],[8]
https://github.com/collectd/collectd/commit/dba2d8d17d4ec56bcd3f74c1f13c378aceec7ab6,22 Oct 2006,"More improvements on the named/dns plugin.

The `dnstop.c' code now contains my IPv6 patch to capture IPv6 traffic. The
plugin captures both, queries and replies, and collects statistics
accordingly. This means that the qtype of queries and the rcode of replies are
collected. The plugin can now be configured to ignore certain sources, but
this functionality is to be improved.",997,data/crawl/collectd/hunk_493.cpp,,,data/crawl/collectd/old_hunk_493.cpp,data/crawl/collectd/new_hunk_493.cpp,"[5, 10]","[5, 10]"
https://github.com/collectd/collectd/commit/dba2d8d17d4ec56bcd3f74c1f13c378aceec7ab6,22 Oct 2006,"More improvements on the named/dns plugin.

The `dnstop.c' code now contains my IPv6 patch to capture IPv6 traffic. The
plugin captures both, queries and replies, and collects statistics
accordingly. This means that the qtype of queries and the rcode of replies are
collected. The plugin can now be configured to ignore certain sources, but
this functionality is to be improved.",997,data/crawl/collectd/hunk_494.cpp,,,data/crawl/collectd/old_hunk_494.cpp,data/crawl/collectd/new_hunk_494.cpp,[5],[5]
https://github.com/collectd/collectd/commit/dba2d8d17d4ec56bcd3f74c1f13c378aceec7ab6,22 Oct 2006,"More improvements on the named/dns plugin.

The `dnstop.c' code now contains my IPv6 patch to capture IPv6 traffic. The
plugin captures both, queries and replies, and collects statistics
accordingly. This means that the qtype of queries and the rcode of replies are
collected. The plugin can now be configured to ignore certain sources, but
this functionality is to be improved.",997,data/crawl/collectd/hunk_495.cpp,,,data/crawl/collectd/old_hunk_495.cpp,data/crawl/collectd/new_hunk_495.cpp,[2],[2]
https://github.com/collectd/collectd/commit/c553f66cf2e21a1948125f30b8bd638d26701b41,20 Oct 2006,"named plugin: Many many more fixes to get the plugin working.

So far the QTypes are collected, and nothing else. But the core pcap-capturing
and communication over the pipe work now.",728,data/crawl/collectd/hunk_496.cpp,,,data/crawl/collectd/old_hunk_496.cpp,data/crawl/collectd/new_hunk_496.cpp,[],[3]
https://github.com/collectd/collectd/commit/c553f66cf2e21a1948125f30b8bd638d26701b41,20 Oct 2006,"named plugin: Many many more fixes to get the plugin working.

So far the QTypes are collected, and nothing else. But the core pcap-capturing
and communication over the pipe work now.",728,data/crawl/collectd/hunk_497.cpp,,,data/crawl/collectd/old_hunk_497.cpp,data/crawl/collectd/new_hunk_497.cpp,[],[3]
https://github.com/collectd/collectd/commit/c553f66cf2e21a1948125f30b8bd638d26701b41,20 Oct 2006,"named plugin: Many many more fixes to get the plugin working.

So far the QTypes are collected, and nothing else. But the core pcap-capturing
and communication over the pipe work now.",728,data/crawl/collectd/hunk_498.cpp,,,data/crawl/collectd/old_hunk_498.cpp,data/crawl/collectd/new_hunk_498.cpp,[],[3]
https://github.com/collectd/collectd/commit/c553f66cf2e21a1948125f30b8bd638d26701b41,20 Oct 2006,"named plugin: Many many more fixes to get the plugin working.

So far the QTypes are collected, and nothing else. But the core pcap-capturing
and communication over the pipe work now.",728,data/crawl/collectd/hunk_499.cpp,,,data/crawl/collectd/old_hunk_499.cpp,data/crawl/collectd/new_hunk_499.cpp,[],[3]
https://github.com/collectd/collectd/commit/c553f66cf2e21a1948125f30b8bd638d26701b41,20 Oct 2006,"named plugin: Many many more fixes to get the plugin working.

So far the QTypes are collected, and nothing else. But the core pcap-capturing
and communication over the pipe work now.",728,data/crawl/collectd/hunk_500.cpp,,,data/crawl/collectd/old_hunk_500.cpp,data/crawl/collectd/new_hunk_500.cpp,[],[3]
https://github.com/collectd/collectd/commit/c553f66cf2e21a1948125f30b8bd638d26701b41,20 Oct 2006,"named plugin: Many many more fixes to get the plugin working.

So far the QTypes are collected, and nothing else. But the core pcap-capturing
and communication over the pipe work now.",728,data/crawl/collectd/hunk_501.cpp,,,data/crawl/collectd/old_hunk_501.cpp,data/crawl/collectd/new_hunk_501.cpp,[],[3]
https://github.com/collectd/collectd/commit/c553f66cf2e21a1948125f30b8bd638d26701b41,20 Oct 2006,"named plugin: Many many more fixes to get the plugin working.

So far the QTypes are collected, and nothing else. But the core pcap-capturing
and communication over the pipe work now.",728,data/crawl/collectd/hunk_502.cpp,,,data/crawl/collectd/old_hunk_502.cpp,data/crawl/collectd/new_hunk_502.cpp,"[326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339]",[]
https://github.com/collectd/collectd/commit/1e7b5f4e249a6c30ef39dcba63dca317fc89e314,03 Oct 2006,Added a first rough draft of the new named plugin.,1720,data/crawl/collectd/hunk_503.cpp,,,data/crawl/collectd/old_hunk_503.cpp,data/crawl/collectd/new_hunk_503.cpp,[],"[698, 1202, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1291, 1297, 1307, 1312, 1322, 1349]"
https://github.com/collectd/collectd/commit/458fef2e95011c5ac9037f35421ee5262c4da42a,25 Jun 2006,"configfile: Be more verbose if the `Server' or `Local' modes are not available.

This happends if not linking against librrd. Some people missed the summary at
the end of the configure script and the error message wasn't helping them.",21,data/crawl/collectd/hunk_504.cpp,,,data/crawl/collectd/old_hunk_504.cpp,data/crawl/collectd/new_hunk_504.cpp,[],"[6, 16]"
https://github.com/collectd/collectd/commit/4302fb19fb2719b0dca2e02a9416d77c11ae6a12,25 Jun 2006,collectd-3.9: Removed `src/libping' since it's not used.,3082,data/crawl/collectd/hunk_505.cpp,,,data/crawl/collectd/old_hunk_505.cpp,data/crawl/collectd/new_hunk_505.cpp,[257],[]
https://github.com/collectd/collectd/commit/4302fb19fb2719b0dca2e02a9416d77c11ae6a12,25 Jun 2006,collectd-3.9: Removed `src/libping' since it's not used.,3082,data/crawl/collectd/hunk_506.cpp,,,data/crawl/collectd/old_hunk_506.cpp,data/crawl/collectd/new_hunk_506.cpp,[220],[]
https://github.com/collectd/collectd/commit/1f8b06df4f907658bea49c47dd4e8329fdbc8099,25 Jun 2006,Copied missing files from the subversion repository.,2758,data/crawl/collectd/hunk_507.cpp,,,data/crawl/collectd/old_hunk_507.cpp,data/crawl/collectd/new_hunk_507.cpp,[],[220]
https://github.com/collectd/collectd/commit/569a23ffadffa658bd7af8c58be6f36e4e8a6854,10 Jun 2006,octo@casella:~/collectd $ svn merge -r753:807 trunk branches/processes,2143,data/crawl/collectd/hunk_508.cpp,,,data/crawl/collectd/old_hunk_508.cpp,data/crawl/collectd/new_hunk_508.cpp,[34],[]
https://github.com/collectd/collectd/commit/569a23ffadffa658bd7af8c58be6f36e4e8a6854,10 Jun 2006,octo@casella:~/collectd $ svn merge -r753:807 trunk branches/processes,2143,data/crawl/collectd/hunk_509.cpp,,,data/crawl/collectd/old_hunk_509.cpp,data/crawl/collectd/new_hunk_509.cpp,"[12, 30]","[16, 52, 119]"
https://github.com/collectd/collectd/commit/09cc422eeae5dd0fa1e5f1f6b472b8c959b315d9,06 Jun 2006,"octo@leeloo:~/collectd $ svn merge -r737:784 branches/apcups trunk

The trunk did not compile with the `apcups' plugin enabled. Since it's enabled
by default some extra action was neccessary. The `apcups' plugin in the branch
compiles and may be useable, so I'm merging it back to get to some consistent
state.",851,data/crawl/collectd/hunk_510.cpp,,,data/crawl/collectd/old_hunk_510.cpp,data/crawl/collectd/new_hunk_510.cpp,[34],[]
https://github.com/collectd/collectd/commit/09cc422eeae5dd0fa1e5f1f6b472b8c959b315d9,06 Jun 2006,"octo@leeloo:~/collectd $ svn merge -r737:784 branches/apcups trunk

The trunk did not compile with the `apcups' plugin enabled. Since it's enabled
by default some extra action was neccessary. The `apcups' plugin in the branch
compiles and may be useable, so I'm merging it back to get to some consistent
state.",851,data/crawl/collectd/hunk_511.cpp,,,data/crawl/collectd/old_hunk_511.cpp,data/crawl/collectd/new_hunk_511.cpp,"[12, 30]","[16, 52]"
https://github.com/collectd/collectd/commit/09cc422eeae5dd0fa1e5f1f6b472b8c959b315d9,06 Jun 2006,"octo@leeloo:~/collectd $ svn merge -r737:784 branches/apcups trunk

The trunk did not compile with the `apcups' plugin enabled. Since it's enabled
by default some extra action was neccessary. The `apcups' plugin in the branch
compiles and may be useable, so I'm merging it back to get to some consistent
state.",851,data/crawl/collectd/hunk_512.cpp,,,data/crawl/collectd/old_hunk_512.cpp,data/crawl/collectd/new_hunk_512.cpp,[],[51]
https://github.com/collectd/collectd/commit/29713f41f326a923dce84c2e1f8d581a893478b9,24 May 2006,Removed all the conflicts from the apcups-plugin again.,390,data/crawl/collectd/hunk_513.cpp,,,data/crawl/collectd/old_hunk_513.cpp,data/crawl/collectd/new_hunk_513.cpp,"[22, 64, 165]","[17, 48, 114]"
https://github.com/collectd/collectd/commit/db336a80e7f9e46170e637cc140756d35a90da66,22 May 2006,"1. (major) Code no longer calls exit() when it encounters an error. It
will send an appropriate error via syslog instead.

2. Adopted the code recommended by Octo (thx)  It was considerably cleaner
and easier to understand. Not to mention the plugin size is smaller. A win
all around ;-) I rearranged some, though.

3. Fixed the indentation. I believe I see what is recommended by octo....
Hopefully, it is now similar to the other plugins.

4. On a failure to connect apcups will log the initial failure via syslog. It will
only log another failure after the integer apcConnStatus rolls over. This should prevent
apcups from overloading syslog.

5. Other minor code cleanups.",376,data/crawl/collectd/hunk_514.cpp,,,data/crawl/collectd/old_hunk_514.cpp,data/crawl/collectd/new_hunk_514.cpp,"[14, 32]","[22, 64, 165]"
https://github.com/collectd/collectd/commit/00e902810c0b76e4e110c1b53dbb2931114ff927,20 May 2006,"branches/apcups/src/apcups.c:
  Restored changes made to the trunk.",377,data/crawl/collectd/hunk_515.cpp,,,data/crawl/collectd/old_hunk_515.cpp,data/crawl/collectd/new_hunk_515.cpp,[102],[]
https://github.com/collectd/collectd/commit/00e902810c0b76e4e110c1b53dbb2931114ff927,20 May 2006,"branches/apcups/src/apcups.c:
  Restored changes made to the trunk.",377,data/crawl/collectd/hunk_516.cpp,,,data/crawl/collectd/old_hunk_516.cpp,data/crawl/collectd/new_hunk_516.cpp,[50],[]
https://github.com/collectd/collectd/commit/00e902810c0b76e4e110c1b53dbb2931114ff927,20 May 2006,"branches/apcups/src/apcups.c:
  Restored changes made to the trunk.",377,data/crawl/collectd/hunk_517.cpp,,,data/crawl/collectd/old_hunk_517.cpp,data/crawl/collectd/new_hunk_517.cpp,"[11, 18, 25, 32, 39, 46, 53, 60]",[]
https://github.com/collectd/collectd/commit/49cd2468501a2a492fa9de5cd1819be821a77c5a,19 May 2006,"1. (major) The code in apcups.c was adapted from apcupsd-3.12.3 the command
'apcaccess status'.  The code I used calls 'exit()' if it cannot connect
to the apcupsd daemon. A reasonable action for a standalone program.
Not good for a monitoring daemon.  This was completely an oversight on my part.

2. (minor) Some dead code is now defined out if APCMAIN is not defined.

3. (minor) My units in collection.cgi where incorrect.

4. (minor) if the apcups plugin cannot connect to the apcupsd it will
simply not call the submit routines allowing the rrd files to fill with NAN
as expected, rather than submitting zeros.",393,data/crawl/collectd/hunk_518.cpp,,,data/crawl/collectd/old_hunk_518.cpp,data/crawl/collectd/new_hunk_518.cpp,[],[50]
https://github.com/collectd/collectd/commit/49cd2468501a2a492fa9de5cd1819be821a77c5a,19 May 2006,"1. (major) The code in apcups.c was adapted from apcupsd-3.12.3 the command
'apcaccess status'.  The code I used calls 'exit()' if it cannot connect
to the apcupsd daemon. A reasonable action for a standalone program.
Not good for a monitoring daemon.  This was completely an oversight on my part.

2. (minor) Some dead code is now defined out if APCMAIN is not defined.

3. (minor) My units in collection.cgi where incorrect.

4. (minor) if the apcups plugin cannot connect to the apcupsd it will
simply not call the submit routines allowing the rrd files to fill with NAN
as expected, rather than submitting zeros.",393,data/crawl/collectd/hunk_519.cpp,,,data/crawl/collectd/old_hunk_519.cpp,data/crawl/collectd/new_hunk_519.cpp,[],"[11, 18, 25, 32, 39, 46, 53, 60]"
https://github.com/collectd/collectd/commit/45edddd42012056e61fc167b1fcc8fa9455eac94,19 May 2006,"apcups.c:
- Improved the `do_pthreads_status' function to not have the same code 10 times (or so).",135,data/crawl/collectd/hunk_520.cpp,,,data/crawl/collectd/old_hunk_520.cpp,data/crawl/collectd/new_hunk_520.cpp,"[17, 27, 30, 33, 36, 39, 42, 45, 48, 51, 54, 57, 60, 63, 66, 69, 72]","[12, 30]"
https://github.com/collectd/collectd/commit/368747beeceb5301223397253e9158eb8bd56da5,19 May 2006,"src/apcups.c:
- Fixed more indentation.
- Made internal-only functions static.",270,data/crawl/collectd/hunk_521.cpp,,,data/crawl/collectd/old_hunk_521.cpp,data/crawl/collectd/new_hunk_521.cpp,"[42, 52, 55, 58, 61, 64, 67, 70, 73, 76, 79, 82, 85, 88, 91, 94, 97]","[42, 52, 55, 58, 61, 64, 67, 70, 73, 76, 79, 82, 85, 88, 91, 94, 97]"
https://github.com/collectd/collectd/commit/bfec4e6fa12d3ff5f3a4f36cc35b296abe2c04ad,19 May 2006,"Added the apcups plugin to the build system.
Removed the av?snprintf-auxiliary-functions from the apcups-plugin.
`fixed' indentation in the apcups-plugin (not done yet).",372,data/crawl/collectd/hunk_522.cpp,,,data/crawl/collectd/old_hunk_522.cpp,data/crawl/collectd/new_hunk_522.cpp,[107],[32]
https://github.com/collectd/collectd/commit/148087def9520d4bd4a343761defefa5d06a3215,18 May 2006,Added `apcups.c' by Anthony Gialluca <tonyabg at charter.net>,827,data/crawl/collectd/hunk_523.cpp,,,data/crawl/collectd/old_hunk_523.cpp,data/crawl/collectd/new_hunk_523.cpp,[],"[248, 477, 487, 490, 493, 496, 499, 502, 505, 508, 511, 514, 517, 520, 523, 526, 529, 532]"
https://github.com/collectd/collectd/commit/edf526c1769299f6bd1f30d58b866e5066f5f280,08 May 2006,"Removed `trunk/src/libping/', since it's obsolete.",337,data/crawl/collectd/hunk_524.cpp,,,data/crawl/collectd/old_hunk_524.cpp,data/crawl/collectd/new_hunk_524.cpp,[257],[]
https://github.com/collectd/collectd/commit/8822d7c9d8e86358cc4bb86e306ff90e40a15401,21 Apr 2006,octo@crystal:~/Projects/collectd $ svn merge -r646:651 trunk tags/collectd-3.9.1,36,data/crawl/collectd/hunk_525.cpp,,,data/crawl/collectd/old_hunk_525.cpp,data/crawl/collectd/new_hunk_525.cpp,[3],[3]
https://github.com/collectd/collectd/commit/8822d7c9d8e86358cc4bb86e306ff90e40a15401,21 Apr 2006,octo@crystal:~/Projects/collectd $ svn merge -r646:651 trunk tags/collectd-3.9.1,36,data/crawl/collectd/hunk_526.cpp,,,data/crawl/collectd/old_hunk_526.cpp,data/crawl/collectd/new_hunk_526.cpp,"[3, 5]","[3, 5]"
https://github.com/collectd/collectd/commit/953e326bb2a192db7f1763f89c2e62f1533ef7a7,21 Apr 2006,Cast pointer arithmetics to make weird gcc versions happy.,2,data/crawl/collectd/hunk_527.cpp,,,data/crawl/collectd/old_hunk_527.cpp,data/crawl/collectd/new_hunk_527.cpp,"[3, 5]","[3, 5]"
https://github.com/collectd/collectd/commit/67709bafd55d000ed76be9a2ee5271eea5936a4a,21 Apr 2006,"Fix for this:
  collectd.c: In function `pidfile_create':
  collectd.c:259: warning: int format, pid_t arg (arg 3)",2,data/crawl/collectd/hunk_528.cpp,,,data/crawl/collectd/old_hunk_528.cpp,data/crawl/collectd/new_hunk_528.cpp,[3],[3]
https://github.com/collectd/collectd/commit/3d57efd9b77ae9a5bd67efc4c8e4e5396ee0f600,14 Apr 2006,"Substituting colons with commas, to get comma seperated value (CSV) files.",37,data/crawl/collectd/hunk_529.cpp,,,data/crawl/collectd/old_hunk_529.cpp,data/crawl/collectd/new_hunk_529.cpp,[],[3]
https://github.com/collectd/collectd/commit/3d57efd9b77ae9a5bd67efc4c8e4e5396ee0f600,14 Apr 2006,"Substituting colons with commas, to get comma seperated value (CSV) files.",37,data/crawl/collectd/hunk_530.cpp,,,data/crawl/collectd/old_hunk_530.cpp,data/crawl/collectd/new_hunk_530.cpp,"[4, 5, 7]","[5, 7]"
https://github.com/collectd/collectd/commit/44cb6f804f46cc0a23968e27db129b86d058ac6e,13 Apr 2006,Applied patch by Christophe Kalt which adds the log-mode.,218,data/crawl/collectd/hunk_531.cpp,,,data/crawl/collectd/old_hunk_531.cpp,data/crawl/collectd/new_hunk_531.cpp,[],"[43, 44, 46, 121]"
https://github.com/collectd/collectd/commit/5001a461add250d65fbfb63c95beef4b8816cdc1,04 Apr 2006,Fixes so the cpu plugin compiles under Mac OS X,29,data/crawl/collectd/hunk_532.cpp,,,data/crawl/collectd/old_hunk_532.cpp,data/crawl/collectd/new_hunk_532.cpp,[7],[]
https://github.com/collectd/collectd/commit/daf3a589d4f4c47dabaf6f7f4a33fd7bb4140183,04 Apr 2006,Adds Mach/Darwin support for the cpu plugin. Also adds correcponding checks to configure.in,88,data/crawl/collectd/hunk_533.cpp,,,data/crawl/collectd/old_hunk_533.cpp,data/crawl/collectd/new_hunk_533.cpp,[],[8]
https://github.com/collectd/collectd/commit/a940d23ef82034df739be0addce0466660027425,04 Feb 2006,Patch for libping (icmp identifier) by Tommie Gannert,337,data/crawl/collectd/hunk_534.cpp,,,data/crawl/collectd/old_hunk_534.cpp,data/crawl/collectd/new_hunk_534.cpp,[],[257]
https://github.com/collectd/collectd/commit/61d0abe95ab3c7461ca948fdc8824d08ad48cc6d,04 Feb 2006,Added the first version of an own ping library..,998,data/crawl/collectd/hunk_535.cpp,,,data/crawl/collectd/old_hunk_535.cpp,data/crawl/collectd/new_hunk_535.cpp,[],[42]
https://github.com/collectd/collectd/commit/61d0abe95ab3c7461ca948fdc8824d08ad48cc6d,04 Feb 2006,Added the first version of an own ping library..,998,data/crawl/collectd/hunk_536.cpp,,,data/crawl/collectd/old_hunk_536.cpp,data/crawl/collectd/new_hunk_536.cpp,[],"[14, 20, 26, 30, 39, 51]"
https://github.com/collectd/collectd/commit/49275db235fdaa85f3bf82a25ca5e530f65448db,30 Jan 2006,Cleaned up `configfile.c',57,data/crawl/collectd/hunk_537.cpp,,,data/crawl/collectd/old_hunk_537.cpp,data/crawl/collectd/new_hunk_537.cpp,[26],[]
https://github.com/collectd/collectd/commit/3cf46d9689f6fae30e19f3898852083003862552,15 Jan 2006,"Fixed a but in the mysql module, so it builds as write-only module, too.
Shorted the command line options to `help' and `dont fork' only.
Brought `getopt' back: `libconfig' doesn't do what I want: Command line options are evaluated after config files. So I don't know what mode the daemon will be in when parsing the file. That's why I moved everything into the config file.
Removed `cf_callback_usage' again.
Changed `cf_read' to not need `argc' and `argv' anymore..",209,data/crawl/collectd/hunk_538.cpp,,,data/crawl/collectd/old_hunk_538.cpp,data/crawl/collectd/new_hunk_538.cpp,[],[8]
https://github.com/collectd/collectd/commit/3cf46d9689f6fae30e19f3898852083003862552,15 Jan 2006,"Fixed a but in the mysql module, so it builds as write-only module, too.
Shorted the command line options to `help' and `dont fork' only.
Brought `getopt' back: `libconfig' doesn't do what I want: Command line options are evaluated after config files. So I don't know what mode the daemon will be in when parsing the file. That's why I moved everything into the config file.
Removed `cf_callback_usage' again.
Changed `cf_read' to not need `argc' and `argv' anymore..",209,data/crawl/collectd/hunk_539.cpp,,,data/crawl/collectd/old_hunk_539.cpp,data/crawl/collectd/new_hunk_539.cpp,[13],[47]
https://github.com/collectd/collectd/commit/3cf46d9689f6fae30e19f3898852083003862552,15 Jan 2006,"Fixed a but in the mysql module, so it builds as write-only module, too.
Shorted the command line options to `help' and `dont fork' only.
Brought `getopt' back: `libconfig' doesn't do what I want: Command line options are evaluated after config files. So I don't know what mode the daemon will be in when parsing the file. That's why I moved everything into the config file.
Removed `cf_callback_usage' again.
Changed `cf_read' to not need `argc' and `argv' anymore..",209,data/crawl/collectd/hunk_540.cpp,,,data/crawl/collectd/old_hunk_540.cpp,data/crawl/collectd/new_hunk_540.cpp,[10],[]
https://github.com/collectd/collectd/commit/3cf46d9689f6fae30e19f3898852083003862552,15 Jan 2006,"Fixed a but in the mysql module, so it builds as write-only module, too.
Shorted the command line options to `help' and `dont fork' only.
Brought `getopt' back: `libconfig' doesn't do what I want: Command line options are evaluated after config files. So I don't know what mode the daemon will be in when parsing the file. That's why I moved everything into the config file.
Removed `cf_callback_usage' again.
Changed `cf_read' to not need `argc' and `argv' anymore..",209,data/crawl/collectd/hunk_541.cpp,,,data/crawl/collectd/old_hunk_541.cpp,data/crawl/collectd/new_hunk_541.cpp,"[7, 13, 41]",[]
https://github.com/collectd/collectd/commit/3cf46d9689f6fae30e19f3898852083003862552,15 Jan 2006,"Fixed a but in the mysql module, so it builds as write-only module, too.
Shorted the command line options to `help' and `dont fork' only.
Brought `getopt' back: `libconfig' doesn't do what I want: Command line options are evaluated after config files. So I don't know what mode the daemon will be in when parsing the file. That's why I moved everything into the config file.
Removed `cf_callback_usage' again.
Changed `cf_read' to not need `argc' and `argv' anymore..",209,data/crawl/collectd/hunk_542.cpp,,,data/crawl/collectd/old_hunk_542.cpp,data/crawl/collectd/new_hunk_542.cpp,[5],[]
https://github.com/collectd/collectd/commit/0334d1bf754bf285668cdbc4243a972495f25dd7,08 Jan 2006,"Moved `exit_usage' from `collectd.c' to `configfile.c' and renamed it to `cf_callback_usage'.
Removed the `getopt' code. Argument parsing is now done by `libconfig' as well.
Fixed a typo in `collectd.c' which prevented collectd from catching a SIGINT..",230,data/crawl/collectd/hunk_543.cpp,,,data/crawl/collectd/old_hunk_543.cpp,data/crawl/collectd/new_hunk_543.cpp,[5],[]
https://github.com/collectd/collectd/commit/0334d1bf754bf285668cdbc4243a972495f25dd7,08 Jan 2006,"Moved `exit_usage' from `collectd.c' to `configfile.c' and renamed it to `cf_callback_usage'.
Removed the `getopt' code. Argument parsing is now done by `libconfig' as well.
Fixed a typo in `collectd.c' which prevented collectd from catching a SIGINT..",230,data/crawl/collectd/hunk_544.cpp,,,data/crawl/collectd/old_hunk_544.cpp,data/crawl/collectd/new_hunk_544.cpp,"[68, 92]",[13]
https://github.com/collectd/collectd/commit/0334d1bf754bf285668cdbc4243a972495f25dd7,08 Jan 2006,"Moved `exit_usage' from `collectd.c' to `configfile.c' and renamed it to `cf_callback_usage'.
Removed the `getopt' code. Argument parsing is now done by `libconfig' as well.
Fixed a typo in `collectd.c' which prevented collectd from catching a SIGINT..",230,data/crawl/collectd/hunk_545.cpp,,,data/crawl/collectd/old_hunk_545.cpp,data/crawl/collectd/new_hunk_545.cpp,[5],"[5, 10, 23]"
https://github.com/collectd/collectd/commit/0334d1bf754bf285668cdbc4243a972495f25dd7,08 Jan 2006,"Moved `exit_usage' from `collectd.c' to `configfile.c' and renamed it to `cf_callback_usage'.
Removed the `getopt' code. Argument parsing is now done by `libconfig' as well.
Fixed a typo in `collectd.c' which prevented collectd from catching a SIGINT..",230,data/crawl/collectd/hunk_546.cpp,,,data/crawl/collectd/old_hunk_546.cpp,data/crawl/collectd/new_hunk_546.cpp,[],[10]
https://github.com/collectd/collectd/commit/424db8460223d3fb13cf96ba0e93b246c74639dc,20 Dec 2005,"Changed `plugin_set_dir' to take a `const' argument.
Reorganized the `configfile.c' file. Changed callback names, their order and added comments.
Added `cf_callback_mode_plugindir' to allow the config file to change the plugin directory.",210,data/crawl/collectd/hunk_547.cpp,,,data/crawl/collectd/old_hunk_547.cpp,data/crawl/collectd/new_hunk_547.cpp,"[15, 34]","[26, 32, 60, 97]"
https://github.com/collectd/collectd/commit/424db8460223d3fb13cf96ba0e93b246c74639dc,20 Dec 2005,"Changed `plugin_set_dir' to take a `const' argument.
Reorganized the `configfile.c' file. Changed callback names, their order and added comments.
Added `cf_callback_mode_plugindir' to allow the config file to change the plugin directory.",210,data/crawl/collectd/hunk_548.cpp,,,data/crawl/collectd/old_hunk_548.cpp,data/crawl/collectd/new_hunk_548.cpp,"[14, 20, 48]","[20, 48]"
https://github.com/collectd/collectd/commit/424db8460223d3fb13cf96ba0e93b246c74639dc,20 Dec 2005,"Changed `plugin_set_dir' to take a `const' argument.
Reorganized the `configfile.c' file. Changed callback names, their order and added comments.
Added `cf_callback_mode_plugindir' to allow the config file to change the plugin directory.",210,data/crawl/collectd/hunk_549.cpp,,,data/crawl/collectd/old_hunk_549.cpp,data/crawl/collectd/new_hunk_549.cpp,[12],[20]
https://github.com/collectd/collectd/commit/500559839355fc4061afe1d010d9f9479bca450d,19 Dec 2005,"Added to src/configfile.c:
  `cf_callback_options_mode': Callback for <Mode> options
  `cf_get_mode_option':       Function to query above options",143,data/crawl/collectd/hunk_550.cpp,,,data/crawl/collectd/old_hunk_550.cpp,data/crawl/collectd/new_hunk_550.cpp,[3],[]
https://github.com/collectd/collectd/commit/500559839355fc4061afe1d010d9f9479bca450d,19 Dec 2005,"Added to src/configfile.c:
  `cf_callback_options_mode': Callback for <Mode> options
  `cf_get_mode_option':       Function to query above options",143,data/crawl/collectd/hunk_551.cpp,,,data/crawl/collectd/old_hunk_551.cpp,data/crawl/collectd/new_hunk_551.cpp,[3],[]
https://github.com/collectd/collectd/commit/500559839355fc4061afe1d010d9f9479bca450d,19 Dec 2005,"Added to src/configfile.c:
  `cf_callback_options_mode': Callback for <Mode> options
  `cf_get_mode_option':       Function to query above options",143,data/crawl/collectd/hunk_552.cpp,,,data/crawl/collectd/old_hunk_552.cpp,data/crawl/collectd/new_hunk_552.cpp,[],"[11, 19, 25]"
https://github.com/collectd/collectd/commit/b6253c5e6ea5bfb4f2e3b5832eadc8be69629172,17 Dec 2005,"options, static, #if's and debugging",111,data/crawl/collectd/hunk_553.cpp,,,data/crawl/collectd/old_hunk_553.cpp,data/crawl/collectd/new_hunk_553.cpp,[8],[8]
