----++++src/client_side_request.cc
@@ -2065,6 +2065,21 @@ ClientHttpRequest::handleAdaptationFailure(int errDetail, bool bypassable)
         doCallouts();
 }
 
+void
+ClientHttpRequest::callException(const std::exception &amp;ex)
+{
+    if (const auto clientConn = getConn() ? getConn()-&gt;clientConnection : nullptr) {
+        if (Comm::IsConnOpen(clientConn)) {
+            debugs(85, 3, &quot;closing after exception: &quot; &lt;&lt; ex.what());
+            clientConn-&gt;close(); // initiate orderly top-to-bottom cleanup
+            return;
+        }
+    }
+    debugs(85, DBG_IMPORTANT, &quot;ClientHttpRequest exception without connection. Ignoring &quot; &lt;&lt; ex.what());
+    // XXX: Normally, we mustStop() but we cannot do that here because it is
+    // likely to leave Http::Stream and ConnStateData with a dangling http
+    // pointer. See r13480 or XXX in Http::Stream class description.
+}
 #endif
 
 // XXX: modify and use with ClientRequestContext::clientAccessCheckDone too.
----++++src/client_side_request.h
@@ -131,6 +131,7 @@ class ClientHttpRequest
         return Initiator::doneAll() &amp;&amp;
                BodyConsumer::doneAll() &amp;&amp; false;
     }
+    virtual void callException(const std::exception &amp;ex);
 #endif
 
 private:
----++++GitHub