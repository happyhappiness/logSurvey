@@ -92,13 +92,9 @@ Packer::append(const char *buf, int sz)
 }
 
 void
-Packer::Printf(const char *fmt,...)
+Packer::vappendf(const char *fmt, va_list args)
 {
-    va_list args;
-    va_start(args, fmt);
-
     assert(real_handler && packer_vprintf);
     packer_vprintf(real_handler, fmt, args);
-    va_end(args);
 }
 
@@ -29,7 +29,7 @@ class Packer : public Packable
 
     /* Packable API */
     virtual void append(const char *buf, int size);
-    virtual void Printf(const char *fmt,...) PRINTF_FORMAT_ARG2;
+    virtual void vappendf(const char *fmt, va_list ap);
 
     /* protected, use interface functions instead */
     append_f append_;
@@ -58,7 +58,20 @@ class Packable
      * \note  we use Printf instead of printf so the compiler won't
      *        think we're calling the libc printf()
      */
-    virtual void Printf(const char *fmt,...) PRINTF_FORMAT_ARG2 = 0;
+    void Printf(const char *fmt,...) PRINTF_FORMAT_ARG2
+    {
+        va_list args;
+        va_start(args, fmt);
+        vappendf(fmt, args);
+        va_end(args);
+    }
+
+    /** Append operation, with vsprintf(3)-style arguments.
+     *
+     * \note arguments may be evaluated more than once, be careful
+     *       of side-effects
+     */
+    virtual void vappendf(const char *fmt, va_list ap) = 0;
 };
 
 #endif /* SQUID_SRC_BASE_PACKABLE_H */