     output.reset(input.content(), input.contentSize());
     CPPUNIT_ASSERT_EQUAL(1, HttpParserParseReqLine(&output));
     CPPUNIT_ASSERT_EQUAL(HTTP_OK, output.request_parse_status);
-    CPPUNIT_ASSERT_EQUAL(0, output.req_start);
-    CPPUNIT_ASSERT_EQUAL((int)input.contentSize()-1, output.req_end);
-    CPPUNIT_ASSERT(memcmp("\tGET / HTTP/1.1\n", &output.buf[output.req_start],(output.req_end-output.req_start+1)) == 0);
-    CPPUNIT_ASSERT_EQUAL(0, output.m_start);
-    CPPUNIT_ASSERT_EQUAL(3, output.m_end);
-    CPPUNIT_ASSERT(memcmp("\tGET", &output.buf[output.m_start],(output.m_end-output.m_start+1)) == 0);
-    CPPUNIT_ASSERT_EQUAL(5, output.u_start);
-    CPPUNIT_ASSERT_EQUAL(5, output.u_end);
-    CPPUNIT_ASSERT(memcmp("/", &output.buf[output.u_start],(output.u_end-output.u_start+1)) == 0);
-    CPPUNIT_ASSERT_EQUAL(7, output.v_start);
-    CPPUNIT_ASSERT_EQUAL(14, output.v_end);
-    CPPUNIT_ASSERT(memcmp("HTTP/1.1", &output.buf[output.v_start],(output.v_end-output.v_start+1)) == 0);
-    CPPUNIT_ASSERT_EQUAL(1, output.v_maj);
-    CPPUNIT_ASSERT_EQUAL(1, output.v_min);
+    CPPUNIT_ASSERT_EQUAL(0, output.req.start);
+    CPPUNIT_ASSERT_EQUAL((int)input.contentSize()-1, output.req.end);
+    CPPUNIT_ASSERT(memcmp("\tGET / HTTP/1.1\n", &output.buf[output.req.start],(output.req.end-output.req.start+1)) == 0);
+    CPPUNIT_ASSERT_EQUAL(0, output.req.m_start);
+    CPPUNIT_ASSERT_EQUAL(3, output.req.m_end);
+    CPPUNIT_ASSERT(memcmp("\tGET", &output.buf[output.req.m_start],(output.req.m_end-output.req.m_start+1)) == 0);
+    CPPUNIT_ASSERT_EQUAL(5, output.req.u_start);
+    CPPUNIT_ASSERT_EQUAL(5, output.req.u_end);
+    CPPUNIT_ASSERT(memcmp("/", &output.buf[output.req.u_start],(output.req.u_end-output.req.u_start+1)) == 0);
+    CPPUNIT_ASSERT_EQUAL(7, output.req.v_start);
+    CPPUNIT_ASSERT_EQUAL(14, output.req.v_end);
+    CPPUNIT_ASSERT(memcmp("HTTP/1.1", &output.buf[output.req.v_start],(output.req.v_end-output.req.v_start+1)) == 0);
+    CPPUNIT_ASSERT_EQUAL(1, output.req.v_maj);
+    CPPUNIT_ASSERT_EQUAL(1, output.req.v_min);
     input.reset();
 
     input.append("GET", 3);
     //printf("TEST: '%s'\n",input.content());
     output.reset(input.content(), input.contentSize());
     CPPUNIT_ASSERT_EQUAL(0, HttpParserParseReqLine(&output));
     CPPUNIT_ASSERT_EQUAL(HTTP_STATUS_NONE, output.request_parse_status);
-    CPPUNIT_ASSERT_EQUAL(0, output.req_start);
-    CPPUNIT_ASSERT_EQUAL(-1, output.req_end);
-    CPPUNIT_ASSERT_EQUAL(-1, output.m_start);
-    CPPUNIT_ASSERT_EQUAL(-1, output.m_end);
-    CPPUNIT_ASSERT_EQUAL(-1, output.u_start);
-    CPPUNIT_ASSERT_EQUAL(-1, output.u_end);
-    CPPUNIT_ASSERT_EQUAL(-1, output.v_start);
-    CPPUNIT_ASSERT_EQUAL(-1, output.v_end);
-    CPPUNIT_ASSERT_EQUAL(0, output.v_maj);
-    CPPUNIT_ASSERT_EQUAL(0, output.v_min);
+    CPPUNIT_ASSERT_EQUAL(0, output.req.start);
+    CPPUNIT_ASSERT_EQUAL(-1, output.req.end);
+    CPPUNIT_ASSERT_EQUAL(-1, output.req.m_start);
+    CPPUNIT_ASSERT_EQUAL(-1, output.req.m_end);
+    CPPUNIT_ASSERT_EQUAL(-1, output.req.u_start);
+    CPPUNIT_ASSERT_EQUAL(-1, output.req.u_end);
+    CPPUNIT_ASSERT_EQUAL(-1, output.req.v_start);
+    CPPUNIT_ASSERT_EQUAL(-1, output.req.v_end);
+    CPPUNIT_ASSERT_EQUAL(0, output.req.v_maj);
+    CPPUNIT_ASSERT_EQUAL(0, output.req.v_min);
     input.reset();
 
     input.append("GET ", 4);
     //printf("TEST: '%s'\n",input.content());
     output.reset(input.content(), input.contentSize());
     CPPUNIT_ASSERT_EQUAL(0, HttpParserParseReqLine(&output));
     CPPUNIT_ASSERT_EQUAL(HTTP_STATUS_NONE, output.request_parse_status);
-    CPPUNIT_ASSERT_EQUAL(0, output.req_start);
-    CPPUNIT_ASSERT_EQUAL(-1, output.req_end);
-    CPPUNIT_ASSERT_EQUAL(-1, output.m_start);
-    CPPUNIT_ASSERT_EQUAL(-1, output.m_end);
-    CPPUNIT_ASSERT_EQUAL(-1, output.u_start);
-    CPPUNIT_ASSERT_EQUAL(-1, output.u_end);
-    CPPUNIT_ASSERT_EQUAL(-1, output.v_start);
-    CPPUNIT_ASSERT_EQUAL(-1, output.v_end);
-    CPPUNIT_ASSERT_EQUAL(0, output.v_maj);
-    CPPUNIT_ASSERT_EQUAL(0, output.v_min);
+    CPPUNIT_ASSERT_EQUAL(0, output.req.start);
+    CPPUNIT_ASSERT_EQUAL(-1, output.req.end);
+    CPPUNIT_ASSERT_EQUAL(-1, output.req.m_start);
+    CPPUNIT_ASSERT_EQUAL(-1, output.req.m_end);
+    CPPUNIT_ASSERT_EQUAL(-1, output.req.u_start);
+    CPPUNIT_ASSERT_EQUAL(-1, output.req.u_end);
+    CPPUNIT_ASSERT_EQUAL(-1, output.req.v_start);
+    CPPUNIT_ASSERT_EQUAL(-1, output.req.v_end);
+    CPPUNIT_ASSERT_EQUAL(0, output.req.v_maj);
+    CPPUNIT_ASSERT_EQUAL(0, output.req.v_min);
     input.reset();
 
     input.append("GET / HT", 8);
     //printf("TEST: '%s'\n",input.content());
     output.reset(input.content(), input.contentSize());
     CPPUNIT_ASSERT_EQUAL(0, HttpParserParseReqLine(&output));
     CPPUNIT_ASSERT_EQUAL(HTTP_STATUS_NONE, output.request_parse_status);
-    CPPUNIT_ASSERT_EQUAL(0, output.req_start);
-    CPPUNIT_ASSERT_EQUAL(-1, output.req_end);
-    CPPUNIT_ASSERT_EQUAL(-1, output.m_start);
-    CPPUNIT_ASSERT_EQUAL(-1, output.m_end);
-    CPPUNIT_ASSERT_EQUAL(-1, output.u_start);
-    CPPUNIT_ASSERT_EQUAL(-1, output.u_end);
-    CPPUNIT_ASSERT_EQUAL(-1, output.v_start);
-    CPPUNIT_ASSERT_EQUAL(-1, output.v_end);
-    CPPUNIT_ASSERT_EQUAL(0, output.v_maj);
-    CPPUNIT_ASSERT_EQUAL(0, output.v_min);
+    CPPUNIT_ASSERT_EQUAL(0, output.req.start);
+    CPPUNIT_ASSERT_EQUAL(-1, output.req.end);
+    CPPUNIT_ASSERT_EQUAL(-1, output.req.m_start);
+    CPPUNIT_ASSERT_EQUAL(-1, output.req.m_end);
+    CPPUNIT_ASSERT_EQUAL(-1, output.req.u_start);
+    CPPUNIT_ASSERT_EQUAL(-1, output.req.u_end);
+    CPPUNIT_ASSERT_EQUAL(-1, output.req.v_start);
+    CPPUNIT_ASSERT_EQUAL(-1, output.req.v_end);
+    CPPUNIT_ASSERT_EQUAL(0, output.req.v_maj);
+    CPPUNIT_ASSERT_EQUAL(0, output.req.v_min);
     input.reset();
 
     input.append("GET / HTTP/1.1", 14);
     //printf("TEST: '%s'\n",input.content());
     output.reset(input.content(), input.contentSize());
     CPPUNIT_ASSERT_EQUAL(0, HttpParserParseReqLine(&output));
     CPPUNIT_ASSERT_EQUAL(HTTP_STATUS_NONE, output.request_parse_status);
-    CPPUNIT_ASSERT_EQUAL(0, output.req_start);
-    CPPUNIT_ASSERT_EQUAL(-1, output.req_end);
-    CPPUNIT_ASSERT_EQUAL(-1, output.m_start);
-    CPPUNIT_ASSERT_EQUAL(-1, output.m_end);
-    CPPUNIT_ASSERT_EQUAL(-1, output.u_start);
-    CPPUNIT_ASSERT_EQUAL(-1, output.u_end);
-    CPPUNIT_ASSERT_EQUAL(-1, output.v_start);
-    CPPUNIT_ASSERT_EQUAL(-1, output.v_end);
-    CPPUNIT_ASSERT_EQUAL(0, output.v_maj);
-    CPPUNIT_ASSERT_EQUAL(0, output.v_min);
+    CPPUNIT_ASSERT_EQUAL(0, output.req.start);
+    CPPUNIT_ASSERT_EQUAL(-1, output.req.end);
+    CPPUNIT_ASSERT_EQUAL(-1, output.req.m_start);
+    CPPUNIT_ASSERT_EQUAL(-1, output.req.m_end);
+    CPPUNIT_ASSERT_EQUAL(-1, output.req.u_start);
+    CPPUNIT_ASSERT_EQUAL(-1, output.req.u_end);
+    CPPUNIT_ASSERT_EQUAL(-1, output.req.v_start);
+    CPPUNIT_ASSERT_EQUAL(-1, output.req.v_end);
+    CPPUNIT_ASSERT_EQUAL(0, output.req.v_maj);
+    CPPUNIT_ASSERT_EQUAL(0, output.req.v_min);
     input.reset();
 
     // method-only
