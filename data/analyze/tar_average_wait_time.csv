url,date,title,changes,file_name,reason_for_consistence,is_trivial,old_hunk_file,new_hunk_file,old_loc,new_loc,old_log,new_log,edit_types,edit_words,edit_feature,cluster,wait_time
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=bb798080beec25634f7552934324b5f5c995707f,17 Nov 2003,"(diff_archive): Use sparse_diff_file.
",67,data/crawl/tar/hunk_223.cpp,,,data/crawl/tar/old_hunk_223.cpp,data/crawl/tar/new_hunk_223.cpp,3,3,report_difference (NULL);,"report_difference (&current_stat_info, NULL);","[""addVariable""]","[[], [""&current_stat_info""]]",[6190982474121776615],595,0:00:00
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=799e915cd3a889058eeefeaa25391cfe1eae7c3a,15 Apr 1997,"GNU tar 1.12
",1052,data/crawl/tar/hunk_484.cpp,,,data/crawl/tar/old_hunk_484.cpp,data/crawl/tar/new_hunk_484.cpp,-1,765,,report_difference (NULL);,"[""addLog""]","[[], [""report_difference"", ""NULL""]]",[-3487817939530578388],593,0:00:00
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=c1b9212b16a53da408548efa3f9c8b1a62335b42,4 Oct 2003,"Moved system dependencies to system.c
",664,data/crawl/tar/hunk_243.cpp,,,data/crawl/tar/old_hunk_243.cpp,data/crawl/tar/new_hunk_243.cpp,3,3,report_difference (0);,report_difference (NULL);,"[""removeContent"", ""addVariable""]","[[""0""], [""NULL""]]",[-4166558493256717462],592,0:00:00
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=51f0c7c36448cb51018feb81a47fb9bb792784c7,11 Oct 1999,"(tartime): Now extern. (read_and): Invalid headers cause errors, not
 warnings.
",7,data/crawl/tar/hunk_393.cpp,,,data/crawl/tar/old_hunk_393.cpp,data/crawl/tar/new_hunk_393.cpp,-1,3,,"ERROR ((0, 0, _(""This does not look like a tar archive"")));","[""addLog""]","[[], [""ERROR"", ""0"", ""0"", ""_"", ""This"", ""does"", ""not"", ""look"", ""like"", ""a"", ""tar"", ""archive""]]",[25105532001702206967],591,"2718 days, 18:00:00"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=27e87f4f2f4d49328c328fd55fa087d8a4507168,25 Apr 1997,"GNU tar 1.12
",4615,data/crawl/tar/hunk_473.cpp,,,data/crawl/tar/old_hunk_473.cpp,data/crawl/tar/new_hunk_473.cpp,-1,695,,"ERROR ((0, errno, _(""Cannot remove %s""), p));","[""addLog""]","[[], [""ERROR"", ""0"", ""errno"", ""_"", ""Cannot"", ""remove"", ""%s"", ""p""]]",[8358368121424660287],590,"376 days, 17:08:34.285714"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=70b61d565b35d3c97f071177995f55c33d0cfdd0,24 Apr 1997,"GNU tar 1.12
",715,data/crawl/tar/hunk_475.cpp,,,data/crawl/tar/old_hunk_475.cpp,data/crawl/tar/new_hunk_475.cpp,-1,674,,"ERROR ((0, 0, _(""Unexpected EOF in archive"")));","[""addLog""]","[[], [""ERROR"", ""0"", ""0"", ""_"", ""Unexpected"", ""EOF"", ""in"", ""archive""]]",[5167937610357500499],589,"2099 days, 17:08:34.285714"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=799e915cd3a889058eeefeaa25391cfe1eae7c3a,15 Apr 1997,"GNU tar 1.12
",1052,data/crawl/tar/hunk_484.cpp,,,data/crawl/tar/old_hunk_484.cpp,data/crawl/tar/new_hunk_484.cpp,-1,158,,"ERROR ((0, 0, _(""Unexpected EOF on archive file"")));","[""addLog""]","[[], [""ERROR"", ""0"", ""0"", ""_"", ""Unexpected"", ""EOF"", ""on"", ""archive"", ""file""]]",[4659174231619724083],588,"289 days, 8:00:00"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=53f16a59713b32843f27332dbe807c06c7fc34bf,7 Jan 2000,"(extr_init): If we run out of memory, invoke apply_delayed_set_stat.
 (set_mode): Use Use error message functions to report errors consistently.
 (set_stat): Likewise. (repair_delayed_set_stat): Quote file names with colons
 if possible. (prepare_to_extract): Don't complain if we can't remove ""."".
 (extract_sparse_file): Use consistent message for unexpected EOF. Use error
 message functions to report errors consistently. (extract_archive): Use
 consistent message for unexpected EOF. Use error message functions to report
 errors consistently. Quote file names with colons if possible.
 (apply_delayed_set_stat): New function. (apply_nonancestor_delayed_set_stat):
 Renamed from apply_delayed_set_stat. Don't remove head if it doesn't apply.
 (fatal_exit): Invoke apply_delayed_set_stat with no args.
",94,data/crawl/tar/hunk_342.cpp,,,data/crawl/tar/old_hunk_342.cpp,data/crawl/tar/new_hunk_342.cpp,3,3,"ERROR ((0, 0, _(""Unexpected EOF on archive file"")));","ERROR ((0, 0, _(""Unexpected EOF in archive"")));","[""updateContent""]","[[""on"", ""file""], [""in""]]",[508763378737776416],587,"222 days, 0:00:00"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=d858a433c82626309e0d974ca923a79ac7f7f18f,31 Aug 2003,"Use current_stat_info
",2077,data/crawl/tar/hunk_268.cpp,,,data/crawl/tar/old_hunk_268.cpp,data/crawl/tar/new_hunk_268.cpp,41,37,report_difference (NULL);,report_difference (0);,"[""removeVariable"", ""addContent""]","[[""NULL""], [""0""]]",[4166558493256717462],586,0:00:00
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=ed7e2ec8a334cc534db981fe2fd0e02b3d39bf62,13 Dec 1999,"(<quotearg.h>): New include. (start_header): Use `member names' to
 refer to archive member names, not `archive names'.  Warn about `..' in
 member names. (finish_sparse_file, dump_file): Quote arbitrary strings in
 diagnostics. (finish_sparse_file, dump_file): Don't assume that gettext
 preserves errno. (dump_file): Don't use `access' to determine whether a
 directory is readable; this isn't reliable if tar is setuid.  Use `opendir'
 instead. Check for readdir and closedir failures. Don't dump sockets as if
 they were fifos; just warn and skip.
",148,data/crawl/tar/hunk_379.cpp,,,data/crawl/tar/old_hunk_379.cpp,data/crawl/tar/new_hunk_379.cpp,5,5,"ERROR ((0, 0, _(""%s: file changed as we read it""), p));","ERROR ((0, 0, _(""File %s changed as we read it""), quote (p)));","[""moveVariable"", ""updateContent"", ""addVariable""]","[[""file""], [""File"", ""quote""]]",[-453826349353749559],585,"313 days, 16:00:00"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=675c5a2f243bb5e72c982c0e3c30762ec32e9a1b,5 Jul 2003,"(we_are_root): Now bool, not int. (check_time): Warn about
 implausibly old time stamps. (set_stat): Use utimbuf, not stat_info.
 (preprare_to_extract): New arg DIRECTORY. (fill_in_sparse_array): Moved here
 from compare.c. (extract_sparse_file): Now returns off_t, giving size left.
 Truncate file at end. (extract_archive): Use safer_name_suffix rather than
 rolling our own. Use fill_in_sparse_array rather than rolling our own. Strip
 trailing slashes more effectively. Check for unsafe names.
",391,data/crawl/tar/hunk_292.cpp,,,data/crawl/tar/old_hunk_292.cpp,data/crawl/tar/new_hunk_292.cpp,44,-1,"ERROR ((0, 0, _(""Unexpected EOF in archive"")));",,"[""removeLog""]","[[""ERROR"", ""0"", ""0"", ""_"", ""Unexpected"", ""EOF"", ""in"", ""archive""], []]",[-5167937610357500499],584,"306 days, 20:00:00"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=ed7e2ec8a334cc534db981fe2fd0e02b3d39bf62,13 Dec 1999,"(<quotearg.h>): New include. (start_header): Use `member names' to
 refer to archive member names, not `archive names'.  Warn about `..' in
 member names. (finish_sparse_file, dump_file): Quote arbitrary strings in
 diagnostics. (finish_sparse_file, dump_file): Don't assume that gettext
 preserves errno. (dump_file): Don't use `access' to determine whether a
 directory is readable; this isn't reliable if tar is setuid.  Use `opendir'
 instead. Check for readdir and closedir failures. Don't dump sockets as if
 they were fifos; just warn and skip.
",148,data/crawl/tar/hunk_381.cpp,,,data/crawl/tar/old_hunk_381.cpp,data/crawl/tar/new_hunk_381.cpp,3,3,"ERROR ((0, errno, _(""Cannot remove %s""), p));",unlink_error (p);,"[""updateLog"", ""removeVariable"", ""removeContent""]","[[""ERROR"", ""0"", ""errno"", ""_"", ""Cannot"", ""remove"", ""%s""], [""unlink_error""]]",[-12342690591773229784],583,0:00:00
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=ed7e2ec8a334cc534db981fe2fd0e02b3d39bf62,13 Dec 1999,"(<quotearg.h>): New include. (start_header): Use `member names' to
 refer to archive member names, not `archive names'.  Warn about `..' in
 member names. (finish_sparse_file, dump_file): Quote arbitrary strings in
 diagnostics. (finish_sparse_file, dump_file): Don't assume that gettext
 preserves errno. (dump_file): Don't use `access' to determine whether a
 directory is readable; this isn't reliable if tar is setuid.  Use `opendir'
 instead. Check for readdir and closedir failures. Don't dump sockets as if
 they were fifos; just warn and skip.
",148,data/crawl/tar/hunk_381.cpp,,,data/crawl/tar/old_hunk_381.cpp,data/crawl/tar/new_hunk_381.cpp,8,8,"ERROR ((0, 0, _(""%s: Unknown file type; file ignored""), p));","ERROR ((0, 0, _(""%s: Unknown file type; file ignored""),
	  quotearg_colon (p)));","[""moveVariable"", ""addVariable""]","[[], [""quotearg_colon""]]",[-1521945047501761070],582,0:00:00
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=ed7e2ec8a334cc534db981fe2fd0e02b3d39bf62,13 Dec 1999,"(<quotearg.h>): New include. (start_header): Use `member names' to
 refer to archive member names, not `archive names'.  Warn about `..' in
 member names. (finish_sparse_file, dump_file): Quote arbitrary strings in
 diagnostics. (finish_sparse_file, dump_file): Don't assume that gettext
 preserves errno. (dump_file): Don't use `access' to determine whether a
 directory is readable; this isn't reliable if tar is setuid.  Use `opendir'
 instead. Check for readdir and closedir failures. Don't dump sockets as if
 they were fifos; just warn and skip.
",148,data/crawl/tar/hunk_377.cpp,,,data/crawl/tar/old_hunk_377.cpp,data/crawl/tar/new_hunk_377.cpp,3,4,"ERROR ((0, errno,
			    _(""Read error at byte %s, reading %lu bytes, in file %s""),
			    STRINGIFY_BIGINT (current_stat.st_size - sizeleft,
					      buf),
			    (unsigned long) bufsize, p));","ERROR ((0, e,
			    _(""Read error at byte %s, reading %lu bytes, in file %s""),
			    STRINGIFY_BIGINT (current_stat.st_size - sizeleft,
					      buf),
			    (unsigned long) bufsize, quote (p)));","[""updateVariable"", ""moveVariable"", ""addVariable""]","[[""errno""], [""e"", ""quote""]]",[-8738965121426090876],581,0:00:00
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=d858a433c82626309e0d974ca923a79ac7f7f18f,31 Aug 2003,"Use current_stat_info
",2077,data/crawl/tar/hunk_265.cpp,,,data/crawl/tar/old_hunk_265.cpp,data/crawl/tar/new_hunk_265.cpp,19,-1,report_difference (NULL);,,"[""removeLog""]","[[""report_difference"", ""NULL""], []]",[3487817939530578388],580,"46 days, 19:12:00"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=05805868f26533141b8b02d5a6449965652ef187,7 Aug 2006,"(read_incr_db_01): Check input strings more carefully.  Do not pass
 arbitrary char values to isspace, as this has undefined behavior.  Likewise
 for assigning arbitrary uintmax_t values to other types. (read_negative_num,
 read_unsigned_num, read_timespec): New functions, to check input values a bit
 more carefuly. (read_num): Use read_unsigned_num.  New arg MAX_VAL; all
 callers changed. (read_incr_db_2): Use these new functions. Use a consistent
 diagnostic for unexpected EOF. (read_directory_file): Do not assign arbitrary
 uintmax_t value to int. (read_timespec, write_directory_file_entry,
 write_directory_file): Handle negative time_t values correctly.  We don't
 bother to do this with pre-2 formats, since presumably the time stamps were
 output incorrectly.
",434,data/crawl/tar/hunk_103.cpp,,,data/crawl/tar/old_hunk_103.cpp,data/crawl/tar/new_hunk_103.cpp,53,67,"ERROR ((0, 0, ""%s:%ld: %s"",
		quotearg_colon (listed_incremental_option), lineno,
		_(""Invalid inode number"")));","ERROR ((0, errno, ""%s:%ld: %s"",
		  quotearg_colon (listed_incremental_option), lineno,
		  _(""Invalid inode number"")));","[""removeContent"", ""addVariable""]","[[""0""], [""errno""]]",[8285138778856361720],579,0:00:00
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=799e915cd3a889058eeefeaa25391cfe1eae7c3a,15 Apr 1997,"GNU tar 1.12
",1052,data/crawl/tar/hunk_484.cpp,,,data/crawl/tar/old_hunk_484.cpp,data/crawl/tar/new_hunk_484.cpp,-1,585,,report_difference (message);,"[""addLog""]","[[], [""report_difference"", ""message""]]",[-6167893420632801877],578,0:00:00
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=27e87f4f2f4d49328c328fd55fa087d8a4507168,25 Apr 1997,"GNU tar 1.12
",4615,data/crawl/tar/hunk_471.cpp,,,data/crawl/tar/old_hunk_471.cpp,data/crawl/tar/new_hunk_471.cpp,-1,462,,"ERROR ((0, errno, ""%s"", volno_file_option));","[""addLog""]","[[], [""ERROR"", ""0"", ""errno"", ""%s"", ""volno_file_option""]]",[20890249650769766495],577,0:00:00
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=49086e2770abfa6ad6a7647e2d0707b607ee1bf8,31 Oct 1997,"(newdir_umask, current_umask): Now mode_t. (extract_sparse_file):
 Args now use off_t.

(set_mode, set_stat, make_directories, extract_sparse_file,
extract_archive): Use off_t, size_t, ssize_t when appropriate.  Remove
now-useless casts.  Use unsigned long to print *_t types, except use
STRINGIFY_BIGINT for off_t.",130,data/crawl/tar/hunk_458.cpp,,,data/crawl/tar/old_hunk_458.cpp,data/crawl/tar/new_hunk_458.cpp,2,2,"ERROR ((0, errno,
		      _(""%s: Cannot change owner to uid %d, gid %d""),
		      file_name, current_stat.st_uid, current_stat.st_gid));","ERROR ((0, errno,
		      _(""%s: Cannot change owner to uid %lu, gid %lu""),
		      file_name,
		      (unsigned long) current_stat.st_uid,
		      (unsigned long) current_stat.st_gid));","[""updateContent"", ""addVariable""]","[[""%d"", ""%d""], [""%lu"", ""%lu"", ""unsigned"", ""long"", ""unsigned"", ""long""]]",[-11939518791742488030],576,0:00:00
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=1f27dca9765c886a72629a655d538c36c6cb0fea,20 Jul 1999,"(decode_options): ERROR ((TAREXIT_FAILURE, ... -> FATAL_ERROR ((0,
 for consistency.
",8,data/crawl/tar/hunk_427.cpp,,,data/crawl/tar/old_hunk_427.cpp,data/crawl/tar/new_hunk_427.cpp,3,3,"ERROR ((TAREXIT_FAILURE, 0, _(""Invalid owner given on option"")));","FATAL_ERROR ((0, 0, _(""Invalid owner given on option"")));","[""updateLog"", ""removeVariable"", ""addContent""]","[[""ERROR"", ""TAREXIT_FAILURE""], [""FATAL_ERROR"", ""0""]]",[-10039368319591374705],575,0:00:00
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=203dea13a40bae5c6d2dfa221036babd0e345ffe,14 Aug 1999,"(time): Don't declare if defined. (child_open_for_compress): Undo
 previous change. (close_archive): Use waitpid, POSIX-style, instead of old
 BSD style. (new_volume): Likewise.
",126,data/crawl/tar/hunk_419.cpp,,,data/crawl/tar/old_hunk_419.cpp,data/crawl/tar/new_hunk_419.cpp,8,7,"ERROR ((0, 0, _(""\
Write to compression program short %lu bytes""),
		      (unsigned long) (count - status)));","ERROR ((0, 0, _(""Write to compression program short %lu bytes""),
		      (unsigned long) (count - status)));","[""updateContent""]","[[""\\""], []]",[-11776035421],574,"1 day, 12:00:00"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=fcde5487eb6a6bc6ff80bc85a54fa94746494350,17 Aug 1999,"Ghostscript 6.0
",720,data/crawl/tar/hunk_414.cpp,,,data/crawl/tar/old_hunk_414.cpp,data/crawl/tar/new_hunk_414.cpp,-1,563,,"fputs(buf, out);","[""addLog""]","[[], [""fputs"", ""buf"", ""out""]]",[961448989603819052],573,0:00:00
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=6e9d1539b665c8f3c173b36702ca1650cac977ad,13 Dec 1999,"(<quotearg.h>): New include. (enum permstatus): New enum. (struct
 delayed_set_stat): file_name is now at end of buffer, to avoid two mallocs. 
 New members file_name_len, invert_permissions, permstatus. (extr_init):
 Remove hack that silently adjusted newdir_umask. (set_mode, set_stat): New
 args invert_permissions, permstatus, typeflag. Use these args to decide
 whether and how to set modes. (set_mode, set_stat, prepare_to_extract,
 extract_sparse_file, extract_archive): Don't assume that gettext preserves
 errno. (set_stat): Remove arg symlink_flag; subsumed by typeflag.
 (delay_set_stat, repair_delayed_set_stat): New functions. (make_directories):
 Avoid mkdir where last part of path is "".."". Create a struct delayed_set_stat
 for each directory made. (prepare_to_extract): Renamed from
 unlink_destination, and return 0 immediately if to_stdout_option; all callers
 changed. (maybe_recoverable): New parameter interdir_made. Add support for
 --overwrite. (extract_sparse_file, extract_archive): Quote arbitrary strings
 in diagnostics. (extract_archive): By default, warn about "".."" in member
 names, and skip them. Don't open files with O_NONBLOCK or O_APPEND. Open with
 O_TRUNC only if --overwrite; otherwise, use O_EXCL to avoid overwriting them.
  Pass only rwxrwxrwx permissions to `open' and `mkdir', minus the current
 umask.  Keep track of intermediate directories made, to avoid looping when
 making x/../x when x doesn't exist; the earlier code solved this in a
 different way that didn't fit well into the new scheme.  Don't extract
 permissions onto existing directories unless --overwrite is given.  Do not
 add -wx------ permissions to new directories permanently; just do it
 temporarily. Remove no-longer-needed hack with MSDOS and directory time
 stamps. (apply_delayed_set_stat): New argument specifies which directories to
 fix statuses of.  Do not wait until the end of extraction to fix statuses;
 instead, fix a directory's status once we exit that directory. This requires
 less memory and does the right thing in some cases where the old method
 didn't. (fatal_exit): New function.
",600,data/crawl/tar/hunk_361.cpp,,,data/crawl/tar/old_hunk_361.cpp,data/crawl/tar/new_hunk_361.cpp,3,4,"ERROR ((0, errno, _(""%s: Was unable to backup this file""),
		CURRENT_FILE_NAME));","ERROR ((0, e, _(""%s: Was unable to backup this file""),
		quotearg_colon (CURRENT_FILE_NAME)));","[""updateVariable"", ""moveVariable"", ""addVariable""]","[[""errno""], [""e"", ""quotearg_colon""]]",[-9807083819574102387],572,0:00:00
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=c1b9212b16a53da408548efa3f9c8b1a62335b42,4 Oct 2003,"Moved system dependencies to system.c
",664,data/crawl/tar/hunk_240.cpp,,,data/crawl/tar/old_hunk_240.cpp,data/crawl/tar/new_hunk_240.cpp,21,-1,report_difference (message);,,"[""removeLog""]","[[""report_difference"", ""message""], []]",[6167893420632801877],571,0:00:00
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=c30c4ffb9fc874aafea6f6c91f3fc78595db4154,18 Jun 2009,"Remove files that were removed in CVS, but reappeared after migration
 to Git
",5265,data/crawl/tar/hunk_64.cpp,,,data/crawl/tar/old_hunk_64.cpp,data/crawl/tar/new_hunk_64.cpp,563,-1,"fputs(buf, out);",,"[""removeLog""]","[[""fputs"", ""buf"", ""out""], []]",[-961448989603819052],570,0:00:00
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=f74454cb37c715674796f21a2fd75eb0a5a34002,7 Jan 2000,"(find_new_file_size): Return size instead of storing through pointer.
 All callers changed. (deal_with_sparse): Don't keep reading after read
 errors. (finish_sparse_file): Just abort if there is an internal error. Use
 error message functions to report errors consistently. (dump_file): Fix typo:
 stat_warn and stat_error were interchanged. Quote file names with colons if
 possible. Don't restore access times on directories during incremental dumps
 until after dealing with the directory. If ignoring failed reads, count
 closedir errors as warnings, not errors. Fix buffer overrun problem when
 dumping sparse files. If ignoring failed reads, count read errors as
 warnings, not errors. Use error message functions to report errors
 consistently. If ignoring failed reads, count unknown files as warnings, not
 errors.
",236,data/crawl/tar/hunk_331.cpp,,,data/crawl/tar/old_hunk_331.cpp,data/crawl/tar/new_hunk_331.cpp,3,3,"ERROR ((0, 0, _(""%s: Unknown file type; file ignored""),
	  quotearg_colon (p)));","WARN ((0, 0, _(""%s: Unknown file type; file ignored""),
	 quotearg_colon (p)));","[""updateLog""]","[[""ERROR""], [""WARN""]]",[-11954066244619719719],569,"3581 days, 0:00:00"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=799e915cd3a889058eeefeaa25391cfe1eae7c3a,15 Apr 1997,"GNU tar 1.12
",1052,data/crawl/tar/hunk_484.cpp,,,data/crawl/tar/old_hunk_484.cpp,data/crawl/tar/new_hunk_484.cpp,-1,391,,"report_difference (_(""Data differs""));","[""addLog""]","[[], [""report_difference"", ""_"", ""Data"", ""differs""]]",[-2835912118937840285],568,0:00:00
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=799e915cd3a889058eeefeaa25391cfe1eae7c3a,15 Apr 1997,"GNU tar 1.12
",1052,data/crawl/tar/hunk_484.cpp,,,data/crawl/tar/old_hunk_484.cpp,data/crawl/tar/new_hunk_484.cpp,-1,783,,"ERROR ((0, errno, _(""Error while closing %s""), current_file_name));","[""addLog""]","[[], [""ERROR"", ""0"", ""errno"", ""_"", ""Error"", ""while"", ""closing"", ""%s"", ""current_file_name""]]",[30110988958145336131],567,"2 days, 16:00:00"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=fcde5487eb6a6bc6ff80bc85a54fa94746494350,17 Aug 1999,"Ghostscript 6.0
",720,data/crawl/tar/hunk_414.cpp,,,data/crawl/tar/old_hunk_414.cpp,data/crawl/tar/new_hunk_414.cpp,-1,704,,"fputs("")  "", out);","[""addLog""]","[[], [""fputs"", ""out""]]",[634424772777578192],566,0:00:00
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=0d70f547f3a9ff4a261b82e9b487c3f65b63fadf,21 Sep 1999,"(struct link): Remove unused linkcount member. (base_64_digits): Move
 to list.c. (base_8_digits): Remove. (to_octal): New function, with some of
 old contents of to_base. (to_base): Remove. (to_base256): New function.
 (to_chars): Use base 256, not base 64, for huge values. (mode_to_chars):
 Don't use two's complement in GNU format or POSIX format. (dump_file):
 Interchange last two arguments.  If TOP_LEVEL is negative, it means we have
 an incremental dump where we don't know whether this is a top-level call. Use
 deref_stat instead of statx / stat / lstat. Cast result of alloca. Check for
 dates if 0 < top_level, not if listed_incremental_option. Move multiple-link
 check after directory check. Do not dump avoided names. Dump hard links to
 symbolic names as links, not as separate symbolic links. start_header cannot
 return a null pointer, so don't test for it. Likewise for find_next_block.
",1015,data/crawl/tar/hunk_400.cpp,,,data/crawl/tar/old_hunk_400.cpp,data/crawl/tar/new_hunk_400.cpp,413,-1,"ERROR ((0, errno, _(""Cannot remove %s""), p));",,"[""removeLog""]","[[""ERROR"", ""0"", ""errno"", ""_"", ""Cannot"", ""remove"", ""%s"", ""p""], []]",[-8358368121424660287],565,0:00:00
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=eed93f9a58ed79ec07028b85d54804f042bf7af9,19 Apr 1997,"GNU tar 1.12
",688,data/crawl/tar/hunk_481.cpp,,,data/crawl/tar/old_hunk_481.cpp,data/crawl/tar/new_hunk_481.cpp,-1,160,,"ERROR ((0, 0, _(""Skipping to next header"")));","[""addLog""]","[[], [""ERROR"", ""0"", ""0"", ""_"", ""Skipping"", ""to"", ""next"", ""header""]]",[-1753903362793465671],564,"303 days, 16:00:00"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=6e9d1539b665c8f3c173b36702ca1650cac977ad,13 Dec 1999,"(<quotearg.h>): New include. (enum permstatus): New enum. (struct
 delayed_set_stat): file_name is now at end of buffer, to avoid two mallocs. 
 New members file_name_len, invert_permissions, permstatus. (extr_init):
 Remove hack that silently adjusted newdir_umask. (set_mode, set_stat): New
 args invert_permissions, permstatus, typeflag. Use these args to decide
 whether and how to set modes. (set_mode, set_stat, prepare_to_extract,
 extract_sparse_file, extract_archive): Don't assume that gettext preserves
 errno. (set_stat): Remove arg symlink_flag; subsumed by typeflag.
 (delay_set_stat, repair_delayed_set_stat): New functions. (make_directories):
 Avoid mkdir where last part of path is "".."". Create a struct delayed_set_stat
 for each directory made. (prepare_to_extract): Renamed from
 unlink_destination, and return 0 immediately if to_stdout_option; all callers
 changed. (maybe_recoverable): New parameter interdir_made. Add support for
 --overwrite. (extract_sparse_file, extract_archive): Quote arbitrary strings
 in diagnostics. (extract_archive): By default, warn about "".."" in member
 names, and skip them. Don't open files with O_NONBLOCK or O_APPEND. Open with
 O_TRUNC only if --overwrite; otherwise, use O_EXCL to avoid overwriting them.
  Pass only rwxrwxrwx permissions to `open' and `mkdir', minus the current
 umask.  Keep track of intermediate directories made, to avoid looping when
 making x/../x when x doesn't exist; the earlier code solved this in a
 different way that didn't fit well into the new scheme.  Don't extract
 permissions onto existing directories unless --overwrite is given.  Do not
 add -wx------ permissions to new directories permanently; just do it
 temporarily. Remove no-longer-needed hack with MSDOS and directory time
 stamps. (apply_delayed_set_stat): New argument specifies which directories to
 fix statuses of.  Do not wait until the end of extraction to fix statuses;
 instead, fix a directory's status once we exit that directory. This requires
 less memory and does the right thing in some cases where the old method
 didn't. (fatal_exit): New function.
",600,data/crawl/tar/hunk_363.cpp,,,data/crawl/tar/old_hunk_363.cpp,data/crawl/tar/new_hunk_363.cpp,3,3,"ERROR ((0, errno, _(""%s: Could not write to file""),
		      CURRENT_FILE_NAME));",write_error (CURRENT_FILE_NAME);,"[""updateLog"", ""removeVariable"", ""removeContent""]","[[""ERROR"", ""0"", ""errno"", ""_"", ""%s"", ""Could"", ""not"", ""write"", ""to"", ""file""], [""write_error""]]",[-38846500230814132941],563,0:00:00
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=d858a433c82626309e0d974ca923a79ac7f7f18f,31 Aug 2003,"Use current_stat_info
",2077,data/crawl/tar/hunk_263.cpp,,,data/crawl/tar/old_hunk_263.cpp,data/crawl/tar/new_hunk_263.cpp,3,3,"report_difference (_(""Data differs""));","report_difference (_(""Contents differ""));","[""updateContent""]","[[""Data"", ""differs""], [""Contents"", ""differ""]]",[5844901200695419596],562,0:00:00
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=d659cbaccdc1f3279c49107cf15f15a639738529,22 Jun 2005,"Carefully crafted invalid headers can cause buffer overrun. Invalid
 header fields go undiagnosed. Some valid time strings are ignored.

* NEWS: Better support for full-resolution time stamps.
The -v option now prints time stamps only to 1-minute resolution.
* gnulib.modules: Add utimens.
* lib/.cvsignore: Add imaxtostr.c, inttostr.c, inttostr.h,
offtostr.c, umaxtostr.c, utimens.c, utimens.h.  Remove paxconvert.c.
* lib/Makefile.tmpl (libtar_a_SOURCES): Remove paxconvert.c.
* lib/paxconvert.c: Remove; superseded by umaxtostr.c.
* po/POTFILES.in: Remove lib/paxconvert.c.  Add lib/xalloc-die.c,
lib/obstack.c.
* src/buffer.c (set_start_time, compute_duration, start_time):
Use gettime rather than rolling our own code.
* src/common.h (OLDGNU_NAME_FIELD_SIZE, MAXOCTAL11, MAXOCTAL7): Remove.
(newer_ctime_option): Remove.
(timespec_lt): New function.
(OLDER_STAT_TIME): Use it.
(string_to_chars): First arg is char const *, not char *.
(tartime): Time arg is now struct timespec.  New bool arg.
All callers changed.
(code_ns_fraction): New decl.
(sys_stat_nanoseconds): Remove decl.
(get_stat_atime, get_stat_ctime, get_stat_mtime): New functions.
(set_stat_atime, set_stat_ctime, set_stat_mtime): New functions.
* src/compare.c: Include utimens.h rather than rolling our own.
(diff_dir, diff_file, diff_link, diff_symlink, diff_special):
Prototype.
(diff_dumpdir, diff_multivol): Prototype.
(diff_file): Support higher-resolution time stamps.
* src/create.c: Include utimens.h rather than rolling our own.
(MAX_OCTAL_VAL): New macro.
(tar_copy_str, string_to_chars): Don't bother to zero-fill;
the destination is already zeroed.
(string_to_chars): First arg is char const *.
(start_private_header): Use MINOR_TO_CHARS, not MAJOR_TO_CHARS,
for minor device number.
(write_header_name, dump_hard_link, dump_file0):
Simplify test for old GNU format.
(start_header): Put in placeholders for uid, etc., even when
using extended headers, for benefit of older ""tar"" implementations.
Don't assume uintmax_t is wider than 32 bits.
Output extended header for mtime if needed.
(dump_regular_finish, dump_file0):
Support extended time stamp resolution.
* src/extract.c: Include utimens.h rather than rolling our own.
(check_time): Support extended time stamp resolution.
* src/list.c: Include <inttostr.h>.
(tartime): Use umaxtostr rather than stringify_uintmax_t_backwards.
* src/xheader.c: Include <inttostr.h>.
Do not include <xstrtol.h>.
(strtoimax) [!HAVE_DECL_STRTOIMAX && !defined strtoimax]: New decl.
(strtoumax) [!HAVE_DECL_STRTOUMAX && !defined strtoumax]: New decl.
(BILLION, LOG10_BILLION): New constants.
(to_decimal): Remove; superseded by inttostr.  All callers changed
to use umaxtostr.
(xheader_format_name): Don't assume pids and uintmax_t values
fit in 63 bytes (!) when printed.
(decode_record): Don't bother to check for ERANGE; an out of range
value must be treater than len_max anyway.
If the length is out of range, output it in the diagnostic.
(format_uintmax): Remove; all callers changed to use umaxtostr.
(xheader_print): Don't assume sizes can be printed in 99 bytes (!).
(out_of_range_header): New function.
(decode_time): Use it.
(code_time): Accept struct timespec, not time_t and unsigned long.
All callers changed.  Size sbuf properly, and remove unnecessary check.
Don't assume time stamps can fit in 199 bytes.
Handle negative time stamps.  Handle fractional time stamps
more consistently.  Don't output unnecessary trailing zeros.
(decode_time): Yield struct timespec, not time_t and unsigned long.
All callers changed.
Handle negative time stamps.  Truncate towards minus infinity
consistently.  Improve overflow checks, and output a better
diagnostic on overflow.
(code_num): Don't assume uintmax_t can be printed in 99 bytes (!).
(decode_num): New function, for better diagnostics.
(atime_coder, atime_decoder, gid_decoder, ctime_coder):
(ctime_decoder, mtime_coder, mtime_decoder, size_decoder):
(uid_decoder, sparse_size_decoder, sparse_numblocks_decoder):
(sparse_offset_decoder, sparse_numbytes_decoder):
Use decode_num, etc., instead of xstrtoumax, etc.

* src/xheader.c (sparse_numblocks_decoder): Remove unchecked use
of `calloc'.  Use xcalloc instead.
(decode_time, gid_decoder, size_decoder, uid_decoder):
(sparse_size_decoder, sparse_offset_decoder, sparse_numblocks_decoder):
Ensure that the result of calling xstrtoumax is no larger than
the maximum value for the target type.  Upon any failure, exit with
a diagnostic.
(sparse_numblocks_decoder): Avoid buffer overrun/heap corruption:
use x2nrealloc, rather than `n *= 2' and xrealloc(p, n,....
(decode_time): Rewrite to accept time strings like
1119018481.000000000.  Before, such strings were always ignored.",1185,data/crawl/tar/hunk_148.cpp,,,data/crawl/tar/old_hunk_148.cpp,data/crawl/tar/new_hunk_148.cpp,-1,125,,"ERROR ((0, 0, _(""Malformed extended header: invalid %s=%s""),
	      keyword, arg));","[""addLog""]","[[], [""ERROR"", ""0"", ""0"", ""_"", ""Malformed"", ""extended"", ""header"", ""invalid"", ""%s"", ""%s"", ""keyword"", ""arg""]]",[-7993277460257527416],561,"46 days, 0:00:00"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=1e304fc5fd4fba5455057e74b09d08f954753340,5 Nov 2005,"(struct directory.mtime): New member. (note_directory): Take
 additional arguments. All callers updated. (scan_directory): Updated to use
 more metadata. In particular, this allows to correctly detect renamed files.
 (read_directory_file,write_directory_file) (write_directory_file_entry):
 Support new directory file format.
",284,data/crawl/tar/hunk_141.cpp,,,data/crawl/tar/old_hunk_141.cpp,data/crawl/tar/new_hunk_141.cpp,-1,39,,"ERROR ((0, 0, ""%s:%ld: %s"",
		quotearg_colon (listed_incremental_option),
		lineno,
		_(""Time stamp out of range"")));","[""addLog""]","[[], [""ERROR"", ""0"", ""0"", ""%s"", ""%ld"", ""%s"", ""quotearg_colon"", ""listed_incremental_option"", ""lineno"", ""_"", ""Time"", ""stamp"", ""out"", ""of"", ""range""]]",[-2806195093742348100],560,"122 days, 16:00:00"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=1e304fc5fd4fba5455057e74b09d08f954753340,5 Nov 2005,"(struct directory.mtime): New member. (note_directory): Take
 additional arguments. All callers updated. (scan_directory): Updated to use
 more metadata. In particular, this allows to correctly detect renamed files.
 (read_directory_file,write_directory_file) (write_directory_file_entry):
 Support new directory file format.
",284,data/crawl/tar/hunk_141.cpp,,,data/crawl/tar/old_hunk_141.cpp,data/crawl/tar/new_hunk_141.cpp,-1,34,,"ERROR ((0, 0, ""%s:%ld: %s"",
		quotearg_colon (listed_incremental_option),
		lineno,
		_(""Invalid time stamp"")));","[""addLog""]","[[], [""ERROR"", ""0"", ""0"", ""%s"", ""%ld"", ""%s"", ""quotearg_colon"", ""listed_incremental_option"", ""lineno"", ""_"", ""Invalid"", ""time"", ""stamp""]]",[-12204441145755381776],559,"122 days, 16:00:00"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=090d1d36ae038a82d2b4bb54a8464bb7629188b7,23 Jun 2006,"Implement sparse format versioning. Implement new version (1.0) of
 PAX sparse format. (pax_sparse_member_p): Fix condition (pax_dump_header): A
 dispatcher function (pax_dump_header_0,pax_dump_header_1): New functions.
 (pax_optab): Update (oldgnu_dump_header): Minor fix: make sure
 sparse_header.isextended is set before calling set_next_block_after
",283,data/crawl/tar/hunk_115.cpp,,,data/crawl/tar/old_hunk_115.cpp,data/crawl/tar/new_hunk_115.cpp,-1,175,,"ERROR ((0, 0, _(""%s: malformed sparse archive member""), 
		      file->stat_info->orig_file_name));","[""addLog""]","[[], [""ERROR"", ""0"", ""0"", ""_"", ""%s"", ""malformed"", ""sparse"", ""archive"", ""member"", ""file"", ""stat_info"", ""orig_file_name""]]",[38213462912858489860],558,0:00:00
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=c9e7465642f8dc879ea589b628176e6c9b6656bf,8 May 2006,"(struct directory.contents, flags): New members (nfs,found,new):
 Remove. Replaced by appropriate bitmask values in `flags' field. All uses
 updated. (directory_meta_table): New table. (hash_directory): Rename to
 hash_directory_name (compare_directories): Rename to compare_directory_names
 (hash_directory_meta,compare_directory_meta,find_directory_meta): New
 functions (compare_dirents): Removed (note_directory): Get 7th argument:
 directory contents. All callers updated (dumpdir_locate,makedumpdir): New
 functions (scan_directory): Rewritten. Use makedumpdir to create a sorted
 dumpdir array. This makes the obstack argument unnecessary. Besides,
 ALL_CHILDREN flag is set only for new directories. (procdir): Change return
 type to struct directory. Return immediately if the directory was already
 initialized. Discover directory renames using directory_meta_table.
 (append_incremental_renames): New function. (read_directory_file,
 write_directory_file): Use new snapshot file format.
",1158,data/crawl/tar/hunk_124.cpp,,,data/crawl/tar/old_hunk_124.cpp,data/crawl/tar/new_hunk_124.cpp,40,-1,"ERROR ((0, 0, ""%s:%ld: %s"",
		    quotearg_colon (listed_incremental_option),
		    lineno,
		    _(""Time stamp out of range"")));",,"[""removeLog""]","[[""ERROR"", ""0"", ""0"", ""%s"", ""%ld"", ""%s"", ""quotearg_colon"", ""listed_incremental_option"", ""lineno"", ""_"", ""Time"", ""stamp"", ""out"", ""of"", ""range""], []]",[2806195093742348100],557,"30 days, 8:00:00"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=c9e7465642f8dc879ea589b628176e6c9b6656bf,8 May 2006,"(struct directory.contents, flags): New members (nfs,found,new):
 Remove. Replaced by appropriate bitmask values in `flags' field. All uses
 updated. (directory_meta_table): New table. (hash_directory): Rename to
 hash_directory_name (compare_directories): Rename to compare_directory_names
 (hash_directory_meta,compare_directory_meta,find_directory_meta): New
 functions (compare_dirents): Removed (note_directory): Get 7th argument:
 directory contents. All callers updated (dumpdir_locate,makedumpdir): New
 functions (scan_directory): Rewritten. Use makedumpdir to create a sorted
 dumpdir array. This makes the obstack argument unnecessary. Besides,
 ALL_CHILDREN flag is set only for new directories. (procdir): Change return
 type to struct directory. Return immediately if the directory was already
 initialized. Discover directory renames using directory_meta_table.
 (append_incremental_renames): New function. (read_directory_file,
 write_directory_file): Use new snapshot file format.
",1158,data/crawl/tar/hunk_124.cpp,,,data/crawl/tar/old_hunk_124.cpp,data/crawl/tar/new_hunk_124.cpp,35,-1,"ERROR ((0, 0, ""%s:%ld: %s"",
		    quotearg_colon (listed_incremental_option),
		    lineno,
		    _(""Invalid time stamp"")));",,"[""removeLog""]","[[""ERROR"", ""0"", ""0"", ""%s"", ""%ld"", ""%s"", ""quotearg_colon"", ""listed_incremental_option"", ""lineno"", ""_"", ""Invalid"", ""time"", ""stamp""], []]",[12204441145755381776],556,"30 days, 8:00:00"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=c30c4ffb9fc874aafea6f6c91f3fc78595db4154,18 Jun 2009,"Remove files that were removed in CVS, but reappeared after migration
 to Git
",5265,data/crawl/tar/hunk_64.cpp,,,data/crawl/tar/old_hunk_64.cpp,data/crawl/tar/new_hunk_64.cpp,704,-1,"fputs("")  "", out);",,"[""removeLog""]","[[""fputs"", ""out""], []]",[-634424772777578192],555,0:00:00
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=32841f71caa7337a62ce231ed787609003bce86f,16 Nov 1994,"*** empty log message ***
",1369,data/crawl/tar/hunk_500.cpp,,,data/crawl/tar/old_hunk_500.cpp,data/crawl/tar/new_hunk_500.cpp,-1,1183,,"fputs(prefix, stream);","[""addLog""]","[[], [""fputs"", ""prefix"", ""stream""]]",[-17431155182665630263],554,0:00:00
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=799e915cd3a889058eeefeaa25391cfe1eae7c3a,15 Apr 1997,"GNU tar 1.12
",1052,data/crawl/tar/hunk_484.cpp,,,data/crawl/tar/old_hunk_484.cpp,data/crawl/tar/new_hunk_484.cpp,-1,745,,"report_difference (_(""Size differs""));","[""addLog""]","[[], [""report_difference"", ""_"", ""Size"", ""differs""]]",[4142371617784608422],553,0:00:00
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=799e915cd3a889058eeefeaa25391cfe1eae7c3a,15 Apr 1997,"GNU tar 1.12
",1052,data/crawl/tar/hunk_484.cpp,,,data/crawl/tar/old_hunk_484.cpp,data/crawl/tar/new_hunk_484.cpp,-1,717,,"report_difference (_(""Mode differs""));","[""addLog""]","[[], [""report_difference"", ""_"", ""Mode"", ""differs""]]",[-2338259091415480836],552,0:00:00
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=799e915cd3a889058eeefeaa25391cfe1eae7c3a,15 Apr 1997,"GNU tar 1.12
",1052,data/crawl/tar/hunk_484.cpp,,,data/crawl/tar/old_hunk_484.cpp,data/crawl/tar/new_hunk_484.cpp,-1,736,,"report_difference (_(""Not a regular file""));","[""addLog""]","[[], [""report_difference"", ""_"", ""Not"", ""a"", ""regular"", ""file""]]",[-3113032933145235184],551,0:00:00
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=818c240503f808e12705dafb1f69077cdd10053b,23 Apr 1997,"GNU tar 1.12
",1525,data/crawl/tar/hunk_477.cpp,,,data/crawl/tar/old_hunk_477.cpp,data/crawl/tar/new_hunk_477.cpp,-1,347,,"ERROR ((0, errno, _(""%s: Could not write to file""), name));","[""addLog""]","[[], [""ERROR"", ""0"", ""errno"", ""_"", ""%s"", ""Could"", ""not"", ""write"", ""to"", ""file"", ""name""]]",[33921562830575753003],550,0:00:00
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=818c240503f808e12705dafb1f69077cdd10053b,23 Apr 1997,"GNU tar 1.12
",1525,data/crawl/tar/hunk_477.cpp,,,data/crawl/tar/old_hunk_477.cpp,data/crawl/tar/new_hunk_477.cpp,-1,190,,"ERROR ((0, errno, _(""%s: Cannot chown to uid %d gid %d""),
		  file_name, stat_info->st_uid, stat_info->st_gid));","[""addLog""]","[[], [""ERROR"", ""0"", ""errno"", ""_"", ""%s"", ""Cannot"", ""chown"", ""to"", ""uid"", ""%d"", ""gid"", ""%d"", ""file_name"", ""stat_info"", ""st_uid"", ""stat_info"", ""st_gid""]]",[13735850454740235596],549,0:00:00
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=70b61d565b35d3c97f071177995f55c33d0cfdd0,24 Apr 1997,"GNU tar 1.12
",715,data/crawl/tar/hunk_475.cpp,,,data/crawl/tar/old_hunk_475.cpp,data/crawl/tar/new_hunk_475.cpp,-1,532,,"ERROR ((0, errno, ""%s"", listed_incremental_option));","[""addLog""]","[[], [""ERROR"", ""0"", ""errno"", ""%s"", ""listed_incremental_option""]]",[12854428047407403626],548,0:00:00
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=27e87f4f2f4d49328c328fd55fa087d8a4507168,25 Apr 1997,"GNU tar 1.12
",4615,data/crawl/tar/hunk_471.cpp,,,data/crawl/tar/old_hunk_471.cpp,data/crawl/tar/new_hunk_471.cpp,482,-1,"fputs (prefix, stream);",,"[""removeLog""]","[[""fputs"", ""prefix"", ""stream""], []]",[17431155182665630263],547,0:00:00
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=5540d5aaff399b947f097772be9c5ebc39c8a7d5,22 Apr 1997,"tar 1.13
",194,data/crawl/tar/hunk_479.cpp,,,data/crawl/tar/old_hunk_479.cpp,data/crawl/tar/new_hunk_479.cpp,-1,160,,"fputs (_(""\
This is free software; see the source for copying conditions.  There is NO\n\
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n""),
	     stdout);","[""addLog""]","[[], [""fputs"", ""_"", ""\\"", ""This"", ""is"", ""free"", ""software"", ""see"", ""the"", ""source"", ""for"", ""copying"", ""conditions"", ""There"", ""is"", ""NO\\n\\"", ""warranty"", ""not"", ""even"", ""for"", ""MERCHANTABILITY"", ""or"", ""FITNESS"", ""FOR"", ""A"", ""PARTICULAR"", ""PURPOSE"", ""\\n"", ""stdout""]]",[6248968462278530505],546,"1 day, 12:00:00"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=48be206fbfd81aa56056d7327fa8295e27011e5f,31 Oct 1997,"(to_oct): Now static.  Value arg is now uintmax_t.  Accept new args
 giving name of type of octal field, for error messages.  Report an error if
 the value is too large to fit in the field. (gid_to_oct, major_to_oct,
 minor_to_oct, mode_to_oct, off_to_oct, size_to_oct, time_to_oct, uid_to_oct,
 uintmax_to_oct): New functions.

(write_eot, write_long, finish_header, deal_with_sparse,
finish_sparse_file, dump_file): Use dev_t, off_t, ssize_t, size_t when
appropriate.  Remove now-useless casts.  Use unsigned long to print
*_t types, except use STRINGIFY_BIGINT for off_t.

(find_new_file_size): 1st arg is now off_t*.
(finish_sparse_file): Args now use off_t, not long.
Check for lseek error.
(create_archive, dump_file): Cast -1 to dev_t when necessary.
(dump_file): Device arg is now dev_t.
Avoid overflow when testing whether file has holes
by using the new ST_NBLOCKSIZE macro.",281,data/crawl/tar/hunk_448.cpp,,,data/crawl/tar/old_hunk_448.cpp,data/crawl/tar/new_hunk_448.cpp,9,11,"ERROR ((0, errno,
		  _(""Read error at byte %ld, reading %d bytes, in file %s""),
		  fullsize - *sizeleft, bufsize, name));","ERROR ((0, errno,
		  _(""Read error at byte %s, reading %lu bytes, in file %s""),
		  STRINGIFY_BIGINT (fullsize - *sizeleft, buf),
		  (unsigned long) bufsize, name));","[""moveVariable"", ""updateContent"", ""addVariable""]","[[""%ld"", ""%d""], [""%lu"", ""%s"", ""STRINGIFY_BIGINT"", ""buf"", ""unsigned"", ""long""]]",[-621088932867069340],545,0:00:00
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=3728196fa69fb0908f5c175d750978d1423b8340,24 Apr 1997,"GNU tar 1.12
",481,data/crawl/tar/hunk_474.cpp,,,data/crawl/tar/old_hunk_474.cpp,data/crawl/tar/new_hunk_474.cpp,-1,418,,"ERROR ((0, errno, ""%s"", path));","[""addLog""]","[[], [""ERROR"", ""0"", ""errno"", ""%s"", ""path""]]",[20717563378442670088],544,"404 days, 12:00:00"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=dc4a8aa0c6a5bd68735e2ae220260242487c3f1e,11 Aug 1999,"(<fnmatch.h>): Do not include. (from_chars): Renamed from from_oct. 
 New parameter specifing the negative of the minimum allowed value.  Support
 negative and base-64 values. (base64_map): New var. (base64_init): New
 function. (print_header): Output numeric uids and gids if
 numeric_owner_option.
",207,data/crawl/tar/hunk_424.cpp,,,data/crawl/tar/old_hunk_424.cpp,data/crawl/tar/new_hunk_424.cpp,6,6,"ERROR ((0, 0,
		  _(""Header contains %.*s where octal %s value expected""),
		  (int) sizeof buf, buf, type));","ERROR ((0, 0,
		  _(""Header contains `%.*s' where numeric %s value expected""),
		  (int) sizeof buf, buf, type));","[""updateContent""]","[[""octal""], [""numeric""]]",[4094980648074829014],543,0:00:00
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=203dea13a40bae5c6d2dfa221036babd0e345ffe,14 Aug 1999,"(time): Don't declare if defined. (child_open_for_compress): Undo
 previous change. (close_archive): Use waitpid, POSIX-style, instead of old
 BSD style. (new_volume): Likewise.
",126,data/crawl/tar/hunk_421.cpp,,,data/crawl/tar/old_hunk_421.cpp,data/crawl/tar/new_hunk_421.cpp,-1,28,,"ERROR ((0, errno,
				      _(""While waiting for child"")));","[""addLog""]","[[], [""ERROR"", ""0"", ""errno"", ""_"", ""While"", ""waiting"", ""for"", ""child""]]",[9697808245548899792],542,0:00:00
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=fcde5487eb6a6bc6ff80bc85a54fa94746494350,17 Aug 1999,"Ghostscript 6.0
",720,data/crawl/tar/hunk_414.cpp,,,data/crawl/tar/old_hunk_414.cpp,data/crawl/tar/new_hunk_414.cpp,-1,715,,"fputs(breaks[0], out);","[""addLog""]","[[], [""fputs"", ""breaks[0]"", ""out""]]",[-3244297555930287933],541,0:00:00
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=13617c42d896aa66178d914d744d2d42fb988248,2 Mar 1999,"(to_oct): New parameter substitute, giving a substitute value to use
 when the original value is out of range.  Do not append a space to the
 output; modern tars don't.  When a value is out of range, specify the maximum
 value, not the number of bits. (GID_NOBODY, UID_NOBODY): New macros.
 (gid_to_oct, uid_to_oct): Use them as substitutes. (finish_header): Do not
 assume that UINTMAX_TO_OCT appends a space. (dump_file): Check whether the
 file changed as we read it.
",79,data/crawl/tar/hunk_443.cpp,,,data/crawl/tar/old_hunk_443.cpp,data/crawl/tar/new_hunk_443.cpp,-1,10,,"ERROR ((0, errno, _(""%s: close""), p));","[""addLog""]","[[], [""ERROR"", ""0"", ""errno"", ""_"", ""%s"", ""close"", ""p""]]",[23518771888860101399],540,"101 days, 12:00:00"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=13617c42d896aa66178d914d744d2d42fb988248,2 Mar 1999,"(to_oct): New parameter substitute, giving a substitute value to use
 when the original value is out of range.  Do not append a space to the
 output; modern tars don't.  When a value is out of range, specify the maximum
 value, not the number of bits. (GID_NOBODY, UID_NOBODY): New macros.
 (gid_to_oct, uid_to_oct): Use them as substitutes. (finish_header): Do not
 assume that UINTMAX_TO_OCT appends a space. (dump_file): Check whether the
 file changed as we read it.
",79,data/crawl/tar/hunk_443.cpp,,,data/crawl/tar/old_hunk_443.cpp,data/crawl/tar/new_hunk_443.cpp,-1,8,,"ERROR ((0, errno, _(""%s: file changed as we read it""), p));","[""addLog""]","[[], [""ERROR"", ""0"", ""errno"", ""_"", ""%s"", ""file"", ""changed"", ""as"", ""we"", ""read"", ""it"", ""p""]]",[2082046952357175080],539,"101 days, 12:00:00"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=13617c42d896aa66178d914d744d2d42fb988248,2 Mar 1999,"(to_oct): New parameter substitute, giving a substitute value to use
 when the original value is out of range.  Do not append a space to the
 output; modern tars don't.  When a value is out of range, specify the maximum
 value, not the number of bits. (GID_NOBODY, UID_NOBODY): New macros.
 (gid_to_oct, uid_to_oct): Use them as substitutes. (finish_header): Do not
 assume that UINTMAX_TO_OCT appends a space. (dump_file): Check whether the
 file changed as we read it.
",79,data/crawl/tar/hunk_443.cpp,,,data/crawl/tar/old_hunk_443.cpp,data/crawl/tar/new_hunk_443.cpp,-1,5,,"ERROR ((0, errno, ""%s: fstat"", p));","[""addLog""]","[[], [""ERROR"", ""0"", ""errno"", ""%s"", ""fstat"", ""p""]]",[12074517764533803997],538,"101 days, 12:00:00"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=70b61d565b35d3c97f071177995f55c33d0cfdd0,24 Apr 1997,"GNU tar 1.12
",715,data/crawl/tar/hunk_475.cpp,,,data/crawl/tar/old_hunk_475.cpp,data/crawl/tar/new_hunk_475.cpp,-1,597,,"ERROR ((0, errno, _(""Cannot stat %s""), name->name));","[""addLog""]","[[], [""ERROR"", ""0"", ""errno"", ""_"", ""Cannot"", ""stat"", ""%s"", ""name"", ""name""]]",[5291327620340408044],537,"441 days, 0:00:00"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=196caec187f27a3c3e4a68eee6bb388d79dac960,13 Dec 1999,"(xclose, xdup2, child_open_for_compress, child_open_for_uncompress,
 archive_write_error, archive_read_error, flush_archive, close_archive,
 init_volume_number, new_volume): Don't assume that gettext preserves errno.

(xdup2): Don't report errno if dup returns an unexpected nonnegative value.
(open_archive): Reject multivolume verify attempts a bit earlier.
Rename local variable `access', in case it's defined by system header.

(open_archive, backspace_output): Use `Cannot' uniformly, instead of
`Could not' sometimes and `Cannot' others.

(open_archive, flush_read, flush_archive, close_archive, new_volume):
Quote arbitrary strings in diagnostics.

(read_error): Set archive to STDOUT_FILENO temporarily when writing
archive buffer.

(init_volume_number): Check for input and output errors in volno_file.

(new_volume): Use new fatal_exit function to exit, and new xfork
function to fork.",292,data/crawl/tar/hunk_385.cpp,,,data/crawl/tar/old_hunk_385.cpp,data/crawl/tar/new_hunk_385.cpp,7,9,"ERROR ((0, errno, ""%s"", volno_file_option));",open_error (volno_file_option);,"[""updateLog"", ""removeVariable"", ""removeContent""]","[[""ERROR"", ""0"", ""errno"", ""%s""], [""open_error""]]",[-16338113477479155614],536,0:00:00
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=6e9d1539b665c8f3c173b36702ca1650cac977ad,13 Dec 1999,"(<quotearg.h>): New include. (enum permstatus): New enum. (struct
 delayed_set_stat): file_name is now at end of buffer, to avoid two mallocs. 
 New members file_name_len, invert_permissions, permstatus. (extr_init):
 Remove hack that silently adjusted newdir_umask. (set_mode, set_stat): New
 args invert_permissions, permstatus, typeflag. Use these args to decide
 whether and how to set modes. (set_mode, set_stat, prepare_to_extract,
 extract_sparse_file, extract_archive): Don't assume that gettext preserves
 errno. (set_stat): Remove arg symlink_flag; subsumed by typeflag.
 (delay_set_stat, repair_delayed_set_stat): New functions. (make_directories):
 Avoid mkdir where last part of path is "".."". Create a struct delayed_set_stat
 for each directory made. (prepare_to_extract): Renamed from
 unlink_destination, and return 0 immediately if to_stdout_option; all callers
 changed. (maybe_recoverable): New parameter interdir_made. Add support for
 --overwrite. (extract_sparse_file, extract_archive): Quote arbitrary strings
 in diagnostics. (extract_archive): By default, warn about "".."" in member
 names, and skip them. Don't open files with O_NONBLOCK or O_APPEND. Open with
 O_TRUNC only if --overwrite; otherwise, use O_EXCL to avoid overwriting them.
  Pass only rwxrwxrwx permissions to `open' and `mkdir', minus the current
 umask.  Keep track of intermediate directories made, to avoid looping when
 making x/../x when x doesn't exist; the earlier code solved this in a
 different way that didn't fit well into the new scheme.  Don't extract
 permissions onto existing directories unless --overwrite is given.  Do not
 add -wx------ permissions to new directories permanently; just do it
 temporarily. Remove no-longer-needed hack with MSDOS and directory time
 stamps. (apply_delayed_set_stat): New argument specifies which directories to
 fix statuses of.  Do not wait until the end of extraction to fix statuses;
 instead, fix a directory's status once we exit that directory. This requires
 less memory and does the right thing in some cases where the old method
 didn't. (fatal_exit): New function.
",600,data/crawl/tar/hunk_366.cpp,,,data/crawl/tar/old_hunk_366.cpp,data/crawl/tar/new_hunk_366.cpp,14,15,"ERROR ((0, errno, _(""%s: Could not link to `%s'""),
		CURRENT_FILE_NAME, current_link_name));","ERROR ((0, e, _(""%s: Cannot link to %s""),
		quotearg_colon (CURRENT_FILE_NAME),
		quote (current_link_name)));","[""updateVariable"", ""moveVariable"", ""updateContent"", ""addVariable""]","[[""errno"", ""Could"", ""not""], [""e"", ""Cannot"", ""quotearg_colon"", ""quote""]]",[-24576053682506722969],535,0:00:00
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=53f16a59713b32843f27332dbe807c06c7fc34bf,7 Jan 2000,"(extr_init): If we run out of memory, invoke apply_delayed_set_stat.
 (set_mode): Use Use error message functions to report errors consistently.
 (set_stat): Likewise. (repair_delayed_set_stat): Quote file names with colons
 if possible. (prepare_to_extract): Don't complain if we can't remove ""."".
 (extract_sparse_file): Use consistent message for unexpected EOF. Use error
 message functions to report errors consistently. (extract_archive): Use
 consistent message for unexpected EOF. Use error message functions to report
 errors consistently. Quote file names with colons if possible.
 (apply_delayed_set_stat): New function. (apply_nonancestor_delayed_set_stat):
 Renamed from apply_delayed_set_stat. Don't remove head if it doesn't apply.
 (fatal_exit): Invoke apply_delayed_set_stat with no args.
",94,data/crawl/tar/hunk_345.cpp,,,data/crawl/tar/old_hunk_345.cpp,data/crawl/tar/new_hunk_345.cpp,2,2,"ERROR ((0, 0,
	      _(""Cannot extract %s -- file is continued from another volume""),
	      quote (current_file_name)));","ERROR ((0, 0,
	      _(""%s: Cannot extract -- file is continued from another volume""),
	      quotearg_colon (current_file_name)));","[""updateVariable"", ""updateContent""]","[[""quote""], [""quotearg_colon""]]",[-1068118698148011511],534,0:00:00
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=f74454cb37c715674796f21a2fd75eb0a5a34002,7 Jan 2000,"(find_new_file_size): Return size instead of storing through pointer.
 All callers changed. (deal_with_sparse): Don't keep reading after read
 errors. (finish_sparse_file): Just abort if there is an internal error. Use
 error message functions to report errors consistently. (dump_file): Fix typo:
 stat_warn and stat_error were interchanged. Quote file names with colons if
 possible. Don't restore access times on directories during incremental dumps
 until after dealing with the directory. If ignoring failed reads, count
 closedir errors as warnings, not errors. Fix buffer overrun problem when
 dumping sparse files. If ignoring failed reads, count read errors as
 warnings, not errors. Use error message functions to report errors
 consistently. If ignoring failed reads, count unknown files as warnings, not
 errors.
",236,data/crawl/tar/hunk_327.cpp,,,data/crawl/tar/old_hunk_327.cpp,data/crawl/tar/new_hunk_327.cpp,5,-1,"ERROR ((0, e,
		  _(""Read error at byte %s, reading %lu bytes, in file %s""),
		  STRINGIFY_BIGINT (fullsize - *sizeleft, buf),
		  (unsigned long) bufsize, quote (name)));",,"[""removeLog""]","[[""ERROR"", ""0"", ""e"", ""_"", ""Read"", ""error"", ""at"", ""byte"", ""%s"", ""reading"", ""%lu"", ""bytes"", ""in"", ""file"", ""%s"", ""STRINGIFY_BIGINT"", ""fullsize"", ""*sizeleft"", ""buf"", ""unsigned"", ""long"", ""bufsize"", ""quote"", ""name""], []]",[-2315910437762395717],533,0:00:00
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=31d9c7e2a4344d8f884c93dd4fb467894de69e99,24 Jul 2003,"(chdir_do): Fixed call to restore_cwd
",899,data/crawl/tar/hunk_282.cpp,,,data/crawl/tar/old_hunk_282.cpp,data/crawl/tar/new_hunk_282.cpp,-1,38,,"ERROR ((0, e, _(""%s: Cannot rename to %s""),
		  quotearg_colon (after_backup_name),
		  quote_n (1, before_backup_name)));","[""addLog""]","[[], [""ERROR"", ""0"", ""e"", ""_"", ""%s"", ""Cannot"", ""rename"", ""to"", ""%s"", ""quotearg_colon"", ""after_backup_name"", ""quote_n"", ""1"", ""before_backup_name""]]",[16504530862957520272],532,0:00:00
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=a78ab36e1e4d7dccedaf7d1fcbaca6bb6ec0eed6,13 Dec 1999,"(<quotearg.h>): New include. (append_file): Don't assume that gettext
 preserves errno. Quote arbitrary strings in diagnostics. Check for close
 error.
",24,data/crawl/tar/hunk_347.cpp,,,data/crawl/tar/old_hunk_347.cpp,data/crawl/tar/new_hunk_347.cpp,8,8,"ERROR ((0, errno, ""%s"", path));",stat_error (path);,"[""updateLog"", ""removeVariable"", ""removeContent""]","[[""ERROR"", ""0"", ""errno"", ""%s""], [""stat_error""]]",[-20763455767742925080],531,"659 days, 12:00:00"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=5be0f2ba491f27074c35875185286d1d425ce044,31 Aug 2003,"New file
",295,data/crawl/tar/hunk_277.cpp,,,data/crawl/tar/old_hunk_277.cpp,data/crawl/tar/new_hunk_277.cpp,-1,121,,"ERROR ((0, 0, _(""Malformed extended headed"")));","[""addLog""]","[[], [""ERROR"", ""0"", ""0"", ""_"", ""Malformed"", ""extended"", ""headed""]]",[6499775363201000727],530,0:00:00
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=196caec187f27a3c3e4a68eee6bb388d79dac960,13 Dec 1999,"(xclose, xdup2, child_open_for_compress, child_open_for_uncompress,
 archive_write_error, archive_read_error, flush_archive, close_archive,
 init_volume_number, new_volume): Don't assume that gettext preserves errno.

(xdup2): Don't report errno if dup returns an unexpected nonnegative value.
(open_archive): Reject multivolume verify attempts a bit earlier.
Rename local variable `access', in case it's defined by system header.

(open_archive, backspace_output): Use `Cannot' uniformly, instead of
`Could not' sometimes and `Cannot' others.

(open_archive, flush_read, flush_archive, close_archive, new_volume):
Quote arbitrary strings in diagnostics.

(read_error): Set archive to STDOUT_FILENO temporarily when writing
archive buffer.

(init_volume_number): Check for input and output errors in volno_file.

(new_volume): Use new fatal_exit function to exit, and new xfork
function to fork.",292,data/crawl/tar/hunk_384.cpp,,,data/crawl/tar/old_hunk_384.cpp,data/crawl/tar/new_hunk_384.cpp,4,4,"ERROR ((0, errno, ""%s"", volno_file_option));",read_error (volno_file_option);,"[""updateLog"", ""removeVariable"", ""removeContent""]","[[""ERROR"", ""0"", ""errno"", ""%s""], [""read_error""]]",[-22658329873496918114],529,"678 days, 12:00:00"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=f0429c4a22e5b19eefbdbc684e9e175a1cca9a3e,13 Dec 1999,"(<quotearg.h>): New include. (name_init, name_next, name_close,
 names_notfound, collect_and_sort_names): Don't assume that gettext preserves
 errno. Quote arbitrary strings in diagnostics. (excluded_name): Fix typo that
 caused empty patterns to be mishandled.
",20,data/crawl/tar/hunk_353.cpp,,,data/crawl/tar/old_hunk_353.cpp,data/crawl/tar/new_hunk_353.cpp,3,3,"ERROR ((0, errno, _(""Cannot stat %s""), name->name));",stat_error (name->name);,"[""updateLog"", ""removeVariable"", ""removeContent""]","[[""ERROR"", ""0"", ""errno"", ""_"", ""Cannot"", ""stat"", ""%s""], [""stat_error""]]",[-17812926757777908747],528,"678 days, 12:00:00"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=d858a433c82626309e0d974ca923a79ac7f7f18f,31 Aug 2003,"Use current_stat_info
",2077,data/crawl/tar/hunk_268.cpp,,,data/crawl/tar/old_hunk_268.cpp,data/crawl/tar/new_hunk_268.cpp,12,11,"report_difference (_(""Not a regular file""));","report_difference (_(""File type differs""));","[""updateContent""]","[[""Not"", ""a"", ""regular"", ""file""], [""File"", ""type"", ""differs""]]",[10900295297319332681],527,0:00:00
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=10edb315da532371e65a7d83a16f50ade5b545e4,3 Sep 2003,"(struct xhdr_tab.keyword): Now pointer to const. (struct
 xhdr_tab.coder, struct xhdr_tab.decoder, locate_handler, decode_record,
 xheader_store, xheader_print, code_string, code_time, code_num, dummy_coder,
 dummy_decoder, atime_coder, atime_decoder, gid_coder, gid_decoder,
 gname_coder, gname_decoder, linkpath_coder, linkpath_decoder, ctime_coder,
 ctime_decoder, mtime_coder, mtime_decoder, path_coder, path_decoder,
 size_coder, size_decoder, uid_coder, uid_decoder, uname_coder,
 uname_decoder): Use pointers to const when possible. (xhdr_tab): Now const.

(struct xhdr_tab.decoder, dummy_decoder,
atime_decoder, gid_decoder, gname_decoder, linkpath_decoder,
ctime_decoder, mtime_decoder, path_decoder, size_decoder,
uid_decoder, uname_decoder): Remove unused keyword arg.
All uses changed.

(xhdr_tab, format_uintmax): Now static.

(dummy_coder, dummy_decoder, atime_coder,
atime_decoder, gid_coder, gid_decoder, gname_coder, gname_decoder,
linkpath_coder, linkpath_decoder, mtime_coder, mtime_decoder,
ctime_coder, ctime_decoder, path_coder, path_decoder, size_coder,
size_decoder, uid_coder, uid_decoder, uname_coder, uname_decoder):
Remove forward decls; no longer needed.
(xhdr_tab): Move to end, so that the forward decls aren't needed.
Add a forward declaration.

(decode_record): Return bool, not int.

(decode_record): Fix misspelling in diagnostic
""extended headed"" -> ""extended header"".

(decode_record, xheader_decode):
Do not use decls like ""char *p, *q;"".",258,data/crawl/tar/hunk_258.cpp,,,data/crawl/tar/old_hunk_258.cpp,data/crawl/tar/new_hunk_258.cpp,3,3,"ERROR ((0, 0, _(""Malformed extended headed"")));","ERROR ((0, 0, _(""Malformed extended header"")));","[""updateContent""]","[[""headed""], [""header""]]",[10],526,0:00:00
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=799e915cd3a889058eeefeaa25391cfe1eae7c3a,15 Apr 1997,"GNU tar 1.12
",1052,data/crawl/tar/hunk_484.cpp,,,data/crawl/tar/old_hunk_484.cpp,data/crawl/tar/new_hunk_484.cpp,-1,495,,"report_difference (_(""Gid differs""));","[""addLog""]","[[], [""report_difference"", ""_"", ""Gid"", ""differs""]]",[679502179580441274],525,"1181 days, 12:00:00"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=799e915cd3a889058eeefeaa25391cfe1eae7c3a,15 Apr 1997,"GNU tar 1.12
",1052,data/crawl/tar/hunk_484.cpp,,,data/crawl/tar/old_hunk_484.cpp,data/crawl/tar/new_hunk_484.cpp,-1,493,,"report_difference (_(""Uid differs""));","[""addLog""]","[[], [""report_difference"", ""_"", ""Uid"", ""differs""]]",[3361469078397983500],524,"1181 days, 12:00:00"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=27e87f4f2f4d49328c328fd55fa087d8a4507168,25 Apr 1997,"GNU tar 1.12
",4615,data/crawl/tar/hunk_471.cpp,,,data/crawl/tar/old_hunk_471.cpp,data/crawl/tar/new_hunk_471.cpp,-1,412,,"ERROR ((0, 0, _(""Child returned status %d""),
		      WEXITSTATUS (wait_status)));","[""addLog""]","[[], [""ERROR"", ""0"", ""0"", ""_"", ""Child"", ""returned"", ""status"", ""%d"", ""WEXITSTATUS"", ""wait_status""]]",[5089383475775470177],523,"1176 days, 12:00:00"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=c1b9212b16a53da408548efa3f9c8b1a62335b42,4 Oct 2003,"Moved system dependencies to system.c
",664,data/crawl/tar/hunk_236.cpp,,,data/crawl/tar/old_hunk_236.cpp,data/crawl/tar/new_hunk_236.cpp,-1,7,,"report_difference (ngettext (""Could only read %lu of %lu byte"",
				 ""Could only read %lu of %lu bytes"",
				 chunk_size),
				 (unsigned long) status,
				 (unsigned long) chunk_size);","[""addLog""]","[[], [""report_difference"", ""ngettext"", ""Could"", ""only"", ""read"", ""%lu"", ""of"", ""%lu"", ""byte"", ""Could"", ""only"", ""read"", ""%lu"", ""of"", ""%lu"", ""bytes"", ""chunk_size"", ""unsigned"", ""long"", ""status"", ""unsigned"", ""long"", ""chunk_size""]]",[-22896553458468658720],522,0:00:00
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=3999bf6360930179f08a1265ce8713705aafd405,17 Nov 2003,"(diff_sparse_files): Temporary placeholder.
",144,data/crawl/tar/hunk_227.cpp,,,data/crawl/tar/old_hunk_227.cpp,data/crawl/tar/new_hunk_227.cpp,104,-1,"report_difference (ngettext (""Could only read %lu of %lu byte"",
				 ""Could only read %lu of %lu bytes"",
				 chunk_size),
				 (unsigned long) status,
				 (unsigned long) chunk_size);",,"[""removeLog""]","[[""report_difference"", ""ngettext"", ""Could"", ""only"", ""read"", ""%lu"", ""of"", ""%lu"", ""byte"", ""Could"", ""only"", ""read"", ""%lu"", ""of"", ""%lu"", ""bytes"", ""chunk_size"", ""unsigned"", ""long"", ""status"", ""unsigned"", ""long"", ""chunk_size""], []]",[22896553458468658720],521,0:00:00
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=c1b9212b16a53da408548efa3f9c8b1a62335b42,4 Oct 2003,"Moved system dependencies to system.c
",664,data/crawl/tar/hunk_238.cpp,,,data/crawl/tar/old_hunk_238.cpp,data/crawl/tar/new_hunk_238.cpp,10,-1,"report_difference (_(""Gid differs""));",,"[""removeLog""]","[[""report_difference"", ""_"", ""Gid"", ""differs""], []]",[-679502179580441274],520,"22 days, 0:00:00"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=c1b9212b16a53da408548efa3f9c8b1a62335b42,4 Oct 2003,"Moved system dependencies to system.c
",664,data/crawl/tar/hunk_238.cpp,,,data/crawl/tar/old_hunk_238.cpp,data/crawl/tar/new_hunk_238.cpp,8,-1,"report_difference (_(""Uid differs""));",,"[""removeLog""]","[[""report_difference"", ""_"", ""Uid"", ""differs""], []]",[-3361469078397983500],519,"22 days, 0:00:00"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=18ef8acac57d9af27d42b11925c8767470976be9,17 Nov 2003,"Added sparse.c
",532,data/crawl/tar/hunk_229.cpp,,,data/crawl/tar/old_hunk_229.cpp,data/crawl/tar/new_hunk_229.cpp,-1,461,,"ERROR ((0, 0, _(""%s: invalid sparse archive member""),
	      file->stat_info->orig_file_name));","[""addLog""]","[[], [""ERROR"", ""0"", ""0"", ""_"", ""%s"", ""invalid"", ""sparse"", ""archive"", ""member"", ""file"", ""stat_info"", ""orig_file_name""]]",[26612204202219195932],518,0:00:00
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=d858a433c82626309e0d974ca923a79ac7f7f18f,31 Aug 2003,"Use current_stat_info
",2077,data/crawl/tar/hunk_263.cpp,,,data/crawl/tar/old_hunk_263.cpp,data/crawl/tar/new_hunk_263.cpp,-1,50,,"ERROR ((0, 0, _(""%s: Unknown file type '%c', diffed as normal file""),
	      quotearg_colon (current_stat_info.file_name),
	      current_header->header.typeflag));","[""addLog""]","[[], [""ERROR"", ""0"", ""0"", ""_"", ""%s"", ""Unknown"", ""file"", ""type"", ""%c"", ""diffed"", ""as"", ""normal"", ""file"", ""quotearg_colon"", ""current_stat_info"", ""file_name"", ""current_header"", ""header"", ""typeflag""]]",[-9769860923353638288],517,"262 days, 0:00:00"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=1e304fc5fd4fba5455057e74b09d08f954753340,5 Nov 2005,"(struct directory.mtime): New member. (note_directory): Take
 additional arguments. All callers updated. (scan_directory): Updated to use
 more metadata. In particular, this allows to correctly detect renamed files.
 (read_directory_file,write_directory_file) (write_directory_file_entry):
 Support new directory file format.
",284,data/crawl/tar/hunk_141.cpp,,,data/crawl/tar/old_hunk_141.cpp,data/crawl/tar/new_hunk_141.cpp,-1,14,,"ERROR((1, 0, _(""Bad incremental file format"")));","[""addLog""]","[[], [""ERROR"", ""1"", ""0"", ""_"", ""Bad"", ""incremental"", ""file"", ""format""]]",[11796039148251015704],516,0:00:00
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=1e304fc5fd4fba5455057e74b09d08f954753340,5 Nov 2005,"(struct directory.mtime): New member. (note_directory): Take
 additional arguments. All callers updated. (scan_directory): Updated to use
 more metadata. In particular, this allows to correctly detect renamed files.
 (read_directory_file,write_directory_file) (write_directory_file_entry):
 Support new directory file format.
",284,data/crawl/tar/hunk_141.cpp,,,data/crawl/tar/old_hunk_141.cpp,data/crawl/tar/new_hunk_141.cpp,10,54,"ERROR ((0, 0, ""%s:1: %s"", quotearg_colon (listed_incremental_option),
		_(""Time stamp out of range"")));","ERROR ((0, 0, ""%s:%ld: %s"",
		    quotearg_colon (listed_incremental_option),
		    lineno,
		    _(""Time stamp out of range"")));","[""updateContent"", ""addVariable""]","[[""1""], [""%ld"", ""lineno""]]",[-11775054436867289357],515,0:00:00
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=040b5ab5f969f9ee6c69a54bc284e2ff57b86556,23 Jun 2005,"A sweep of the sparse code prompted by a bug report by Jim Meyering.
 * src/sparse.c: Include <inttostr.h>. (struct tar_sparse_file): offset and
 dumped_size are off_t, not size_t.  optab is now const *. (dump_zeros):
 Return bool success flag, not off_t. All callers changed. Use a constant-zero
 buffer rather than clearing a buffer each time. Don't mess up if write fails.
 (dump_zeros, check_sparse_region): Don't assume off_t is no wider than
 size_t. (tar_sparse_init): Don't bother clearing a field that is already
 clear. (zero_block_p): First arg is const *, not *. (clear_block,
 SPARSES_INIT_COUNT): Remove. (sparse_add_map): First arg is now struct
 start_stat_info *, not struct tar_sparse_file *.  All callers changed. Use
 x2nrealloc to check for size_t overflow. (parse_scan_file): Cache
 commonly-used parts of file. Use an auto buffer, not a static one. Don't
 bother clearing the buffer; not needed. Don't bother clearing items that are
 already clear. (oldgnu_optab, star_optab, pax_optab): Now const.
 (sparse_dump_region): Don't bother clearing the buffer before reading into
 it; just clear the parts that aren't read into. (sparse_dump_file): Clear the
 whole local variable 'file'. (diff_buffer): Remove; now a local var.
 (check_sparse_region): Don't bother clearing buffer before reading into it. 
 Don't assume off_t is promoted to long. (oldgnu_get_sparse_info,
 star_get_sparse_info): Use an auto status, not static. * src/tar.h (struct
 tar_stat_info): had_trailing_slash is now bool, not int. * src/xheader.c
 (sparse_offset_coder, sparse_numbytes_coder): Rewrite to avoid cast.
 (sparse_offset_decoder, sparse_numbytes_decoder): Diagnose excess entries
 rather than crashing.
",225,data/crawl/tar/hunk_145.cpp,,,data/crawl/tar/old_hunk_145.cpp,data/crawl/tar/new_hunk_145.cpp,-1,6,,"ERROR ((0, 0, _(""Malformed extended header: excess %s=%s""),
		""GNU.sparse.numbytes"", arg));","[""addLog""]","[[], [""ERROR"", ""0"", ""0"", ""_"", ""Malformed"", ""extended"", ""header"", ""excess"", ""%s"", ""%s"", ""GNU"", ""sparse"", ""numbytes"", ""arg""]]",[5762359339431995225],514,"68 days, 12:00:00"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=d858a433c82626309e0d974ca923a79ac7f7f18f,31 Aug 2003,"Use current_stat_info
",2077,data/crawl/tar/hunk_274.cpp,,,data/crawl/tar/old_hunk_274.cpp,data/crawl/tar/new_hunk_274.cpp,-1,81,,"ERROR ((0, 0, ""%s:%ld: %s"",
		    quotearg_colon (listed_incremental_option), lineno,
		    _(""Inode number out of range"")));","[""addLog""]","[[], [""ERROR"", ""0"", ""0"", ""%s"", ""%ld"", ""%s"", ""quotearg_colon"", ""listed_incremental_option"", ""lineno"", ""_"", ""Inode"", ""number"", ""out"", ""of"", ""range""]]",[-22812606432656395322],513,"490 days, 12:00:00"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=d858a433c82626309e0d974ca923a79ac7f7f18f,31 Aug 2003,"Use current_stat_info
",2077,data/crawl/tar/hunk_274.cpp,,,data/crawl/tar/old_hunk_274.cpp,data/crawl/tar/new_hunk_274.cpp,-1,65,,"ERROR ((0, 0, ""%s:%ld: %s"",
		    quotearg_colon (listed_incremental_option), lineno,
		    _(""Invalid device number"")));","[""addLog""]","[[], [""ERROR"", ""0"", ""0"", ""%s"", ""%ld"", ""%s"", ""quotearg_colon"", ""listed_incremental_option"", ""lineno"", ""_"", ""Invalid"", ""device"", ""number""]]",[-32877137414318571082],512,"490 days, 12:00:00"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=1e304fc5fd4fba5455057e74b09d08f954753340,5 Nov 2005,"(struct directory.mtime): New member. (note_directory): Take
 additional arguments. All callers updated. (scan_directory): Updated to use
 more metadata. In particular, this allows to correctly detect renamed files.
 (read_directory_file,write_directory_file) (write_directory_file_entry):
 Support new directory file format.
",284,data/crawl/tar/hunk_142.cpp,,,data/crawl/tar/old_hunk_142.cpp,data/crawl/tar/new_hunk_142.cpp,-1,31,,"ERROR ((0, 0, ""%s:%ld: %s"",
			quotearg_colon (listed_incremental_option), lineno,
			_(""Modification time (nanoseconds) out of range"")));","[""addLog""]","[[], [""ERROR"", ""0"", ""0"", ""%s"", ""%ld"", ""%s"", ""quotearg_colon"", ""listed_incremental_option"", ""lineno"", ""_"", ""Modification"", ""time"", ""nanoseconds"", ""out"", ""of"", ""range""]]",[-10374727969655615658],511,"92 days, 0:00:00"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=1e304fc5fd4fba5455057e74b09d08f954753340,5 Nov 2005,"(struct directory.mtime): New member. (note_directory): Take
 additional arguments. All callers updated. (scan_directory): Updated to use
 more metadata. In particular, this allows to correctly detect renamed files.
 (read_directory_file,write_directory_file) (write_directory_file_entry):
 Support new directory file format.
",284,data/crawl/tar/hunk_142.cpp,,,data/crawl/tar/old_hunk_142.cpp,data/crawl/tar/new_hunk_142.cpp,-1,27,,"ERROR ((0, 0, ""%s:%ld: %s"",
			quotearg_colon (listed_incremental_option), lineno,
			_(""Invalid modification time (nanoseconds)"")));","[""addLog""]","[[], [""ERROR"", ""0"", ""0"", ""%s"", ""%ld"", ""%s"", ""quotearg_colon"", ""listed_incremental_option"", ""lineno"", ""_"", ""Invalid"", ""modification"", ""time"", ""nanoseconds""]]",[-19772974021668649334],510,"92 days, 0:00:00"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=1e304fc5fd4fba5455057e74b09d08f954753340,5 Nov 2005,"(struct directory.mtime): New member. (note_directory): Take
 additional arguments. All callers updated. (scan_directory): Updated to use
 more metadata. In particular, this allows to correctly detect renamed files.
 (read_directory_file,write_directory_file) (write_directory_file_entry):
 Support new directory file format.
",284,data/crawl/tar/hunk_142.cpp,,,data/crawl/tar/old_hunk_142.cpp,data/crawl/tar/new_hunk_142.cpp,-1,19,,"ERROR ((0, 0, ""%s:%ld: %s"",
			quotearg_colon (listed_incremental_option), lineno,
			_(""Modification time (seconds) out of range"")));","[""addLog""]","[[], [""ERROR"", ""0"", ""0"", ""%s"", ""%ld"", ""%s"", ""quotearg_colon"", ""listed_incremental_option"", ""lineno"", ""_"", ""Modification"", ""time"", ""seconds"", ""out"", ""of"", ""range""]]",[-13329338601747945452],509,"92 days, 0:00:00"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=1e304fc5fd4fba5455057e74b09d08f954753340,5 Nov 2005,"(struct directory.mtime): New member. (note_directory): Take
 additional arguments. All callers updated. (scan_directory): Updated to use
 more metadata. In particular, this allows to correctly detect renamed files.
 (read_directory_file,write_directory_file) (write_directory_file_entry):
 Support new directory file format.
",284,data/crawl/tar/hunk_142.cpp,,,data/crawl/tar/old_hunk_142.cpp,data/crawl/tar/new_hunk_142.cpp,-1,15,,"ERROR ((0, 0, ""%s:%ld: %s"",
			quotearg_colon (listed_incremental_option), lineno,
			_(""Invalid modification time (seconds)"")));","[""addLog""]","[[], [""ERROR"", ""0"", ""0"", ""%s"", ""%ld"", ""%s"", ""quotearg_colon"", ""listed_incremental_option"", ""lineno"", ""_"", ""Invalid"", ""modification"", ""time"", ""seconds""]]",[-22727584653760979128],508,"92 days, 0:00:00"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=c9e7465642f8dc879ea589b628176e6c9b6656bf,8 May 2006,"(struct directory.contents, flags): New members (nfs,found,new):
 Remove. Replaced by appropriate bitmask values in `flags' field. All uses
 updated. (directory_meta_table): New table. (hash_directory): Rename to
 hash_directory_name (compare_directories): Rename to compare_directory_names
 (hash_directory_meta,compare_directory_meta,find_directory_meta): New
 functions (compare_dirents): Removed (note_directory): Get 7th argument:
 directory contents. All callers updated (dumpdir_locate,makedumpdir): New
 functions (scan_directory): Rewritten. Use makedumpdir to create a sorted
 dumpdir array. This makes the obstack argument unnecessary. Besides,
 ALL_CHILDREN flag is set only for new directories. (procdir): Change return
 type to struct directory. Return immediately if the directory was already
 initialized. Discover directory renames using directory_meta_table.
 (append_incremental_renames): New function. (read_directory_file,
 write_directory_file): Use new snapshot file format.
",1158,data/crawl/tar/hunk_124.cpp,,,data/crawl/tar/old_hunk_124.cpp,data/crawl/tar/new_hunk_124.cpp,114,-1,"ERROR ((0, 0, ""%s:%ld: %s"",
		    quotearg_colon (listed_incremental_option), lineno,
		    _(""Inode number out of range"")));",,"[""removeLog""]","[[""ERROR"", ""0"", ""0"", ""%s"", ""%ld"", ""%s"", ""quotearg_colon"", ""listed_incremental_option"", ""lineno"", ""_"", ""Inode"", ""number"", ""out"", ""of"", ""range""], []]",[22812606432656395322],507,"45 days, 12:00:00"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=c9e7465642f8dc879ea589b628176e6c9b6656bf,8 May 2006,"(struct directory.contents, flags): New members (nfs,found,new):
 Remove. Replaced by appropriate bitmask values in `flags' field. All uses
 updated. (directory_meta_table): New table. (hash_directory): Rename to
 hash_directory_name (compare_directories): Rename to compare_directory_names
 (hash_directory_meta,compare_directory_meta,find_directory_meta): New
 functions (compare_dirents): Removed (note_directory): Get 7th argument:
 directory contents. All callers updated (dumpdir_locate,makedumpdir): New
 functions (scan_directory): Rewritten. Use makedumpdir to create a sorted
 dumpdir array. This makes the obstack argument unnecessary. Besides,
 ALL_CHILDREN flag is set only for new directories. (procdir): Change return
 type to struct directory. Return immediately if the directory was already
 initialized. Discover directory renames using directory_meta_table.
 (append_incremental_renames): New function. (read_directory_file,
 write_directory_file): Use new snapshot file format.
",1158,data/crawl/tar/hunk_124.cpp,,,data/crawl/tar/old_hunk_124.cpp,data/crawl/tar/new_hunk_124.cpp,102,-1,"ERROR ((0, 0, ""%s:%ld: %s"",
		    quotearg_colon (listed_incremental_option), lineno,
		    _(""Device number out of range"")));",,"[""removeLog""]","[[""ERROR"", ""0"", ""0"", ""%s"", ""%ld"", ""%s"", ""quotearg_colon"", ""listed_incremental_option"", ""lineno"", ""_"", ""Device"", ""number"", ""out"", ""of"", ""range""], []]",[23478891362305537406],506,"45 days, 12:00:00"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=c9e7465642f8dc879ea589b628176e6c9b6656bf,8 May 2006,"(struct directory.contents, flags): New members (nfs,found,new):
 Remove. Replaced by appropriate bitmask values in `flags' field. All uses
 updated. (directory_meta_table): New table. (hash_directory): Rename to
 hash_directory_name (compare_directories): Rename to compare_directory_names
 (hash_directory_meta,compare_directory_meta,find_directory_meta): New
 functions (compare_dirents): Removed (note_directory): Get 7th argument:
 directory contents. All callers updated (dumpdir_locate,makedumpdir): New
 functions (scan_directory): Rewritten. Use makedumpdir to create a sorted
 dumpdir array. This makes the obstack argument unnecessary. Besides,
 ALL_CHILDREN flag is set only for new directories. (procdir): Change return
 type to struct directory. Return immediately if the directory was already
 initialized. Discover directory renames using directory_meta_table.
 (append_incremental_renames): New function. (read_directory_file,
 write_directory_file): Use new snapshot file format.
",1158,data/crawl/tar/hunk_124.cpp,,,data/crawl/tar/old_hunk_124.cpp,data/crawl/tar/new_hunk_124.cpp,87,-1,"ERROR ((0, 0, ""%s:%ld: %s"",
			quotearg_colon (listed_incremental_option), lineno,
			_(""Modification time (nanoseconds) out of range"")));",,"[""removeLog""]","[[""ERROR"", ""0"", ""0"", ""%s"", ""%ld"", ""%s"", ""quotearg_colon"", ""listed_incremental_option"", ""lineno"", ""_"", ""Modification"", ""time"", ""nanoseconds"", ""out"", ""of"", ""range""], []]",[10374727969655615658],505,"45 days, 12:00:00"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=c9e7465642f8dc879ea589b628176e6c9b6656bf,8 May 2006,"(struct directory.contents, flags): New members (nfs,found,new):
 Remove. Replaced by appropriate bitmask values in `flags' field. All uses
 updated. (directory_meta_table): New table. (hash_directory): Rename to
 hash_directory_name (compare_directories): Rename to compare_directory_names
 (hash_directory_meta,compare_directory_meta,find_directory_meta): New
 functions (compare_dirents): Removed (note_directory): Get 7th argument:
 directory contents. All callers updated (dumpdir_locate,makedumpdir): New
 functions (scan_directory): Rewritten. Use makedumpdir to create a sorted
 dumpdir array. This makes the obstack argument unnecessary. Besides,
 ALL_CHILDREN flag is set only for new directories. (procdir): Change return
 type to struct directory. Return immediately if the directory was already
 initialized. Discover directory renames using directory_meta_table.
 (append_incremental_renames): New function. (read_directory_file,
 write_directory_file): Use new snapshot file format.
",1158,data/crawl/tar/hunk_124.cpp,,,data/crawl/tar/old_hunk_124.cpp,data/crawl/tar/new_hunk_124.cpp,75,-1,"ERROR ((0, 0, ""%s:%ld: %s"",
			quotearg_colon (listed_incremental_option), lineno,
			_(""Modification time (seconds) out of range"")));",,"[""removeLog""]","[[""ERROR"", ""0"", ""0"", ""%s"", ""%ld"", ""%s"", ""quotearg_colon"", ""listed_incremental_option"", ""lineno"", ""_"", ""Modification"", ""time"", ""seconds"", ""out"", ""of"", ""range""], []]",[13329338601747945452],504,"45 days, 12:00:00"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=b9588c472262be876400e0804c529c57102d6f0d,23 Jan 2007,"(struct exclude_tag): rename to exclusion_tag (check_exclusion_tags):
 New function (cachedir_file_p): New function (from check_cache_directory)
 (dump_dir0,dump_file0): Use check_exclusion_tags
",215,data/crawl/tar/hunk_91.cpp,,,data/crawl/tar/old_hunk_91.cpp,data/crawl/tar/new_hunk_91.cpp,-1,53,,"exclusion_tag_warning (st->orig_file_name, tag_file_name,
				 _(""contents not dumped""));","[""addLog""]","[[], [""exclusion_tag_warning"", ""st"", ""orig_file_name"", ""tag_file_name"", ""_"", ""contents"", ""not"", ""dumped""]]",[6223220133174504031],503,0:00:00
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=efe6609cd997116b4f29181b57117ff6d91c7d98,26 Sep 2007,"(struct directory): New member tagfile (make_directory): Initialize
 tagfile to NULL (procdir): New argument: entry Hanlde exclusion tags.
 (makedumpdir): Take into account directory->tagfile. (scan_directory): Hanlde
 exclusion tags.
",65,data/crawl/tar/hunk_87.cpp,,,data/crawl/tar/old_hunk_87.cpp,data/crawl/tar/new_hunk_87.cpp,-1,27,,"exclusion_tag_warning (name_buffer, tag_file_name,
			       _(""contents not dumped""));","[""addLog""]","[[], [""exclusion_tag_warning"", ""name_buffer"", ""tag_file_name"", ""_"", ""contents"", ""not"", ""dumped""]]",[4982417520174430025],502,0:00:00
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=985637ab5a7448cf89e59ac433229a4fef2d265d,26 Jun 2008,"Bugfixes.

* src/buffer.c (try_new_volume): Print more information with error
diagnostics.
(_gnu_flush_write): Improve error checking.  Adjust
real_s_sizeleft before calling new_volume to avoid creating
malformed multivolume headers.
* tests/delete05.at, tests/gzip.at, tests/ignfail.at,
tests/longv7.at, tests/lustar01.at, tests/lustar02.at,
tests/shortfile.at: Update to match new diagnostic wording
(see 2008-05-06).

* NEWS: Update.",57,data/crawl/tar/hunk_80.cpp,,,data/crawl/tar/old_hunk_80.cpp,data/crawl/tar/new_hunk_80.cpp,-1,2,,/buffer.c (try_new_volume);,"[""addLog""]","[[], [""/buffer"", ""c"", ""try_new_volume""]]",[-12530930510547672729],501,"127 days, 0:00:00"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=c30c4ffb9fc874aafea6f6c91f3fc78595db4154,18 Jun 2009,"Remove files that were removed in CVS, but reappeared after migration
 to Git
",5265,data/crawl/tar/hunk_64.cpp,,,data/crawl/tar/old_hunk_64.cpp,data/crawl/tar/new_hunk_64.cpp,715,-1,"fputs(breaks[0], out);",,"[""removeLog""]","[[""fputs"", ""breaks[0]"", ""out""], []]",[3244297555930287933],500,0:00:00
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=4dfcd6c054a5e9e1a371c822a3be90564dd9b690,7 Oct 2009,"Fix bugs in handling the --remove-files option.

Make sure the files are deleted only if they were succesfully stored
to the archive.

* src/exit.c: New file.
* src/unlink.c: New file.
* src/Makefile.am (tar_SOURCES): Add exit.c and unlink.c.
* src/common.h: Include progname.h
(program_name): Remove global.
(records_written): New extern.
(queue_deferred_unlink, finish_deferred_unlinks): New prototypes.
(fatal_exit_hook): New extern.
* src/create.c (create_archive): Call finish_deferred_unlinks.
(dump_hard_link, dump_file0): Don't actually unlink the file,
queue it to deferred_unlinks instead.
* src/delete.c (records_written): Remove extern: declared in
common.h.
* src/extract.c (extract_archive): Set fatal_exit_hook.
(fatal_exit, xalloc_die): Move to exit.c
* src/system.c (sys_wait_for_child): Exit immediately
if the child dies or exits with a non-zero status.
(sys_child_open_for_compress)
(sys_child_open_for_uncompress): Use set_program_name,
instead of setting program_name directly.
* src/tar.c (main): Use set_program_name,
instead of setting program_name directly.

* tests/Makefile.am (TESTSUITE_AT): Add remfiles01.at
and remfiles02.at.
* tests/testsuite.at: Likewise.
* tests/gzip.at: Reflect the above changes.",401,data/crawl/tar/hunk_61.cpp,,,data/crawl/tar/old_hunk_61.cpp,data/crawl/tar/new_hunk_61.cpp,6,6,"ERROR ((0, 0, _(""Child returned status %d""),
		WEXITSTATUS (wait_status)));","FATAL_ERROR ((0, 0, _(""Child returned status %d""),
		      WEXITSTATUS (wait_status)));","[""updateLog""]","[[""ERROR""], [""FATAL_ERROR""]]",[-2734982981564794265],499,0:00:00
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=303132dcdcb4c1f2cb9051826265640aaddf6f93,12 Aug 2004,"Adjust to changes to gnulib xalloc module. (extr_init): Remove
 assignment to xalloc_fail_func; no longer needed. (xalloc_die): New function.
",8,data/crawl/tar/hunk_189.cpp,,,data/crawl/tar/old_hunk_189.cpp,data/crawl/tar/new_hunk_189.cpp,-1,7,,"error (0, 0, ""%s"", _(""memory exhausted""));","[""addLog""]","[[], [""error"", ""0"", ""0"", ""%s"", ""_"", ""memory"", ""exhausted""]]",[18665186363113048020],498,"941 days, 0:00:00"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=6e9d1539b665c8f3c173b36702ca1650cac977ad,13 Dec 1999,"(<quotearg.h>): New include. (enum permstatus): New enum. (struct
 delayed_set_stat): file_name is now at end of buffer, to avoid two mallocs. 
 New members file_name_len, invert_permissions, permstatus. (extr_init):
 Remove hack that silently adjusted newdir_umask. (set_mode, set_stat): New
 args invert_permissions, permstatus, typeflag. Use these args to decide
 whether and how to set modes. (set_mode, set_stat, prepare_to_extract,
 extract_sparse_file, extract_archive): Don't assume that gettext preserves
 errno. (set_stat): Remove arg symlink_flag; subsumed by typeflag.
 (delay_set_stat, repair_delayed_set_stat): New functions. (make_directories):
 Avoid mkdir where last part of path is "".."". Create a struct delayed_set_stat
 for each directory made. (prepare_to_extract): Renamed from
 unlink_destination, and return 0 immediately if to_stdout_option; all callers
 changed. (maybe_recoverable): New parameter interdir_made. Add support for
 --overwrite. (extract_sparse_file, extract_archive): Quote arbitrary strings
 in diagnostics. (extract_archive): By default, warn about "".."" in member
 names, and skip them. Don't open files with O_NONBLOCK or O_APPEND. Open with
 O_TRUNC only if --overwrite; otherwise, use O_EXCL to avoid overwriting them.
  Pass only rwxrwxrwx permissions to `open' and `mkdir', minus the current
 umask.  Keep track of intermediate directories made, to avoid looping when
 making x/../x when x doesn't exist; the earlier code solved this in a
 different way that didn't fit well into the new scheme.  Don't extract
 permissions onto existing directories unless --overwrite is given.  Do not
 add -wx------ permissions to new directories permanently; just do it
 temporarily. Remove no-longer-needed hack with MSDOS and directory time
 stamps. (apply_delayed_set_stat): New argument specifies which directories to
 fix statuses of.  Do not wait until the end of extraction to fix statuses;
 instead, fix a directory's status once we exit that directory. This requires
 less memory and does the right thing in some cases where the old method
 didn't. (fatal_exit): New function.
",600,data/crawl/tar/hunk_370.cpp,,,data/crawl/tar/old_hunk_370.cpp,data/crawl/tar/new_hunk_370.cpp,-1,34,,"error (TAREXIT_FAILURE, 0, _(""Error is not recoverable: exiting now""));","[""addLog""]","[[], [""error"", ""TAREXIT_FAILURE"", ""0"", ""_"", ""Error"", ""is"", ""not"", ""recoverable"", ""exiting"", ""now""]]",[29424550464379772209],497,"1793 days, 0:00:00"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=d36f5a3cc3280d6c4a58367bf51b527d5c14ac04,18 Nov 2012,"Support for POSIX ACLs

* configure.ac: Check whether ACLs are available on the
host system.
* gnulib.modules: Add acl
* src/create.c (start_header): Store ACLs when creating
a POSIX archive.
(dump_file0): Handle ACLs.
* src/extract.c (delayed_set_stat) <acls_a_ptr, acls_a_len>
<acls_d_ptr, acls_d_len>: New members.
(delayed_link): Likewise.
(set_stat,delay_set_stat)
(apply_nonancestor_delayed_set_stat): Set ACLs.
* src/tar.c: New options: ""--acls"", ""--no-acls""
(tar_stat_destroy): Free acls_a_ptr and acls_d_ptr fields.
* src/tar.h (tar_stat_info) <acls_a_ptr, acls_a_len>
<acls_d_ptr, acls_d_len>: New members.
* src/xattrs.c (xattrs_acls_get, xattrs_acls_set): New functions.
* src/xheader.c: Support new keywors: ""SCHILY.acl.access"" and
""SCHILY.acl.default"".
* tests/Makefile.am: Add new tests.
* tests/testsuite.at: Likewise.
* tests/acls01.at: New test.
* tests/acls02.at: New test.",627,data/crawl/tar/hunk_39.cpp,,,data/crawl/tar/old_hunk_39.cpp,data/crawl/tar/new_hunk_39.cpp,-1,219,,"call_arg_warn (""acl_to_text"", file_name);","[""addLog""]","[[], [""call_arg_warn"", ""acl_to_text"", ""file_name""]]",[-15072372191576064981],496,0:00:00
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=d36f5a3cc3280d6c4a58367bf51b527d5c14ac04,18 Nov 2012,"Support for POSIX ACLs

* configure.ac: Check whether ACLs are available on the
host system.
* gnulib.modules: Add acl
* src/create.c (start_header): Store ACLs when creating
a POSIX archive.
(dump_file0): Handle ACLs.
* src/extract.c (delayed_set_stat) <acls_a_ptr, acls_a_len>
<acls_d_ptr, acls_d_len>: New members.
(delayed_link): Likewise.
(set_stat,delay_set_stat)
(apply_nonancestor_delayed_set_stat): Set ACLs.
* src/tar.c: New options: ""--acls"", ""--no-acls""
(tar_stat_destroy): Free acls_a_ptr and acls_d_ptr fields.
* src/tar.h (tar_stat_info) <acls_a_ptr, acls_a_len>
<acls_d_ptr, acls_d_len>: New members.
* src/xattrs.c (xattrs_acls_get, xattrs_acls_set): New functions.
* src/xheader.c: Support new keywors: ""SCHILY.acl.access"" and
""SCHILY.acl.default"".
* tests/Makefile.am: Add new tests.
* tests/testsuite.at: Likewise.
* tests/acls01.at: New test.
* tests/acls02.at: New test.",627,data/crawl/tar/hunk_39.cpp,,,data/crawl/tar/old_hunk_39.cpp,data/crawl/tar/new_hunk_39.cpp,-1,210,,"call_arg_warn (""acl_get_file_at"", file_name);","[""addLog""]","[[], [""call_arg_warn"", ""acl_get_file_at"", ""file_name""]]",[-3821431335537624245],495,0:00:00
