----++++configure.ac
@@ -2499,10 +2499,10 @@ AC_ARG_ENABLE(auth-basic,
       all possible helpers. Default is to do so.
       To disable the basic authentication scheme, use --disable-auth-basic.
       To enable but build no helpers, specify &quot;none&quot;.
-      To see available helpers, see the helpers/basic_auth directory. ]),[
+      To see available helpers, see the src/auth/basic/ directory. ]),[
 #nothing to do really
 ])
-m4_include([helpers/basic_auth/modules.m4])
+m4_include([src/auth/basic/helpers.m4])
 
 AC_ARG_ENABLE(auth-digest,
   AS_HELP_STRING([--enable-auth-digest=&quot;list of helpers&quot;],
@@ -3797,20 +3797,6 @@ AC_CONFIG_FILES([
 	doc/release-notes/Makefile
 	errors/Makefile
 	helpers/Makefile
-	helpers/basic_auth/Makefile
-	helpers/basic_auth/DB/Makefile
-	helpers/basic_auth/fake/Makefile
-	helpers/basic_auth/getpwnam/Makefile
-	helpers/basic_auth/LDAP/Makefile
-	helpers/basic_auth/NCSA/Makefile
-	helpers/basic_auth/NIS/Makefile
-	helpers/basic_auth/PAM/Makefile
-	helpers/basic_auth/POP3/Makefile
-	helpers/basic_auth/RADIUS/Makefile
-	helpers/basic_auth/SASL/Makefile
-	helpers/basic_auth/SMB/Makefile
-	helpers/basic_auth/SMB_LM/Makefile
-	helpers/basic_auth/SSPI/Makefile
 	helpers/external_acl/Makefile
 	helpers/external_acl/AD_group/Makefile
 	helpers/external_acl/delayer/Makefile
@@ -3847,6 +3833,19 @@ AC_CONFIG_FILES([
 	src/anyp/Makefile
 	src/auth/Makefile
 	src/auth/basic/Makefile
+	src/auth/basic/DB/Makefile
+	src/auth/basic/fake/Makefile
+	src/auth/basic/getpwnam/Makefile
+	src/auth/basic/LDAP/Makefile
+	src/auth/basic/NCSA/Makefile
+	src/auth/basic/NIS/Makefile
+	src/auth/basic/PAM/Makefile
+	src/auth/basic/POP3/Makefile
+	src/auth/basic/RADIUS/Makefile
+	src/auth/basic/SASL/Makefile
+	src/auth/basic/SMB/Makefile
+	src/auth/basic/SMB_LM/Makefile
+	src/auth/basic/SSPI/Makefile
 	src/auth/digest/Makefile
 	src/auth/digest/eDirectory/Makefile
 	src/auth/digest/file/Makefile
----++++helpers/Makefile.am
@@ -7,14 +7,7 @@
 
 EXTRA_DIST = defines.h
 
-DIST_SUBDIRS = \
-	basic_auth \
-	external_acl \
-	url_rewrite \
-	storeid_rewrite
-
 SUBDIRS = \
-	basic_auth \
 	external_acl \
 	url_rewrite \
 	storeid_rewrite
----++++helpers/basic_auth/Makefile.am
@@ -1,26 +0,0 @@
-## Copyright (C) 1996-2016 The Squid Software Foundation and contributors
-##
-## Squid software is distributed under GPLv2+ license and includes
-## contributions from numerous individuals and organizations.
-## Please see the COPYING and CONTRIBUTORS files for details.
-##
-
-## Alphabetical list of sub-directories to distribute with Squid:
-DIST_SUBDIRS = \
-	DB \
-	fake \
-	getpwnam \
-	LDAP \
-	NCSA \
-	NIS \
-	PAM \
-	POP3 \
-	RADIUS \
-	SASL \
-	SMB \
-	SMB_LM \
-	SSPI
-
-SUBDIRS	= $(BASIC_AUTH_HELPERS)
-
-EXTRA_DIST = modules.m4
@@ -12,7 +12,7 @@ man_MANS 		= basic_ldap_auth.8
 EXTRA_DIST		= basic_ldap_auth.8 required.m4
 basic_ldap_auth_SOURCES	= basic_ldap_auth.cc
 
-LDADD = \
+basic_ldap_auth_LDADD = \
 	$(top_builddir)/lib/libmiscencoding.la \
 	$(COMPAT_LIB) \
 	$(LDAPLIB) \
----++++src/auth/basic/Makefile.am
@@ -8,6 +8,24 @@
 include $(top_srcdir)/src/Common.am
 include $(top_srcdir)/src/TestHeaders.am
 
+DIST_SUBDIRS = \
+        DB \
+        fake \
+        getpwnam \
+        LDAP \
+        NCSA \
+        NIS \
+        PAM \
+        POP3 \
+        RADIUS \
+        SASL \
+        SMB \
+        SMB_LM \
+        SSPI
+
+SUBDIRS = $(BASIC_AUTH_HELPERS)
+EXTRA_DIST= helpers.m4
+
 noinst_LTLIBRARIES = libbasic.la
 
 libbasic_la_SOURCES = \
@@ -8,17 +8,18 @@
 include $(top_srcdir)/src/Common.am
 
 libexec_PROGRAMS	= basic_ncsa_auth
-basic_ncsa_auth_SOURCES	= basic_ncsa_auth.cc crypt_md5.cc crypt_md5.h
 man_MANS 		= basic_ncsa_auth.8
 EXTRA_DIST		= basic_ncsa_auth.8 required.m4
-LDADD = \
+
+basic_ncsa_auth_SOURCES= \
+	basic_ncsa_auth.cc \
+	crypt_md5.cc \
+	crypt_md5.h
+basic_ncsa_auth_LDADD= \
 	$(top_builddir)/lib/libmisccontainers.la \
 	$(top_builddir)/lib/libmiscencoding.la \
 	$(COMPAT_LIB) \
 	$(NETTLELIB) \
 	$(CRYPTLIB) \
 	$(SSLLIB) \
 	$(XTRA_LIBS)
-
-## we need our local files too (but avoid -I. at all costs)
-AM_CPPFLAGS += -I$(srcdir)
@@ -25,7 +25,7 @@
  */
 
 #include &quot;squid.h&quot;
-#include "crypt_md5.h"
+#include "auth/basic/NCSA/crypt_md5.h"
 #include &quot;helpers/defines.h&quot;
 #include &quot;rfc1738.h&quot;
 
@@ -24,7 +24,7 @@
  */
 
 #include &quot;squid.h&quot;
-#include "crypt_md5.h"
+#include "auth/basic/NCSA/crypt_md5.h"
 #include &quot;md5.h&quot;
 
 #include &lt;cstring&gt;
@@ -7,17 +7,14 @@
 
 include $(top_srcdir)/src/Common.am
 
-## we need our local files too (but avoid -I. at all costs)
-AM_CPPFLAGS += -I$(srcdir)
-
 libexec_PROGRAMS = basic_nis_auth
 
-basic_nis_auth_SOURCES = \
+basic_nis_auth_SOURCES= \
 	basic_nis_auth.cc \
 	nis_support.h \
 	nis_support.cc
 
-basic_nis_auth_LDADD = \
+basic_nis_auth_LDADD= \
 	$(top_builddir)/lib/libmiscencoding.la \
 	$(COMPAT_LIB) \
 	$(CRYPTLIB) \
@@ -13,7 +13,7 @@
 
 #include &quot;squid.h&quot;
 #include &quot;hash.h&quot;
-#include "nis_support.h"
+#include "auth/basic/NIS/nis_support.h"
 #include &quot;rfc1738.h&quot;
 #include &quot;util.h&quot;
 
@@ -44,9 +44,9 @@ main(int argc, char **argv)
     setbuf(stdout, NULL);
 
     if (argc != 3) {
-        fprintf(stderr, "Usage: basic_yp_auth &lt;domainname&gt; &lt;nis map for password&gt;\n");
+        fprintf(stderr, "Usage: basic_nis_auth &lt;domainname&gt; &lt;nis map for password&gt;\n");
         fprintf(stderr, &quot;\n&quot;);
-        fprintf(stderr, "Example basic_yp_auth mydomain.com passwd.byname\n");
+        fprintf(stderr, "Example basic_nis_auth mydomain.com passwd.byname\n");
         exit(1);
     }
     nisdomain = argv[1];
@@ -35,7 +35,7 @@
 #include &lt;rpcsvc/yp_prot.h&gt;
 #endif
 
-#include "nis_support.h"
+#include "auth/basic/NIS/nis_support.h"
 
 #define NO_YPERR 0      /* There is no error */
 
@@ -10,8 +10,8 @@ include $(top_srcdir)/src/Common.am
 man_MANS		= basic_pam_auth.8
 EXTRA_DIST		= basic_pam_auth.8 required.m4
 libexec_PROGRAMS	= basic_pam_auth
-basic_pam_auth_SOURCES	= basic_pam_auth.cc
 
+basic_pam_auth_SOURCES	= basic_pam_auth.cc
 basic_pam_auth_LDADD = \
 	$(top_builddir)/lib/libmiscencoding.la \
 	$(COMPAT_LIB) \
@@ -7,19 +7,17 @@
 
 include $(top_srcdir)/src/Common.am
 
-## we need our local files too (but avoid -I. at all costs)
-AM_CPPFLAGS += -I$(srcdir)
-
 libexec_PROGRAMS 	= basic_radius_auth
 man_MANS 		= basic_radius_auth.8
 EXTRA_DIST		= basic_radius_auth.8 required.m4
-basic_radius_auth_SOURCES = \
-			basic_radius_auth.cc \
-			radius.h \
-			radius-util.cc \
-			radius-util.h
 
-basic_radius_auth_LDADD = \
+basic_radius_auth_SOURCES= \
+	basic_radius_auth.cc \
+	radius.h \
+	radius-util.cc \
+	radius-util.h
+
+basic_radius_auth_LDADD= \
 	$(top_builddir)/lib/libmiscencoding.la \
 	$(COMPAT_LIB) \
 	$(NETTLELIB) \
@@ -54,10 +54,10 @@
  */
 
 #include &quot;squid.h&quot;
+#include &quot;auth/basic/RADIUS/radius-util.h&quot;
+#include &quot;auth/basic/RADIUS/radius.h&quot;
 #include &quot;helpers/defines.h&quot;
 #include &quot;md5.h&quot;
-#include &quot;radius-util.h&quot;
-#include &quot;radius.h&quot;
 
 #include &lt;cctype&gt;
 #include &lt;cerrno&gt;
@@ -45,8 +45,8 @@ char util_sccsid[] =
     &quot;		2.1 Copyright 1997 Cistron Internet Services B.V.&quot;;
 
 #include &quot;squid.h&quot;
+#include &quot;auth/basic/RADIUS/radius-util.h&quot;
 #include &quot;md5.h&quot;
-#include &quot;radius-util.h&quot;
 
 #include &lt;cctype&gt;
 #include &lt;csignal&gt;
@@ -7,16 +7,18 @@
 
 include $(top_srcdir)/src/Common.am
 
-man_MANS = basic_sasl_auth.8
-libexec_PROGRAMS = basic_sasl_auth
-basic_sasl_auth_SOURCES = basic_sasl_auth.cc
-basic_sasl_auth_LDADD = \
+man_MANS= basic_sasl_auth.8
+libexec_PROGRAMS= basic_sasl_auth
+
+basic_sasl_auth_SOURCES= \
+	basic_sasl_auth.cc
+basic_sasl_auth_LDADD= \
 	$(top_builddir)/lib/libmiscencoding.la \
 	$(COMPAT_LIB) \
 	$(LIBSASL) \
 	$(XTRA_LIBS)
 
-EXTRA_DIST = \
+EXTRA_DIST= \
 	basic_sasl_auth.8 \
 	basic_sasl_auth.conf \
 	basic_sasl_auth.pam \
@@ -10,12 +10,15 @@ include $(top_srcdir)/src/Common.am
 if !ENABLE_WIN32SPECIFIC
 libexec_SCRIPTS	= basic_smb_auth.sh
 libexec_PROGRAMS = basic_smb_auth
-endif 
+endif
+
 basic_smb_auth_SOURCES= basic_smb_auth.cc
 basic_smb_auth_CXXFLAGS = -DHELPERSCRIPT=\&quot;$(libexecdir)/basic_smb_auth.sh\&quot;
 basic_smb_auth_LDADD = \
-		$(top_builddir)/lib/libmiscencoding.la \
-		$(COMPAT_LIB) \
-		$(XTRA_LIBS)
+	$(top_builddir)/lib/libmiscencoding.la \
+	$(COMPAT_LIB) \
+	$(XTRA_LIBS)
 
-EXTRA_DIST = basic_smb_auth.sh required.m4
+EXTRA_DIST= \
+	basic_smb_auth.sh \
+	required.m4
@@ -7,25 +7,21 @@
 
 include $(top_srcdir)/src/Common.am
 
-libexec_PROGRAMS = basic_smb_lm_auth
+libexec_PROGRAMS= basic_smb_lm_auth
 
-basic_smb_lm_auth_SOURCES = \
+basic_smb_lm_auth_SOURCES= \
 	msntauth.cc \
 	msntauth.h \
 	valid.cc \
 	valid.h
-
-EXTRA_DIST = \
-	msntauth-v2.0.lsm \
-	README.html \
-	required.m4
-
-LDADD = \
+basic_smb_lm_auth_LDADD= \
 	$(top_builddir)/lib/smblib/libsmblib.la \
 	$(top_builddir)/lib/rfcnb/librfcnb.la \
 	$(top_builddir)/lib/libmiscencoding.la \
 	$(COMPAT_LIB) \
 	$(XTRA_LIBS)
 
-## we need our local files too (but avoid -I. at all costs)
-AM_CPPFLAGS += -I$(srcdir) -I$(top_srcdir)/lib
+EXTRA_DIST= \
+	msntauth-v2.0.lsm \
+	README.html \
+	required.m4
@@ -48,8 +48,8 @@
 #include &lt;vector&gt; //todo: turn into multimap
 #include &lt;syslog.h&gt;
 
-#include "msntauth.h"
-#include "valid.h"
+#include "auth/basic/SMB_LM/msntauth.h"
+#include "auth/basic/SMB_LM/valid.h"
 
 static char msntauth_version[] = &quot;Msntauth v3.0.0 (C) 2 Sep 2001 Stellar-X Antonino Iannella.\nModified by the Squid HTTP Proxy team 2002-2014&quot;;
 
@@ -7,6 +7,9 @@
  */
 
 #include &quot;squid.h&quot;
+#include &quot;auth/basic/SMB_LM/valid.h&quot;
+#include &quot;smblib/smblib.h&quot;
+
 #if HAVE_SYS_TYPES_H
 #include &lt;sys/types.h&gt;
 #endif
@@ -16,8 +19,6 @@
 #if HAVE_SYSLOG_H
 #include &lt;syslog.h&gt;
 #endif
-#include &quot;smblib/smblib.h&quot;
-#include &quot;valid.h&quot;
 
 // BACKUP is unused
 int
@@ -7,9 +7,6 @@
 
 include $(top_srcdir)/src/Common.am
 
-## we need our local files too (but avoid -I. at all costs)
-AM_CPPFLAGS += -I$(srcdir)
-
 if ENABLE_WIN32SPECIFIC
 libexec_PROGRAMS = basic_sspi_auth
 endif
----++++GitHub