@@ -1,6 +1,6 @@
 
 /*
- * $Id: DelaySpec.cc,v 1.3 2005/01/04 10:35:09 serassio Exp $
+ * $Id: DelaySpec.cc,v 1.4 2006/04/18 12:46:10 robertc Exp $
  *
  * DEBUG: section 77    Delay Pools
  * AUTHOR: Robert Collins <robertc@squid-cache.org>
@@ -17,7 +17,7 @@
 #
 #  Makefile for the Squid Object Cache server
 #
-#  $Id: Makefile.in,v 1.6 2006/03/20 23:39:38 hno Exp $
+#  $Id: Makefile.in,v 1.7 2006/04/18 12:46:11 robertc Exp $
 #
 #  Uncomment and customize the following to suit your needs:
 #
@@ -1,7 +1,7 @@
 #
 #  Makefile for the Squid Object Cache server
 #
-#  $Id: Makefile.am,v 1.130 2006/03/10 22:39:39 hno Exp $
+#  $Id: Makefile.am,v 1.131 2006/04/18 12:46:10 robertc Exp $
 #
 #  Uncomment and customize the following to suit your needs:
 #
@@ -993,7 +993,14 @@ tests_testAuth_SOURCES= tests/testAuth.cc tests/testMain.cc  tests/testAuth.h $(
 	MemBuf.cc HttpHdrContRange.cc Packer.cc ACLChecklist.cc HttpHdrCc.cc HttpHdrSc.cc \
 	HttpHdrScTarget.cc url.cc ACLProxyAuth.cc ACLRegexData.cc ACLUserData.cc \
 	StatHist.cc HttpHdrRange.cc ETag.cc tests/stub_errorpage.cc \
-	tests/stub_HttpRequest.cc
+	tests/stub_HttpRequest.cc tests/stub_DelayId.cc \
+	tests/stub_MemObject.cc mem_node.cc \
+	stmem.cc \
+	tests/stub_comm.cc \
+	tests/stub_http.cc \
+	HttpMsg.cc \
+	tests/stub_mime.cc \
+	tests/stub_access_log.cc
 ##	acl.cc cache_cf.cc tools.cc \
 ##	helper.cc String.cc cbdata.cc HttpHeaderTools.cc store.cc cache_manager.cc \
 ##	HttpHeader.cc url.cc event.cc mem.cc HttpRequest.cc Packer.cc access_log.cc \
@@ -1036,7 +1043,7 @@ STORE_TEST_SOURCES=\
 	MemBuf.cc HttpHdrContRange.cc Packer.cc ACLChecklist.cc HttpHdrCc.cc HttpHdrSc.cc \
 	HttpHdrScTarget.cc url.cc ACLProxyAuth.cc ACLRegexData.cc ACLUserData.cc \
 	StatHist.cc HttpHdrRange.cc ETag.cc tests/stub_errorpage.cc \
-	tests/stub_HttpRequest.cc
+	tests/stub_HttpRequest.cc tests/stub_access_log.cc
 
 ## why so many sources? well httpHeaderTools requites ACLChecklist & friends.
 ## first line - what we are testing.
@@ -17,7 +17,7 @@
 #
 #  Makefile for the Squid Object Cache server
 #
-#  $Id: Makefile.in,v 1.368 2006/03/20 23:39:38 hno Exp $
+#  $Id: Makefile.in,v 1.369 2006/04/18 12:46:10 robertc Exp $
 #
 #  Uncomment and customize the following to suit your needs:
 #
@@ -339,7 +339,11 @@ am_tests_testAuth_OBJECTS = tests/testAuth.$(OBJEXT) \
 	ACLRegexData.$(OBJEXT) ACLUserData.$(OBJEXT) \
 	StatHist.$(OBJEXT) HttpHdrRange.$(OBJEXT) ETag.$(OBJEXT) \
 	tests/stub_errorpage.$(OBJEXT) \
-	tests/stub_HttpRequest.$(OBJEXT)
+	tests/stub_HttpRequest.$(OBJEXT) tests/stub_DelayId.$(OBJEXT) \
+	tests/stub_MemObject.$(OBJEXT) mem_node.$(OBJEXT) \
+	stmem.$(OBJEXT) tests/stub_comm.$(OBJEXT) \
+	tests/stub_http.$(OBJEXT) HttpMsg.$(OBJEXT) \
+	tests/stub_mime.$(OBJEXT) tests/stub_access_log.$(OBJEXT)
 tests_testAuth_OBJECTS = $(am_tests_testAuth_OBJECTS)
 am__tests_testCoss_SOURCES_DIST = tests/testCoss.cc tests/testMain.cc \
 	tests/testCoss.h tests/stub_store_rebuild.cc \
@@ -369,9 +373,10 @@ am__tests_testCoss_SOURCES_DIST = tests/testCoss.cc tests/testMain.cc \
 	HttpHdrCc.cc HttpHdrSc.cc HttpHdrScTarget.cc url.cc \
 	ACLProxyAuth.cc ACLRegexData.cc ACLUserData.cc StatHist.cc \
 	HttpHdrRange.cc ETag.cc tests/stub_errorpage.cc \
-	tests/stub_HttpRequest.cc DiskIO/DiskIOModule.cc \
-	DiskIO/ReadRequest.cc DiskIO/ReadRequest.h \
-	DiskIO/WriteRequest.cc DiskIO/WriteRequest.h DiskIO/DiskFile.h \
+	tests/stub_HttpRequest.cc tests/stub_access_log.cc \
+	DiskIO/DiskIOModule.cc DiskIO/ReadRequest.cc \
+	DiskIO/ReadRequest.h DiskIO/WriteRequest.cc \
+	DiskIO/WriteRequest.h DiskIO/DiskFile.h \
 	DiskIO/DiskIOStrategy.h DiskIO/IORequestor.h \
 	DiskIO/DiskIOModule.h
 am__objects_26 = $(am__objects_25) $(am__objects_5) \
@@ -394,7 +399,8 @@ am__objects_26 = $(am__objects_25) $(am__objects_5) \
 	ACLRegexData.$(OBJEXT) ACLUserData.$(OBJEXT) \
 	StatHist.$(OBJEXT) HttpHdrRange.$(OBJEXT) ETag.$(OBJEXT) \
 	tests/stub_errorpage.$(OBJEXT) \
-	tests/stub_HttpRequest.$(OBJEXT)
+	tests/stub_HttpRequest.$(OBJEXT) \
+	tests/stub_access_log.$(OBJEXT)
 am__objects_27 = tests/stub_store_rebuild.$(OBJEXT) \
 	tests/stub_internal.$(OBJEXT) fd.$(OBJEXT) disk.$(OBJEXT) \
 	filemap.$(OBJEXT) HttpBody.$(OBJEXT) HttpMsg.$(OBJEXT) \
@@ -440,9 +446,10 @@ am__tests_testNull_SOURCES_DIST = tests/testNull.cc tests/testMain.cc \
 	HttpHdrCc.cc HttpHdrSc.cc HttpHdrScTarget.cc url.cc \
 	ACLProxyAuth.cc ACLRegexData.cc ACLUserData.cc StatHist.cc \
 	HttpHdrRange.cc ETag.cc tests/stub_errorpage.cc \
-	tests/stub_HttpRequest.cc DiskIO/DiskIOModule.cc \
-	DiskIO/ReadRequest.cc DiskIO/ReadRequest.h \
-	DiskIO/WriteRequest.cc DiskIO/WriteRequest.h DiskIO/DiskFile.h \
+	tests/stub_HttpRequest.cc tests/stub_access_log.cc \
+	DiskIO/DiskIOModule.cc DiskIO/ReadRequest.cc \
+	DiskIO/ReadRequest.h DiskIO/WriteRequest.cc \
+	DiskIO/WriteRequest.h DiskIO/DiskFile.h \
 	DiskIO/DiskIOStrategy.h DiskIO/IORequestor.h \
 	DiskIO/DiskIOModule.h
 am_tests_testNull_OBJECTS = tests/testNull.$(OBJEXT) \
@@ -474,7 +481,7 @@ am__tests_testStore_SOURCES_DIST = tests/testStore.cc \
 	HttpHdrCc.cc HttpHdrSc.cc HttpHdrScTarget.cc url.cc \
 	ACLProxyAuth.cc ACLRegexData.cc ACLUserData.cc StatHist.cc \
 	HttpHdrRange.cc ETag.cc tests/stub_errorpage.cc \
-	tests/stub_HttpRequest.cc
+	tests/stub_HttpRequest.cc tests/stub_access_log.cc
 am_tests_testStore_OBJECTS = tests/testStore.$(OBJEXT) \
 	tests/testStoreController.$(OBJEXT) \
 	tests/testStoreHashIndex.$(OBJEXT) tests/testMain.$(OBJEXT) \
@@ -510,9 +517,10 @@ am__tests_testUfs_SOURCES_DIST = tests/testUfs.cc tests/testMain.cc \
 	HttpHdrCc.cc HttpHdrSc.cc HttpHdrScTarget.cc url.cc \
 	ACLProxyAuth.cc ACLRegexData.cc ACLUserData.cc StatHist.cc \
 	HttpHdrRange.cc ETag.cc tests/stub_errorpage.cc \
-	tests/stub_HttpRequest.cc DiskIO/DiskIOModule.cc \
-	DiskIO/ReadRequest.cc DiskIO/ReadRequest.h \
-	DiskIO/WriteRequest.cc DiskIO/WriteRequest.h DiskIO/DiskFile.h \
+	tests/stub_HttpRequest.cc tests/stub_access_log.cc \
+	DiskIO/DiskIOModule.cc DiskIO/ReadRequest.cc \
+	DiskIO/ReadRequest.h DiskIO/WriteRequest.cc \
+	DiskIO/WriteRequest.h DiskIO/DiskFile.h \
 	DiskIO/DiskIOStrategy.h DiskIO/IORequestor.h \
 	DiskIO/DiskIOModule.h
 am_tests_testUfs_OBJECTS = tests/testUfs.$(OBJEXT) \
@@ -1663,7 +1671,14 @@ tests_testAuth_SOURCES = tests/testAuth.cc tests/testMain.cc  tests/testAuth.h $
 	MemBuf.cc HttpHdrContRange.cc Packer.cc ACLChecklist.cc HttpHdrCc.cc HttpHdrSc.cc \
 	HttpHdrScTarget.cc url.cc ACLProxyAuth.cc ACLRegexData.cc ACLUserData.cc \
 	StatHist.cc HttpHdrRange.cc ETag.cc tests/stub_errorpage.cc \
-	tests/stub_HttpRequest.cc
+	tests/stub_HttpRequest.cc tests/stub_DelayId.cc \
+	tests/stub_MemObject.cc mem_node.cc \
+	stmem.cc \
+	tests/stub_comm.cc \
+	tests/stub_http.cc \
+	HttpMsg.cc \
+	tests/stub_mime.cc \
+	tests/stub_access_log.cc
 
 tests_testAuth_LDADD = \
 	@AUTH_LINKOBJS@ @AUTH_OBJS@ \
@@ -1702,7 +1717,7 @@ STORE_TEST_SOURCES = \
 	MemBuf.cc HttpHdrContRange.cc Packer.cc ACLChecklist.cc HttpHdrCc.cc HttpHdrSc.cc \
 	HttpHdrScTarget.cc url.cc ACLProxyAuth.cc ACLRegexData.cc ACLUserData.cc \
 	StatHist.cc HttpHdrRange.cc ETag.cc tests/stub_errorpage.cc \
-	tests/stub_HttpRequest.cc
+	tests/stub_HttpRequest.cc tests/stub_access_log.cc
 
 tests_testStore_SOURCES = tests/testStore.cc \
 	tests/testStoreController.cc \
@@ -2175,6 +2190,18 @@ tests/stub_errorpage.$(OBJEXT): tests/$(am__dirstamp) \
 	tests/$(DEPDIR)/$(am__dirstamp)
 tests/stub_HttpRequest.$(OBJEXT): tests/$(am__dirstamp) \
 	tests/$(DEPDIR)/$(am__dirstamp)
+tests/stub_DelayId.$(OBJEXT): tests/$(am__dirstamp) \
+	tests/$(DEPDIR)/$(am__dirstamp)
+tests/stub_MemObject.$(OBJEXT): tests/$(am__dirstamp) \
+	tests/$(DEPDIR)/$(am__dirstamp)
+tests/stub_comm.$(OBJEXT): tests/$(am__dirstamp) \
+	tests/$(DEPDIR)/$(am__dirstamp)
+tests/stub_http.$(OBJEXT): tests/$(am__dirstamp) \
+	tests/$(DEPDIR)/$(am__dirstamp)
+tests/stub_mime.$(OBJEXT): tests/$(am__dirstamp) \
+	tests/$(DEPDIR)/$(am__dirstamp)
+tests/stub_access_log.$(OBJEXT): tests/$(am__dirstamp) \
+	tests/$(DEPDIR)/$(am__dirstamp)
 tests/testAuth$(EXEEXT): $(tests_testAuth_OBJECTS) $(tests_testAuth_DEPENDENCIES) tests/$(am__dirstamp)
 	@rm -f tests/testAuth$(EXEEXT)
 	$(CXXLINK) $(tests_testAuth_LDFLAGS) $(tests_testAuth_OBJECTS) $(tests_testAuth_LDADD) $(LIBS)
@@ -2184,10 +2211,6 @@ tests/stub_store_rebuild.$(OBJEXT): tests/$(am__dirstamp) \
 	tests/$(DEPDIR)/$(am__dirstamp)
 tests/stub_internal.$(OBJEXT): tests/$(am__dirstamp) \
 	tests/$(DEPDIR)/$(am__dirstamp)
-tests/stub_comm.$(OBJEXT): tests/$(am__dirstamp) \
-	tests/$(DEPDIR)/$(am__dirstamp)
-tests/stub_http.$(OBJEXT): tests/$(am__dirstamp) \
-	tests/$(DEPDIR)/$(am__dirstamp)
 tests/stub_store_client.$(OBJEXT): tests/$(am__dirstamp) \
 	tests/$(DEPDIR)/$(am__dirstamp)
 tests/stub_tools.$(OBJEXT): tests/$(am__dirstamp) \
@@ -2214,8 +2237,6 @@ tests/stub_fd.$(OBJEXT): tests/$(am__dirstamp) \
 	tests/$(DEPDIR)/$(am__dirstamp)
 tests/stub_HttpReply.$(OBJEXT): tests/$(am__dirstamp) \
 	tests/$(DEPDIR)/$(am__dirstamp)
-tests/stub_MemObject.$(OBJEXT): tests/$(am__dirstamp) \
-	tests/$(DEPDIR)/$(am__dirstamp)
 tests/testStore$(EXEEXT): $(tests_testStore_OBJECTS) $(tests_testStore_DEPENDENCIES) tests/$(am__dirstamp)
 	@rm -f tests/testStore$(EXEEXT)
 	$(CXXLINK) $(tests_testStore_LDFLAGS) $(tests_testStore_OBJECTS) $(tests_testStore_LDADD) $(LIBS)
@@ -2262,9 +2283,11 @@ mostlyclean-compile:
 	-rm -f fs/null/StoreFSnull.$(OBJEXT)
 	-rm -f fs/ufs/StoreFSufs.$(OBJEXT)
 	-rm -f tests/TestSwapDir.$(OBJEXT)
+	-rm -f tests/stub_DelayId.$(OBJEXT)
 	-rm -f tests/stub_HttpReply.$(OBJEXT)
 	-rm -f tests/stub_HttpRequest.$(OBJEXT)
 	-rm -f tests/stub_MemObject.$(OBJEXT)
+	-rm -f tests/stub_access_log.$(OBJEXT)
 	-rm -f tests/stub_acl.$(OBJEXT)
 	-rm -f tests/stub_cache_cf.$(OBJEXT)
 	-rm -f tests/stub_cache_manager.$(OBJEXT)
@@ -2274,6 +2297,7 @@ mostlyclean-compile:
 	-rm -f tests/stub_helper.$(OBJEXT)
 	-rm -f tests/stub_http.$(OBJEXT)
 	-rm -f tests/stub_internal.$(OBJEXT)
+	-rm -f tests/stub_mime.$(OBJEXT)
 	-rm -f tests/stub_store.$(OBJEXT)
 	-rm -f tests/stub_store_client.$(OBJEXT)
 	-rm -f tests/stub_store_rebuild.$(OBJEXT)
@@ -2518,9 +2542,11 @@ distclean-compile:
 @AMDEP_TRUE@@am__include@ @am__quote@fs/null/$(DEPDIR)/StoreFSnull.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@fs/ufs/$(DEPDIR)/StoreFSufs.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/TestSwapDir.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/stub_DelayId.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/stub_HttpReply.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/stub_HttpRequest.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/stub_MemObject.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/stub_access_log.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/stub_acl.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/stub_cache_cf.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/stub_cache_manager.Po@am__quote@
@@ -2530,6 +2556,7 @@ distclean-compile:
 @AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/stub_helper.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/stub_http.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/stub_internal.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/stub_mime.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/stub_store.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/stub_store_client.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/stub_store_rebuild.Po@am__quote@
@@ -284,7 +284,7 @@ target_alias = @target_alias@
 
 #  Makefile for authentication modules in the Squid Object Cache server
 #
-#  $Id: Makefile.in,v 1.63 2006/03/20 23:39:38 hno Exp $
+#  $Id: Makefile.in,v 1.64 2006/04/18 12:46:11 robertc Exp $
 #
 AUTOMAKE_OPTIONS = subdir-objects
 AM_CFLAGS = @SQUID_CFLAGS@
@@ -16,7 +16,7 @@
 
 #  Makefile for storage modules in the Squid Object Cache server
 #
-#  $Id: Makefile.in,v 1.68 2006/03/20 23:39:38 hno Exp $
+#  $Id: Makefile.in,v 1.69 2006/04/18 12:46:12 robertc Exp $
 #
 
 srcdir = @srcdir@
@@ -16,7 +16,7 @@
 
 #  Makefile for storage modules in the Squid Object Cache server
 #
-#  $Id: Makefile.in,v 1.62 2006/03/20 23:39:38 hno Exp $
+#  $Id: Makefile.in,v 1.63 2006/04/18 12:46:13 robertc Exp $
 #
 
 srcdir = @srcdir@
@@ -0,0 +1,51 @@
+/*
+ * $Id: stub_DelayId.cc,v 1.1 2006/04/18 12:46:13 robertc Exp $
+ *
+ * DEBUG: section 20    Storage Manager
+ * AUTHOR: Robert Collins
+ *
+ * SQUID Web Proxy Cache          http://www.squid-cache.org/
+ * ----------------------------------------------------------
+ *
+ *  Squid is the result of efforts by numerous individuals from
+ *  the Internet community; see the CONTRIBUTORS file for full
+ *  details.   Many organizations have provided support for Squid's
+ *  development; see the SPONSORS file for full details.  Squid is
+ *  Copyrighted (C) 2001 by the Regents of the University of
+ *  California; see the COPYRIGHT file for full details.  Squid
+ *  incorporates software developed and/or copyrighted by other
+ *  sources; see the CREDITS file for full details.
+ *
+ *  This program is free software; you can redistribute it and/or modify
+ *  it under the terms of the GNU General Public License as published by
+ *  the Free Software Foundation; either version 2 of the License, or
+ *  (at your option) any later version.
+ *  
+ *  This program is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ *  GNU General Public License for more details.
+ *  
+ *  You should have received a copy of the GNU General Public License
+ *  along with this program; if not, write to the Free Software
+ *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111, USA.
+ *
+ */
+
+#include "config.h"
+
+
+#if DELAY_POOLS
+
+#include "squid.h"
+#include "DelayId.h"
+
+DelayId::DelayId() {}
+
+void
+DelayId::delayRead(DeferredRead const&)
+{}
+
+DelayId::~DelayId() {}
+
+#endif
@@ -1,5 +1,5 @@
 /*
- * $Id: stub_HttpRequest.cc,v 1.2 2005/01/03 16:08:27 robertc Exp $
+ * $Id: stub_HttpRequest.cc,v 1.3 2006/04/18 12:46:13 robertc Exp $
  *
  * DEBUG: section 28    Access Control
  * AUTHOR: Robert Collins
@@ -33,28 +33,65 @@
  */
 
 #include "squid.h"
+#include "HttpRequest.h"
 
-HttpRequest *
-requestCreate(method_t method, protocol_t protocol, const char *aUrlpath)
+
+HttpRequest::HttpRequest() : HttpMsg(hoRequest)
+{
+    fatal("Not implemented");
+}
+
+HttpRequest::HttpRequest(method_t method, protocol_t protocol, const char *aUrlpath) : HttpMsg(hoRequest)
+{
+    fatal("Not implemented");
+}
+
+HttpRequest::~HttpRequest()
+{}
+
+void
+HttpRequest::packFirstLineInto(Packer * p, bool full_uri) const
+{
+    fatal("Not implemented");
+}
+
+bool
+HttpRequest::sanityCheckStartLine(MemBuf *buf, http_status *error)
+{
+    fatal("Not implemented");
+    return false;
+}
+
+void
+HttpRequest::hdrCacheInit()
+{
+    fatal("Not implemented");
+}
+
+void
+HttpRequest::reset()
 {
     fatal("Not implemented");
-    return NULL;
 }
 
-HttpRequest *
-requestLink(HttpRequest * request)
+bool
+HttpRequest::expectingBody(method_t unused, ssize_t&) const
 {
     fatal("Not implemented");
-    return NULL;
+    return false;
 }
 
 void
-requestUnlink(HttpRequest * request)
+HttpRequest::initHTTP(method_t aMethod, protocol_t aProtocol, const char *aUrlpath)
 {
-    if (!request)
-        return;
+    fatal("Not implemented");
+}
 
+bool
+HttpRequest::parseFirstLine(const char *start, const char *end)
+{
     fatal("Not implemented");
+    return false;
 }
 
 /*
@@ -1,5 +1,5 @@
 /*
- * $Id: stub_MemObject.cc,v 1.2 2005/12/26 10:16:05 serassio Exp $
+ * $Id: stub_MemObject.cc,v 1.3 2006/04/18 12:46:13 robertc Exp $
  *
  * DEBUG: section 84    Helper process maintenance
  * AUTHOR: Robert Collins
@@ -145,3 +145,9 @@ MemObject::write(StoreIOBuffer writeBuffer, STMCB *callback, void *callbackData)
     callback (callbackData, writeBuffer);
     PROF_stop(MemObject_write);
 }
+
+void
+MemObject::replaceHttpReply(HttpReply *newrep)
+{
+    fatal ("Not implemented");
+}
@@ -0,0 +1,57 @@
+/*
+ * $Id: stub_access_log.cc,v 1.1 2006/04/18 12:46:13 robertc Exp $
+ *
+ * DEBUG: section 28    Access Control
+ * AUTHOR: Robert Collins
+ *
+ * SQUID Web Proxy Cache          http://www.squid-cache.org/
+ * ----------------------------------------------------------
+ *
+ *  Squid is the result of efforts by numerous individuals from
+ *  the Internet community; see the CONTRIBUTORS file for full
+ *  details.   Many organizations have provided support for Squid's
+ *  development; see the SPONSORS file for full details.  Squid is
+ *  Copyrighted (C) 2001 by the Regents of the University of
+ *  California; see the COPYRIGHT file for full details.  Squid
+ *  incorporates software developed and/or copyrighted by other
+ *  sources; see the CREDITS file for full details.
+ *
+ *  This program is free software; you can redistribute it and/or modify
+ *  it under the terms of the GNU General Public License as published by
+ *  the Free Software Foundation; either version 2 of the License, or
+ *  (at your option) any later version.
+ *  
+ *  This program is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ *  GNU General Public License for more details.
+ *  
+ *  You should have received a copy of the GNU General Public License
+ *  along with this program; if not, write to the Free Software
+ *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111, USA.
+ *
+ */
+
+#include "squid.h"
+#include "HierarchyLogEntry.h"
+
+
+HierarchyLogEntry::HierarchyLogEntry()
+{
+    fatal("Not implemented.");
+}
+
+ping_data::ping_data() :
+        n_sent(0),
+        n_recv(0),
+        n_replies_expected(0),
+        timeout(0),
+        timedout(0),
+        w_rtt(0),
+        p_rtt(0)
+{
+    start.tv_sec = 0;
+    start.tv_usec = 0;
+    stop.tv_sec = 0;
+    stop.tv_usec = 0;
+}
@@ -0,0 +1,42 @@
+/*
+ * $Id: stub_mime.cc,v 1.1 2006/04/18 12:46:13 robertc Exp $
+ *
+ * DEBUG: section 28    Access Control
+ * AUTHOR: Robert Collins
+ *
+ * SQUID Web Proxy Cache          http://www.squid-cache.org/
+ * ----------------------------------------------------------
+ *
+ *  Squid is the result of efforts by numerous individuals from
+ *  the Internet community; see the CONTRIBUTORS file for full
+ *  details.   Many organizations have provided support for Squid's
+ *  development; see the SPONSORS file for full details.  Squid is
+ *  Copyrighted (C) 2001 by the Regents of the University of
+ *  California; see the COPYRIGHT file for full details.  Squid
+ *  incorporates software developed and/or copyrighted by other
+ *  sources; see the CREDITS file for full details.
+ *
+ *  This program is free software; you can redistribute it and/or modify
+ *  it under the terms of the GNU General Public License as published by
+ *  the Free Software Foundation; either version 2 of the License, or
+ *  (at your option) any later version.
+ *  
+ *  This program is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ *  GNU General Public License for more details.
+ *  
+ *  You should have received a copy of the GNU General Public License
+ *  along with this program; if not, write to the Free Software
+ *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111, USA.
+ *
+ */
+
+#include "squid.h"
+
+size_t
+headersEnd(const char *mime, size_t l)
+{
+    fatal("Not implemented");
+    return 0;
+}