----++++helpers/external_acl/unix_group/check_group.cc
@@ -140,6 +140,8 @@ usage(char *program)
             &quot;-p			Verify primary user group as well\n&quot;);
     fprintf(stderr,
             &quot;-s			Strip NT domain from usernames\n&quot;);
+    fprintf(stderr,
+            &quot;-r			Strip Kerberos realm from usernames\n&quot;);
 }
 
 int
@@ -148,20 +150,23 @@ main(int argc, char *argv[])
     char *user, *suser, *p;
     char buf[HELPER_INPUT_BUFFER];
     char **grents = NULL;
-    int check_pw = 0, ch, ngroups = 0, i, j = 0, strip_dm = 0;
+    int check_pw = 0, ch, ngroups = 0, i, j = 0, strip_dm = 0, strip_rm = 0;
 
     /* make standard output line buffered */
     setvbuf(stdout, NULL, _IOLBF, 0);
 
     /* get user options */
-    while ((ch = getopt(argc, argv, "dspg:")) != -1) {
+    while ((ch = getopt(argc, argv, "dsrpg:")) != -1) {
         switch (ch) {
         case &#39;d&#39;:
             debug_enabled = 1;
             break;
         case &#39;s&#39;:
             strip_dm = 1;
             break;
+        case &#39;r&#39;:
+            strip_rm = 1;
+            break;
         case &#39;p&#39;:
             check_pw = 1;
             break;
@@ -213,6 +218,10 @@ main(int argc, char *argv[])
                 if (!suser) suser = strchr(user, &#39;/&#39;);
                 if (suser &amp;&amp; suser[1]) user = suser + 1;
             }
+            if (strip_rm) {
+                suser = strchr(user, &#39;@&#39;);
+                if (suser) *suser = &#39;\0&#39;;
+            }
             /* check groups supplied by Squid */
             while ((p = strtok(NULL, &quot; &quot;)) != NULL) {
                 rfc1738_unescape(p);
----++++GitHub