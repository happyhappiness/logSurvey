@@ -232,7 +232,7 @@ static void
 commIncomingStats(StoreEntry * sentry)
 {
     StatCounters *f = &statCounter;
-    storeAppendPrintf(sentry, "Total number of epoll(2) loops: %d\n", statCounter.select_loops);
+    storeAppendPrintf(sentry, "Total number of epoll(2) loops: %ld\n", statCounter.select_loops);
     storeAppendPrintf(sentry, "Histogram of returned filedescriptors\n");
     statHistDump(&f->select_fds_hist, sentry, statHistIntDumper);
 }
@@ -265,7 +265,7 @@ comm_select(int msec)
 
     for (;;) {
         num = epoll_wait(kdpfd, pevents, SQUID_MAXFD, msec);
-        statCounter.select_loops++;
+        ++statCounter.select_loops;
 
         if (num >= 0)
             break;
@@ -260,7 +260,7 @@ comm_select(int msec)
 
     for (;;) {
         num = kevent(kq, kqlst, kqoff, ke, KE_LENGTH, &poll_time);
-        statCounter.select_loops++;
+        ++statCounter.select_loops;
         kqoff = 0;
 
         if (num >= 0)
@@ -411,9 +411,9 @@ comm_select(int msec)
 
         for (;;) {
             PROF_start(comm_poll_normal);
-            statCounter.syscalls.selects++;
+            ++statCounter.syscalls.selects;
             num = poll(pfds, nfds, msec);
-            statCounter.select_loops++;
+            ++statCounter.select_loops;
             PROF_stop(comm_poll_normal);
 
             if (num >= 0 || npending >= 0)
@@ -444,7 +444,7 @@ comm_select(int msec)
             poll_time.tv_usec = (msec % 1000) * 1000;
             statCounter.syscalls.selects++;
             num = select(maxfd, &readfds, &writefds, NULL, &poll_time);
-            statCounter.select_loops++;
+            ++statCounter.select_loops;
 
             if (num >= 0 || pending > 0)
                 break;
@@ -442,9 +442,9 @@ comm_select(int msec)
         for (;;) {
             poll_time.tv_sec = msec / 1000;
             poll_time.tv_usec = (msec % 1000) * 1000;
-            statCounter.syscalls.selects++;
+            ++statCounter.syscalls.selects;
             num = select(maxfd, &readfds, &writefds, &errfds, &poll_time);
-            statCounter.select_loops++;
+            ++statCounter.select_loops;
 
             if (num >= 0 || pending > 0)
                 break;
@@ -514,7 +514,7 @@ info_get(StoreEntry * sentry)
     storeAppendPrintf(sentry, "\tAverage ICP messages per minute since start:\t%.1f\n",
                       (statCounter.icp.pkts_sent + statCounter.icp.pkts_recv) / (runtime / 60.0));
 
-    storeAppendPrintf(sentry, "\tSelect loop called: %d times, %0.3f ms avg\n",
+    storeAppendPrintf(sentry, "\tSelect loop called: %ld times, %0.3f ms avg\n",
                       statCounter.select_loops, 1000.0 * runtime / statCounter.select_loops);
 
     storeAppendPrintf(sentry, "Cache information for %s:\n",APP_SHORTNAME);
@@ -1367,7 +1367,7 @@ statCountersDump(StoreEntry * sentry)
                       f->unlink.requests);
     storeAppendPrintf(sentry, "page_faults = %d\n",
                       f->page_faults);
-    storeAppendPrintf(sentry, "select_loops = %d\n",
+    storeAppendPrintf(sentry, "select_loops = %ld\n",
                       f->select_loops);
     storeAppendPrintf(sentry, "cpu_time = %f\n",
                       f->cputime);
@@ -1190,7 +1190,7 @@ struct _StatCounters {
         int times_used;
     } netdb;
     int page_faults;
-    int select_loops;
+    unsigned long int select_loops;
     int select_fds;
     double select_time;
     double cputime;