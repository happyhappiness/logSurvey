@@ -7,6 +7,7 @@ Changes to squid-1.1.beta14 ():
 	  which have not yet expired, but are past the LM-factor.
 	- Fixed asciiConnLifetimeHandle() to force storeAbort() for
 	  pending objects.
+	- Made lots of variables and args 'const' (Markus Gyger).
 
 Changes to squid-1.1.beta13 (November 1, 1996):
 
@@ -1,5 +1,5 @@
 /*
- * $Id: util.h,v 1.24 1996/10/25 02:15:14 wessels Exp $
+ * $Id: util.h,v 1.25 1996/11/04 18:14:00 wessels Exp $
  *
  * AUTHOR: Harvest Derived
  *
@@ -127,15 +127,14 @@
 #endif
 #endif
 
-extern char *getfullhostname _PARAMS((void));
-extern char *mkhttpdlogtime _PARAMS((time_t *));
-extern char *mkrfc1123 _PARAMS((time_t));
-extern char *uudecode _PARAMS((char *));
-extern char *xstrdup _PARAMS((char *));
-extern char *xstrdup _PARAMS((char *));
-extern char *xstrerror _PARAMS((void));
+extern const char *getfullhostname _PARAMS((void));
+extern const char *mkhttpdlogtime _PARAMS((const time_t *));
+extern const char *mkrfc1123 _PARAMS((time_t));
+extern char *uudecode _PARAMS((const char *));
+extern char *xstrdup _PARAMS((const char *));
+extern const char *xstrerror _PARAMS((void));
 extern int tvSubMsec _PARAMS((struct timeval, struct timeval));
-extern time_t parse_rfc1123 _PARAMS((char *str));
+extern time_t parse_rfc1123 _PARAMS((const char *str));
 extern void *xcalloc _PARAMS((int, size_t));
 extern void *xmalloc _PARAMS((size_t));
 extern void *xrealloc _PARAMS((void *, size_t));
@@ -31,7 +31,7 @@ base64_init(void)
 }
 
 char *
-base64_decode(char *p)
+base64_decode(const char *p)
 {
     static char result[8192];
     int c;
@@ -40,7 +40,7 @@ base64_decode(char *p)
     char *d;
 
     if (!p)
-	return p;
+	return NULL;
 
     if (!base64_initialized)
 	base64_init();
@@ -1,6 +1,6 @@
 
 /*
- * $Id: getfullhostname.c,v 1.10 1996/10/19 08:21:54 wessels Exp $
+ * $Id: getfullhostname.c,v 1.11 1996/11/04 18:14:01 wessels Exp $
  *
  * DEBUG: 
  * AUTHOR: Harvest Derived
@@ -147,10 +147,10 @@
  *  host, or NULL on error.  Pointer is only valid until the next call
  *  to the gethost*() functions.
  */
-char *
+const char *
 getfullhostname(void)
 {
-    struct hostent *hp = NULL;
+    const struct hostent *hp = NULL;
     static char buf[SQUIDHOSTNAMELEN + 1];
 
     if (gethostname(buf, SQUIDHOSTNAMELEN) < 0)
@@ -1,5 +1,5 @@
 /*
- * $Id: rfc1123.c,v 1.2 1996/10/25 17:35:22 wessels Exp $
+ * $Id: rfc1123.c,v 1.3 1996/11/04 18:14:02 wessels Exp $
  *
  * DEBUG: 
  * AUTHOR: Harvest Derived
@@ -135,8 +135,8 @@
 #define RFC850_STRFTIME "%A, %d-%b-%y %H:%M:%S GMT"
 #define RFC1123_STRFTIME "%a, %d %b %Y %H:%M:%S GMT"
 
-static int make_month _PARAMS((char *s));
-static int make_num _PARAMS((char *s));
+static int make_month _PARAMS((const char *s));
+static int make_num _PARAMS((const char *s));
 
 static char *month_names[12] =
 {
@@ -146,7 +146,7 @@ static char *month_names[12] =
 
 
 static int
-make_num(char *s)
+make_num(const char *s)
 {
     if (*s >= '0' && *s <= '9')
 	return 10 * (*s - '0') + *(s + 1) - '0';
@@ -155,25 +155,26 @@ make_num(char *s)
 }
 
 static int
-make_month(char *s)
+make_month(const char *s)
 {
     int i;
+    char month[3];
 
-    *s = toupper(*s);
-    *(s + 1) = tolower(*(s + 1));
-    *(s + 2) = tolower(*(s + 2));
+    month[0] = toupper(*s);
+    month[1] = tolower(*(s + 1));
+    month[2] = tolower(*(s + 2));
 
     for (i = 0; i < 12; i++)
-	if (!strncmp(month_names[i], s, 3))
+	if (!strncmp(month_names[i], month, 3))
 	    return i;
     return 0;
 }
 
 
 time_t
-parse_rfc1123(char *str)
+parse_rfc1123(const char *str)
 {
-    char *s;
+    const char *s;
     struct tm tm;
     time_t t;
 
@@ -254,7 +255,7 @@ parse_rfc1123(char *str)
     return t;
 }
 
-char *
+const char *
 mkrfc1123(time_t t)
 {
     static char buf[128];
@@ -266,8 +267,8 @@ mkrfc1123(time_t t)
     return buf;
 }
 
-char *
-mkhttpdlogtime(time_t * t)
+const char *
+mkhttpdlogtime(const time_t *t)
 {
     static char buf[128];
 
@@ -1,5 +1,5 @@
 /*
- * $Id: rfc1738.c,v 1.6 1996/09/17 16:53:58 wessels Exp $
+ * $Id: rfc1738.c,v 1.7 1996/11/04 18:14:03 wessels Exp $
  *
  * DEBUG: 
  * AUTHOR: Harvest Derived
@@ -145,10 +145,11 @@ static char rfc1738_unsafe_chars[] =
  *  compliant, escaped version of the given url.
  */
 char *
-rfc1738_escape(char *url)
+rfc1738_escape(const char *url)
 {
     static char buf[BIG_BUFSIZ];
-    char *p, *q;
+    const char *p;
+    char *q;
     int i, do_escape;
 
     for (p = url, q = &buf[0]; *p != '\0'; p++, q++) {
@@ -1,5 +1,5 @@
 /*
- * $Id: util.c,v 1.22 1996/10/15 23:32:48 wessels Exp $
+ * $Id: util.c,v 1.23 1996/11/04 18:14:04 wessels Exp $
  *
  * DEBUG: 
  * AUTHOR: Harvest Derived
@@ -130,7 +130,7 @@
 #include "ansiproto.h"
 #include "util.h"
 
-void (*failure_notify) _PARAMS((char *)) = NULL;
+void (*failure_notify) _PARAMS((const char *)) = NULL;
 static char msg[128];
 
 extern int sys_nerr;
@@ -412,7 +412,7 @@ xcalloc(int n, size_t sz)
  *  Never returns NULL; fatal on error.
  */
 char *
-xstrdup(char *s)
+xstrdup(const char *s)
 {
     static char *p = NULL;
     size_t sz;
@@ -435,7 +435,7 @@ xstrdup(char *s)
 /*
  * xstrerror() - return sys_errlist[errno];
  */
-char *
+const char *
 xstrerror(void)
 {
     static char xstrerror_buf[BUFSIZ];
@@ -21,10 +21,10 @@ const int pr2six[256] =
 };
 
 char *
-uudecode(char *bufcoded)
+uudecode(const char *bufcoded)
 {
     int nbytesdecoded;
-    unsigned char *bufin;
+    const unsigned char *bufin;
     char *bufplain;
     unsigned char *bufout;
     int nprbytes;
@@ -37,7 +37,7 @@ uudecode(char *bufcoded)
     /* Figure out how many characters are in the input buffer.
      * Allocate this many from the per-transaction pool for the result.
      */
-    bufin = (unsigned char *) bufcoded;
+    bufin = (const unsigned char *) bufcoded;
     while (pr2six[*(bufin++)] <= 63);
     nprbytes = (char *) bufin - bufcoded - 1;
     nbytesdecoded = ((nprbytes + 3) / 4) * 3;
@@ -47,7 +47,7 @@ uudecode(char *bufcoded)
 	return (NULL);
     bufout = (unsigned char *) bufplain;
 
-    bufin = (unsigned char *) bufcoded;
+    bufin = (const unsigned char *) bufcoded;
 
     while (nprbytes > 0) {
 	*(bufout++) =
@@ -1,5 +1,5 @@
 /*
- * $Id: acl.cc,v 1.57 1996/11/04 17:04:14 wessels Exp $
+ * $Id: acl.cc,v 1.58 1996/11/04 18:12:06 wessels Exp $
  *
  * DEBUG: section 28    Access Control
  * AUTHOR: Duane Wessels
@@ -31,7 +31,7 @@
 #include "squid.h"
 
 /* Global */
-char *AclMatchedName = NULL;
+const char *AclMatchedName = NULL;
 
 /* for reading ACL's from files */
 int aclFromFile = 0;
@@ -52,8 +52,8 @@ static struct _acl **AclListTail = &AclList;
 static void aclDestroyAclList _PARAMS((struct _acl_list * list));
 static void aclDestroyIpList _PARAMS((struct _acl_ip_data * data));
 static void aclDestroyTimeList _PARAMS((struct _acl_time_data * data));
-static int aclMatchDomainList _PARAMS((wordlist *, char *));
-static int aclMatchAclList _PARAMS((struct _acl_list *, aclCheck_t *));
+static int aclMatchDomainList _PARAMS((wordlist *, const char *));
+static int aclMatchAclList _PARAMS((const struct _acl_list *, aclCheck_t *));
 static int aclMatchInteger _PARAMS((intlist * data, int i));
 static int aclMatchIp _PARAMS((struct _acl_ip_data * data, struct in_addr c));
 static int aclMatchTime _PARAMS((struct _acl_time_data * data, time_t when));
@@ -64,8 +64,8 @@ static intlist *aclParseProtoList _PARAMS((void));
 static struct _acl_time_data *aclParseTimeSpec _PARAMS((void));
 static wordlist *aclParseWordList _PARAMS((void));
 static wordlist *aclParseDomainList _PARAMS((void));
-static squid_acl aclType _PARAMS((char *s));
-static int decode_addr _PARAMS((char *, struct in_addr *, struct in_addr *));
+static squid_acl aclType _PARAMS((const char *s));
+static int decode_addr _PARAMS((const char *, struct in_addr *, struct in_addr *));
 
 char *
 strtokFile(void)
@@ -107,7 +107,7 @@ strtokFile(void)
 }
 
 static squid_acl
-aclType(char *s)
+aclType(const char *s)
 {
     if (!strcmp(s, "src"))
 	return ACL_SRC_IP;
@@ -141,7 +141,7 @@ aclType(char *s)
 }
 
 struct _acl *
-aclFindByName(char *name)
+aclFindByName(const char *name)
 {
     struct _acl *a;
     for (a = AclList; a; a = a->next)
@@ -203,7 +203,7 @@ aclParseMethodList(void)
  * adress and netmask information in addr and mask.
  */
 static int
-decode_addr(char *asc, struct in_addr *addr, struct in_addr *mask)
+decode_addr(const char *asc, struct in_addr *addr, struct in_addr *mask)
 {
     u_num32 a = 0;
     int a1 = 0, a2 = 0, a3 = 0, a4 = 0;
@@ -540,7 +540,7 @@ aclParseAclLine(void)
  *    get (if any) the URL from deny_info for a certain acl
  */
 char *
-aclGetDenyInfoUrl(struct _acl_deny_info_list **head, char *name)
+aclGetDenyInfoUrl(struct _acl_deny_info_list **head, const char *name)
 {
     struct _acl_deny_info_list *A = NULL;
     struct _acl_name_list *L = NULL;
@@ -721,7 +721,7 @@ aclMatchIp(struct _acl_ip_data *data, struct in_addr c)
 }
 
 static int
-aclMatchDomainList(wordlist * data, char *host)
+aclMatchDomainList(wordlist *data, const char *host)
 {
     wordlist *first, *prev;
 
@@ -748,7 +748,7 @@ aclMatchDomainList(wordlist * data, char *host)
 }
 
 int
-aclMatchRegex(relist * data, char *word)
+aclMatchRegex(relist * data, const char *word)
 {
     relist *first, *prev;
     if (word == NULL)
@@ -820,9 +820,9 @@ aclMatchTime(struct _acl_time_data *data, time_t when)
 int
 aclMatchAcl(struct _acl *acl, aclCheck_t * checklist)
 {
-    request_t *r = checklist->request;
-    ipcache_addrs *ia = NULL;
-    char *fqdn = NULL;
+    const request_t *r = checklist->request;
+    const ipcache_addrs *ia = NULL;
+    const char *fqdn = NULL;
     int k;
     if (!acl)
 	return 0;
@@ -900,7 +900,7 @@ aclMatchAcl(struct _acl *acl, aclCheck_t * checklist)
 }
 
 static int
-aclMatchAclList(struct _acl_list *list, aclCheck_t * checklist)
+aclMatchAclList(const struct _acl_list *list, aclCheck_t *checklist)
 {
     while (list) {
 	AclMatchedName = list->acl->name;
@@ -917,7 +917,7 @@ aclMatchAclList(struct _acl_list *list, aclCheck_t * checklist)
 }
 
 int
-aclCheck(struct _acl_access *A, aclCheck_t * checklist)
+aclCheck(const struct _acl_access *A, aclCheck_t *checklist)
 {
     int allow = 0;
 
@@ -1,5 +1,5 @@
 /*
- * $Id: cache_cf.cc,v 1.125 1996/11/04 17:04:16 wessels Exp $
+ * $Id: cache_cf.cc,v 1.126 1996/11/04 18:12:10 wessels Exp $
  *
  * DEBUG: section 3     Configuration File Parsing
  * AUTHOR: Harvest Derived
@@ -195,24 +195,24 @@ struct SquidConfig Config;
 #define DefaultObjectsPerBucket	50
 
 int httpd_accel_mode = 0;	/* for fast access */
-char *DefaultSwapDir = DEFAULT_SWAP_DIR;
-char *DefaultConfigFile = DEFAULT_CONFIG_FILE;
+const char *DefaultSwapDir = DEFAULT_SWAP_DIR;
+const char *DefaultConfigFile = DEFAULT_CONFIG_FILE;
 char *ConfigFile = NULL;	/* the whole thing */
-char *cfg_filename = NULL;	/* just the last part */
-char ForwardedBy[256];
+const char *cfg_filename = NULL;	/* just the last part */
+char ForwardedBy[256] = "";
 
-char w_space[] = " \t\n";
+const char *const w_space = " \t\n";
 char config_input_line[BUFSIZ];
 int config_lineno = 0;
 
 static char fatal_str[BUFSIZ];
-static char *safe_xstrdup _PARAMS((char *p));
-static int ip_acl_match _PARAMS((struct in_addr, ip_acl *));
-static void addToIPACL _PARAMS((ip_acl **, char *, ip_access_type));
+static char *safe_xstrdup _PARAMS((const char *p));
+static int ip_acl_match _PARAMS((struct in_addr, const ip_acl *));
+static void addToIPACL _PARAMS((ip_acl **, const char *, ip_access_type));
 static void parseOnOff _PARAMS((int *));
 static void parseIntegerValue _PARAMS((int *));
 static void self_destruct _PARAMS((void));
-static void wordlistAdd _PARAMS((wordlist **, char *));
+static void wordlistAdd _PARAMS((wordlist **, const char *));
 
 static void configDoConfigure _PARAMS((void));
 static void configSetFactoryDefaults _PARAMS((void));
@@ -234,7 +234,7 @@ static void parseHttpPortLine _PARAMS((void));
 static void parseHttpdAccelLine _PARAMS((void));
 static void parseIPLine _PARAMS((ip_acl ** list));
 static void parseIcpPortLine _PARAMS((void));
-static void parseLocalDomainFile _PARAMS((char *fname));
+static void parseLocalDomainFile _PARAMS((const char *fname));
 static void parseLocalDomainLine _PARAMS((void));
 static void parseMcastGroupLine _PARAMS((void));
 static void parseMemLine _PARAMS((void));
@@ -257,7 +257,7 @@ self_destruct(void)
 }
 
 static int
-ip_acl_match(struct in_addr c, ip_acl * a)
+ip_acl_match(struct in_addr c, const ip_acl *a)
 {
     static struct in_addr h;
 
@@ -281,11 +281,11 @@ ip_acl_destroy(ip_acl ** a)
 }
 
 ip_access_type
-ip_access_check(struct in_addr address, ip_acl * list)
+ip_access_check(struct in_addr address, const ip_acl *list)
 {
     static int init = 0;
     static struct in_addr localhost;
-    ip_acl *p = NULL;
+    const ip_acl *p = NULL;
     struct in_addr naddr;	/* network byte-order IP addr */
 
     if (!list)
@@ -315,7 +315,7 @@ ip_access_check(struct in_addr address, ip_acl * list)
 
 
 static void
-addToIPACL(ip_acl ** list, char *ip_str, ip_access_type access)
+addToIPACL(ip_acl **list, const char *ip_str, ip_access_type access)
 {
     ip_acl *p, *q;
     int a1, a2, a3, a4;
@@ -405,7 +405,7 @@ wordlistDestroy(wordlist ** list)
 }
 
 static void
-wordlistAdd(wordlist ** list, char *key)
+wordlistAdd(wordlist **list, const char *key)
 {
     wordlist *p = NULL;
     wordlist *q = NULL;
@@ -494,7 +494,7 @@ parseCacheHostLine(void)
 }
 
 static neighbor_t
-parseNeighborType(char *token)
+parseNeighborType(const char *token)
 {
     if (!strcasecmp(token, "parent"))
 	return EDGE_PARENT;
@@ -777,7 +777,7 @@ static void
 parseAddressLine(struct in_addr *addr)
 {
     char *token;
-    struct hostent *hp;
+    const struct hostent *hp;
     token = strtok(NULL, w_space);
     if (token == NULL)
 	self_destruct();
@@ -790,7 +790,7 @@ parseAddressLine(struct in_addr *addr)
 }
 
 static void
-parseLocalDomainFile(char *fname)
+parseLocalDomainFile(const char *fname)
 {
     LOCAL_ARRAY(char, tmp_line, BUFSIZ);
     FILE *fp = NULL;
@@ -931,7 +931,7 @@ parseVizHackLine(void)
 {
     char *token;
     int i;
-    struct hostent *hp;
+    const struct hostent *hp;
     token = strtok(NULL, w_space);
     memset((char *) &Config.vizHackAddr, '\0', sizeof(struct sockaddr_in));
     Config.vizHackAddr.sin_family = AF_INET;
@@ -984,7 +984,7 @@ parseErrHtmlLine(void)
 }
 
 int
-parseConfigFile(char *file_name)
+parseConfigFile(const char *file_name)
 {
     FILE *fp = NULL;
     char *token = NULL;
@@ -1366,9 +1366,9 @@ setIcpPortNum(u_short port)
 }
 
 static char *
-safe_xstrdup(char *p)
+safe_xstrdup(const char *p)
 {
-    return p ? xstrdup(p) : p;
+    return p ? xstrdup(p) : NULL;
 }
 
 void
@@ -1,6 +1,6 @@
 
 /*
- * $Id: cachemgr.cc,v 1.38 1996/10/17 11:14:42 wessels Exp $
+ * $Id: cachemgr.cc,v 1.39 1996/11/04 18:12:13 wessels Exp $
  *
  * DEBUG: Section 0     CGI Cache Manager
  * AUTHOR: Harvest Derived
@@ -298,9 +298,9 @@ static char *op_cmds_descr[] =
 
 static int hasTables = FALSE;
 
-static char *script_name = "/cgi-bin/cachemgr.cgi";
-static char *w_space = " \t\n";
-static char *progname = NULL;
+static const char *script_name = "/cgi-bin/cachemgr.cgi";
+static const char *const w_space = " \t\n";
+static const char *progname = NULL;
 static time_t now;
 
 static char x2c _PARAMS((char *));
@@ -494,7 +494,7 @@ describeTimeSince(time_t then)
     time_t delta = now - then;
     static char buf[128];
     static char buf2[128];
-    char *fmt = "%s ago";
+    const char *fmt = "%s ago";
     buf[0] = '\0';
     if (delta < 0) {
 	delta = (-delta);
@@ -984,7 +984,7 @@ main(int argc, char *argv[])
 static int
 client_comm_connect(int sock, char *dest_host, u_short dest_port)
 {
-    struct hostent *hp;
+    const struct hostent *hp;
     static struct sockaddr_in to_addr;
     unsigned long haddr;
 
@@ -1,6 +1,6 @@
 
 /*
- * $Id: client.cc,v 1.12 1996/10/25 02:15:17 wessels Exp $
+ * $Id: client.cc,v 1.13 1996/11/04 18:12:14 wessels Exp $
  *
  * DEBUG: section 0     WWW Client
  * AUTHOR: Harvest Derived
@@ -112,21 +112,21 @@
 
 /* Local functions */
 static int client_comm_connect _PARAMS((int sock, char *dest_host, u_short dest_port));
-static void usage _PARAMS((char *progname));
+static void usage _PARAMS((const char *progname));
 
 static void
-usage(char *progname)
+usage(const char *progname)
 {
-    fprintf(stderr, "\
-Usage: %s [-rs] [-i IMS_time] [-h host] [-p port] [-m method] url\n\
-Options:\n\
-    -r         Force cache to reload URL.\n\
-    -s         Silent.  Do not print data to stdout.\n\
-    -i IMS     If-Modified-Since time (in Epoch seconds).\n\
-    -h host    Retrieve URL from cache on hostname.  Default is localhost.\n\
-    -p port    Port number of cache.  Default is %d.\n\
-    -m method  Request method, default is GET.\n\
-", progname, CACHE_HTTP_PORT);
+    fprintf(stderr,
+    "Usage: %s [-rs] [-i IMS_time] [-h host] [-p port] [-m method] url\n"
+    "Options:\n"
+    "    -r         Force cache to reload URL.\n"
+    "    -s         Silent.  Do not print data to stdout.\n"
+    "    -i IMS     If-Modified-Since time (in Epoch seconds).\n"
+    "    -h host    Retrieve URL from cache on hostname.  Default is localhost.\n"
+    "    -p port    Port number of cache.  Default is %d.\n"
+    "    -m method  Request method, default is GET.\n",
+    progname, CACHE_HTTP_PORT);
     exit(1);
 }
 
@@ -136,7 +136,7 @@ main(int argc, char *argv[])
     int conn, c, len, bytesWritten;
     int port, to_stdout, reload;
     char url[BUFSIZ], msg[BUFSIZ], buf[BUFSIZ], hostname[BUFSIZ];
-    char *method = "GET";
+    const char *method = "GET";
     extern char *optarg;
     time_t ims = 0;
 
@@ -237,7 +237,7 @@ main(int argc, char *argv[])
 static int
 client_comm_connect(int sock, char *dest_host, u_short dest_port)
 {
-    struct hostent *hp;
+    const struct hostent *hp;
     static struct sockaddr_in to_addr;
 
     /* Set up the destination socket address for message to send to. */
@@ -32,7 +32,7 @@ clientdbAdd(struct in_addr addr)
 void
 clientdbInit(void)
 {
-    client_table = hash_create((int (*)_PARAMS((char *, char *))) strcmp,
+    client_table = hash_create((int (*)_PARAMS((const char *, const char *))) strcmp,
 	229,
 	hash_string);
     client_info_sz = sizeof(ClientInfo);
@@ -1,6 +1,6 @@
 
 /*
- * $Id: client_side.cc,v 1.55 1996/10/30 21:56:34 wessels Exp $
+ * $Id: client_side.cc,v 1.56 1996/11/04 18:12:16 wessels Exp $
  *
  * DEBUG: section 33    Client-side Routines
  * AUTHOR: Duane Wessels
@@ -33,12 +33,12 @@
 
 static void clientRedirectDone _PARAMS((void *data, char *result));
 static int icpHandleIMSReply _PARAMS((int fd, StoreEntry * entry, void *data));
-static void clientLookupDstIPDone _PARAMS((int fd, ipcache_addrs *, void *data));
-static void clientLookupSrcFQDNDone _PARAMS((int fd, char *fqdn, void *data));
+static void clientLookupDstIPDone _PARAMS((int fd, const ipcache_addrs *, void *data));
+static void clientLookupSrcFQDNDone _PARAMS((int fd, const char *fqdn, void *data));
 
 
 static void
-clientLookupDstIPDone(int fd, ipcache_addrs * ia, void *data)
+clientLookupDstIPDone(int fd, const ipcache_addrs *ia, void *data)
 {
     icpStateData *icpState = data;
     debug(33, 5, "clientLookupDstIPDone: FD %d, '%s'\n",
@@ -56,7 +56,7 @@ clientLookupDstIPDone(int fd, ipcache_addrs * ia, void *data)
 }
 
 static void
-clientLookupSrcFQDNDone(int fd, char *fqdn, void *data)
+clientLookupSrcFQDNDone(int fd, const char *fqdn, void *data)
 {
     icpStateData *icpState = data;
     debug(33, 5, "clientLookupSrcFQDNDone: FD %d, '%s', FQDN %s\n",
@@ -80,7 +80,7 @@ clientLookupIdentDone(void *data)
 static int
 clientProxyAuthCheck(icpStateData * icpState)
 {
-    char *proxy_user;
+    const char *proxy_user;
 
     /* Check that the user is allowed to access via this proxy-cache
      * don't restrict if they're accessing a local domain or
@@ -234,8 +234,8 @@ clientRedirectDone(void *data, char *result)
  */
 #define CHECK_PROXY_FILE_TIME 300
 
-char *
-proxyAuthenticate(char *headers)
+const char *
+proxyAuthenticate(const char *headers)
 {
     /* Keep the time measurements and the hash
      * table of users and passwords handy */
@@ -1,6 +1,6 @@
 
 /*
- * $Id: comm.cc,v 1.95 1996/10/30 21:56:35 wessels Exp $
+ * $Id: comm.cc,v 1.96 1996/11/04 18:12:19 wessels Exp $
  *
  * DEBUG: section 5     Socket Functions
  * AUTHOR: Harvest Derived
@@ -230,7 +230,7 @@ comm_open(int sock_type,
     struct in_addr addr,
     u_short port,
     int flags,
-    char *note)
+    const char *note)
 {
     int new_socket;
     FD_ENTRY *conn = NULL;
@@ -311,7 +311,7 @@ void
 comm_nbconnect(int fd, void *data)
 {
     ConnectStateData *connectState = data;
-    ipcache_addrs *ia = NULL;
+    const ipcache_addrs *ia = NULL;
     if (connectState->S.sin_addr.s_addr == 0) {
 	ia = ipcache_gethostbyname(connectState->host, IP_BLOCKING_LOOKUP);
 	if (ia == NULL) {
@@ -380,7 +380,7 @@ comm_get_fd_timeout(int fd)
 }
 
 int
-comm_connect_addr(int sock, struct sockaddr_in *address)
+comm_connect_addr(int sock, const struct sockaddr_in *address)
 {
     int status = COMM_OK;
     FD_ENTRY *conn = &fd_table[sock];
@@ -396,7 +396,7 @@ comm_connect_addr(int sock, struct sockaddr_in *address)
 	return COMM_ERROR;
     }
     /* Establish connection. */
-    if (connect(sock, (struct sockaddr *) address, sizeof(struct sockaddr_in)) < 0) {
+    if (connect(sock, (const struct sockaddr *) address, sizeof(struct sockaddr_in)) < 0) {
 	switch (errno) {
 	case EALREADY:
 	    return COMM_ERROR;
@@ -545,9 +545,9 @@ comm_cleanup_fd_entry(int fd)
 
 /* Send a udp datagram to specified PORT at HOST. */
 int
-comm_udp_send(int fd, char *host, u_short port, char *buf, int len)
+comm_udp_send(int fd, const char *host, u_short port, const char *buf, int len)
 {
-    ipcache_addrs *ia = NULL;
+    const ipcache_addrs *ia = NULL;
     static struct sockaddr_in to_addr;
     int bytes_sent;
 
@@ -572,11 +572,11 @@ comm_udp_send(int fd, char *host, u_short port, char *buf, int len)
 
 /* Send a udp datagram to specified TO_ADDR. */
 int
-comm_udp_sendto(int fd, struct sockaddr_in *to_addr, int addr_len, char *buf, int len)
+comm_udp_sendto(int fd, const struct sockaddr_in *to_addr, int addr_len, const char *buf, int len)
 {
     int bytes_sent;
 
-    if ((bytes_sent = sendto(fd, buf, len, 0, (struct sockaddr *) to_addr, addr_len)) < 0) {
+    if ((bytes_sent = sendto(fd, buf, len, 0, to_addr, addr_len)) < 0) {
 	debug(5, 1, "comm_udp_sendto: sendto failure: FD %d: %s\n", fd, xstrerror());
 	debug(5, 1, "comm_udp_sendto: --> sin_family = %d\n", to_addr->sin_family);
 	debug(5, 1, "comm_udp_sendto: --> sin_port   = %d\n", htons(to_addr->sin_port));
@@ -1090,7 +1090,7 @@ examine_select(fd_set * readfds, fd_set * writefds)
 }
 
 char *
-fd_note(int fd, char *s)
+fd_note(int fd, const char *s)
 {
     if (s == NULL)
 	return (fd_table[fd].ascii_note);
@@ -1,5 +1,5 @@
 /*
- * $Id: debug.cc,v 1.33 1996/10/24 05:17:43 wessels Exp $
+ * $Id: debug.cc,v 1.34 1996/11/04 18:12:22 wessels Exp $
  *
  * DEBUG: section 0     Debug Routines
  * AUTHOR: Harvest Derived
@@ -105,7 +105,7 @@
 
 #include "squid.h"
 
-char *volatile _db_file = __FILE__;
+const char *volatile _db_file = __FILE__;
 volatile int _db_line = 0;
 
 FILE *debug_log = NULL;
@@ -118,7 +118,7 @@ static char *accessLogTime _PARAMS((time_t));
 
 #ifdef __STDC__
 void
-_db_print(int section, int level, char *format,...)
+_db_print(int section, int level, const char *format, ...)
 {
     va_list args;
 #else
@@ -129,7 +129,7 @@ _db_print(va_alist)
     va_list args;
     int section;
     int level;
-    char *format = NULL;
+    const char *format = NULL;
 #endif
     LOCAL_ARRAY(char, f, BUFSIZ);
 #if HAVE_SYSLOG
@@ -145,7 +145,7 @@ _db_print(va_alist)
     va_start(args);
     section = va_arg(args, int);
     level = va_arg(args, int);
-    format = va_arg(args, char *);
+    format = va_arg(args, const char *);
 #endif
 
     if (level > debugLevels[section]) {
@@ -182,7 +182,7 @@ _db_print(va_alist)
 }
 
 static void
-debugArg(char *arg)
+debugArg(const char *arg)
 {
     int s = 0;
     int l = 0;
@@ -206,7 +206,7 @@ debugArg(char *arg)
 }
 
 static void
-debugOpenLog(char *logfile)
+debugOpenLog(const char *logfile)
 {
     if (logfile == NULL) {
 	debug_log = stderr;
@@ -228,7 +228,7 @@ debugOpenLog(char *logfile)
 }
 
 void
-_db_init(char *logfile, char *options)
+_db_init(const char *logfile, const char *options)
 {
     int i;
     char *p = NULL;
@@ -1,5 +1,5 @@
 /*
- * $Id: disk.cc,v 1.36 1996/11/01 21:25:02 wessels Exp $
+ * $Id: disk.cc,v 1.37 1996/11/04 18:12:24 wessels Exp $
  *
  * DEBUG: section 6     Disk I/O Routines
  * AUTHOR: Harvest Derived
@@ -149,7 +149,7 @@ disk_init(void)
 
 /* Open a disk file. Return a file descriptor */
 int
-file_open(char *path, int (*handler) _PARAMS((void)), int mode)
+file_open(const char *path, int (*handler) _PARAMS((void)), int mode)
 {
     FD_ENTRY *conn;
     int fd;
@@ -1,5 +1,5 @@
 /*
- * $Id: dns.cc,v 1.21 1996/10/15 18:05:56 wessels Exp $
+ * $Id: dns.cc,v 1.22 1996/11/04 18:12:26 wessels Exp $
  *
  * DEBUG: section 34    Dnsserver interface
  * AUTHOR: Harvest Derived
@@ -110,7 +110,7 @@ struct dnsQueueData {
     void *data;
 };
 
-static int dnsOpenServer _PARAMS((char *command));
+static int dnsOpenServer _PARAMS((const char *command));
 
 static dnsserver_t **dns_child_table = NULL;
 
@@ -119,7 +119,7 @@ char *dns_error_message = NULL;	/* possible error message */
 struct _dnsStats DnsStats;
 
 static int
-dnsOpenServer(char *command)
+dnsOpenServer(const char *command)
 {
     pid_t pid;
     struct sockaddr_in S;
@@ -1,6 +1,6 @@
 
 /*
- * $Id: dnsserver.cc,v 1.26 1996/10/18 20:36:22 wessels Exp $
+ * $Id: dnsserver.cc,v 1.27 1996/11/04 18:12:27 wessels Exp $
  *
  * DEBUG: section 0     DNS Resolver
  * AUTHOR: Harvest Derived
@@ -244,7 +244,7 @@ main(int argc, char *argv[])
 {
     char request[256];
     char msg[256];
-    struct hostent *result = NULL;
+    const struct hostent *result = NULL;
     FILE *logfile = NULL;
     long start;
     long stop;
@@ -1,6 +1,6 @@
 
 /*
- * $Id: errorpage.cc,v 1.46 1996/11/02 00:17:45 wessels Exp $
+ * $Id: errorpage.cc,v 1.47 1996/11/04 18:12:28 wessels Exp $
  *
  * DEBUG: section 4     Error Generation
  * AUTHOR: Duane Wessels
@@ -153,7 +153,7 @@ errorInitialize(void)
 }
 
 void
-squid_error_entry(StoreEntry * entry, log_type type, char *msg)
+squid_error_entry(StoreEntry *entry, log_type type, const char *msg)
 {
     int error_index;
 
@@ -191,7 +191,7 @@ squid_error_entry(StoreEntry * entry, log_type type, char *msg)
 
 
 char *
-squid_error_url(char *url, int method, int type, char *address, int code, char *msg)
+squid_error_url(const char *url, int method, int type, const char *address, int code, const char *msg)
 {
     int error_index;
 
@@ -238,7 +238,7 @@ Generated by %s/%s@%s\n\
 \n"
 
 char *
-squid_error_request(char *request, int type, char *address, int code)
+squid_error_request(const char *request, int type, const char *address, int code)
 {
     int error_index;
 
@@ -259,28 +259,28 @@ squid_error_request(char *request, int type, char *address, int code)
 }
 
 char *
-access_denied_msg(int code, int method, char *url, char *client)
+access_denied_msg(int code, int method, const char *url, const char *client)
 {
-    sprintf(tmp_error_buf, "\
-HTTP/1.0 %d Cache Access Denied\r\n\
-Content-type: text/html\r\n\
-\r\n\
-<HTML><HEAD><TITLE>Cache Access Denied</TITLE></HEAD>\n\
-<BODY><H1>Error</H1>\n\
-<H2>Access Denied</H2>\n\
-<P>\n\
-Sorry, you are not currently allowed to request\n\
-<PRE>    %s</PRE>\n\
-From this cache.  Please check with the\n\
-<A HREF=\"mailto:%s\">cache administrator</A>\n\
-if you believe this is incorrect.\n\
-<P>\n\
-%s\n\
-<HR>\n\
-<ADDRESS>\n\
-Generated by %s/%s@%s\n\
-</ADDRESS>\n\
-\n",
+    sprintf(tmp_error_buf,
+	"HTTP/1.0 %d Cache Access Denied\r\n"
+	"Content-type: text/html\r\n"
+	"\r\n"
+	"<HTML><HEAD><TITLE>Cache Access Denied</TITLE></HEAD>\n"
+	"<BODY><H1>Error</H1>\n"
+	"<H2>Access Denied</H2>\n"
+	"<P>\n"
+	"Sorry, you are not currently allowed to request\n"
+	"<PRE>    %s</PRE>\n"
+	"From this cache.  Please check with the\n"
+	"<A HREF=\"mailto:%s\">cache administrator</A>\n"
+	"if you believe this is incorrect.\n"
+	"<P>\n"
+	"%s\n"
+	"<HR>\n"
+	"<ADDRESS>\n"
+	"Generated by %s/%s@%s\n"
+	"</ADDRESS>\n"
+	"\n",
 	code,
 	url,
 	Config.adminEmail,
@@ -296,33 +296,33 @@ Generated by %s/%s@%s\n\
  *      add a Location: and for old browsers a HREF to the info page
  */
 char *
-access_denied_redirect(int code, int method, char *url, char *client, char *redirect)
+access_denied_redirect(int code, int method, const char *url, const char *client, const char *redirect)
 {
-    sprintf(tmp_error_buf, "\
-HTTP/1.0 %d Cache Access Deny Redirect\r\n\
-Location: %s\r\n\
-Content-type: text/html\r\n\
-\r\n\
-<HTML><HEAD><TITLE>Cache Access Denied</TITLE></HEAD>\n\
-<BODY><H1>Error</H1>\n\
-<H2>Access Denied</H2>\n\
-<P>\n\
-Sorry, you are not currently allowed to request\n\
-<PRE>    %s</PRE>\n\
-from this cache.\n\
-<P>\n\
-You may take a look at\n\
-<PRE> <A HREF=\"%s\">%s</A></PRE>\n\
-or check with the\n\
-<A HREF=\"mailto:%s\">cache administrator</A>\n\
-if you believe this is incorrect.\n\
-<P>\n\
-%s\n\
-<HR>\n\
-<ADDRESS>\n\
-Generated by %s/%s@%s\n\
-</ADDRESS></BODY></HTML>\n\
-\n",
+    sprintf(tmp_error_buf,
+	"HTTP/1.0 %d Cache Access Deny Redirect\r\n"
+	"Location: %s\r\n"
+	"Content-type: text/html\r\n"
+	"\r\n"
+	"<HTML><HEAD><TITLE>Cache Access Denied</TITLE></HEAD>\n"
+	"<BODY><H1>Error</H1>\n"
+	"<H2>Access Denied</H2>\n"
+	"<P>\n"
+	"Sorry, you are not currently allowed to request\n"
+	"<PRE>    %s</PRE>\n"
+	"from this cache.\n"
+	"<P>\n"
+	"You may take a look at\n"
+	"<PRE> <A HREF=\"%s\">%s</A></PRE>\n"
+	"or check with the\n"
+	"<A HREF=\"mailto:%s\">cache administrator</A>\n"
+	"if you believe this is incorrect.\n"
+	"<P>\n"
+	"%s\n"
+	"<HR>\n"
+	"<ADDRESS>\n"
+	"Generated by %s/%s@%s\n"
+	"</ADDRESS></BODY></HTML>\n"
+	"\n",
 	code,
 	redirect,
 	url,
@@ -337,7 +337,7 @@ Generated by %s/%s@%s\n\
 }
 
 char *
-authorization_needed_msg(request_t * request, char *realm)
+authorization_needed_msg(const request_t *request, const char *realm)
 {
     sprintf(auth_msg, "<HTML><HEAD><TITLE>Authorization needed</TITLE>\n\
 </HEAD><BODY><H1>Authorization needed</H1>\n\
@@ -367,11 +367,11 @@ Generated by %s/%s@%s\n\
 	strlen(auth_msg),
 	squid_curtime,
 	squid_curtime + Config.negativeTtl);
-    sprintf(tmp_error_buf, "HTTP/1.0 401 Unauthorized\r\n\
-%s\
-WWW-Authenticate: Basic realm=\"%s\"\r\n\
-\r\n\
-%s",
+    sprintf(tmp_error_buf, "HTTP/1.0 401 Unauthorized\r\n"
+	"%s"
+	"WWW-Authenticate: Basic realm=\"%s\"\r\n"
+	"\r\n"
+	"%s",
 	tbuf, realm, auth_msg);
     return tmp_error_buf;
 }
@@ -404,7 +404,7 @@ Generated by %s/%s@%s\n\
 "
 
 char *
-proxy_denied_msg(int code, int method, char *url, char *client)
+proxy_denied_msg(int code, int method, const char *url, const char *client)
 {
     sprintf(tmp_error_buf, PROXY_AUTH_ERR_MSG,
 	code,
@@ -1,5 +1,5 @@
 /*
- * $Id: filemap.cc,v 1.13 1996/09/26 19:19:46 wessels Exp $
+ * $Id: filemap.cc,v 1.14 1996/11/04 18:12:32 wessels Exp $
  *
  * DEBUG: section 8     Swap File Bitmap
  * AUTHOR: Harvest Derived
@@ -124,7 +124,7 @@
 #endif
 
 extern int storeGetSwapSpace _PARAMS((int));
-extern void fatal_dump _PARAMS((char *));
+extern void fatal_dump _PARAMS((const char *));
 
 static fileMap *fm = NULL;
 
@@ -1,6 +1,6 @@
 
 /*
- * $Id: fqdncache.cc,v 1.30 1996/10/25 00:22:12 wessels Exp $
+ * $Id: fqdncache.cc,v 1.31 1996/11/04 18:12:33 wessels Exp $
  *
  * DEBUG: section 35    FQDN Cache
  * AUTHOR: Harvest Derived
@@ -138,7 +138,7 @@ static struct {
 
 static int fqdncache_compareLastRef _PARAMS((fqdncache_entry **, fqdncache_entry **));
 static int fqdncache_dnsHandleRead _PARAMS((int, dnsserver_t *));
-static fqdncache_entry *fqdncache_parsebuffer _PARAMS((char *buf, dnsserver_t *));
+static fqdncache_entry *fqdncache_parsebuffer _PARAMS((const char *buf, dnsserver_t *));
 static int fqdncache_purgelru _PARAMS((void));
 static void fqdncache_release _PARAMS((fqdncache_entry *));
 static fqdncache_entry *fqdncache_GetFirst _PARAMS((void));
@@ -147,11 +147,11 @@ static fqdncache_entry *fqdncache_create _PARAMS((void));
 static void fqdncache_add_to_hash _PARAMS((fqdncache_entry *));
 static void fqdncache_call_pending _PARAMS((fqdncache_entry *));
 static void fqdncache_call_pending_badname _PARAMS((int fd, FQDNH handler, void *));
-static void fqdncache_add _PARAMS((char *, fqdncache_entry *, struct hostent *, int));
-static int fqdncacheHasPending _PARAMS((fqdncache_entry *));
-static fqdncache_entry *fqdncache_get _PARAMS((char *));
-static void dummy_handler _PARAMS((int, char *, void *));
-static int fqdncacheExpiredEntry _PARAMS((fqdncache_entry *));
+static void fqdncache_add _PARAMS((const char *, fqdncache_entry *, const struct hostent *, int));
+static int fqdncacheHasPending _PARAMS((const fqdncache_entry *));
+static fqdncache_entry *fqdncache_get _PARAMS((const char *));
+static void dummy_handler _PARAMS((int, const char *, void *));
+static int fqdncacheExpiredEntry _PARAMS((const fqdncache_entry *));
 static void fqdncacheAddPending _PARAMS((fqdncache_entry *, int fd, FQDNH, void *));
 static void fqdncacheEnqueue _PARAMS((fqdncache_entry *));
 static void *fqdncacheDequeue _PARAMS((void));
@@ -241,7 +241,7 @@ fqdncache_release(fqdncache_entry * f)
 
 /* return match for given name */
 static fqdncache_entry *
-fqdncache_get(char *name)
+fqdncache_get(const char *name)
 {
     hash_link *e;
     static fqdncache_entry *f;
@@ -279,7 +279,7 @@ fqdncache_compareLastRef(fqdncache_entry ** e1, fqdncache_entry ** e2)
 }
 
 static int
-fqdncacheExpiredEntry(fqdncache_entry * f)
+fqdncacheExpiredEntry(const fqdncache_entry *f)
 {
     if (f->status == FQDN_PENDING)
 	return 0;
@@ -381,7 +381,7 @@ fqdncache_add_to_hash(fqdncache_entry * f)
 
 
 static void
-fqdncache_add(char *name, fqdncache_entry * f, struct hostent *hp, int cached)
+fqdncache_add(const char *name, fqdncache_entry *f, const struct hostent *hp, int cached)
 {
     int k;
 
@@ -443,7 +443,7 @@ fqdncache_call_pending_badname(int fd, FQDNH handler, void *data)
 }
 
 static fqdncache_entry *
-fqdncache_parsebuffer(char *inbuf, dnsserver_t * dnsData)
+fqdncache_parsebuffer(const char *inbuf, dnsserver_t *dnsData)
 {
     char *buf = xstrdup(inbuf);
     char *token;
@@ -723,12 +723,12 @@ fqdncacheUnregister(struct in_addr addr, int fd)
     return n;
 }
 
-char *
+const char *
 fqdncache_gethostbyaddr(struct in_addr addr, int flags)
 {
     char *name = inet_ntoa(addr);
     fqdncache_entry *f = NULL;
-    struct hostent *hp = NULL;
+    const struct hostent *hp = NULL;
     unsigned int ip;
 
     if (!name)
@@ -823,15 +823,15 @@ fqdnStats(StoreEntry * sentry)
 }
 
 static void
-dummy_handler(int u1, char *u2, void *u3)
+dummy_handler(int u1, const char *u2, void *u3)
 {
     return;
 }
 
 static int
-fqdncacheHasPending(fqdncache_entry * f)
+fqdncacheHasPending(const fqdncache_entry *f)
 {
-    struct _fqdn_pending *p = NULL;
+    const struct _fqdn_pending *p = NULL;
     if (f->status != FQDN_PENDING)
 	return 0;
     for (p = f->pending_head; p; p = p->next)
@@ -841,7 +841,7 @@ fqdncacheHasPending(fqdncache_entry * f)
 }
 
 void
-fqdncacheReleaseInvalid(char *name)
+fqdncacheReleaseInvalid(const char *name)
 {
     fqdncache_entry *f;
     if ((f = fqdncache_get(name)) == NULL)
@@ -851,10 +851,10 @@ fqdncacheReleaseInvalid(char *name)
     fqdncache_release(f);
 }
 
-char *
+const char *
 fqdnFromAddr(struct in_addr addr)
 {
-    char *n;
+    const char *n;
     static char buf[32];
     if (Config.Log.log_fqdn && (n = fqdncache_gethostbyaddr(addr, 0)))
 	return n;
@@ -1,6 +1,6 @@
 
 /*
- * $Id: ftp.cc,v 1.73 1996/11/01 21:57:17 wessels Exp $
+ * $Id: ftp.cc,v 1.74 1996/11/04 18:12:35 wessels Exp $
  *
  * DEBUG: section 9     File Transfer Protocol (FTP)
  * AUTHOR: Harvest Derived
@@ -128,20 +128,20 @@ typedef struct _Ftpdata {
 } FtpStateData;
 
 /* Local functions */
-static char *ftpTransferMode _PARAMS((char *));
-static char *ftpGetBasicAuth _PARAMS((char *));
+static const char *ftpTransferMode _PARAMS((const char *));
+static char *ftpGetBasicAuth _PARAMS((const char *));
 static int ftpReadReply _PARAMS((int, FtpStateData *));
 static int ftpStateFree _PARAMS((int, FtpStateData *));
 static void ftpConnectDone _PARAMS((int fd, int status, void *data));
 static void ftpLifetimeExpire _PARAMS((int, FtpStateData *));
-static void ftpProcessReplyHeader _PARAMS((FtpStateData *, char *, int));
+static void ftpProcessReplyHeader _PARAMS((FtpStateData *, const char *, int));
 static void ftpSendComplete _PARAMS((int, char *, int, int, void *));
 static void ftpSendRequest _PARAMS((int, FtpStateData *));
 static void ftpServerClosed _PARAMS((int, void *));
-static void ftp_login_parser _PARAMS((char *, FtpStateData *));
+static void ftp_login_parser _PARAMS((const char *, FtpStateData *));
 
 /* External functions */
-extern char *base64_decode _PARAMS((char *coded));
+extern char *base64_decode _PARAMS((const char *coded));
 
 static int
 ftpStateFree(int fd, FtpStateData * ftpState)
@@ -159,7 +159,7 @@ ftpStateFree(int fd, FtpStateData * ftpState)
 }
 
 static void
-ftp_login_parser(char *login, FtpStateData * data)
+ftp_login_parser(const char *login, FtpStateData * data)
 {
     char *user = data->user;
     char *password = data->password;
@@ -195,7 +195,7 @@ ftpLifetimeExpire(int fd, FtpStateData * data)
 /* This is too much duplicated code from httpProcessReplyHeader.  Only
  * difference is FtpStateData vs HttpData. */
 static void
-ftpProcessReplyHeader(FtpStateData * data, char *buf, int size)
+ftpProcessReplyHeader(FtpStateData * data, const char *buf, int size)
 {
     char *t = NULL;
     StoreEntry *entry = data->entry;
@@ -424,13 +424,13 @@ ftpSendComplete(int fd, char *buf, int size, int errflag, void *data)
 	(void *) ftpState, Config.readTimeout);
 }
 
-static char *
-ftpTransferMode(char *urlpath)
+static const char *
+ftpTransferMode(const char *urlpath)
 {
-    static char ftpASCII[] = "A";
-    static char ftpBinary[] = "I";
+    const char *const ftpASCII = "A";
+    const char *const ftpBinary = "I";
     char *ext = NULL;
-    ext_table_entry *mime = NULL;
+    const ext_table_entry *mime = NULL;
     int len;
     len = strlen(urlpath);
     if (*(urlpath + len - 1) == '/')
@@ -448,11 +448,11 @@ static void
 ftpSendRequest(int fd, FtpStateData * data)
 {
     char *path = NULL;
-    char *mode = NULL;
+    const char *mode = NULL;
     char *buf = NULL;
     LOCAL_ARRAY(char, tbuf, BUFSIZ);
     LOCAL_ARRAY(char, opts, BUFSIZ);
-    static char *space = " ";
+    const char *const space = " ";
     char *s = NULL;
     int got_timeout = 0;
     int got_negttl = 0;
@@ -526,7 +526,7 @@ ftpSendRequest(int fd, FtpStateData * data)
 }
 
 static char *
-ftpGetBasicAuth(char *req_hdr)
+ftpGetBasicAuth(const char *req_hdr)
 {
     char *auth_hdr;
     char *t;
@@ -545,7 +545,7 @@ ftpGetBasicAuth(char *req_hdr)
 
 
 int
-ftpStart(int unusedfd, char *url, request_t * request, StoreEntry * entry)
+ftpStart(int unusedfd, const char *url, request_t *request, StoreEntry *entry)
 {
     LOCAL_ARRAY(char, realm, 8192);
     FtpStateData *ftpData = NULL;
@@ -1,5 +1,5 @@
 /*
- * $Id: gopher.cc,v 1.59 1996/11/02 00:17:49 wessels Exp $
+ * $Id: gopher.cc,v 1.60 1996/11/04 18:12:39 wessels Exp $
  *
  * DEBUG: section 10    Gopher
  * AUTHOR: Harvest Derived
@@ -160,9 +160,9 @@ typedef struct gopher_ds {
 } GopherStateData;
 
 static int gopherStateFree _PARAMS((int fd, GopherStateData *));
-static void gopher_mime_content _PARAMS((char *buf, char *name, char *def));
+static void gopher_mime_content _PARAMS((char *buf, const char *name, const char *def));
 static void gopherMimeCreate _PARAMS((GopherStateData *));
-static int gopher_url_parser(char *url,
+static int gopher_url_parser(const char *url,
     char *host,
     int *port,
     char *type_id,
@@ -199,13 +199,13 @@ gopherStateFree(int fd, GopherStateData * gopherState)
 
 /* figure out content type from file extension */
 static void
-gopher_mime_content(char *buf, char *name, char *def)
+gopher_mime_content(char *buf, const char *name, const char *def)
 {
     LOCAL_ARRAY(char, temp, MAX_URL + 1);
     char *ext1 = NULL;
     char *ext2 = NULL;
-    char *str = NULL;
-    ext_table_entry *e = NULL;
+    const char *str = NULL;
+    const ext_table_entry *e = NULL;
 
     ext2 = NULL;
     strcpy(temp, name);
@@ -253,11 +253,11 @@ gopherMimeCreate(GopherStateData * data)
 {
     LOCAL_ARRAY(char, tempMIME, MAX_MIME);
 
-    sprintf(tempMIME, "\
-HTTP/1.0 200 OK Gatewaying\r\n\
-Server: Squid/%s\r\n\
-Date: %s\r\n\
-MIME-version: 1.0\r\n",
+    sprintf(tempMIME,
+	"HTTP/1.0 200 OK Gatewaying\r\n"
+	"Server: Squid/%s\r\n"
+	"Date: %s\r\n"
+	"MIME-version: 1.0\r\n",
 	version_string, mkrfc1123(squid_curtime));
 
     switch (data->type_id) {
@@ -302,7 +302,7 @@ MIME-version: 1.0\r\n",
 
 /* Parse a gopher url into components.  By Anawat. */
 static int
-gopher_url_parser(char *url, char *host, int *port, char *type_id, char *request)
+gopher_url_parser(const char *url, char *host, int *port, char *type_id, char *request)
 {
     LOCAL_ARRAY(char, proto, MAX_URL);
     LOCAL_ARRAY(char, hostbuf, MAX_URL);
@@ -335,7 +335,7 @@ gopher_url_parser(char *url, char *host, int *port, char *type_id, char *request
 }
 
 int
-gopherCachable(char *url)
+gopherCachable(const char *url)
 {
     GopherStateData *data = NULL;
     int cachable = 1;
@@ -367,8 +367,8 @@ gopherEndHTML(GopherStateData * data)
     LOCAL_ARRAY(char, tmpbuf, TEMP_BUF_SIZE);
 
     if (!data->data_in) {
-	sprintf(tmpbuf, "<HTML><HEAD><TITLE>Server Return Nothing.</TITLE>\n\
-	</HEAD><BODY><HR><H1>Server Return Nothing.</H1></BODY></HTML>\n");
+	sprintf(tmpbuf, "<HTML><HEAD><TITLE>Server Return Nothing.</TITLE>\n"
+	    "</HEAD><BODY><HR><H1>Server Return Nothing.</H1></BODY></HTML>\n");
 	storeAppend(data->entry, tmpbuf, strlen(tmpbuf));
 	return;
     }
@@ -402,11 +402,11 @@ gopherToHTML(GopherStateData * data, char *inbuf, int len)
     entry = data->entry;
 
     if (data->conversion == HTML_INDEX_PAGE) {
-	sprintf(outbuf, "<HTML><HEAD><TITLE>Gopher Index %s</TITLE></HEAD>\n\
-		<BODY><H1>%s<BR>Gopher Search</H1>\n\
-		<p>This is a searchable Gopher index. Use the search\n\
-		function of your browser to enter search terms.\n\
-		<ISINDEX></BODY></HTML>\n", entry->url, entry->url);
+	sprintf(outbuf, "<HTML><HEAD><TITLE>Gopher Index %s</TITLE></HEAD>\n"
+		"<BODY><H1>%s<BR>Gopher Search</H1>\n"
+		"<p>This is a searchable Gopher index. Use the search\n"
+		"function of your browser to enter search terms.\n"
+		"<ISINDEX></BODY></HTML>\n", entry->url, entry->url);
 	storeAppend(entry, outbuf, strlen(outbuf));
 	/* now let start sending stuff to client */
 	BIT_RESET(entry->flag, DELAY_SENDING);
@@ -415,11 +415,11 @@ gopherToHTML(GopherStateData * data, char *inbuf, int len)
 	return;
     }
     if (data->conversion == HTML_CSO_PAGE) {
-	sprintf(outbuf, "<HTML><HEAD><TITLE>CSO Search of %s</TITLE></HEAD>\n\
-		<BODY><H1>%s<BR>CSO Search</H1>\n\
-		<P>A CSO database usually contains a phonebook or\n\
-		directory.  Use the search function of your browser to enter\n\
-		search terms.</P><ISINDEX></BODY></HTML>\n",
+	sprintf(outbuf, "<HTML><HEAD><TITLE>CSO Search of %s</TITLE></HEAD>\n"
+		"<BODY><H1>%s<BR>CSO Search</H1>\n"
+		"<P>A CSO database usually contains a phonebook or\n"
+		"directory.  Use the search function of your browser to enter\n"
+		"search terms.</P><ISINDEX></BODY></HTML>\n",
 	    entry->url, entry->url);
 
 	storeAppend(entry, outbuf, strlen(outbuf));
@@ -433,11 +433,11 @@ gopherToHTML(GopherStateData * data, char *inbuf, int len)
 
     if (!data->HTML_header_added) {
 	if (data->conversion == HTML_CSO_RESULT)
-	    strcat(outbuf, "<HTML><HEAD><TITLE>CSO Searchs Result</TITLE></HEAD>\n\
-		<BODY><H1>CSO Searchs Result</H1>\n<PRE>\n");
+	    strcat(outbuf, "<HTML><HEAD><TITLE>CSO Searchs Result</TITLE></HEAD>\n"
+		"<BODY><H1>CSO Searchs Result</H1>\n<PRE>\n");
 	else
-	    strcat(outbuf, "<HTML><HEAD><TITLE>Gopher Menu</TITLE></HEAD>\n\
-		<BODY><H1>Gopher Menu</H1>\n<PRE>\n");
+	    strcat(outbuf, "<HTML><HEAD><TITLE>Gopher Menu</TITLE></HEAD>\n"
+		"<BODY><H1>Gopher Menu</H1>\n<PRE>\n");
 	data->HTML_header_added = 1;
     }
     while ((pos != NULL) && (pos < inbuf + len)) {
@@ -936,7 +936,7 @@ gopherSendRequest(int fd, GopherStateData * data)
 }
 
 int
-gopherStart(int unusedfd, char *url, StoreEntry * entry)
+gopherStart(int unusedfd, const char *url, StoreEntry * entry)
 {
     /* Create state structure. */
     int sock;
@@ -1,5 +1,5 @@
 /*
- * $Id: http.cc,v 1.92 1996/11/02 00:17:51 wessels Exp $
+ * $Id: http.cc,v 1.93 1996/11/04 18:12:43 wessels Exp $
  *
  * DEBUG: section 11    Hypertext Transfer Protocol (HTTP)
  * AUTHOR: Harvest Derived
@@ -125,7 +125,7 @@ static void httpCacheNegatively _PARAMS((StoreEntry *));
 static void httpReadReply _PARAMS((int fd, void *));
 static void httpSendComplete _PARAMS((int fd, char *, int, int, void *));
 static void httpSendRequest _PARAMS((int fd, void *));
-static void httpConnect _PARAMS((int fd, ipcache_addrs *, void *));
+static void httpConnect _PARAMS((int fd, const ipcache_addrs *, void *));
 static void httpConnectDone _PARAMS((int fd, int status, void *data));
 
 static void
@@ -144,7 +144,7 @@ httpStateFree(int fd, void *data)
 }
 
 int
-httpCachable(char *url, int method)
+httpCachable(const char *url, int method)
 {
     /* GET and HEAD are cachable. Others are not. */
     if (method != METHOD_GET && method != METHOD_HEAD)
@@ -212,7 +212,7 @@ httpCacheNegatively(StoreEntry * entry)
 
 /* Build a reply structure from HTTP reply headers */
 void
-httpParseHeaders(char *buf, struct _http_reply *reply)
+httpParseHeaders(const char *buf, struct _http_reply *reply)
 {
     char *headers = NULL;
     char *t = NULL;
@@ -285,7 +285,7 @@ httpParseHeaders(char *buf, struct _http_reply *reply)
 
 
 void
-httpProcessReplyHeader(HttpStateData * httpState, char *buf, int size)
+httpProcessReplyHeader(HttpStateData * httpState, const char *buf, int size)
 {
     char *t = NULL;
     StoreEntry *entry = httpState->entry;
@@ -554,12 +554,12 @@ httpSendRequest(int fd, void *data)
     char *t = NULL;
     char *post_buf = NULL;
     int post_buf_sz = 0;
-    static char *crlf = "\r\n";
+    const char *const crlf = "\r\n";
     int len = 0;
     int buflen;
     int cfd = -1;
     request_t *req = httpState->request;
-    char *Method = RequestMethodStr[req->method];
+    const char *Method = RequestMethodStr[req->method];
     int buftype = 0;
     StoreEntry *entry = httpState->entry;
     int saw_host = 0;
@@ -657,7 +657,7 @@ httpSendRequest(int fd, void *data)
 }
 
 int
-proxyhttpStart(edge * e, char *url, StoreEntry * entry)
+proxyhttpStart(edge *e, const char *url, StoreEntry *entry)
 {
     int sock;
     HttpStateData *httpState = NULL;
@@ -706,7 +706,7 @@ proxyhttpStart(edge * e, char *url, StoreEntry * entry)
 }
 
 static void
-httpConnect(int fd, ipcache_addrs * ia, void *data)
+httpConnect(int fd, const ipcache_addrs *ia, void *data)
 {
     HttpStateData *httpState = data;
     request_t *request = httpState->request;
@@ -1,6 +1,6 @@
 
 /*
- * $Id: icmp.cc,v 1.25 1996/10/31 18:30:17 wessels Exp $
+ * $Id: icmp.cc,v 1.26 1996/11/04 18:12:44 wessels Exp $
  *
  * DEBUG: section 37    ICMP Routines
  * AUTHOR: Duane Wessels
@@ -55,10 +55,10 @@ static void icmpQueueSend _PARAMS((pingerEchoData * pkt,
 	int len,
 	void          (*free_func) _PARAMS((void *))));
 static void icmpSend _PARAMS((int fd, icmpQueueData * queue));
-static void icmpHandleSourcePing _PARAMS((struct sockaddr_in * from, char *buf));
+static void icmpHandleSourcePing _PARAMS((const struct sockaddr_in * from, const char *buf));
 
 static void
-icmpSendEcho(struct in_addr to, int opcode, char *payload, int len)
+icmpSendEcho(struct in_addr to, int opcode, const char *payload, int len)
 {
     pingerEchoData *pecho = xcalloc(1, sizeof(pingerEchoData));
     if (payload && len == 0)
@@ -182,12 +182,12 @@ icmpSend(int fd, icmpQueueData * queue)
 }
 
 static void
-icmpHandleSourcePing(struct sockaddr_in *from, char *buf)
+icmpHandleSourcePing(const struct sockaddr_in *from, const char *buf)
 {
-    char *key;
+    const char *key;
     StoreEntry *entry;
     icp_common_t header;
-    char *url;
+    const char *url;
     xmemcpy(&header, buf, sizeof(icp_common_t));
     url = buf + sizeof(icp_common_t);
     if (neighbors_do_private_keys && header.reqnum) {
@@ -222,7 +222,7 @@ icmpPing(struct in_addr to)
 }
 
 void
-icmpSourcePing(struct in_addr to, icp_common_t * header, char *url)
+icmpSourcePing(struct in_addr to, const icp_common_t *header, const char *url)
 {
 #if USE_ICMP
     char *payload;
@@ -242,7 +242,7 @@ icmpSourcePing(struct in_addr to, icp_common_t * header, char *url)
 }
 
 void
-icmpDomainPing(struct in_addr to, char *domain)
+icmpDomainPing(struct in_addr to, const char *domain)
 {
 #if USE_ICMP
     debug(37, 3, "icmpDomainPing: '%s'\n", domain);
@@ -1,5 +1,5 @@
 /*
- * $Id: ipcache.cc,v 1.81 1996/11/01 18:19:08 wessels Exp $
+ * $Id: ipcache.cc,v 1.82 1996/11/04 18:12:49 wessels Exp $
  *
  * DEBUG: section 14    IP Cache
  * AUTHOR: Harvest Derived
@@ -138,24 +138,24 @@ static int ipcache_testname _PARAMS((void));
 static int ipcache_compareLastRef _PARAMS((ipcache_entry **, ipcache_entry **));
 static int ipcache_reverseLastRef _PARAMS((ipcache_entry **, ipcache_entry **));
 static int ipcache_dnsHandleRead _PARAMS((int, dnsserver_t *));
-static ipcache_entry *ipcache_parsebuffer _PARAMS((char *buf, dnsserver_t *));
+static ipcache_entry *ipcache_parsebuffer _PARAMS((const char *buf, dnsserver_t *));
 static void ipcache_release _PARAMS((ipcache_entry *));
 static ipcache_entry *ipcache_GetFirst _PARAMS((void));
 static ipcache_entry *ipcache_GetNext _PARAMS((void));
-static ipcache_entry *ipcache_create _PARAMS((char *name));
+static ipcache_entry *ipcache_create _PARAMS((const char *name));
 static void ipcache_add_to_hash _PARAMS((ipcache_entry *));
 static void ipcache_call_pending _PARAMS((ipcache_entry *));
-static ipcache_entry *ipcacheAddNew _PARAMS((char *, struct hostent *, ipcache_status_t));
-static void ipcacheAddHostent _PARAMS((ipcache_entry *, struct hostent *));
+static ipcache_entry *ipcacheAddNew _PARAMS((const char *, const struct hostent *, ipcache_status_t));
+static void ipcacheAddHostent _PARAMS((ipcache_entry *, const struct hostent *));
 static int ipcacheHasPending _PARAMS((ipcache_entry *));
-static ipcache_entry *ipcache_get _PARAMS((char *));
-static void dummy_handler _PARAMS((int, ipcache_addrs *, void *));
+static ipcache_entry *ipcache_get _PARAMS((const char *));
+static void dummy_handler _PARAMS((int, const ipcache_addrs *, void *));
 static int ipcacheExpiredEntry _PARAMS((ipcache_entry *));
 static void ipcacheAddPending _PARAMS((ipcache_entry *, int fd, IPH, void *));
 static void ipcacheEnqueue _PARAMS((ipcache_entry *));
 static void *ipcacheDequeue _PARAMS((void));
 static void ipcache_dnsDispatch _PARAMS((dnsserver_t *, ipcache_entry *));
-static ipcache_addrs *ipcacheCheckNumeric _PARAMS((char *name));
+static ipcache_addrs *ipcacheCheckNumeric _PARAMS((const char *name));
 static void ipcacheStatPrint _PARAMS((ipcache_entry *, StoreEntry *));
 static void ipcacheUnlockEntry _PARAMS((ipcache_entry *));
 static void ipcacheLockEntry _PARAMS((ipcache_entry *));
@@ -261,7 +261,7 @@ ipcache_release(ipcache_entry * i)
 
 /* return match for given name */
 static ipcache_entry *
-ipcache_get(char *name)
+ipcache_get(const char *name)
 {
     hash_link *e;
     static ipcache_entry *i;
@@ -383,7 +383,7 @@ ipcache_purgelru(void)
 
 /* create blank ipcache_entry */
 static ipcache_entry *
-ipcache_create(char *name)
+ipcache_create(const char *name)
 {
     static ipcache_entry *new;
     if (meta_data.ipcache_count > ipcache_high) {
@@ -409,7 +409,7 @@ ipcache_add_to_hash(ipcache_entry * i)
 }
 
 static void
-ipcacheAddHostent(ipcache_entry * i, struct hostent *hp)
+ipcacheAddHostent(ipcache_entry * i, const struct hostent *hp)
 {
     int addr_count = 0;
     int k;
@@ -426,7 +426,7 @@ ipcacheAddHostent(ipcache_entry * i, struct hostent *hp)
 }
 
 static ipcache_entry *
-ipcacheAddNew(char *name, struct hostent *hp, ipcache_status_t status)
+ipcacheAddNew(const char *name, const struct hostent *hp, ipcache_status_t status)
 {
     ipcache_entry *i;
     if (ipcache_get(name))
@@ -471,7 +471,7 @@ ipcache_call_pending(ipcache_entry * i)
 }
 
 static ipcache_entry *
-ipcache_parsebuffer(char *inbuf, dnsserver_t * dnsData)
+ipcache_parsebuffer(const char *inbuf, dnsserver_t * dnsData)
 {
     char *buf = xstrdup(inbuf);
     char *token;
@@ -635,7 +635,7 @@ ipcacheAddPending(ipcache_entry * i, int fd, IPH handler, void *handlerData)
 }
 
 void
-ipcache_nbgethostbyname(char *name, int fd, IPH handler, void *handlerData)
+ipcache_nbgethostbyname(const char *name, int fd, IPH handler, void *handlerData)
 {
     ipcache_entry *i = NULL;
     dnsserver_t *dnsData = NULL;
@@ -764,7 +764,7 @@ ipcache_init(void)
 /* clean up the pending entries in dnsserver */
 /* return 1 if we found the host, 0 otherwise */
 int
-ipcache_unregister(char *name, int fd)
+ipcache_unregister(const char *name, int fd)
 {
     ipcache_entry *i = NULL;
     struct _ip_pending *p = NULL;
@@ -786,12 +786,12 @@ ipcache_unregister(char *name, int fd)
     return n;
 }
 
-ipcache_addrs *
-ipcache_gethostbyname(char *name, int flags)
+const ipcache_addrs *
+ipcache_gethostbyname(const char *name, int flags)
 {
     ipcache_entry *i = NULL;
     ipcache_addrs *addrs;
-    struct hostent *hp;
+    const struct hostent *hp;
 
     if (!name)
 	fatal_dump("ipcache_gethostbyname: NULL name");
@@ -923,7 +923,7 @@ stat_ipcache_get(StoreEntry * sentry)
 }
 
 static void
-dummy_handler(int u1, ipcache_addrs * addrs, void *u3)
+dummy_handler(int u1, const ipcache_addrs *addrs, void *u3)
 {
     return;
 }
@@ -941,7 +941,7 @@ ipcacheHasPending(ipcache_entry * i)
 }
 
 void
-ipcacheReleaseInvalid(char *name)
+ipcacheReleaseInvalid(const char *name)
 {
     ipcache_entry *i;
     if ((i = ipcache_get(name)) == NULL)
@@ -952,7 +952,7 @@ ipcacheReleaseInvalid(char *name)
 }
 
 void
-ipcacheInvalidate(char *name)
+ipcacheInvalidate(const char *name)
 {
     ipcache_entry *i;
     if ((i = ipcache_get(name)) == NULL)
@@ -964,7 +964,7 @@ ipcacheInvalidate(char *name)
 }
 
 static ipcache_addrs *
-ipcacheCheckNumeric(char *name)
+ipcacheCheckNumeric(const char *name)
 {
     unsigned int ip;
     /* check if it's already a IP address in text form. */
@@ -1000,7 +1000,7 @@ ipcacheUnlockEntry(ipcache_entry * i)
 }
 
 void
-ipcacheCycleAddr(char *name)
+ipcacheCycleAddr(const char *name)
 {
     ipcache_entry *i;
     if ((i = ipcache_get(name)) == NULL)
@@ -1012,7 +1012,7 @@ ipcacheCycleAddr(char *name)
 }
 
 void
-ipcacheRemoveBadAddr(char *name, struct in_addr addr)
+ipcacheRemoveBadAddr(const char *name, struct in_addr addr)
 {
     ipcache_entry *i;
     ipcache_addrs *ia;
@@ -1,5 +1,5 @@
 /*
- * $Id: main.cc,v 1.105 1996/10/25 16:43:25 wessels Exp $
+ * $Id: main.cc,v 1.106 1996/11/04 18:12:51 wessels Exp $
  *
  * DEBUG: section 1     Startup and Main Loop
  * AUTHOR: Harvest Derived
@@ -126,15 +126,15 @@ int vhost_mode = 0;
 volatile int unbuffered_logs = 1;	/* debug and hierarchy unbuffered by default */
 volatile int shutdown_pending = 0;	/* set by SIGTERM handler (shut_down()) */
 volatile int reread_pending = 0;	/* set by SIGHUP handler */
-char version_string[] = SQUID_VERSION;
-char appname[] = "squid";
-char localhost[] = "127.0.0.1";
+const char *const version_string = SQUID_VERSION;
+const char *const appname = "squid";
+const char *const localhost = "127.0.0.1";
 struct in_addr local_addr;
-char dash_str[] = "-";
-char null_string[] = "";
+const char *const dash_str = "-";
+const char *const null_string = "";
 
 /* for error reporting from xmalloc and friends */
-extern void (*failure_notify) _PARAMS((char *));
+extern void (*failure_notify) _PARAMS((const char *));
 
 static volatile int rotate_pending = 0;		/* set by SIGUSR1 handler */
 static int httpPortNumOverride = 1;
@@ -164,26 +164,26 @@ extern int store_maintain_rate;
 static void
 usage(void)
 {
-    fprintf(stderr, "\
-Usage: %s [-hsvzCDFRUVY] [-f config-file] [-[au] port] [-k signal]\n\
-       -a port   Specify ASCII port number (default: %d).\n\
-       -f file   Use given config-file instead of\n\
-                 %s\n\
-       -h        Print help message.\n\
-       -i        Disable IP caching.\n\
-       -k reconfigure|rotate|shutdown|interrupt|kill|debug|check\n\
-		 Send signal to running copy and exit.\n\
-       -s        Enable logging to syslog.\n\
-       -u port   Specify ICP port number (default: %d), disable with 0.\n\
-       -v        Print version.\n\
-       -z        Zap disk storage -- deletes all objects in disk cache.\n\
-       -C        Do not catch fatal signals.\n\
-       -D        Disable initial DNS tests.\n\
-       -F        Foreground fast store rebuild.\n\
-       -R        Do not set REUSEADDR on port.\n\
-       -U        Unlink expired objects on reload.\n\
-       -V        Virtual host httpd-accelerator.\n\
-       -Y        Only return UDP_HIT or UDP_RELOADING during fast reload.\n",
+    fprintf(stderr,
+	"Usage: %s [-hsvzCDFRUVY] [-f config-file] [-[au] port] [-k signal]\n"
+	"       -a port   Specify ASCII port number (default: %d).\n"
+	"       -f file   Use given config-file instead of\n"
+	"                 %s\n"
+	"       -h        Print help message.\n"
+	"       -i        Disable IP caching.\n"
+	"       -k reconfigure|rotate|shutdown|interrupt|kill|debug|check\n"
+	"                 Send signal to running copy and exit.\n"
+	"       -s        Enable logging to syslog.\n"
+	"       -u port   Specify ICP port number (default: %d), disable with 0.\n"
+	"       -v        Print version.\n"
+	"       -z        Zap disk storage -- deletes all objects in disk cache.\n"
+	"       -C        Do not catch fatal signals.\n"
+	"       -D        Disable initial DNS tests.\n"
+	"       -F        Foreground fast store rebuild.\n"
+	"       -R        Do not set REUSEADDR on port.\n"
+	"       -U        Unlink expired objects on reload.\n"
+	"       -V        Virtual host httpd-accelerator.\n"
+	"       -Y        Only return UDP_HIT or UDP_RELOADING during fast reload.\n",
 	appname, CACHE_HTTP_PORT, DefaultConfigFile, CACHE_ICP_PORT);
     exit(1);
 }
@@ -1,5 +1,5 @@
 /*
- * $Id: mime.cc,v 1.17 1996/10/25 02:15:19 wessels Exp $
+ * $Id: mime.cc,v 1.18 1996/11/04 18:12:52 wessels Exp $
  *
  * DEBUG: section 25    MIME Parsing
  * AUTHOR: Harvest Derived
@@ -109,10 +109,10 @@
 #define GET_HDR_SZ 1024
 
 char *
-mime_get_header(char *mime, char *name)
+mime_get_header(const char *mime, const char *name)
 {
     LOCAL_ARRAY(char, header, GET_HDR_SZ);
-    char *p = NULL;
+    const char *p = NULL;
     char *q = NULL;
     char got = 0;
     int namelen = strlen(name);
@@ -152,10 +152,10 @@ mime_get_header(char *mime, char *name)
 /* need to take the lowest, non-zero pointer to the end of the headers.
  * The headers end at the first empty line */
 char *
-mime_headers_end(char *mime)
+mime_headers_end(const char *mime)
 {
-    char *p1, *p2;
-    char *end = NULL;
+    const char *p1, *p2;
+    const char *end = NULL;
 
     p1 = strstr(mime, "\r\n\r\n");
     p2 = strstr(mime, "\n\n");
@@ -167,13 +167,13 @@ mime_headers_end(char *mime)
     if (end)
 	end += (end == p1 ? 4 : 2);
 
-    return end;
+    return (char *) end;
 }
 
 int
-mime_headers_size(char *mime)
+mime_headers_size(const char *mime)
 {
-    char *end;
+    const char *end;
 
     end = mime_headers_end(mime);
 
@@ -183,8 +183,8 @@ mime_headers_size(char *mime)
 	return 0;
 }
 
-ext_table_entry *
-mime_ext_to_type(char *extension)
+const ext_table_entry *
+mime_ext_to_type(const char *extension)
 {
     int i;
     int low;
@@ -224,7 +224,7 @@ mime_ext_to_type(char *extension)
  *  returns non-zero on error, or 0 on success.
  */
 int
-mk_mime_hdr(char *result, char *type, int size, time_t ttl, time_t lmt)
+mk_mime_hdr(char *result, const char *type, int size, time_t ttl, time_t lmt)
 {
     time_t expiretime;
     time_t t;
@@ -1,5 +1,5 @@
 /*
- * $Id: neighbors.cc,v 1.77 1996/11/01 06:52:13 wessels Exp $
+ * $Id: neighbors.cc,v 1.78 1996/11/04 18:12:53 wessels Exp $
  *
  * DEBUG: section 15    Neighbor Routines
  * AUTHOR: Harvest Derived
@@ -105,18 +105,18 @@
 
 #include "squid.h"
 
-static int edgeWouldBePinged _PARAMS((edge *, request_t *));
+static int edgeWouldBePinged _PARAMS((const edge *, request_t *));
 static void neighborRemove _PARAMS((edge *));
-static edge *whichEdge _PARAMS((struct sockaddr_in * from));
-static void neighborAlive _PARAMS((edge *, MemObject *, icp_common_t *));
+static edge *whichEdge _PARAMS((const struct sockaddr_in * from));
+static void neighborAlive _PARAMS((edge *, const MemObject *, const icp_common_t *));
 static void neighborCountIgnored _PARAMS((edge * e, icp_opcode op_unused));
 
 static neighbors *friends = NULL;
 static struct neighbor_cf *Neighbor_cf = NULL;
 static icp_common_t echo_hdr;
 static u_short echo_port;
 
-char *hier_strings[] =
+const char *hier_strings[] =
 {
     "NONE",
     "DIRECT",
@@ -137,7 +137,7 @@ char *hier_strings[] =
 
 
 static edge *
-whichEdge(struct sockaddr_in *from)
+whichEdge(const struct sockaddr_in *from)
 {
     int j;
     u_short port = ntohs(from->sin_port);
@@ -155,7 +155,7 @@ whichEdge(struct sockaddr_in *from)
 }
 
 void
-hierarchyNote(request_t * request, hier_code code, int timeout, char *cache_host)
+hierarchyNote(request_t *request, hier_code code, int timeout, const char *cache_host)
 {
     if (request) {
 	request->hierarchy.code = code;
@@ -165,9 +165,9 @@ hierarchyNote(request_t * request, hier_code code, int timeout, char *cache_host
 }
 
 static neighbor_t
-neighborType(edge * e, request_t * request)
+neighborType(const edge *e, const request_t *request)
 {
-    dom_list *d = NULL;
+    const dom_list *d = NULL;
     for (d = e->domains; d; d = d->next) {
 	if (matchDomainName(d->domain, request->host))
 	    if (d->neighbor_type != EDGE_NONE)
@@ -177,11 +177,11 @@ neighborType(edge * e, request_t * request)
 }
 
 static int
-edgeWouldBePinged(edge * e, request_t * request)
+edgeWouldBePinged(const edge *e, request_t *request)
 {
-    dom_list *d = NULL;
+    const dom_list *d = NULL;
     int do_ping = 1;
-    struct _acl_list *a = NULL;
+    const struct _acl_list *a = NULL;
     aclCheck_t checklist;
 
     if (BIT_TEST(request->flags, REQ_NOCACHE))
@@ -318,7 +318,7 @@ neighbors_open(int fd)
     struct sockaddr_in name;
     struct sockaddr_in *ap;
     int len = sizeof(struct sockaddr_in);
-    ipcache_addrs *ia = NULL;
+    const ipcache_addrs *ia = NULL;
     edge *e = NULL;
     edge *next = NULL;
     edge **E = NULL;
@@ -391,7 +391,7 @@ neighborsUdpPing(protodispatch_data * proto)
     char *host = proto->request->host;
     char *url = proto->url;
     StoreEntry *entry = proto->entry;
-    ipcache_addrs *ia = NULL;
+    const ipcache_addrs *ia = NULL;
     struct sockaddr_in to_addr;
     edge *e = NULL;
     int i;
@@ -527,7 +527,7 @@ neighborsUdpPing(protodispatch_data * proto)
 }
 
 static void
-neighborAlive(edge * e, MemObject * mem, icp_common_t * header)
+neighborAlive(edge *e, const MemObject *mem, const icp_common_t *header)
 {
     int rtt;
     int n;
@@ -566,7 +566,7 @@ neighborCountIgnored(edge * e, icp_opcode op_unused)
  * If a hit process is already started, then sobeit
  */
 void
-neighborsUdpAck(int fd, char *url, icp_common_t * header, struct sockaddr_in *from, StoreEntry * entry, char *data, int data_sz)
+neighborsUdpAck(int fd, const char *url, icp_common_t *header, const struct sockaddr_in *from, StoreEntry *entry, char *data, int data_sz)
 {
     edge *e = NULL;
     MemObject *mem = entry->mem_obj;
@@ -719,7 +719,7 @@ neighborsUdpAck(int fd, char *url, icp_common_t * header, struct sockaddr_in *fr
 }
 
 void
-neighbors_cf_add(char *host, char *type, int http_port, int icp_port, int options, int weight, int mcast_ttl)
+neighbors_cf_add(const char *host, const char *type, int http_port, int icp_port, int options, int weight, int mcast_ttl)
 {
     struct neighbor_cf *t, *u;
 
@@ -742,7 +742,7 @@ neighbors_cf_add(char *host, char *type, int http_port, int icp_port, int option
 }
 
 void
-neighbors_cf_domain(char *host, char *domain, neighbor_t type)
+neighbors_cf_domain(const char *host, const char *domain, neighbor_t type)
 {
     struct neighbor_cf *t = NULL;
     dom_list *l = NULL;
@@ -771,7 +771,7 @@ neighbors_cf_domain(char *host, char *domain, neighbor_t type)
 }
 
 void
-neighbors_cf_acl(char *host, char *aclname)
+neighbors_cf_acl(const char *host, const char *aclname)
 {
     struct neighbor_cf *t = NULL;
     struct _acl_list *L = NULL;
@@ -819,7 +819,7 @@ neighbors_init(void)
 {
     struct neighbor_cf *t = NULL;
     struct neighbor_cf *next = NULL;
-    char *me = getMyHostname();
+    const char *me = getMyHostname();
     edge *e = NULL;
 
     debug(15, 1, "neighbors_init: Initializing Neighbors...\n");
@@ -872,7 +872,7 @@ neighbors_init(void)
 }
 
 edge *
-neighborFindByName(char *name)
+neighborFindByName(const char *name)
 {
     edge *e = NULL;
     for (e = friends->edges_head; e; e = e->next) {
@@ -16,9 +16,9 @@ static void netdbRelease _PARAMS((netdbEntry * n));
 static netdbEntry *netdbGetFirst _PARAMS((HashID table));
 static netdbEntry *netdbGetNext _PARAMS((HashID table));
 static void netdbHashInsert _PARAMS((netdbEntry * n, struct in_addr addr));
-static void netdbHashDelete _PARAMS((char *key));
-static void netdbHashLink _PARAMS((netdbEntry * n, char *hostname));
-static void netdbHashUnlink _PARAMS((char *key));
+static void netdbHashDelete _PARAMS((const char *key));
+static void netdbHashLink _PARAMS((netdbEntry * n, const char *hostname));
+static void netdbHashUnlink _PARAMS((const char *key));
 static void netdbPurgeLRU _PARAMS((void));
 
 static void
@@ -31,7 +31,7 @@ netdbHashInsert(netdbEntry * n, struct in_addr addr)
 }
 
 static void
-netdbHashDelete(char *key)
+netdbHashDelete(const char *key)
 {
     hash_link *hptr = hash_lookup(addr_table, key);
     if (hptr == NULL) {
@@ -43,7 +43,7 @@ netdbHashDelete(char *key)
 }
 
 static void
-netdbHashLink(netdbEntry * n, char *hostname)
+netdbHashLink(netdbEntry * n, const char *hostname)
 {
     struct _net_db_name *x = xcalloc(1, sizeof(struct _net_db_name));
     x->name = xstrdup(hostname);
@@ -55,7 +55,7 @@ netdbHashLink(netdbEntry * n, char *hostname)
 }
 
 static void
-netdbHashUnlink(char *key)
+netdbHashUnlink(const char *key)
 {
     netdbEntry *n;
     hash_link *hptr = hash_lookup(host_table, key);
@@ -70,7 +70,7 @@ netdbHashUnlink(char *key)
 }
 
 static netdbEntry *
-netdbLookupHost(char *key)
+netdbLookupHost(const char *key)
 {
     hash_link *hptr = hash_lookup(host_table, key);
     return hptr ? (netdbEntry *) hptr->item : NULL;
@@ -152,7 +152,7 @@ netdbLookupAddr(struct in_addr addr)
 }
 
 static netdbEntry *
-netdbAdd(struct in_addr addr, char *hostname)
+netdbAdd(struct in_addr addr, const char *hostname)
 {
     netdbEntry *n;
     if (meta_data.netdb_addrs > NETDB_HIGH_MARK)
@@ -166,7 +166,7 @@ netdbAdd(struct in_addr addr, char *hostname)
 }
 
 static void
-netdbSendPing(int fdunused, ipcache_addrs * ia, void *data)
+netdbSendPing(int fdunused, const ipcache_addrs *ia, void *data)
 {
     struct in_addr addr;
     char *hostname = data;
@@ -220,13 +220,13 @@ void
 netdbInit(void)
 {
 #if USE_ICMP
-    addr_table = hash_create((int (*)_PARAMS((char *, char *))) strcmp, 229, hash_string);
-    host_table = hash_create((int (*)_PARAMS((char *, char *))) strcmp, 467, hash_string);
+    addr_table = hash_create((int (*)_PARAMS((const char *, const char *))) strcmp, 229, hash_string);
+    host_table = hash_create((int (*)_PARAMS((const char *, const char *))) strcmp, 467, hash_string);
 #endif
 }
 
 void
-netdbPingSite(char *hostname)
+netdbPingSite(const char *hostname)
 {
 #if USE_ICMP
     netdbEntry *n;
@@ -241,7 +241,7 @@ netdbPingSite(char *hostname)
 }
 
 void
-netdbHandlePingReply(struct sockaddr_in *from, int hops, int rtt)
+netdbHandlePingReply(const struct sockaddr_in *from, int hops, int rtt)
 {
 #if USE_ICMP
     netdbEntry *n;
@@ -330,37 +330,34 @@ netdbDump(StoreEntry * sentry)
     struct _net_db_name *x;
     int k;
     int i;
-    storeAppendPrintf(sentry, "{Network DB Statistics:\n");
-    */
-} */
-
-storeAppendPrintf(sentry, "{%-16.16s %9s %7s %5s %s}\n",
-    "Network",
-    "recv/sent",
-    "RTT",
-    "Hops",
-    "Hostnames");
-list = xcalloc(meta_data.netdb_addrs, sizeof(netdbEntry *));
-i = 0;
-for (n = netdbGetFirst(addr_table); n; n = netdbGetNext(addr_table))
-    *(list + i++) = n;
-qsort((char *) list,
-    i,
-    sizeof(netdbEntry *),
-    (QS) sortByHops);
-for (k = 0; k < i; k++) {
-    n = *(list + k);
-    storeAppendPrintf(sentry, "{%-16.16s %4d/%4d %7.1f %5.1f",	/* } */
-	n->network,
-	n->pings_recv,
-	n->pings_sent,
-	n->rtt,
-	n->hops);
-    for (x = n->hosts; x; x = x->next)
-	storeAppendPrintf(sentry, " %s", x->name);
+    storeAppendPrintf(sentry, "{Network DB Statistics:\n");	/* } */
+    storeAppendPrintf(sentry, "{%-16.16s %9s %7s %5s %s}\n",
+	"Network",
+	"recv/sent",
+	"RTT",
+	"Hops",
+	"Hostnames");
+    list = xcalloc(meta_data.netdb_addrs, sizeof(netdbEntry *));
+    i = 0;
+    for (n = netdbGetFirst(addr_table); n; n = netdbGetNext(addr_table))
+	*(list + i++) = n;
+    qsort((char *) list,
+	i,
+	sizeof(netdbEntry *),
+	(QS) sortByHops);
+    for (k = 0; k < i; k++) {
+	n = *(list + k);
+	storeAppendPrintf(sentry, "{%-16.16s %4d/%4d %7.1f %5.1f",	/* } */
+	    n->network,
+	    n->pings_recv,
+	    n->pings_sent,
+	    n->rtt,
+	    n->hops);
+	for (x = n->hosts; x; x = x->next)
+	    storeAppendPrintf(sentry, " %s", x->name);
+	storeAppendPrintf(sentry, close_bracket);
+    }
     storeAppendPrintf(sentry, close_bracket);
-}
-storeAppendPrintf(sentry, close_bracket);
-xfree(list);
+    xfree(list);
 #endif
 }
@@ -1,6 +1,6 @@
 
 /*
- * $Id: pinger.cc,v 1.12 1996/10/25 17:34:04 wessels Exp $
+ * $Id: pinger.cc,v 1.13 1996/11/04 18:12:56 wessels Exp $
  *
  * DEBUG: section 37    ICMP Routines
  * AUTHOR: Duane Wessels
@@ -35,8 +35,8 @@
 /* Junk so we can link with debug.o */
 int opt_syslog_enable = 0;
 volatile int unbuffered_logs = 1;
-char w_space[] = " \t\n\r";
-char appname[] = "pinger";
+const char *const w_space = " \t\n\r";
+const char *const appname = "pinger";
 struct timeval current_time;
 time_t squid_curtime;
 struct SquidConfig Config;
@@ -85,7 +85,7 @@ int icmp_sock = -1;
 int icmp_ident = -1;
 int icmp_pkts_sent = 0;
 
-static char *icmpPktStr[] =
+static const char *icmpPktStr[] =
 {
     "Echo Reply",
     "ICMP 1",
@@ -330,7 +330,7 @@ main(int argc, char *argv[])
     fd_set R;
     int x;
     struct timeval tv;
-    char *debug_args = "ALL,1";
+    const char *debug_args = "ALL,1";
     char *t;
     time_t last_check_time = 0;
 
@@ -1,5 +1,5 @@
 /*
- * $Id: redirect.cc,v 1.26 1996/10/13 06:19:49 wessels Exp $
+ * $Id: redirect.cc,v 1.27 1996/11/04 18:12:59 wessels Exp $
  *
  * DEBUG: section 29    Redirector
  * AUTHOR: Duane Wessels
@@ -39,8 +39,8 @@ typedef struct {
     void *data;
     char *orig_url;
     struct in_addr client_addr;
-    char *client_ident;
-    char *method_s;
+    const char *client_ident;
+    const char *method_s;
     RH handler;
 } redirectStateData;
 
@@ -71,7 +71,7 @@ struct redirectQueueData {
 };
 
 static redirector_t *GetFirstAvailable _PARAMS((void));
-static int redirectCreateRedirector _PARAMS((char *command));
+static int redirectCreateRedirector _PARAMS((const char *command));
 static int redirectHandleRead _PARAMS((int, redirector_t *));
 static redirectStateData *Dequeue _PARAMS((void));
 static void Enqueue _PARAMS((redirectStateData *));
@@ -84,7 +84,7 @@ static struct redirectQueueData *redirectQueueHead = NULL;
 static struct redirectQueueData **redirectQueueTailP = &redirectQueueHead;
 
 static int
-redirectCreateRedirector(char *command)
+redirectCreateRedirector(const char *command)
 {
     pid_t pid;
     struct sockaddr_in S;
@@ -265,7 +265,7 @@ static void
 redirectDispatch(redirector_t * redirect, redirectStateData * r)
 {
     char *buf = NULL;
-    char *fqdn = NULL;
+    const char *fqdn = NULL;
     int len;
     if (r->handler == NULL) {
 	debug(29, 1, "redirectDispatch: skipping '%s' because no handler\n",
@@ -428,7 +428,7 @@ redirectShutdownServers(void)
 
 
 int
-redirectUnregister(char *url, int fd)
+redirectUnregister(const char *url, int fd)
 {
     redirector_t *redirect = NULL;
     redirectStateData *r = NULL;
@@ -1,6 +1,6 @@
 
 /*
- * $Id: refresh.cc,v 1.3 1996/11/04 17:02:49 wessels Exp $
+ * $Id: refresh.cc,v 1.4 1996/11/04 18:13:00 wessels Exp $
  *
  * DEBUG: section 22    Refresh Calculation
  * AUTHOR: Harvest Derived
@@ -78,7 +78,7 @@ refreshFreeMemory(void)
 }
 
 void
-refreshAddToList(char *pattern, int opts, time_t min, int pct, time_t max)
+refreshAddToList(const char *pattern, int opts, time_t min, int pct, time_t max)
 {
     refresh_t *t;
     regex_t comp;
@@ -111,13 +111,13 @@ refreshAddToList(char *pattern, int opts, time_t min, int pct, time_t max)
  *     return 1 if its time to revalidate this entry, 0 otherwise
  */
 int
-refreshCheck(StoreEntry * entry, request_t * request_unused)
+refreshCheck(const StoreEntry *entry, const request_t *request_unused)
 {
     refresh_t *R;
     time_t min = REFRESH_DEFAULT_MIN;
     int pct = REFRESH_DEFAULT_PCT;
     time_t max = REFRESH_DEFAULT_MAX;
-    char *pattern = ".";
+    const char *pattern = ".";
     time_t age;
     int factor;
     debug(22, 3, "refreshCheck: '%s'\n", entry->url);
@@ -1,6 +1,6 @@
 
 /*
- * $Id: send-announce.cc,v 1.21 1996/10/11 23:11:18 wessels Exp $
+ * $Id: send-announce.cc,v 1.22 1996/11/04 18:13:01 wessels Exp $
  *
  * DEBUG: section 27    Cache Announcer
  * AUTHOR: Duane Wessels
@@ -37,7 +37,7 @@ send_announce(void)
     LOCAL_ARRAY(char, tbuf, 256);
     LOCAL_ARRAY(char, sndbuf, BUFSIZ);
     icpUdpData *qdata = NULL;
-    ipcache_addrs *ia = NULL;
+    const ipcache_addrs *ia = NULL;
     char *host = NULL;
     char *file = NULL;
     u_short port;
@@ -1,6 +1,6 @@
 
 /*
- * $Id: squid.h,v 1.65 1996/11/02 00:17:53 wessels Exp $
+ * $Id: squid.h,v 1.66 1996/11/04 18:13:02 wessels Exp $
  *
  * AUTHOR: Duane Wessels
  *
@@ -28,6 +28,9 @@
  *  
  */
 
+#ifndef SQUID_H
+#define SQUID_H
+
 #include "config.h"
 
 #if SQUID_FD_SETSIZE > 256
@@ -286,10 +289,10 @@ extern int opt_syslog_enable;	/* main.c */
 extern int opt_catch_signals;	/* main.c */
 extern int opt_no_ipcache;	/* main.c */
 extern int vhost_mode;		/* main.c */
-extern char version_string[];	/* main.c */
-extern char appname[];		/* main.c */
+extern const char *const version_string;	/* main.c */
+extern const char *const appname;		/* main.c */
 extern struct in_addr local_addr;	/* main.c */
-extern char localhost[];
+extern const char *const localhost;
 extern struct in_addr any_addr;	/* comm.c */
 extern struct in_addr no_addr;	/* comm.c */
 extern int opt_udp_hit_obj;	/* main.c */
@@ -301,12 +304,14 @@ extern int opt_forwarded_for;	/* main.c */
 
 #define  CONNECT_PORT        443
 
-extern int objcacheStart _PARAMS((int, char *, StoreEntry *));
+extern int objcacheStart _PARAMS((int, const char *, StoreEntry *));
 extern void send_announce _PARAMS((void));
-extern int sslStart _PARAMS((int fd, char *, request_t *, char *, int *sz));
-extern char *storeToString _PARAMS((StoreEntry *));
+extern int sslStart _PARAMS((int fd, const char *, request_t *, char *, int *sz));
+extern const char *storeToString _PARAMS((const StoreEntry *));
 extern void timestampsSet _PARAMS((StoreEntry *));
-extern int waisStart _PARAMS((int, char *, method_t, char *, StoreEntry *));
+extern int waisStart _PARAMS((int, const char *, method_t, char *, StoreEntry *));
 extern void storeDirClean _PARAMS((void));
-extern char dash_str[];
-extern char null_string[];
+extern const char *const dash_str;
+extern const char *const null_string;
+
+#endif /* SQUID_H */
@@ -1,6 +1,6 @@
 
 /*
- * $Id: ssl.cc,v 1.22 1996/11/02 00:17:54 wessels Exp $
+ * $Id: ssl.cc,v 1.23 1996/11/04 18:13:03 wessels Exp $
  *
  * DEBUG: section 26    Secure Sockets Layer Proxy
  * AUTHOR: Duane Wessels
@@ -48,7 +48,7 @@ typedef struct {
     ConnectStateData connectState;
 } SslStateData;
 
-static char conn_established[] = "HTTP/1.0 200 Connection established\r\n\r\n";
+static const char *const conn_established = "HTTP/1.0 200 Connection established\r\n\r\n";
 
 static void sslLifetimeExpire _PARAMS((int fd, void *));
 static void sslReadTimeout _PARAMS((int fd, void *));
@@ -58,7 +58,7 @@ static void sslWriteServer _PARAMS((int fd, void *));
 static void sslWriteClient _PARAMS((int fd, void *));
 static void sslConnected _PARAMS((int fd, void *));
 static void sslProxyConnected _PARAMS((int fd, void *));
-static void sslConnect _PARAMS((int fd, ipcache_addrs *, void *));
+static void sslConnect _PARAMS((int fd, const ipcache_addrs *, void *));
 static void sslErrorComplete _PARAMS((int, char *, int, int, void *));
 static void sslClose _PARAMS((SslStateData * sslState));
 static void sslClientClosed _PARAMS((int fd, void *));
@@ -311,7 +311,7 @@ sslErrorComplete(int fd, char *buf, int size, int errflag, void *sslState)
 
 
 static void
-sslConnect(int fd, ipcache_addrs * ia, void *data)
+sslConnect(int fd, const ipcache_addrs *ia, void *data)
 {
     SslStateData *sslState = data;
     request_t *request = sslState->request;
@@ -389,7 +389,7 @@ sslConnectDone(int fd, int status, void *data)
 }
 
 int
-sslStart(int fd, char *url, request_t * request, char *mime_hdr, int *size_ptr)
+sslStart(int fd, const char *url, request_t *request, char *mime_hdr, int *size_ptr)
 {
     /* Create state structure. */
     SslStateData *sslState = NULL;
@@ -1,6 +1,6 @@
 
 /*
- * $Id: stat.cc,v 1.97 1996/11/01 21:25:06 wessels Exp $
+ * $Id: stat.cc,v 1.98 1996/11/04 18:13:05 wessels Exp $
  *
  * DEBUG: section 18    Cache Manager Statistics
  * AUTHOR: Harvest Derived
@@ -124,39 +124,39 @@ Meta_data meta_data;
 volatile unsigned long ntcpconn = 0;
 volatile unsigned long nudpconn = 0;
 struct _iostats IOStats;
-char *open_bracket = "{\n";
-char *close_bracket = "}\n";
+const char *const open_bracket = "{\n";
+const char *const close_bracket = "}\n";
 
 extern char *diskFileName _PARAMS((int));
 
 /* LOCALS */
-static char *describeStatuses _PARAMS((StoreEntry *));
-static char *describeFlags _PARAMS((StoreEntry *));
-static char *describeTimestamps _PARAMS((StoreEntry *));
+static const char *describeStatuses _PARAMS((const StoreEntry *));
+static const char *describeFlags _PARAMS((const StoreEntry *));
+static const char *describeTimestamps _PARAMS((const StoreEntry *));
 static void dummyhandler _PARAMS((cacheinfo *, StoreEntry *));
-static void info_get _PARAMS((cacheinfo *, StoreEntry *));
+static void info_get _PARAMS((const cacheinfo *, StoreEntry *));
 static void logReadEndHandler _PARAMS((int, int, log_read_data_t *));
 static void log_clear _PARAMS((cacheinfo *, StoreEntry *));
 static void log_disable _PARAMS((cacheinfo *, StoreEntry *));
 static void log_enable _PARAMS((cacheinfo *, StoreEntry *));
-static void log_get_start _PARAMS((cacheinfo *, StoreEntry *));
-static void log_status_get _PARAMS((cacheinfo *, StoreEntry *));
-static void parameter_get _PARAMS((cacheinfo *, StoreEntry *));
+static void log_get_start _PARAMS((const cacheinfo *, StoreEntry *));
+static void log_status_get _PARAMS((const cacheinfo *, StoreEntry *));
+static void parameter_get _PARAMS((const cacheinfo *, StoreEntry *));
 static void proto_count _PARAMS((cacheinfo *, protocol_t, log_type));
 static void proto_newobject _PARAMS((cacheinfo *, protocol_t, int, int));
 static void proto_purgeobject _PARAMS((cacheinfo *, protocol_t, int));
 static void proto_touchobject _PARAMS((cacheinfo *, protocol_t, int));
-static void server_list _PARAMS((cacheinfo *, StoreEntry *));
+static void server_list _PARAMS((const cacheinfo *, StoreEntry *));
 static void squidReadEndHandler _PARAMS((int, int, squid_read_data_t *));
-static void squid_get_start _PARAMS((cacheinfo *, StoreEntry *));
+static void squid_get_start _PARAMS((const cacheinfo *, StoreEntry *));
 static void statFiledescriptors _PARAMS((StoreEntry *));
-static void stat_get _PARAMS((cacheinfo *, char *req, StoreEntry *));
+static void stat_get _PARAMS((const cacheinfo *, const char *req, StoreEntry *));
 static void stat_io_get _PARAMS((StoreEntry *));
-static void stat_objects_get _PARAMS((cacheinfo *, StoreEntry *, int vm_or_not));
-static void stat_utilization_get _PARAMS((cacheinfo *, StoreEntry *, char *desc));
-static int cache_size_get _PARAMS((cacheinfo *));
-static int logReadHandler _PARAMS((int, char *, int, log_read_data_t *));
-static int squidReadHandler _PARAMS((int, char *, int, squid_read_data_t *));
+static void stat_objects_get _PARAMS((const cacheinfo *, StoreEntry *, int vm_or_not));
+static void stat_utilization_get _PARAMS((cacheinfo *, StoreEntry *, const char *desc));
+static int cache_size_get _PARAMS((const cacheinfo *));
+static int logReadHandler _PARAMS((int, const char *, int, log_read_data_t *));
+static int squidReadHandler _PARAMS((int, const char *, int, squid_read_data_t *));
 static int memoryAccounted _PARAMS((void));
 
 #ifdef UNUSED_CODE
@@ -169,7 +169,7 @@ static void info_get_mallstat _PARAMS((int, int, StoreEntry *));
 
 /* process utilization information */
 static void
-stat_utilization_get(cacheinfo * obj, StoreEntry * sentry, char *desc)
+stat_utilization_get(cacheinfo *obj, StoreEntry *sentry, const char *desc)
 {
     protocol_t proto_id;
     proto_stat *p = &obj->proto_stat_data[PROTO_MAX];
@@ -297,7 +297,7 @@ stat_io_get(StoreEntry * sentry)
  * may not reflect the retrieving object....
  * something need to be done here to get more accurate cache size */
 static int
-cache_size_get(cacheinfo * obj)
+cache_size_get(const cacheinfo *obj)
 {
     int size = 0;
     protocol_t proto_id;
@@ -307,8 +307,8 @@ cache_size_get(cacheinfo * obj)
     return size;
 }
 
-static char *
-describeStatuses(StoreEntry * entry)
+static const char *
+describeStatuses(const StoreEntry *entry)
 {
     LOCAL_ARRAY(char, buf, 256);
     sprintf(buf, "%-13s %-13s %-12s %-12s",
@@ -319,8 +319,8 @@ describeStatuses(StoreEntry * entry)
     return buf;
 }
 
-static char *
-describeFlags(StoreEntry * entry)
+static const char *
+describeFlags(const StoreEntry *entry)
 {
     LOCAL_ARRAY(char, buf, 256);
     int flags = (int) entry->flag;
@@ -363,8 +363,8 @@ describeFlags(StoreEntry * entry)
     return buf;
 }
 
-static char *
-describeTimestamps(StoreEntry * entry)
+static const char *
+describeTimestamps(const StoreEntry *entry)
 {
     LOCAL_ARRAY(char, buf, 256);
     sprintf(buf, "LV:%-9d LU:%-9d LM:%-9d EX:%-9d",
@@ -377,7 +377,7 @@ describeTimestamps(StoreEntry * entry)
 
 /* process objects list */
 static void
-stat_objects_get(cacheinfo * obj, StoreEntry * sentry, int vm_or_not)
+stat_objects_get(const cacheinfo *obj, StoreEntry *sentry, int vm_or_not)
 {
     StoreEntry *entry = NULL;
     MemObject *mem;
@@ -409,7 +409,7 @@ stat_objects_get(cacheinfo * obj, StoreEntry * sentry, int vm_or_not)
 
 /* process a requested object into a manager format */
 static void
-stat_get(cacheinfo * obj, char *req, StoreEntry * sentry)
+stat_get(const cacheinfo *obj, const char *req, StoreEntry *sentry)
 {
 
     if (strcmp(req, "objects") == 0) {
@@ -441,7 +441,7 @@ stat_get(cacheinfo * obj, char *req, StoreEntry * sentry)
 
 /* generate logfile status information */
 static void
-log_status_get(cacheinfo * obj, StoreEntry * sentry)
+log_status_get(const cacheinfo *obj, StoreEntry *sentry)
 {
     if (obj->logfile_status == LOG_ENABLE) {
 	storeAppendPrintf(sentry, "{\"Logfile is Enabled. Filename: %s\"}\n",
@@ -456,7 +456,7 @@ log_status_get(cacheinfo * obj, StoreEntry * sentry)
 /* log convert handler */
 /* call for each line in file, use fileWalk routine */
 static int
-logReadHandler(int fd_unused, char *buf, int size_unused, log_read_data_t * data)
+logReadHandler(int fd_unused, const char *buf, int size_unused, log_read_data_t *data)
 {
     storeAppendPrintf(data->sentry, "{%s}\n", buf);
     return 0;
@@ -477,7 +477,7 @@ logReadEndHandler(int fd, int errflag_unused, log_read_data_t * data)
 
 /* start converting logfile to processed format */
 static void
-log_get_start(cacheinfo * obj, StoreEntry * sentry)
+log_get_start(const cacheinfo *obj, StoreEntry *sentry)
 {
     log_read_data_t *data = NULL;
     int fd;
@@ -509,7 +509,7 @@ log_get_start(cacheinfo * obj, StoreEntry * sentry)
 /* squid convert handler */
 /* call for each line in file, use fileWalk routine */
 static int
-squidReadHandler(int fd_unused, char *buf, int size_unused, squid_read_data_t * data)
+squidReadHandler(int fd_unused, const char *buf, int size_unused, squid_read_data_t *data)
 {
     storeAppendPrintf(data->sentry, "{\"%s\"}\n", buf);
     return 0;
@@ -529,13 +529,13 @@ squidReadEndHandler(int fd_unused, int errflag_unused, squid_read_data_t * data)
 
 /* start convert squid.conf file to processed format */
 static void
-squid_get_start(cacheinfo * obj, StoreEntry * sentry)
+squid_get_start(const cacheinfo *obj, StoreEntry *sentry)
 {
     squid_read_data_t *data;
 
     data = xcalloc(1, sizeof(squid_read_data_t));
     data->sentry = sentry;
-    data->fd = file_open((char *) ConfigFile, NULL, O_RDONLY);
+    data->fd = file_open(ConfigFile, NULL, O_RDONLY);
     storeAppendPrintf(sentry, open_bracket);
     file_walk(data->fd, (FILE_WALK_HD) squidReadEndHandler, (void *) data,
 	(FILE_WALK_LHD) squidReadHandler, (void *) data);
@@ -549,7 +549,7 @@ dummyhandler(cacheinfo * obj, StoreEntry * sentry)
 }
 
 static void
-server_list(cacheinfo * obj, StoreEntry * sentry)
+server_list(const cacheinfo *obj, StoreEntry *sentry)
 {
     edge *e = NULL;
     dom_list *d = NULL;
@@ -616,8 +616,8 @@ info_get_mallstat(int size, number, StoreEntry * sentry)
 }
 #endif
 
-static char *
-host_port_fmt(char *host, u_short port)
+static const char *
+host_port_fmt(const char *host, u_short port)
 {
     LOCAL_ARRAY(char, buf, 32);
     sprintf(buf, "%s.%d", host, (int) port);
@@ -721,9 +721,9 @@ mallinfoTotal(void)
 #endif
 
 static void
-info_get(cacheinfo * obj, StoreEntry * sentry)
+info_get(const cacheinfo *obj, StoreEntry *sentry)
 {
-    char *tod = NULL;
+    const char *tod = NULL;
     float f;
 #if HAVE_MALLINFO
     int t;
@@ -935,7 +935,7 @@ info_get(cacheinfo * obj, StoreEntry * sentry)
 }
 
 static void
-parameter_get(cacheinfo * obj, StoreEntry * sentry)
+parameter_get(const cacheinfo *obj, StoreEntry *sentry)
 {
     storeAppendPrintf(sentry, open_bracket);
     storeAppendPrintf(sentry,
@@ -997,7 +997,7 @@ static char c2x[] =
 /* log_quote -- URL-style encoding on MIME headers. */
 
 char *
-log_quote(char *header)
+log_quote(const char *header)
 {
     int c, i;
     char *buf, *buf_cursor;
@@ -1048,21 +1048,21 @@ log_quote(char *header)
 
 
 static void
-log_append(cacheinfo * obj,
-    char *url,
+log_append(const cacheinfo *obj,
+    const char *url,
     struct in_addr caddr,
     int size,
-    char *action,
-    char *method,
+    const char *action,
+    const char *method,
     int http_code,
     int msec,
-    char *ident,
+    const char *ident,
 #if !LOG_FULL_HEADERS
-    struct _hierarchyLogData *hierData
+    const struct _hierarchyLogData *hierData
 #else
-    struct _hierarchyLogData *hierData,
-    char *request_hdr,
-    char *reply_hdr
+    const struct _hierarchyLogData *hierData,
+    const char *request_hdr,
+    const char *reply_hdr
 #endif				/* LOG_FULL_HEADERS */
 )
 {
@@ -1072,9 +1072,9 @@ log_append(cacheinfo * obj,
     LOCAL_ARRAY(char, tmp, 6000);	/* MAX_URL is 4096 */
 #endif /* LOG_FULL_HEADERS */
     int x;
-    char *client = NULL;
+    const char *client = NULL;
     hier_code hier_code = HIER_NONE;
-    char *hier_host = dash_str;
+    const char *hier_host = dash_str;
     int hier_timeout = 0;
 
     if (Config.Log.log_fqdn)
@@ -1258,7 +1258,7 @@ proto_count(cacheinfo * obj, protocol_t proto_id, log_type type)
 
 
 void
-stat_init(cacheinfo ** object, char *logfilename)
+stat_init(cacheinfo **object, const char *logfilename)
 {
     cacheinfo *obj = NULL;
     int i;
@@ -1,6 +1,6 @@
 
 /*
- * $Id: stmem.cc,v 1.31 1996/10/28 07:44:27 wessels Exp $
+ * $Id: stmem.cc,v 1.32 1996/11/04 18:13:07 wessels Exp $
  *
  * DEBUG: section 19    Memory Primitives
  * AUTHOR: Harvest Derived
@@ -118,8 +118,8 @@ stmem_stats mem_obj_pool;
 #endif
 
 static int memFreeDataUpto _PARAMS((mem_ptr, int));
-static int memAppend _PARAMS((mem_ptr, char *, int));
-static int memCopy _PARAMS((mem_ptr, int, char *, int));
+static int memAppend _PARAMS((mem_ptr, const char *, int));
+static int memCopy _PARAMS((const mem_ptr, int, char *, int));
 static void *get_free_thing _PARAMS((stmem_stats *));
 static void put_free_thing _PARAMS((stmem_stats *, void *));
 static void stmemFreeThingMemory _PARAMS((stmem_stats *));
@@ -209,7 +209,7 @@ memFreeDataUpto(mem_ptr mem, int target_offset)
 
 /* Append incoming data. */
 static int
-memAppend(mem_ptr mem, char *data, int len)
+memAppend(mem_ptr mem, const char *data, int len)
 {
     mem_node p;
     int avail_len;
@@ -253,7 +253,7 @@ memAppend(mem_ptr mem, char *data, int len)
 }
 
 static int
-memCopy(mem_ptr mem, int offset, char *buf, int size)
+memCopy(const mem_ptr mem, int offset, char *buf, int size)
 {
     mem_node p = mem->head;
     int t_off = mem->origin_offset;
@@ -1,6 +1,6 @@
 
 /*
- * $Id: store.cc,v 1.146 1996/11/02 00:17:58 wessels Exp $
+ * $Id: store.cc,v 1.147 1996/11/04 18:13:09 wessels Exp $
  *
  * DEBUG: section 20    Storeage Manager
  * AUTHOR: Harvest Derived
@@ -155,29 +155,29 @@ static char *storeLogTags[] =
     "RELEASE"
 };
 
-char *memStatusStr[] =
+const char *memStatusStr[] =
 {
     "NOT_IN_MEMORY",
     "SWAPPING_IN",
     "IN_MEMORY"
 };
 
-char *pingStatusStr[] =
+const char *pingStatusStr[] =
 {
     "PING_WAITING",
     "PING_TIMEOUT",
     "PING_DONE",
     "PING_NONE"
 };
 
-char *storeStatusStr[] =
+const char *storeStatusStr[] =
 {
     "STORE_OK",
     "STORE_PENDING",
     "STORE_ABORTED"
 };
 
-char *swapStatusStr[] =
+const char *swapStatusStr[] =
 {
     "NO_SWAP",
     "SWAPPING_OUT",
@@ -200,28 +200,28 @@ struct storeRebuild_data {
 int store_rebuilding = STORE_REBUILDING_SLOW;
 
 /* Static Functions */
-static char *storeDescribeStatus _PARAMS((StoreEntry *));
+static const char *storeDescribeStatus _PARAMS((const StoreEntry *));
 static char *storeSwapFullPath _PARAMS((int, char *));
-static HashID storeCreateHashTable _PARAMS((int (*)_PARAMS((char *, char *))));
+static HashID storeCreateHashTable _PARAMS((int (*)_PARAMS((const char *, const char *))));
 static int compareLastRef _PARAMS((StoreEntry **, StoreEntry **));
 static int compareSize _PARAMS((StoreEntry **, StoreEntry **));
-static int storeAddSwapDisk _PARAMS((char *));
-static int storeCheckExpired _PARAMS((StoreEntry *));
-static int storeCheckPurgeMem _PARAMS((StoreEntry *));
-static int storeClientListSearch _PARAMS((MemObject *, int));
-static int storeCopy _PARAMS((StoreEntry *, int, int, char *, int *));
-static int storeEntryLocked _PARAMS((StoreEntry *));
-static int storeEntryValidLength _PARAMS((StoreEntry *));
+static int storeAddSwapDisk _PARAMS((const char *));
+static int storeCheckExpired _PARAMS((const StoreEntry *));
+static int storeCheckPurgeMem _PARAMS((const StoreEntry *));
+static int storeClientListSearch _PARAMS((const MemObject *, int));
+static int storeCopy _PARAMS((const StoreEntry *, int, int, char *, int *));
+static int storeEntryLocked _PARAMS((const StoreEntry *));
+static int storeEntryValidLength _PARAMS((const StoreEntry *));
 static void storeGetMemSpace _PARAMS((int));
 static int storeHashDelete _PARAMS((StoreEntry *));
-static int storeShouldPurgeMem _PARAMS((StoreEntry *));
-static int storeSwapInHandle _PARAMS((int, char *, int, int, StoreEntry *, int));
+static int storeShouldPurgeMem _PARAMS((const StoreEntry *));
+static int storeSwapInHandle _PARAMS((int, const char *, int, int, StoreEntry *, int));
 static int storeSwapInStart _PARAMS((StoreEntry *, SIH, void *));
 static int swapInError _PARAMS((int, StoreEntry *));
 static mem_ptr new_MemObjectData _PARAMS((void));
 static MemObject *new_MemObject _PARAMS((void));
 static StoreEntry *new_StoreEntry _PARAMS((int));
-static StoreEntry *storeAddDiskRestore _PARAMS((char *, int, int, time_t, time_t, time_t));
+static StoreEntry *storeAddDiskRestore _PARAMS((const char *, int, int, time_t, time_t, time_t));
 static StoreEntry *storeGetInMemFirst _PARAMS((void));
 static StoreEntry *storeGetInMemNext _PARAMS((void));
 static unsigned int storeGetBucketNum _PARAMS((void));
@@ -233,7 +233,7 @@ static void storePurgeMem _PARAMS((StoreEntry *));
 static void storeSanityCheck _PARAMS((void));
 static void storeSetMemStatus _PARAMS((StoreEntry *, mem_status_t));
 static void storeStartRebuildFromDisk _PARAMS((void));
-static void storeSwapLog _PARAMS((StoreEntry *));
+static void storeSwapLog _PARAMS((const StoreEntry *));
 static void storeSwapOutHandle _PARAMS((int, int, StoreEntry *));
 static void storeHashMemInsert _PARAMS((StoreEntry *));
 static void storeHashMemDelete _PARAMS((StoreEntry *));
@@ -378,7 +378,7 @@ destroy_MemObjectData(MemObject * mem)
  */
 
 static HashID
-storeCreateHashTable(int (*cmp_func) (char *, char *))
+storeCreateHashTable(int (*cmp_func) (const char *, const char *))
 {
     store_table = hash_create(cmp_func, store_buckets, hash4);
     in_mem_table = hash_create(cmp_func, STORE_IN_MEM_BUCKETS, hash4);
@@ -465,7 +465,7 @@ time_describe(time_t t)
 }
 
 static void
-storeLog(int tag, StoreEntry * e)
+storeLog(int tag, const StoreEntry *e)
 {
     LOCAL_ARRAY(char, logmsg, MAX_URL << 1);
     time_t t = -1;
@@ -612,7 +612,7 @@ storeUnlockObject(StoreEntry * e)
 /* Lookup an object in the cache. 
  * return just a reference to object, don't start swapping in yet. */
 StoreEntry *
-storeGet(char *url)
+storeGet(const char *url)
 {
     debug(20, 3, "storeGet: looking up %s\n", url);
     return (StoreEntry *) hash_lookup(store_table, url);
@@ -627,8 +627,8 @@ getKeyCounter(void)
     return key_counter;
 }
 
-char *
-storeGeneratePrivateKey(char *url, method_t method, int num)
+const char *
+storeGeneratePrivateKey(const char *url, method_t method, int num)
 {
     if (num == 0)
 	num = getKeyCounter();
@@ -641,8 +641,8 @@ storeGeneratePrivateKey(char *url, method_t method, int num)
     return key_temp_buffer;
 }
 
-char *
-storeGeneratePublicKey(char *url, method_t method)
+const char *
+storeGeneratePublicKey(const char *url, method_t method)
 {
     debug(20, 3, "storeGeneratePublicKey: type=%d %s\n", method, url);
     switch (method) {
@@ -682,7 +682,7 @@ storeSetPrivateKey(StoreEntry * e)
 {
     StoreEntry *e2 = NULL;
     hash_link *table_entry = NULL;
-    char *newkey = NULL;
+    const char *newkey = NULL;
 
     if (e->key && BIT_TEST(e->flag, KEY_PRIVATE))
 	return;			/* is already private */
@@ -712,7 +712,7 @@ storeSetPublicKey(StoreEntry * e)
 {
     StoreEntry *e2 = NULL;
     hash_link *table_entry = NULL;
-    char *newkey = NULL;
+    const char *newkey = NULL;
     int loop_detect = 0;
 
     if (e->key && !BIT_TEST(e->flag, KEY_PRIVATE))
@@ -746,8 +746,8 @@ storeSetPublicKey(StoreEntry * e)
 }
 
 StoreEntry *
-storeCreateEntry(char *url,
-    char *req_hdr,
+storeCreateEntry(const char *url,
+    const char *req_hdr,
     int req_hdr_sz,
     int flags,
     method_t method)
@@ -811,7 +811,7 @@ storeCreateEntry(char *url,
 /* Add a new object to the cache with empty memory copy and pointer to disk
  * use to rebuild store from disk. */
 static StoreEntry *
-storeAddDiskRestore(char *url, int file_number, int size, time_t expires, time_t timestamp, time_t lastmod)
+storeAddDiskRestore(const char *url, int file_number, int size, time_t expires, time_t timestamp, time_t lastmod)
 {
     StoreEntry *e = NULL;
 
@@ -921,9 +921,9 @@ storeUnregister(StoreEntry * e, int fd)
 }
 
 int
-storeGetLowestReaderOffset(StoreEntry * entry)
+storeGetLowestReaderOffset(const StoreEntry *entry)
 {
-    MemObject *mem = entry->mem_obj;
+    const MemObject *mem = entry->mem_obj;
     int lowest = mem->e_current_len;
     int i;
     for (i = 0; i < mem->client_list_size; i++) {
@@ -1004,7 +1004,7 @@ storeStartDeleteBehind(StoreEntry * e)
 
 /* Append incoming data from a primary server to an entry. */
 void
-storeAppend(StoreEntry * e, char *data, int len)
+storeAppend(StoreEntry *e, const char *data, int len)
 {
     MemObject *mem;
     /* sanity check */
@@ -1035,7 +1035,7 @@ storeAppend(StoreEntry * e, char *data, int len)
 
 #ifdef __STDC__
 void
-storeAppendPrintf(StoreEntry * e, char *fmt,...)
+storeAppendPrintf(StoreEntry *e, const char *fmt,...)
 {
     va_list args;
     LOCAL_ARRAY(char, buf, 4096);
@@ -1047,7 +1047,7 @@ storeAppendPrintf(va_alist)
 {
     va_list args;
     StoreEntry *e = NULL;
-    char *fmt = NULL;
+    const char *fmt = NULL;
     LOCAL_ARRAY(char, buf, 4096);
     va_start(args);
     e = va_arg(args, StoreEntry *);
@@ -1061,7 +1061,7 @@ storeAppendPrintf(va_alist)
 
 /* add directory to swap disk */
 static int
-storeAddSwapDisk(char *path)
+storeAddSwapDisk(const char *path)
 {
     char **tmp = NULL;
     int i;
@@ -1084,7 +1084,7 @@ storeAddSwapDisk(char *path)
 }
 
 /* return the nth swap directory */
-char *
+const char *
 swappath(int n)
 {
     return *(CacheDirs + (n % ncache_dirs));
@@ -1109,7 +1109,7 @@ storeSwapFullPath(int fn, char *fullpath)
 
 /* swapping in handle */
 static int
-storeSwapInHandle(int fd_notused, char *buf, int len, int flag, StoreEntry * e, int offset_notused)
+storeSwapInHandle(int fd_notused, const char *buf, int len, int flag, StoreEntry *e, int offset_notused)
 {
     MemObject *mem = e->mem_obj;
     SIH handler = NULL;
@@ -1228,7 +1228,7 @@ storeSwapInStart(StoreEntry * e, SIH swapin_complete_handler, void *swapin_compl
 }
 
 static void
-storeSwapLog(StoreEntry * e)
+storeSwapLog(const StoreEntry *e)
 {
     LOCAL_ARRAY(char, logmsg, MAX_URL << 1);
     /* Note this printf format appears in storeWriteCleanLog() too */
@@ -1689,7 +1689,7 @@ storeComplete(StoreEntry * e)
  * abort message, freeing the data for this object 
  */
 void
-storeAbort(StoreEntry * e, char *msg)
+storeAbort(StoreEntry * e, const char *msg)
 {
     LOCAL_ARRAY(char, mime_hdr, 300);
     char *abort_msg;
@@ -2086,7 +2086,7 @@ storeRelease(StoreEntry * e)
     StoreEntry *result = NULL;
     StoreEntry *hentry = NULL;
     hash_link *hptr = NULL;
-    char *hkey;
+    const char *hkey;
 
     debug(20, 3, "storeRelease: Releasing: '%s'\n", e->key);
 
@@ -2151,7 +2151,7 @@ storeRelease(StoreEntry * e)
 
 /* return if the current key is the original one. */
 int
-storeOriginalKey(StoreEntry * e)
+storeOriginalKey(const StoreEntry *e)
 {
     if (!e)
 	return 1;
@@ -2160,7 +2160,7 @@ storeOriginalKey(StoreEntry * e)
 
 /* return 1 if a store entry is locked */
 static int
-storeEntryLocked(StoreEntry * e)
+storeEntryLocked(const StoreEntry *e)
 {
     if (e->lock_count)
 	return 1;
@@ -2175,7 +2175,7 @@ storeEntryLocked(StoreEntry * e)
 
 /*  use this for internal call only */
 static int
-storeCopy(StoreEntry * e, int stateoffset, int maxSize, char *buf, int *size)
+storeCopy(const StoreEntry *e, int stateoffset, int maxSize, char *buf, int *size)
 {
     int available_to_write = 0;
 
@@ -2204,7 +2204,7 @@ storeCopy(StoreEntry * e, int stateoffset, int maxSize, char *buf, int *size)
 /* check if there is any client waiting for this object at all */
 /* return 1 if there is at least one client */
 int
-storeClientWaiting(StoreEntry * e)
+storeClientWaiting(const StoreEntry *e)
 {
     int i;
     MemObject *mem = e->mem_obj;
@@ -2225,7 +2225,7 @@ storeClientWaiting(StoreEntry * e)
 
 /* return index to matched clientstatus in client_list, -1 on NOT_FOUND */
 static int
-storeClientListSearch(MemObject * mem, int fd)
+storeClientListSearch(const MemObject *mem, int fd)
 {
     int i;
     if (mem->client_list) {
@@ -2314,7 +2314,7 @@ storeClientCopy(StoreEntry * e,
 }
 
 static int
-storeEntryValidLength(StoreEntry * e)
+storeEntryValidLength(const StoreEntry *e)
 {
     int diff;
     int hdr_sz;
@@ -2356,7 +2356,7 @@ static int
 storeVerifySwapDirs(int clean)
 {
     int inx;
-    char *path = NULL;
+    const char *path = NULL;
     struct stat sb;
     int directory_created = 0;
     char *cmdbuf = NULL;
@@ -2552,7 +2552,7 @@ storeSanityCheck(void)
 }
 
 int
-urlcmp(char *url1, char *url2)
+urlcmp(const char *url1, const char *url2)
 {
     if (!url1 || !url2)
 	fatal_dump("urlcmp: Got a NULL url pointer.");
@@ -2713,7 +2713,7 @@ swapInError(int fd_unused, StoreEntry * entry)
 }
 
 int
-storePendingNClients(StoreEntry * e)
+storePendingNClients(const StoreEntry *e)
 {
     int npend = 0;
     int i;
@@ -2767,7 +2767,7 @@ storeRotateLog(void)
 }
 
 static int
-storeShouldPurgeMem(StoreEntry * e)
+storeShouldPurgeMem(const StoreEntry *e)
 {
     if (storeCheckPurgeMem(e) == 0)
 	return 0;
@@ -2783,7 +2783,7 @@ storeShouldPurgeMem(StoreEntry * e)
  * storeUnlockObject() and storeSwapOutHandle().
  */
 static int
-storeCheckPurgeMem(StoreEntry * e)
+storeCheckPurgeMem(const StoreEntry *e)
 {
     if (storeEntryLocked(e))
 	return 0;
@@ -2795,7 +2795,7 @@ storeCheckPurgeMem(StoreEntry * e)
 }
 
 static int
-storeCheckExpired(StoreEntry * e)
+storeCheckExpired(const StoreEntry *e)
 {
     if (storeEntryLocked(e))
 	return 0;
@@ -2806,8 +2806,8 @@ storeCheckExpired(StoreEntry * e)
     return 0;
 }
 
-static char *
-storeDescribeStatus(StoreEntry * e)
+static const char *
+storeDescribeStatus(const StoreEntry *e)
 {
     static char buf[MAX_URL << 1];
     sprintf(buf, "mem:%13s ping:%12s store:%13s swap:%12s locks:%d %s\n",
@@ -1,6 +1,6 @@
 
 /*
- * $Id: tools.cc,v 1.79 1996/10/29 02:40:46 wessels Exp $
+ * $Id: tools.cc,v 1.80 1996/11/04 18:13:11 wessels Exp $
  *
  * DEBUG: section 21    Misc Functions
  * AUTHOR: Harvest Derived
@@ -120,7 +120,7 @@ and report the trace back to squid-bugs@nlanr.net.\n\
 \n\
 Thanks!\n"
 
-static void fatal_common _PARAMS((char *));
+static void fatal_common _PARAMS((const char *));
 static void mail_warranty _PARAMS((void));
 
 #ifdef _SQUID_SOLARIS_
@@ -332,7 +332,7 @@ normal_shutdown(void)
 }
 
 static void
-fatal_common(char *message)
+fatal_common(const char *message)
 {
 #if HAVE_SYSLOG
     if (opt_syslog_enable)
@@ -347,15 +347,15 @@ fatal_common(char *message)
 
 /* fatal */
 void
-fatal(char *message)
+fatal(const char *message)
 {
     fatal_common(message);
     exit(1);
 }
 
 /* fatal with dumping core */
 void
-fatal_dump(char *message)
+fatal_dump(const char *message)
 {
     if (message)
 	fatal_common(message);
@@ -366,7 +366,7 @@ fatal_dump(char *message)
 
 /* fatal with dumping core */
 void
-_debug_trap(char *message)
+_debug_trap(const char *message)
 {
     if (!opt_catch_signals)
 	fatal_dump(message);
@@ -398,12 +398,12 @@ sig_child(int sig)
 #endif
 }
 
-char *
+const char *
 getMyHostname(void)
 {
     LOCAL_ARRAY(char, host, SQUIDHOSTNAMELEN + 1);
     static int present = 0;
-    struct hostent *h = NULL;
+    const struct hostent *h = NULL;
     char *t = NULL;
 
     if ((t = Config.visibleHostname))
@@ -429,7 +429,7 @@ getMyHostname(void)
 }
 
 int
-safeunlink(char *s, int quiet)
+safeunlink(const char *s, int quiet)
 {
     int err;
     if ((err = unlink(s)) < 0)
@@ -634,7 +634,7 @@ squid_signal(int sig, void (*func) _PARAMS((int)), int flags)
 }
 
 struct in_addr
-inaddrFromHostent(struct hostent *hp)
+inaddrFromHostent(const struct hostent *hp)
 {
     struct in_addr s;
     xmemcpy(&s.s_addr, hp->h_addr, sizeof(s.s_addr));
@@ -1,6 +1,6 @@
 
 /*
- * $Id: tunnel.cc,v 1.22 1996/11/02 00:17:54 wessels Exp $
+ * $Id: tunnel.cc,v 1.23 1996/11/04 18:13:03 wessels Exp $
  *
  * DEBUG: section 26    Secure Sockets Layer Proxy
  * AUTHOR: Duane Wessels
@@ -48,7 +48,7 @@ typedef struct {
     ConnectStateData connectState;
 } SslStateData;
 
-static char conn_established[] = "HTTP/1.0 200 Connection established\r\n\r\n";
+static const char *const conn_established = "HTTP/1.0 200 Connection established\r\n\r\n";
 
 static void sslLifetimeExpire _PARAMS((int fd, void *));
 static void sslReadTimeout _PARAMS((int fd, void *));
@@ -58,7 +58,7 @@ static void sslWriteServer _PARAMS((int fd, void *));
 static void sslWriteClient _PARAMS((int fd, void *));
 static void sslConnected _PARAMS((int fd, void *));
 static void sslProxyConnected _PARAMS((int fd, void *));
-static void sslConnect _PARAMS((int fd, ipcache_addrs *, void *));
+static void sslConnect _PARAMS((int fd, const ipcache_addrs *, void *));
 static void sslErrorComplete _PARAMS((int, char *, int, int, void *));
 static void sslClose _PARAMS((SslStateData * sslState));
 static void sslClientClosed _PARAMS((int fd, void *));
@@ -311,7 +311,7 @@ sslErrorComplete(int fd, char *buf, int size, int errflag, void *sslState)
 
 
 static void
-sslConnect(int fd, ipcache_addrs * ia, void *data)
+sslConnect(int fd, const ipcache_addrs *ia, void *data)
 {
     SslStateData *sslState = data;
     request_t *request = sslState->request;
@@ -389,7 +389,7 @@ sslConnectDone(int fd, int status, void *data)
 }
 
 int
-sslStart(int fd, char *url, request_t * request, char *mime_hdr, int *size_ptr)
+sslStart(int fd, const char *url, request_t *request, char *mime_hdr, int *size_ptr)
 {
     /* Create state structure. */
     SslStateData *sslState = NULL;
@@ -1,6 +1,6 @@
 
 /*
- * $Id: url.cc,v 1.36 1996/10/24 23:31:19 wessels Exp $
+ * $Id: url.cc,v 1.37 1996/11/04 18:13:13 wessels Exp $
  *
  * DEBUG: section 23    URL Parsing
  * AUTHOR: Duane Wessels
@@ -31,7 +31,7 @@
 
 #include "squid.h"
 
-char *RequestMethodStr[] =
+const char *RequestMethodStr[] =
 {
     "NONE",
     "GET",
@@ -53,7 +53,7 @@ static char *ProtocolStr[] =
 };
 
 static int url_acceptable[256];
-static char hex[17] = "0123456789abcdef";
+static const char *const hex = "0123456789abcdef";
 static int urlDefaultPort _PARAMS((protocol_t p));
 
 /* convert %xx in url string to a character 
@@ -107,9 +107,10 @@ urlInitialize(void)
 /* Encode prohibited char in string */
 /* return the pointer to new (allocated) string */
 char *
-url_escape(char *url)
+url_escape(const char *url)
 {
-    char *p, *q;
+    const char *p;
+    char *q;
     char *tmpline = xcalloc(1, MAX_URL);
 
     q = tmpline;
@@ -127,7 +128,7 @@ url_escape(char *url)
 }
 
 method_t
-urlParseMethod(char *s)
+urlParseMethod(const char *s)
 {
     if (strcasecmp(s, "GET") == 0) {
 	return METHOD_GET;
@@ -145,7 +146,7 @@ urlParseMethod(char *s)
 
 
 protocol_t
-urlParseProtocol(char *s)
+urlParseProtocol(const char *s)
 {
     if (strncasecmp(s, "http", 4) == 0)
 	return PROTO_HTTP;
@@ -248,7 +249,7 @@ urlParse(method_t method, char *url)
 }
 
 char *
-urlCanonical(request_t * request, char *buf)
+urlCanonical(const request_t *request, char *buf)
 {
     LOCAL_ARRAY(char, urlbuf, MAX_URL + 1);
     LOCAL_ARRAY(char, portbuf, 32);
@@ -294,7 +295,7 @@ requestUnlink(request_t * request)
 }
 
 int
-matchDomainName(char *domain, char *host)
+matchDomainName(const char *domain, const char *host)
 {
     int offset;
     if ((offset = strlen(host) - strlen(domain)) < 0)
@@ -311,7 +312,7 @@ matchDomainName(char *domain, char *host)
 }
 
 int
-urlCheckRequest(request_t * r)
+urlCheckRequest(const request_t *r)
 {
     int rc = 0;
     if (r->method == METHOD_CONNECT)
@@ -1,6 +1,6 @@
 
 /*
- * $Id: wais.cc,v 1.49 1996/11/02 00:18:00 wessels Exp $
+ * $Id: wais.cc,v 1.50 1996/11/04 18:13:15 wessels Exp $
  *
  * DEBUG: section 24    WAIS Relay
  * AUTHOR: Harvest Derived
@@ -125,7 +125,7 @@ static void waisLifetimeExpire _PARAMS((int, WaisStateData *));
 static void waisReadReply _PARAMS((int, WaisStateData *));
 static void waisSendComplete _PARAMS((int, char *, int, int, void *));
 static void waisSendRequest _PARAMS((int, WaisStateData *));
-static void waisConnect _PARAMS((int, ipcache_addrs *, void *));
+static void waisConnect _PARAMS((int, const ipcache_addrs *, void *));
 static void waisConnectDone _PARAMS((int fd, int status, void *data));
 
 static int
@@ -300,7 +300,7 @@ waisSendRequest(int fd, WaisStateData * waisState)
 {
     int len = strlen(waisState->request) + 4;
     char *buf = NULL;
-    char *Method = RequestMethodStr[waisState->method];
+    const char *Method = RequestMethodStr[waisState->method];
 
     debug(24, 5, "waisSendRequest: FD %d\n", fd);
 
@@ -329,7 +329,7 @@ waisSendRequest(int fd, WaisStateData * waisState)
 }
 
 int
-waisStart(int unusedfd, char *url, method_t method, char *mime_hdr, StoreEntry * entry)
+waisStart(int unusedfd, const char *url, method_t method, char *mime_hdr, StoreEntry * entry)
 {
     WaisStateData *waisState = NULL;
     int fd;
@@ -372,7 +372,7 @@ waisStart(int unusedfd, char *url, method_t method, char *mime_hdr, StoreEntry *
 
 
 static void
-waisConnect(int fd, ipcache_addrs * ia, void *data)
+waisConnect(int fd, const ipcache_addrs *ia, void *data)
 {
     WaisStateData *waisState = data;
     if (!ipcache_gethostbyname(waisState->relayhost, 0)) {