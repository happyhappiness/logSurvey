----++++src/AccessLogEntry.h
@@ -21,6 +21,7 @@
 #include &quot;LogTags.h&quot;
 #include &quot;MessageSizes.h&quot;
 #include &quot;Notes.h&quot;
+#include &quot;sbuf/SBuf.h&quot;
 #if ICAP_CLIENT
 #include &quot;adaptation/icap/Elements.h&quot;
 #endif
@@ -56,7 +57,7 @@ class AccessLogEntry: public RefCountable
     /// Fetch the transaction method string (ICP opcode, HTCP opcode or HTTP method)
     SBuf getLogMethod() const;
 
-    const char *url;
+    SBuf url;
 
     /// TCP/IP level details about the client connection
     Comm::ConnectionPointer tcpClient;
----++++src/acl/FilledChecklist.cc
@@ -103,9 +103,9 @@ ACLFilledChecklist::syncAle() const
             HTTPMSGLOCK(al-&gt;adapted_request);
         }
 
-        if (!al-&gt;url) {
+        if (al-&gt;url.isEmpty()) {
             showDebugWarning(&quot;URL&quot;);
-            al-&gt;url = xstrdup(request-&gt;url.absolute().c_str());
+            al-&gt;url = request-&gt;url.absolute();
         }
     }
 
----++++src/format/Format.cc
@@ -34,6 +34,8 @@
 /// Convert a string to NULL pointer if it is &quot;&quot;
 #define strOrNull(s) ((s)==NULL||(s)[0]==&#39;\0&#39;?NULL:(s))
 
+const SBuf Format::Dash(&quot;-&quot;);
+
 Format::Format::Format(const char *n) :
     format(NULL),
     next(NULL)
@@ -1039,7 +1041,11 @@ Format::Format::assemble(MemBuf &amp;mb, const AccessLogEntry::Pointer &amp;al, int logS
         break;
 
         case LFT_REQUEST_URI:
-            out = al-&gt;url;
+            if (!al-&gt;url.isEmpty()) {
+                const SBuf &amp;s = al-&gt;url;
+                sb.append(s.rawContent(), s.length());
+                out = sb.termedBuf();
+            }
             break;
 
         case LFT_REQUEST_VERSION_OLD_2X:
----++++src/format/Format.h
@@ -11,6 +11,7 @@
 
 #include &quot;base/RefCount.h&quot;
 #include &quot;ConfigParser.h&quot;
+#include &quot;sbuf/SBuf.h&quot;
 
 /*
  * Squid configuration allows users to define custom formats in
@@ -32,6 +33,8 @@ class StoreEntry;
 namespace Format
 {
 
+extern const SBuf Dash;
+
 class Token;
 
 // XXX: inherit from linked list
----++++src/log/FormatHttpdCombined.cc
@@ -47,13 +47,13 @@ Log::Format::HttpdCombined(const AccessLogEntry::Pointer &amp;al, Logfile * logfile)
 
     const SBuf method(al-&gt;getLogMethod());
 
-    logfilePrintf(logfile, "%s %s %s [%s] \"" SQUIDSBUFPH " %s %s/%d.%d\" %d %" PRId64 " \"%s\" \"%s\" %s:%s%s",
+    logfilePrintf(logfile, "%s %s %s [%s] \"" SQUIDSBUFPH " " SQUIDSBUFPH " %s/%d.%d\" %d %" PRId64 " \"%s\" \"%s\" %s:%s%s",
                   clientip,
                   user_ident ? user_ident : dash_str,
                   user_auth ? user_auth : dash_str,
                   Time::FormatHttpd(squid_curtime),
                   SQUIDSBUFPRINT(method),
-                  al-&gt;url,
+                  SQUIDSBUFPRINT(al-&gt;url),
                   AnyP::ProtocolType_str[al-&gt;http.version.protocol],
                   al-&gt;http.version.major, al-&gt;http.version.minor,
                   al-&gt;http.code,
----++++src/log/FormatHttpdCommon.cc
@@ -34,13 +34,13 @@ Log::Format::HttpdCommon(const AccessLogEntry::Pointer &amp;al, Logfile * logfile)
 
     const SBuf method(al-&gt;getLogMethod());
 
-    logfilePrintf(logfile, "%s %s %s [%s] \"" SQUIDSBUFPH " %s %s/%d.%d\" %d %" PRId64 " %s:%s%s",
+    logfilePrintf(logfile, "%s %s %s [%s] \"" SQUIDSBUFPH " " SQUIDSBUFPH " %s/%d.%d\" %d %" PRId64 " %s:%s%s",
                   clientip,
                   user_ident ? user_ident : dash_str,
                   user_auth ? user_auth : dash_str,
                   Time::FormatHttpd(squid_curtime),
                   SQUIDSBUFPRINT(method),
-                  al-&gt;url,
+                  SQUIDSBUFPRINT(al-&gt;url),
                   AnyP::ProtocolType_str[al-&gt;http.version.protocol],
                   al-&gt;http.version.major, al-&gt;http.version.minor,
                   al-&gt;http.code,
----++++src/log/FormatSquidNative.cc
@@ -50,7 +50,7 @@ Log::Format::SquidNative(const AccessLogEntry::Pointer &amp;al, Logfile * logfile)
 
     const SBuf method(al-&gt;getLogMethod());
 
-    logfilePrintf(logfile, "%9ld.%03d %6ld %s %s/%03d %" PRId64 " " SQUIDSBUFPH " %s %s %s%s/%s %s%s",
+    logfilePrintf(logfile, "%9ld.%03d %6ld %s %s/%03d %" PRId64 " " SQUIDSBUFPH " " SQUIDSBUFPH " %s %s%s/%s %s%s",
                   (long int) current_time.tv_sec,
                   (int) current_time.tv_usec / 1000,
                   tvToMsec(al-&gt;cache.trTime),
@@ -59,7 +59,7 @@ Log::Format::SquidNative(const AccessLogEntry::Pointer &amp;al, Logfile * logfile)
                   al-&gt;http.code,
                   al-&gt;http.clientReplySz.messageTotal(),
                   SQUIDSBUFPRINT(method),
-                  al-&gt;url,
+                  SQUIDSBUFPRINT(al-&gt;url),
                   user ? user : dash_str,
                   al-&gt;hier.ping.timedout ? &quot;TIMEOUT_&quot; : &quot;&quot;,
                   hier_code_str[al-&gt;hier.code],
----++++src/log/FormatSquidReferer.cc
@@ -28,11 +28,13 @@ Log::Format::SquidReferer(const AccessLogEntry::Pointer &amp;al, Logfile *logfile)
     char clientip[MAX_IPSTRLEN];
     al-&gt;getLogClientIp(clientip, MAX_IPSTRLEN);
 
-    logfilePrintf(logfile, &quot;%9ld.%03d %s %s %s\n&quot;,
+    const SBuf url = !al-&gt;url.isEmpty() ? al-&gt;url : ::Format::Dash;
+
+    logfilePrintf(logfile, &quot;%9ld.%03d %s %s &quot; SQUIDSBUFPH &quot;\n&quot;,
                   (long int) current_time.tv_sec,
                   (int) current_time.tv_usec / 1000,
                   clientip,
                   referer,
-                  al-&gt;url ? al-&gt;url : "-");
+                  SQUIDSBUFPRINT(url));
 }
 
----++++src/log/access_log.cc
@@ -76,8 +76,8 @@ void
 accessLogLogTo(CustomLog* log, AccessLogEntry::Pointer &amp;al, ACLChecklist * checklist)
 {
 
-    if (al-&gt;url == NULL)
-        al-&gt;url = dash_str;
+    if (al-&gt;url.isEmpty())
+        al-&gt;url = Format::Dash;
 
     if (!al-&gt;http.content_type || *al-&gt;http.content_type == &#39;\0&#39;)
         al-&gt;http.content_type = dash_str;
@@ -160,8 +160,8 @@ accessLogLog(AccessLogEntry::Pointer &amp;al, ACLChecklist * checklist)
     else {
         unsigned int ibuf[365];
         size_t isize;
-        xstrncpy((char *) ibuf, al-&gt;url, 364 * sizeof(int));
-        isize = ((strlen(al-&gt;url) + 8) / 8) * 2;
+        xstrncpy((char *) ibuf, al-&gt;url.c_str(), 364 * sizeof(int));
+        isize = ((al-&gt;url.length() + 8) / 8) * 2;
 
         if (isize &gt; 364)
             isize = 364;
----++++GitHub