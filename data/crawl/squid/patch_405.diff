@@ -1,5 +1,3 @@
-$Id$
-
 ==============================================================================
 
 SQUID Internet Object Cache  http://www.squid-cache.org
@@ -1,8 +1,6 @@
 
 Squid QUICKSTART
 
-$Id$
-
 This document is intended only for people who want to get Squid running
 quickly It is not a substitute for the real documentation.  Squid has
 many features, but only a few of them are useful at the beginning.  Use
@@ -1,7 +1,3 @@
-/*
- * $Id$
- */
-
 /* Extended regular expression matching and search library,
  * version 0.12.
  * (Implements POSIX draft P10003.2/D11.2, except for
@@ -1,6 +1,3 @@
-/*
- * $Id$
- */
 #ifndef SQUID_REGEXP_LIBRARY_H
 #define SQUID_REGEXP_LIBRARY_H
 
@@ -1,6 +1,3 @@
-/*
- * $Id$
- */
 #ifndef SQUID_COMPAT_CPU_H
 #define SQUID_COMPAT_CPU_H
 
@@ -12,8 +12,6 @@
  *
  *    06-Oct-2007 : Various fixes to allow the build on MinGW
  *
- * Squid CVS $Id$
- *
  *  Original License and code follows.
  */
 #include "squid.h"
@@ -13,8 +13,6 @@
  *    16-Aug-2007 : Altered configure checks
  *                  Un-hacked slightly to use system gethostbyname()
  *
- * Squid CVS $Id$
- *
  *  Original License and code follows.
  */
 
@@ -14,8 +14,6 @@
  *                      - use xinet_ntop instead of inet_ntop
  *                      - use SQUIDHOSTNAMELEN instead of MAXHOSTNAMELEN
  *
- * Squid CVS $Id$
- *
  *  Original License and code follows.
  */
 #include "squid.h"
@@ -16,8 +16,6 @@
  *
  *    04-Nov-2010: drop SPRINTF casting macro
  *
- * Squid CVS $Id$
- *
  *  Original License and code follows.
  */
 
@@ -13,8 +13,6 @@
  *
  *    28-Oct-2007: drop some dead code. now tested working without.
  *
- * Squid CVS $Id$
- *
  *  Original License and code follows.
  */
 
@@ -1,6 +1,3 @@
-/*
- * $Id$
- */
 #ifndef SQUID_COMPAT_SHM_H
 #define SQUID_COMPAT_SHM_H
 
@@ -12,8 +12,6 @@
  * 			- added squid_ prefix for uniqueness
  * 			  so we can use it where OS copy is broken.
  *
- * Squid VCS $Id$
- *
  *  Original License and code follows.
  */
 
@@ -23,8 +23,6 @@
  * 			- xtables_strtoui renamed to xstrtoui
  * 			- xtables_strtoul renamed to xstrtoul
  *
- * Squid VCS $Id$
- *
  *  Original License and code follows.
  */
 
@@ -1,8 +1,3 @@
-dnl
-dnl  $Id$
-dnl
-dnl
-dnl
 AC_INIT([Squid Web Proxy],[3.HEAD-BZR],[http://www.squid-cache.org/bugs/],[squid])
 AC_PREREQ(2.61)
 AC_CONFIG_HEADERS([include/autoconf.h])
@@ -1,7 +1,4 @@
 ## Process this file with automake to produce Makefile.in
-#
-# $Id$
-#
 
 errordir = $(datadir)/errors
 
@@ -1,5 +1,4 @@
 #!@PERL@
-# $Id$
 
 #if you define this, debugging output will be printed to STDERR.
 #$debug=1;
@@ -1,23 +1,23 @@
-/* $Id$
-* Copyright (C) 2002 Rodrigo Campos
-*
-* This program is free software; you can redistribute it and/or modify
-* it under the terms of the GNU General Public License as published by
-* the Free Software Foundation; either version 2 of the License, or
-* (at your option) any later version.
-*
-* This program is distributed in the hope that it will be useful,
-* but WITHOUT ANY WARRANTY; without even the implied warranty of
-* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-* GNU General Public License for more details.
-*
-* You should have received a copy of the GNU General Public License
-* along with this program; if not, write to the Free Software
-* Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
-*
-* Author: Rodrigo Campos (rodrigo@geekbunker.org)
-*
-*/
+/*
+ * Copyright (C) 2002 Rodrigo Campos
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
+ *
+ * Author: Rodrigo Campos (rodrigo@geekbunker.org)
+ *
+ */
 #include "squid.h"
 #include "helpers/defines.h"
 #include "rfc1738.h"
@@ -1,6 +1,3 @@
-/*
- * $Id$
- */
 #ifndef _SQUID_GETFULLHOSTNAME_H
 #define _SQUID_GETFULLHOSTNAME_H
 
@@ -1,6 +1,3 @@
-/*
- * $Id$
- */
 #ifndef SQUID_HASH_H
 #define SQUID_HASH_H
 
@@ -1,6 +1,3 @@
-/*
- * $Id$
- */
 #ifndef _MEM_METER_H_
 #define _MEM_METER_H_
 
@@ -1,6 +1,3 @@
-/*
- * $Id$
- */
 #ifndef SQUID_PARSE_H
 #define SQUID_PARSE_H
 
@@ -1,6 +1,3 @@
-/*
- * $Id$
- */
 #ifndef SQUID_RADIX_H
 #define	SQUID_RADIX_H
 
@@ -1,6 +1,3 @@
-/*
- * $Id$
- */
 #ifndef _SQUID_INCLUDE_RFC1123_H
 #define _SQUID_INCLUDE_RFC1123_H
 
@@ -1,6 +1,3 @@
-/*
- * $Id$
- */
 #ifndef SQUID_SNMP_API_UTIL_H
 #define SQUID_SNMP_API_UTIL_H
 
@@ -1,7 +1,3 @@
-/*
- * $Id$
- */
-
 #ifndef SQUID_SNMP_CLIENT_H
 #define SQUID_SNMP_CLIENT_H
 
@@ -1,6 +1,3 @@
-/*
- * $Id$
- */
 #ifndef SQUID_SNMP_DEBUG_H
 #define SQUID_SNMP_DEBUG_H
 
@@ -1,6 +1,3 @@
-/*
- * $Id$
- */
 #ifndef SQUID_SNMP_IMPL_H
 #define SQUID_SNMP_IMPL_H
 
@@ -1,6 +1,3 @@
-/*
- * $Id$
- */
 #ifndef SQUID_SNMP_UTIL_H
 #define SQUID_SNMP_UTIL_H
 
@@ -1,7 +1,3 @@
-/*
- * $Id$
- */
-
 #ifndef SQUID_SPLAY_H
 #define SQUID_SPLAY_H
 
@@ -1,6 +1,3 @@
-/*
- * $Id$
- */
 #ifndef _INC_XUSLEEP_H
 #define _INC_XUSLEEP_H
 
@@ -1,7 +1,4 @@
 ## Process this file with automake to produce Makefile.in
-#
-# $Id$
-#
 
 AUTOMAKE_OPTIONS = dist-bzip2 subdir-objects 1.5
 DIST_SUBDIRS = include src test
@@ -1,7 +1,3 @@
-/*
- * $Id$
- */
-
 /*
  * COMPILE WITH:
  *      gcc -Wall md5-test.c -I../include md5.o
@@ -1,7 +1,3 @@
-/*
- * $Id$
- */
-
 /* Stub function for programs not implementing statMemoryAccounted */
 #include "squid.h"
 #include "util.h"
@@ -1,7 +1,3 @@
-/*
- * $Id$
- */
-
 #include "squid.h"
 #include "uudecode.h"
 
@@ -8,8 +8,6 @@
 # Check the Squid-1.1.x cache directory for stale objects - i.e. those
 # which exist on disk but aren't listed in cached's log file.
 
-# $Id$
-
 require "getopts.pl";
 &Getopts("c:drt:vh");
 # -c		: the full path to squid.conf
@@ -1,6 +1,5 @@
 #!/usr/bin/perl -w
 
-# $Id$
 # Convert hexadecimal cache file numbers (from swap log) into full pathnames.  
 # Duane Wessels 6/30/97
 
@@ -6,8 +6,6 @@
 # - i.e. those for which there is a "Content-length:" HTTP header,
 #   and this does not match the size of the cached object
 
-# $Id$
-
 require "getopts.pl";
 require "stat.pl";
 &Getopts("cd");
@@ -9,8 +9,6 @@
 # cf.data.pre and split it into separare files, one per option
 #
 # Henrik Nordstrom <henrik@henriknordstrom.net>
-#
-# $Id$
 
 #
 # The template file is reasonably simple to parse. There's a number of
@@ -1,7 +1,5 @@
 #!/usr/local/bin/perl
 
-# $Id$
-
 select(STDERR); $|=1;
 select(STDOUT); $|=1;
 
@@ -9,8 +9,6 @@
 # cf.data.pre and generate a set of HTML pages to use as documentation.
 #
 # Adrian Chadd <adrian@squid-cache.org>
-#
-# $Id$
 
 #
 # The template file is reasonably simple to parse. There's a number of
@@ -36,7 +36,7 @@ namespace Auth
 
 #if USE_AUTH
 /// Initialize Auth subsystem
-extern void Init(void);
+void Init(void);
 #else /* USE_AUTH */
 inline void Init(void) {} /* NOP if not USE_AUTH */
 #endif /* USE_AUTH */
@@ -1,8 +1,3 @@
-
-/*
- * $Id$
- */
-
 #ifndef SQUID_COMMCALLS_H
 #define SQUID_COMMCALLS_H
 
@@ -5,12 +5,12 @@
 #define SQUID_CPU_AFFINITY_H
 
 /// set CPU affinity for this process on startup
-SQUIDCEXTERN void CpuAffinityInit();
+void CpuAffinityInit();
 
 /// reconfigure CPU affinity for this process
-SQUIDCEXTERN void CpuAffinityReconfigure();
+void CpuAffinityReconfigure();
 
 /// check CPU affinity configuration and print warnings if needed
-SQUIDCEXTERN void CpuAffinityCheck();
+void CpuAffinityCheck();
 
 #endif // SQUID_CPU_AFFINITY_H
@@ -107,7 +107,7 @@ struct squidaio_thread_t {
 
 static void squidaio_queue_request(squidaio_request_t *);
 static void squidaio_cleanup_request(squidaio_request_t *);
-SQUIDCEXTERN void *squidaio_thread_loop(void *);
+void *squidaio_thread_loop(void *);
 static void squidaio_do_open(squidaio_request_t *);
 static void squidaio_do_read(squidaio_request_t *);
 static void squidaio_do_write(squidaio_request_t *);
@@ -1,7 +1,3 @@
-/*
- * $Id$
- */
-
 #include "squid.h"
 #include "base/TextException.h"
 #include "SquidTime.h"
@@ -1,7 +1,3 @@
-/*
- * $Id$
- */
-
 #ifndef SQUID_FADING_COUNTER_H
 #define SQUID_FADING_COUNTER_H
 
@@ -1,7 +1,3 @@
-/*
- * $Id$
- */
-
 #ifndef SQUID_HTTP_CONTROL_MSG_H
 #define SQUID_HTTP_CONTROL_MSG_H
 
@@ -37,7 +37,7 @@
 #include "HttpHdrSc.h"
 #include "StatHist.h"
 
-extern http_hdr_sc_type &operator++ (http_hdr_sc_type &aHeader);
+http_hdr_sc_type &operator++ (http_hdr_sc_type &aHeader);
 /* copies non-extant fields from new_sc to this sc */
 void
 HttpHdrScTarget::mergeWith(const HttpHdrScTarget * new_sc)
@@ -130,7 +130,7 @@ class HttpMsg
 
 };
 
-SQUIDCEXTERN int httpMsgIsolateHeaders(const char **parse_start, int len, const char **blk_start, const char **blk_end);
+int httpMsgIsolateHeaders(const char **parse_start, int len, const char **blk_start, const char **blk_end);
 
 #define HTTPMSGUNLOCK(a) if(a){(a)->_unlock();(a)=NULL;}
 #define HTTPMSGLOCK(a) (a)->_lock()
@@ -56,7 +56,6 @@
 class ConnStateData;
 
 /*  Http Request */
-//DEAD?: extern int httpRequestHdrAllowedByName(http_hdr_type id);
 void httpRequestPack(void *obj, Packer *p);
 
 class HttpHdrRange;
@@ -62,19 +62,19 @@ class HttpStatusLine
 };
 
 /* init/clean */
-SQUIDCEXTERN void httpStatusLineInit(HttpStatusLine * sline);
-SQUIDCEXTERN void httpStatusLineClean(HttpStatusLine * sline);
+void httpStatusLineInit(HttpStatusLine * sline);
+void httpStatusLineClean(HttpStatusLine * sline);
 /* set/get values */
-SQUIDCEXTERN void httpStatusLineSet(HttpStatusLine * sline, HttpVersion version,
+void httpStatusLineSet(HttpStatusLine * sline, HttpVersion version,
                                     http_status status, const char *reason);
-SQUIDCEXTERN const char *httpStatusLineReason(const HttpStatusLine * sline);
+const char *httpStatusLineReason(const HttpStatusLine * sline);
 /* parse/pack */
 /* parse a 0-terminating buffer and fill internal structires; returns true on success */
-SQUIDCEXTERN int httpStatusLineParse(HttpStatusLine * sline, const String &protoPrefix,
+int httpStatusLineParse(HttpStatusLine * sline, const String &protoPrefix,
                                      const char *start, const char *end);
 /* pack fields using Packer */
-SQUIDCEXTERN void httpStatusLinePackInto(const HttpStatusLine * sline, Packer * p);
+void httpStatusLinePackInto(const HttpStatusLine * sline, Packer * p);
 
-SQUIDCEXTERN const char *httpStatusString(http_status status);
+const char *httpStatusString(http_status status);
 
 #endif /* SQUID_HTTPSTATUSLINE_H */
@@ -173,8 +173,8 @@ class MemBuf
 #endif
 
 /** returns free() function to be used, _freezes_ the object! */
-SQUIDCEXTERN void memBufReport(MemBuf * mb);
+void memBufReport(MemBuf * mb);
 /** pack content into a mem buf. */
-SQUIDCEXTERN void packerToMemInit(Packer * p, MemBuf * mb);
+void packerToMemInit(Packer * p, MemBuf * mb);
 
 #endif /* SQUID_MEM_H */
@@ -1,7 +1,3 @@
-/*
- * $Id$
- */
-
 #ifndef SQUID_MEMSTORE_H
 #define SQUID_MEMSTORE_H
 
@@ -53,9 +53,8 @@ class Packer
     void *real_handler;		/* first parameter to real append and vprintf */
 };
 
-SQUIDCEXTERN void packerClean(Packer * p);
-SQUIDCEXTERN void packerAppend(Packer * p, const char *buf, int size);
-SQUIDCEXTERN void
-packerPrintf(Packer * p, const char *fmt,...) PRINTF_FORMAT_ARG2;
+void packerClean(Packer * p);
+void packerAppend(Packer * p, const char *buf, int size);
+void packerPrintf(Packer * p, const char *fmt,...) PRINTF_FORMAT_ARG2;
 
 #endif /* SQUID_PACKER_H */
@@ -47,8 +47,8 @@ class ErrorState;
 
 typedef void PSC(Comm::ConnectionList *, ErrorState *, void *);
 
-SQUIDCEXTERN void peerSelect(Comm::ConnectionList *, HttpRequest *, StoreEntry *, PSC *, void *data);
-SQUIDCEXTERN void peerSelectInit(void);
+void peerSelect(Comm::ConnectionList *, HttpRequest *, StoreEntry *, PSC *, void *data);
+void peerSelectInit(void);
 
 /**
  * A CachePeer which has been selected as a possible destination.
@@ -57,7 +57,7 @@
 #endif
 
 // implemented in client_side_reply.cc until sides have a common parent
-extern void purgeEntriesByUrl(HttpRequest * req, const char *url);
+void purgeEntriesByUrl(HttpRequest * req, const char *url);
 
 ServerStateData::ServerStateData(FwdState *theFwdState): AsyncJob("ServerStateData"),
         requestSender(NULL),
@@ -111,8 +111,8 @@ class StoreIOState : public RefCountable
 
 StoreIOState::Pointer storeCreate(StoreEntry *, StoreIOState::STFNCB *, StoreIOState::STIOCB *, void *);
 StoreIOState::Pointer storeOpen(StoreEntry *, StoreIOState::STFNCB *, StoreIOState::STIOCB *, void *);
-SQUIDCEXTERN void storeClose(StoreIOState::Pointer, int how);
-SQUIDCEXTERN void storeRead(StoreIOState::Pointer, char *, size_t, off_t, StoreIOState::STRCB *, void *);
-SQUIDCEXTERN void storeIOWrite(StoreIOState::Pointer, char const *, size_t, off_t, FREE *);
+void storeClose(StoreIOState::Pointer, int how);
+void storeRead(StoreIOState::Pointer, char *, size_t, off_t, StoreIOState::STRCB *, void *);
+void storeIOWrite(StoreIOState::Pointer, char const *, size_t, off_t, FREE *);
 
 #endif /* SQUID_STOREIOSTATE_H */
@@ -151,10 +151,10 @@ class StoreMeta
 };
 
 /// \ingroup SwapStoreAPI
-SQUIDCEXTERN char *storeSwapMetaPack(tlv * tlv_list, int *length);
+char *storeSwapMetaPack(tlv * tlv_list, int *length);
 /// \ingroup SwapStoreAPI
-SQUIDCEXTERN tlv *storeSwapMetaBuild(StoreEntry * e);
+tlv *storeSwapMetaBuild(StoreEntry * e);
 /// \ingroup SwapStoreAPI
-SQUIDCEXTERN void storeSwapTLVFree(tlv * n);
+void storeSwapTLVFree(tlv * n);
 
 #endif /* SQUID_TYPELENGTHVALUE_H */
@@ -64,10 +64,10 @@ class StoreMetaUnpacker
 /*
  * store_swapmeta.c
  */
-SQUIDCEXTERN char *storeSwapMetaPack(StoreMeta * tlv_list, int *length);
-SQUIDCEXTERN StoreMeta *storeSwapMetaBuild(StoreEntry * e);
-SQUIDCEXTERN StoreMeta *storeSwapMetaUnpack(const char *buf, int *hdrlen);
-SQUIDCEXTERN void storeSwapTLVFree(StoreMeta * n);
+char *storeSwapMetaPack(StoreMeta * tlv_list, int *length);
+StoreMeta *storeSwapMetaBuild(StoreEntry * e);
+StoreMeta *storeSwapMetaUnpack(const char *buf, int *hdrlen);
+void storeSwapTLVFree(StoreMeta * n);
 StoreMeta ** storeSwapTLVAdd(int type, const void *ptr, size_t len, StoreMeta ** tail);
 
 #endif /* SQUID_TYPELENGTHVALUEUNPACKER_H */
@@ -303,7 +303,7 @@ StringRegistry::remove(String const *entry)
 
 StringRegistry StringRegistry::Instance_;
 
-extern String::size_type memStringCount();
+String::size_type memStringCount();
 
 void
 StringRegistry::Stat(StoreEntry *entry)
@@ -1,8 +1,3 @@
-
-/*
- * $Id$
- */
-
 #include "squid.h"
 #include "acl/SslError.h"
 #include "acl/SslErrorData.h"
@@ -1,8 +1,3 @@
-
-/*
- * $Id$
- */
-
 #ifndef SQUID_ACLSSL_ERROR_H
 #define SQUID_ACLSSL_ERROR_H
 #include "acl/Strategy.h"
@@ -1,8 +1,3 @@
-
-/*
- * $Id$
- */
-
 #ifndef SQUID_ACLSSL_ERRORDATA_H
 #define SQUID_ACLSSL_ERRORDATA_H
 #include "acl/Acl.h"
@@ -11,8 +11,8 @@ typedef enum { pointNone, pointPreCache, pointPostCache } VectPoint;
 typedef enum { srvBlock, srvBypass, srvWait, srvForce} SrvBehaviour;
 
 extern const char *crlf;
-extern const char *methodStr(Method); // TODO: make into a stream operator?
-extern const char *vectPointStr(VectPoint); // TODO: make into a stream op?
+const char *methodStr(Method); // TODO: make into a stream operator?
+const char *vectPointStr(VectPoint); // TODO: make into a stream op?
 
 } // namespace Adaptation
 
@@ -1,8 +1,3 @@
-
-/*
- * $Id$
- */
-
 #ifndef SQUID__ADAPTATION__MESSAGE_H
 #define SQUID__ADAPTATION__MESSAGE_H
 
@@ -61,11 +61,11 @@ class Service: public RefCountable
 typedef Service::Pointer ServicePointer;
 
 typedef Vector<Adaptation::ServicePointer> Services;
-extern Services &AllServices();
-extern ServicePointer FindService(const Service::Id &key);
+Services &AllServices();
+ServicePointer FindService(const Service::Id &key);
 
 /// detach all adaptation services from current configuration
-extern void DetachServices();
+void DetachServices();
 
 } // namespace Adaptation
 
@@ -142,8 +142,8 @@ std::ostream &operator <<(std::ostream &os, const ServicePlan &p)
 }
 
 typedef Vector<ServiceGroupPointer> Groups;
-extern Groups &AllGroups();
-extern ServiceGroupPointer FindGroup(const ServiceGroup::Id &id);
+Groups &AllGroups();
+ServiceGroupPointer FindGroup(const ServiceGroup::Id &id);
 
 } // namespace Adaptation
 
@@ -1,5 +1,4 @@
 /*
- * $Id$
  * DEBUG: section 93    eCAP Interface
  */
 #include "squid.h"
@@ -1,5 +1,4 @@
 /*
- * $Id$
  * DEBUG: section 93    eCAP Interface
  */
 
@@ -1,5 +1,4 @@
 /*
- * $Id$
  * DEBUG: section 93    eCAP Interface
  */
 
@@ -1,5 +1,4 @@
 /*
- * $Id$
  * DEBUG: section 93    eCAP Interface
  */
 
@@ -1,5 +1,4 @@
 /*
- * $Id$
  * DEBUG: section 93    eCAP Interface
  */
 
@@ -49,15 +48,15 @@ class ServiceRep : public Adaptation::Service
 };
 
 /// register loaded eCAP module service
-extern void RegisterAdapterService(const ServiceRep::AdapterService& adapterService);
+void RegisterAdapterService(const ServiceRep::AdapterService& adapterService);
 /// unregister loaded eCAP module service by service uri
-extern void UnregisterAdapterService(const String& serviceUri);
+void UnregisterAdapterService(const String& serviceUri);
 
 /// returns loaded eCAP module service by service uri
-extern ServiceRep::AdapterService FindAdapterService(const String& serviceUri);
+ServiceRep::AdapterService FindAdapterService(const String& serviceUri);
 
 /// check for loaded eCAP services without matching ecap_service in squid.conf
-extern void CheckUnusedAdapterServices(const Services& services);
+void CheckUnusedAdapterServices(const Services& services);
 } // namespace Ecap
 } // namespace Adaptation
 
@@ -1,5 +1,4 @@
 /*
- * $Id$
  * DEBUG: section 93    eCAP Interface
  */
 
@@ -1,7 +1,3 @@
-/*
- * $Id$
- */
-
 #include "squid.h"
 #include "AsyncCall.h"
 #include "base/AsyncCall.h"
@@ -1,7 +1,3 @@
-/*
- * $Id$
- */
-
 #ifndef SQUID_ASYNCCALL_H
 #define SQUID_ASYNCCALL_H
 
@@ -1,7 +1,3 @@
-/*
- * $Id$
- */
-
 #ifndef SQUID_ASYNC_JOB_H
 #define SQUID_ASYNC_JOB_H
 
@@ -1,8 +1,3 @@
-
-/*
- * $Id$
- */
-
 #ifndef SQUID_ASYNCJOBCALLS_H
 #define SQUID_ASYNCJOBCALLS_H
 
@@ -1,7 +1,3 @@
-/*
- * $Id$
- */
-
 #ifndef SQUID_CBC_POINTER_H
 #define SQUID_CBC_POINTER_H
 
@@ -1,7 +1,3 @@
-/*
- * $Id$
- */
-
 #ifndef SQUID_BASE_TIDYPOINTER_H
 #define SQUID_BASE_TIDYPOINTER_H
 
@@ -136,13 +136,13 @@ class clientStreamNode
 };
 
 /// \ingroup ClientStreamAPI
-SQUIDCEXTERN void clientStreamInit(dlink_list *, CSR *, CSD *, CSS *, ClientStreamData, CSCB *, CSD *, ClientStreamData, StoreIOBuffer tailBuffer);
+void clientStreamInit(dlink_list *, CSR *, CSD *, CSS *, ClientStreamData, CSCB *, CSD *, ClientStreamData, StoreIOBuffer tailBuffer);
 
 /// \ingroup ClientStreamAPI
-SQUIDCEXTERN void clientStreamInsertHead(dlink_list *, CSR *, CSCB *, CSD *, CSS *, ClientStreamData);
+void clientStreamInsertHead(dlink_list *, CSR *, CSCB *, CSD *, CSS *, ClientStreamData);
 
 /// \ingroup ClientStreamAPI
-SQUIDCEXTERN clientStreamNode *clientStreamNew(CSR *, CSCB *, CSD *, CSS *, ClientStreamData);
+clientStreamNode *clientStreamNew(CSR *, CSCB *, CSD *, CSS *, ClientStreamData);
 
 /**
  \ingroup ClientStreamAPI
@@ -157,7 +157,7 @@ SQUIDCEXTERN clientStreamNode *clientStreamNew(CSR *, CSCB *, CSD *, CSS *, Clie
  			Each node may alter the reply if appropriate.
  \param replyBuffer	- buffer, length - where and how much.
  */
-SQUIDCEXTERN void clientStreamCallback(clientStreamNode *thisObject, ClientHttpRequest *http, HttpReply *rep, StoreIOBuffer replyBuffer);
+void clientStreamCallback(clientStreamNode *thisObject, ClientHttpRequest *http, HttpReply *rep, StoreIOBuffer replyBuffer);
 
 /**
  \ingroup ClientStreamAPI
@@ -170,7 +170,7 @@ SQUIDCEXTERN void clientStreamCallback(clientStreamNode *thisObject, ClientHttpR
  \param http		Superset of request data, being winnowed down over time. MUST NOT be NULL.
  \param readBuffer	- offset, length, buffer - what, how much and where.
  */
-SQUIDCEXTERN void clientStreamRead(clientStreamNode *thisObject, ClientHttpRequest *http, StoreIOBuffer readBuffer);
+void clientStreamRead(clientStreamNode *thisObject, ClientHttpRequest *http, StoreIOBuffer readBuffer);
 
 /**
  \ingroup ClientStreamAPI
@@ -182,7 +182,7 @@ SQUIDCEXTERN void clientStreamRead(clientStreamNode *thisObject, ClientHttpReque
  \param thisObject	'this' reference for the client stream
  \param http		MUST NOT be NULL.
  */
-SQUIDCEXTERN void clientStreamDetach(clientStreamNode *thisObject, ClientHttpRequest *http);
+void clientStreamDetach(clientStreamNode *thisObject, ClientHttpRequest *http);
 
 /**
  \ingroup ClientStreamAPI
@@ -193,7 +193,7 @@ SQUIDCEXTERN void clientStreamDetach(clientStreamNode *thisObject, ClientHttpReq
  \param thisObject	'this' reference for the client stream
  \param http		MUST NOT be NULL.
  */
-SQUIDCEXTERN void clientStreamAbort(clientStreamNode *thisObject, ClientHttpRequest *http);
+void clientStreamAbort(clientStreamNode *thisObject, ClientHttpRequest *http);
 
 /**
  \ingroup ClientStreamAPI
@@ -207,6 +207,6 @@ SQUIDCEXTERN void clientStreamAbort(clientStreamNode *thisObject, ClientHttpRequ
  \param thisObject	'this' reference for the client stream
  \param http		MUST NOT be NULL.
  */
-SQUIDCEXTERN clientStream_status_t clientStreamStatus(clientStreamNode *thisObject, ClientHttpRequest *http);
+clientStream_status_t clientStreamStatus(clientStreamNode *thisObject, ClientHttpRequest *http);
 
 #endif /* SQUID_CLIENTSTREAM_H */
@@ -1896,9 +1896,9 @@ ClientSocketContext::writeComplete(const Comm::ConnectionPointer &conn, char *bu
     }
 }
 
-extern "C" CSR clientGetMoreData;
-extern "C" CSS clientReplyStatus;
-extern "C" CSD clientReplyDetach;
+SQUIDCEXTERN CSR clientGetMoreData;
+SQUIDCEXTERN CSS clientReplyStatus;
+SQUIDCEXTERN CSD clientReplyDetach;
 
 static ClientSocketContext *
 parseHttpRequestAbort(ConnStateData * csd, const char *uri)
@@ -76,7 +76,7 @@ CBDATA_CLASS_INIT(clientReplyContext);
 
 /* Local functions */
 extern "C" CSS clientReplyStatus;
-extern ErrorState *clientBuildError(err_type, http_status, char const *, Ip::Address &, HttpRequest *);
+ErrorState *clientBuildError(err_type, http_status, char const *, Ip::Address &, HttpRequest *);
 
 /* privates */
 
@@ -433,8 +433,8 @@ clientReplyContext::handleIMSReply(StoreIOBuffer result)
     }
 }
 
-extern "C" CSR clientGetMoreData;
-extern "C" CSD clientReplyDetach;
+SQUIDCEXTERN CSR clientGetMoreData;
+SQUIDCEXTERN CSD clientReplyDetach;
 
 /**
  * clientReplyContext::cacheHit Should only be called until the HTTP reply headers
@@ -101,7 +101,7 @@ static const char *const crlf = "\r\n";
 static void clientFollowXForwardedForCheck(allow_t answer, void *data);
 #endif /* FOLLOW_X_FORWARDED_FOR */
 
-extern ErrorState *clientBuildError(err_type, http_status, char const *url, Ip::Address &, HttpRequest *);
+ErrorState *clientBuildError(err_type, http_status, char const *url, Ip::Address &, HttpRequest *);
 
 CBDATA_CLASS_INIT(ClientRequestContext);
 
@@ -131,9 +131,9 @@ static int clientHierarchical(ClientHttpRequest * http);
 static void clientInterpretRequestHeaders(ClientHttpRequest * http);
 static RH clientRedirectDoneWrapper;
 static void checkNoCacheDoneWrapper(allow_t, void *);
-extern "C" CSR clientGetMoreData;
-extern "C" CSS clientReplyStatus;
-extern "C" CSD clientReplyDetach;
+SQUIDCEXTERN CSR clientGetMoreData;
+SQUIDCEXTERN CSS clientReplyStatus;
+SQUIDCEXTERN CSD clientReplyDetach;
 static void checkFailureRatio(err_type, hier_code);
 
 ClientRequestContext::~ClientRequestContext()
@@ -1533,8 +1533,8 @@ ClientHttpRequest::loggingEntry(StoreEntry *newEntry)
  * the callout.  This is strictly for convenience.
  */
 
-extern tos_t aclMapTOS (acl_tos * head, ACLChecklist * ch);
-extern nfmark_t aclMapNfmark (acl_nfmark * head, ACLChecklist * ch);
+tos_t aclMapTOS (acl_tos * head, ACLChecklist * ch);
+nfmark_t aclMapNfmark (acl_nfmark * head, ACLChecklist * ch);
 
 void
 ClientHttpRequest::doCallouts()
@@ -63,7 +63,7 @@ static void _db_print_stderr(const char *format, va_list args);
 static void _db_print_file(const char *format, va_list args);
 
 #if _SQUID_MSWIN_
-SQUIDCEXTERN LPCRITICAL_SECTION dbg_mutex;
+extern LPCRITICAL_SECTION dbg_mutex;
 typedef BOOL (WINAPI * PFInitializeCriticalSectionAndSpinCount) (LPCRITICAL_SECTION, DWORD);
 #endif
 
@@ -1,6 +1,3 @@
-/*
- * $Id$
- */
 #include "squid.h"
 #include "dlink.h"
 
@@ -203,10 +203,10 @@ class ErrorState
  \par Global effects:
  *            error_text[] - is modified
  */
-SQUIDCEXTERN void errorInitialize(void);
+void errorInitialize(void);
 
 /// \ingroup ErrorPageAPI
-SQUIDCEXTERN void errorClean(void);
+void errorClean(void);
 
 /**
  * \ingroup ErrorPageAPI
@@ -228,7 +228,7 @@ SQUIDCEXTERN void errorClean(void);
  \param clientConn  socket where page object is to be written
  \param err         This object is destroyed after use in this function.
  */
-SQUIDCEXTERN void errorSend(const Comm::ConnectionPointer &conn, ErrorState *err);
+void errorSend(const Comm::ConnectionPointer &conn, ErrorState *err);
 
 /**
  \ingroup ErrorPageAPI
@@ -246,12 +246,12 @@ SQUIDCEXTERN void errorSend(const Comm::ConnectionPointer &conn, ErrorState *err
  \param entry   ??
  \param err     This object is destroyed after use in this function.
  */
-SQUIDCEXTERN void errorAppendEntry(StoreEntry *entry, ErrorState *err);
+void errorAppendEntry(StoreEntry *entry, ErrorState *err);
 
 /// \ingroup ErrorPageAPI
-SQUIDCEXTERN err_type errorReservePageId(const char *page_name);
+err_type errorReservePageId(const char *page_name);
 
-SQUIDCEXTERN const char *errorPageName(int pageId); ///< error ID to string
+const char *errorPageName(int pageId); ///< error ID to string
 
 /**
  \ingroup ErrorPageAPI
@@ -1448,7 +1448,7 @@ ESIContext::freeResources ()
     /* don't touch incoming, it's a pointer into buffered anyway */
 }
 
-extern ErrorState *clientBuildError (err_type, http_status, char const *, Ip::Address &, HttpRequest *);
+ErrorState *clientBuildError (err_type, http_status, char const *, Ip::Address &, HttpRequest *);
 
 /* This can ONLY be used before we have sent *any* data to the client */
 void
@@ -52,6 +52,7 @@ class _fde_disk
     dwrite_q *write_q;
     dwrite_q *write_q_tail;
     off_t offset;
+    _fde_disk() { memset(this, 0, sizeof(_fde_disk)); }
 };
 
 class fde
@@ -113,7 +114,7 @@ class fde
 #endif
     unsigned epoll_state;
 
-    struct _fde_disk disk;
+    _fde_disk disk;
     PF *read_handler;
     void *read_data;
     PF *write_handler;
@@ -167,7 +168,6 @@ class fde
         clientInfo = NULL;
 #endif
         epoll_state = 0;
-        memset(&disk, 0, sizeof(_fde_disk));
         read_handler = NULL;
         read_data = NULL;
         write_handler = NULL;
@@ -193,7 +193,7 @@ class fde
     }
 };
 
-SQUIDCEXTERN int fdNFree(void);
+int fdNFree(void);
 
 #define FD_READ_METHOD(fd, buf, len) (*fd_table[fd].read_method)(fd, buf, len)
 #define FD_WRITE_METHOD(fd, buf, len) (*fd_table[fd].write_method)(fd, buf, len)
@@ -41,15 +41,12 @@ class wordlist;
 
 void fqdncache_init(void);
 void fqdnStats(StoreEntry *);
-//extern void fqdncacheReleaseInvalid(const char *);
-//extern int fqdncacheQueueDrain(void);
 void fqdncacheFreeMemory(void);
 void fqdncache_restart(void);
 void fqdncache_purgelru(void *);
 void fqdncacheAddEntryFromHosts(char *addr, wordlist * hostnames);
 
 const char *fqdncache_gethostbyaddr(const Ip::Address &, int flags);
-//extern const char *fqdnFromAddr(const Ip::Address &);
 void fqdncache_nbgethostbyaddr(const Ip::Address &, FQDNH *, void *);
 
 #endif /* SQUID_FQDNCACHE_H_ */
@@ -10,9 +10,6 @@ is very welcome though to resolve this issue.
 
 Adrian Chadd <adrian@creative.net.au>
 
-$Id$
-
-
 COSS is a Cyclic Object storage system originally designed by
 Eric Stern <estern@logisense.com>. The idea has been extended
 and worked into the current framework by myself.
@@ -1,7 +1,4 @@
 /*
- * $Id$
- * vim: set et :
- *
  * DEBUG: section 47    Store COSS Directory Routines
  * AUTHOR: Eric Stern
  *
@@ -199,15 +199,15 @@ class helper_stateful_request
 MEMPROXY_CLASS_INLINE(helper_stateful_request);
 
 /* helper.c */
-SQUIDCEXTERN void helperOpenServers(helper * hlp);
-SQUIDCEXTERN void helperStatefulOpenServers(statefulhelper * hlp);
-SQUIDCEXTERN void helperSubmit(helper * hlp, const char *buf, HLPCB * callback, void *data);
-SQUIDCEXTERN void helperStatefulSubmit(statefulhelper * hlp, const char *buf, HLPSCB * callback, void *data, helper_stateful_server * lastserver);
-SQUIDCEXTERN void helperStats(StoreEntry * sentry, helper * hlp, const char *label = NULL);
-SQUIDCEXTERN void helperStatefulStats(StoreEntry * sentry, statefulhelper * hlp, const char *label = NULL);
-SQUIDCEXTERN void helperShutdown(helper * hlp);
-SQUIDCEXTERN void helperStatefulShutdown(statefulhelper * hlp);
-SQUIDCEXTERN void helperStatefulReleaseServer(helper_stateful_server * srv);
-SQUIDCEXTERN void *helperStatefulServerGetData(helper_stateful_server * srv);
+void helperOpenServers(helper * hlp);
+void helperStatefulOpenServers(statefulhelper * hlp);
+void helperSubmit(helper * hlp, const char *buf, HLPCB * callback, void *data);
+void helperStatefulSubmit(statefulhelper * hlp, const char *buf, HLPSCB * callback, void *data, helper_stateful_server * lastserver);
+void helperStats(StoreEntry * sentry, helper * hlp, const char *label = NULL);
+void helperStatefulStats(StoreEntry * sentry, statefulhelper * hlp, const char *label = NULL);
+void helperShutdown(helper * hlp);
+void helperStatefulShutdown(statefulhelper * hlp);
+void helperStatefulReleaseServer(helper_stateful_server * srv);
+void *helperStatefulServerGetData(helper_stateful_server * srv);
 
 #endif /* SQUID_HELPER_H */
@@ -168,7 +168,7 @@ class Icmp4 : public Icmp
 #if USE_ICMP
 
 /// pinger helper contains one of these as a global object.
-SQUIDCEXTERN Icmp4 icmp4;
+extern Icmp4 icmp4;
 
 #endif /* USE_ICMP && SQUID_HELPER */
 
@@ -80,7 +80,7 @@ class Icmp6 : public Icmp
 #if USE_ICMP
 
 /// pinger helper contains one of these as a global object.
-SQUIDCEXTERN Icmp6 icmp6;
+extern Icmp6 icmp6;
 
 #endif /* USE_ICMP && SQUID_HELPER */
 #endif /* _INCLUDE_ICMPV6_H */
@@ -72,7 +72,7 @@ class IcmpPinger : public Icmp
 #if USE_ICMP
 
 /// pinger helper contains one of these as a global object.
-SQUIDCEXTERN IcmpPinger control;
+extern IcmpPinger control;
 
 #endif
 
@@ -60,6 +60,6 @@ class IcmpSquid : public Icmp
 };
 
 // global engine within squid.
-SQUIDCEXTERN IcmpSquid icmpEngine;
+extern IcmpSquid icmpEngine;
 
 #endif /* _INCLUDE_ICMPSQUID_H */
@@ -1,6 +1,3 @@
-/*
- * $Id$
- */
 #ifndef SQUID_IDENT_H
 #define SQUID_IDENT_H
 
@@ -402,6 +402,6 @@ class Address_list
 
 } // namespace Ip
 
-extern void parse_IpAddress_list_token(Ip::Address_list **, char *);
+void parse_IpAddress_list_token(Ip::Address_list **, char *);
 
 #endif /* _SQUID_IP_IPADDRESS_H */
@@ -5,7 +5,7 @@ namespace Ip
 {
 
 /// Probe to discover IPv6 capabilities
-extern void ProbeTransport(void);
+void ProbeTransport(void);
 
 /* Squids notion of IPv6 stack types and state */
 #define IPV6_OFF  0
@@ -19,7 +19,7 @@ typedef enum { fdnNone, fdnHttpSocket, fdnHttpsSocket,
                fdnInIcpSocket, fdnInHtcpSocket, fdnEnd
              } FdNoteId;
 
-extern const char *FdNote(int fdNodeId); ///< converts FdNoteId into a string
+const char *FdNote(int fdNodeId); ///< converts FdNoteId into a string
 
 } // namespace Ipc;
 
@@ -69,10 +69,10 @@ class SharedListenResponse
 };
 
 /// prepare and send SharedListenRequest to Coordinator
-extern void JoinSharedListen(const OpenListenerParams &, AsyncCall::Pointer &);
+void JoinSharedListen(const OpenListenerParams &, AsyncCall::Pointer &);
 
 /// process Coordinator response to SharedListenRequest
-extern void SharedListenJoined(const SharedListenResponse &response);
+void SharedListenJoined(const SharedListenResponse &response);
 
 } // namespace Ipc;
 
@@ -37,7 +37,7 @@ class StartListeningCb
 
 /// Depending on whether SMP is on, either ask Coordinator to send us
 /// the listening FD or open a listening socket directly.
-extern void StartListening(int sock_type, int proto, const Comm::ConnectionPointer &listenConn,
+void StartListening(int sock_type, int proto, const Comm::ConnectionPointer &listenConn,
                            FdNoteId fdNote, AsyncCall::Pointer &callback);
 
 } // namespace Ipc;
@@ -55,7 +55,7 @@ class UdsOp: public AsyncJob
 };
 
 /// converts human-readable filename path into UDS address
-extern struct sockaddr_un PathToAddress(const String &pathAddr);
+struct sockaddr_un PathToAddress(const String &pathAddr);
 
 // XXX: move UdsSender code to UdsSender.{cc,h}
 /// attempts to send an IPC message a few times, with a timeout
@@ -50,13 +50,13 @@ class Logfile
 };
 
 /* Legacy API */
-extern Logfile *logfileOpen(const char *path, size_t bufsz, int);
-extern void logfileClose(Logfile * lf);
-extern void logfileRotate(Logfile * lf);
-extern void logfileWrite(Logfile * lf, char *buf, size_t len);
-extern void logfileFlush(Logfile * lf);
-extern void logfilePrintf(Logfile * lf, const char *fmt,...) PRINTF_FORMAT_ARG2;
-extern void logfileLineStart(Logfile * lf);
-extern void logfileLineEnd(Logfile * lf);
+Logfile *logfileOpen(const char *path, size_t bufsz, int);
+void logfileClose(Logfile * lf);
+void logfileRotate(Logfile * lf);
+void logfileWrite(Logfile * lf, char *buf, size_t len);
+void logfileFlush(Logfile * lf);
+void logfilePrintf(Logfile * lf, const char *fmt,...) PRINTF_FORMAT_ARG2;
+void logfileLineStart(Logfile * lf);
+void logfileLineEnd(Logfile * lf);
 
 #endif /* SQUID_SRC_LOG_FILE_H */
@@ -34,6 +34,6 @@
 
 class Logfile;
 
-extern int logfile_mod_daemon_open(Logfile * lf, const char *path, size_t bufsz, int fatal_flag);
+int logfile_mod_daemon_open(Logfile * lf, const char *path, size_t bufsz, int fatal_flag);
 
 #endif /* _SQUID_SRC_LOG_MODDAEMON_H */
@@ -34,6 +34,6 @@
 
 class Logfile;
 
-extern int logfile_mod_stdio_open(Logfile * lf, const char *path, size_t bufsz, int fatal_flag);
+int logfile_mod_stdio_open(Logfile * lf, const char *path, size_t bufsz, int fatal_flag);
 
 #endif /* _SQUID_SRC_LOG_MODSTDIO_H */
@@ -34,6 +34,6 @@
 
 class Logfile;
 
-extern int logfile_mod_syslog_open(Logfile * lf, const char *path, size_t bufsz, int fatal_flag);
+int logfile_mod_syslog_open(Logfile * lf, const char *path, size_t bufsz, int fatal_flag);
 
 #endif /* _SQUID_SRC_LOG_MODSYSLOG_H */
@@ -35,6 +35,6 @@
 
 class Logfile;
 
-extern int logfile_mod_tcp_open(Logfile * lf, const char *path, size_t bufsz, int fatal_flag);
+int logfile_mod_tcp_open(Logfile * lf, const char *path, size_t bufsz, int fatal_flag);
 
 #endif /* _SQUID_SRC_LOG_MODTCP_H */
@@ -34,6 +34,6 @@
 
 class Logfile;
 
-extern int logfile_mod_udp_open(Logfile * lf, const char *path, size_t bufsz, int fatal_flag);
+int logfile_mod_udp_open(Logfile * lf, const char *path, size_t bufsz, int fatal_flag);
 
 #endif /* _SQUID_SRC_LOG_MODUDP_H */
@@ -33,13 +33,13 @@
 #ifndef SQUID_LOG_ACCESS_LOG_H_
 #define SQUID_LOG_ACCESS_LOG_H_
 
-extern int logTypeIsATcpHit(log_type);
-extern void fvdbCountVia(const char *key);
-extern void fvdbCountForw(const char *key);
+int logTypeIsATcpHit(log_type);
+void fvdbCountVia(const char *key);
+void fvdbCountForw(const char *key);
 
 #if HEADERS_LOG
 class HttpRequestMethod;
-extern void headersLog(int cs, int pq, const HttpRequestMethod& m, void *data);
+void headersLog(int cs, int pq, const HttpRequestMethod& m, void *data);
 #endif
 
 #endif /* SQUID_LOG_ACCESS_LOG_H_ */
@@ -160,7 +160,7 @@ static int opt_install_service = FALSE;
 static int opt_remove_service = FALSE;
 static int opt_signal_service = FALSE;
 static int opt_command_line = FALSE;
-extern void WIN32_svcstatusupdate(DWORD, DWORD);
+void WIN32_svcstatusupdate(DWORD, DWORD);
 void WINAPI WIN32_svcHandler(DWORD);
 
 #endif
@@ -196,8 +196,8 @@ static void serverConnectionsClose(void);
 static void watch_child(char **);
 static void setEffectiveUser(void);
 #if MEM_GEN_TRACE
-extern void log_trace_done();
-extern void log_trace_init(char *);
+void log_trace_done();
+void log_trace_init(char *);
 #endif
 static void SquidShutdown(void);
 static void mainSetCwd(void);
@@ -257,7 +257,6 @@ memAllocString(size_t net_size, size_t * gross_size)
     return pool ? pool->alloc() : xcalloc(1, net_size);
 }
 
-extern size_t memStringCount();
 size_t
 memStringCount()
 {
@@ -12,8 +12,8 @@
 #include "Store.h"
 #include "tools.h"
 
-extern void GetCountersStats(Mgr::CountersActionData& stats);
-extern void DumpCountersStats(Mgr::CountersActionData& stats, StoreEntry* sentry);
+void GetCountersStats(Mgr::CountersActionData& stats);
+void DumpCountersStats(Mgr::CountersActionData& stats, StoreEntry* sentry);
 
 Mgr::CountersActionData::CountersActionData()
 {
@@ -19,9 +19,9 @@
 #include "Store.h"
 #include "tools.h"
 
-extern void GetInfo(Mgr::InfoActionData& stats);
-extern void DumpInfo(Mgr::InfoActionData& stats, StoreEntry* sentry);
-extern void DumpMallocStatistics(StoreEntry* sentry);
+void GetInfo(Mgr::InfoActionData& stats);
+void DumpInfo(Mgr::InfoActionData& stats, StoreEntry* sentry);
+void DumpMallocStatistics(StoreEntry* sentry);
 
 Mgr::InfoActionData::InfoActionData()
 {
@@ -12,8 +12,8 @@
 #include "Store.h"
 #include "tools.h"
 
-extern void GetAvgStat(Mgr::IntervalActionData& stats, int minutes, int hours);
-extern void DumpAvgStat(Mgr::IntervalActionData& stats, StoreEntry* sentry);
+void GetAvgStat(Mgr::IntervalActionData& stats, int minutes, int hours);
+void DumpAvgStat(Mgr::IntervalActionData& stats, StoreEntry* sentry);
 
 Mgr::IntervalActionData::IntervalActionData()
 {
@@ -13,8 +13,8 @@
 #include "Store.h"
 #include "tools.h"
 
-extern void GetIoStats(Mgr::IoActionData& stats);
-extern void DumpIoStats(Mgr::IoActionData& stats, StoreEntry* sentry);
+void GetIoStats(Mgr::IoActionData& stats);
+void DumpIoStats(Mgr::IoActionData& stats, StoreEntry* sentry);
 
 Mgr::IoActionData::IoActionData()
 {
@@ -11,8 +11,8 @@
 #include "Store.h"
 #include "tools.h"
 
-extern void GetServiceTimesStats(Mgr::ServiceTimesActionData& stats);
-extern void DumpServiceTimesStats(Mgr::ServiceTimesActionData& stats, StoreEntry* sentry);
+void GetServiceTimesStats(Mgr::ServiceTimesActionData& stats);
+void DumpServiceTimesStats(Mgr::ServiceTimesActionData& stats, StoreEntry* sentry);
 
 Mgr::ServiceTimesActionData::ServiceTimesActionData()
 {
@@ -1,9 +1,6 @@
 -- SQUID-MIB  { iso org(3) dod(6) internet(1) private(4) enterprises(1) 3495 }
 
 SQUID-MIB DEFINITIONS ::= BEGIN
---
--- $Id$
---
 
 IMPORTS
 	enterprises, Unsigned32, TimeTicks, Gauge32, Counter32,
@@ -1,6 +1,4 @@
 #******************************************************************************
-# $Id$
-#
 # File:		mk-strs.pl
 #
 # Author:	Max Okumoto <okumoto@ucsd.edu>
@@ -1,6 +1,3 @@
-/*
- * $Id$
- */
 #ifndef SQUID_PCONN_H
 #define SQUID_PCONN_H
 
@@ -1,7 +1,4 @@
 #  Makefile for storage modules in the Squid Object Cache server
-#
-#  $Id$
-#
 
 include $(top_srcdir)/src/Common.am
 
@@ -1,13 +1,10 @@
-/*
- * $Id$
- */
 #ifndef _SQUIDINC_STORE_HEAP_REPLACEMENT_H
 #define _SQUIDINC_STORE_HEAP_REPLACEMENT_H
 
 #include "heap.h"
 
-extern heap_key HeapKeyGen_StoreEntry_LFUDA(void *entry, double age);
-extern heap_key HeapKeyGen_StoreEntry_GDSF(void *entry, double age);
-extern heap_key HeapKeyGen_StoreEntry_LRU(void *entry, double age);
+heap_key HeapKeyGen_StoreEntry_LFUDA(void *entry, double age);
+heap_key HeapKeyGen_StoreEntry_GDSF(void *entry, double age);
+heap_key HeapKeyGen_StoreEntry_LRU(void *entry, double age);
 
 #endif /* _SQUIDINC_STORE_HEAP_REPLACEMENT_H */
@@ -42,7 +42,7 @@ class Forwarder: public Ipc::Forwarder
     CBDATA_CLASS2(Forwarder);
 };
 
-extern void SendResponse(unsigned int requestId, const Pdu& pdu);
+void SendResponse(unsigned int requestId, const Pdu& pdu);
 
 } // namespace Snmp
 
@@ -31,7 +31,7 @@ class Response: public Ipc::Response
     Pdu pdu; ///< SNMP protocol data unit
 };
 
-extern std::ostream& operator << (std::ostream& os, const Response& response);
+std::ostream& operator << (std::ostream& os, const Response& response);
 
 } // namespace Snmp
 
@@ -1,6 +1,3 @@
-/*
- * $Id$
- */
 #include "squid.h"
 #include "ssl/Config.h"
 
@@ -1,7 +1,3 @@
-/*
- * $Id$
- */
-
 #ifndef SQUID_SSL_CONFIG_H
 #define SQUID_SSL_CONFIG_H
 
@@ -1,7 +1,3 @@
-/*
- * $Id$
- */
-
 #include "squid.h"
 #include "ssl/certificate_db.h"
 #if HAVE_ERRNO_H
@@ -1,7 +1,3 @@
-/*
- * $Id$
- */
-
 #ifndef SQUID_SSL_CERTIFICATE_DB_H
 #define SQUID_SSL_CERTIFICATE_DB_H
 
@@ -1,6 +1,3 @@
-/*
- * $Id$
- */
 #include "squid.h"
 #include "Store.h"
 #include "StoreEntryStream.h"
@@ -1,7 +1,3 @@
-/*
- * $Id$
- */
-
 #ifndef SQUID_SSL_CONTEXT_STORAGE_H
 #define SQUID_SSL_CONTEXT_STORAGE_H
 
@@ -1,7 +1,3 @@
-/*
- * $Id$
- */
-
 #include "squid.h"
 #include "ssl/gadgets.h"
 #include "ssl/crtd_message.h"
@@ -1,7 +1,3 @@
-/*
- * $Id$
- */
-
 #ifndef SQUID_SSL_CRTD_MESSAGE_H
 #define SQUID_SSL_CRTD_MESSAGE_H
 
@@ -1,7 +1,3 @@
-/*
- * $Id$
- */
-
 #include "squid.h"
 #include "ssl/gadgets.h"
 #if HAVE_OPENSSL_X509V3_H
@@ -1,7 +1,3 @@
-/*
- * $Id$
- */
-
 #ifndef SQUID_SSL_HELPER_H
 #define SQUID_SSL_HELPER_H
 
@@ -1,7 +1,3 @@
-/*
- * $Id$
- */
-
 #include "squid.h"
 #include "helpers/defines.h"
 #include "ssl/gadgets.h"
@@ -1936,7 +1936,7 @@ statCPUUsage(int minutes)
                                tvSubDsec(CountHist[minutes].timestamp, CountHist[0].timestamp));
 }
 
-extern double
+double
 statRequestHitRatio(int minutes)
 {
     assert(minutes < N_COUNT_HIST);
@@ -1946,7 +1946,7 @@ statRequestHitRatio(int minutes)
                                CountHist[minutes].client_http.requests);
 }
 
-extern double
+double
 statRequestHitMemoryRatio(int minutes)
 {
     assert(minutes < N_COUNT_HIST);
@@ -1956,7 +1956,7 @@ statRequestHitMemoryRatio(int minutes)
                                CountHist[minutes].client_http.hits);
 }
 
-extern double
+double
 statRequestHitDiskRatio(int minutes)
 {
     assert(minutes < N_COUNT_HIST);
@@ -1966,7 +1966,7 @@ statRequestHitDiskRatio(int minutes)
                                CountHist[minutes].client_http.hits);
 }
 
-extern double
+double
 statByteHitRatio(int minutes)
 {
     size_t s;
@@ -116,7 +116,7 @@ void storeEntryReplaceObject(StoreEntry *, HttpReply *) STUB
 StoreEntry *storeGetPublic(const char *uri, const HttpRequestMethod& method) STUB_RETVAL(NULL)
 StoreEntry *storeGetPublicByRequest(HttpRequest * request) STUB_RETVAL(NULL)
 StoreEntry *storeGetPublicByRequestMethod(HttpRequest * request, const HttpRequestMethod& method) STUB_RETVAL(NULL)
-extern StoreEntry *storeCreateEntry(const char *, const char *, const RequestFlags &, const HttpRequestMethod&) STUB_RETVAL(NULL)
+StoreEntry *storeCreateEntry(const char *, const char *, const RequestFlags &, const HttpRequestMethod&) STUB_RETVAL(NULL)
 void storeInit(void) STUB
 void storeConfigure(void) STUB
 void storeFreeMemory(void) STUB
@@ -47,30 +47,30 @@
 #include "acl/Checklist.h"
 #endif
 
-SQUIDCEXTERN void httpHeaderPutStr(HttpHeader * hdr, http_hdr_type type, const char *str)
+void httpHeaderPutStr(HttpHeader * hdr, http_hdr_type type, const char *str)
 {
     fatal ("dummy function\n");
 }
 
-SQUIDCEXTERN HttpHeaderEntry *httpHeaderGetEntry(const HttpHeader * hdr, HttpHeaderPos * pos)
+HttpHeaderEntry *httpHeaderGetEntry(const HttpHeader * hdr, HttpHeaderPos * pos)
 {
     fatal ("dummy function\n");
     return NULL;
 }
 
-extern String httpHeaderGetList(const HttpHeader * hdr, http_hdr_type id)
+String httpHeaderGetList(const HttpHeader * hdr, http_hdr_type id)
 {
     fatal ("dummy function\n");
     return String();
 }
 
-SQUIDCEXTERN int httpHeaderHas(const HttpHeader * hdr, http_hdr_type type)
+int httpHeaderHas(const HttpHeader * hdr, http_hdr_type type)
 {
     fatal ("dummy function\n");
     return 0;
 }
 
-SQUIDCEXTERN void httpHeaderPutContRange(HttpHeader * hdr, const HttpHdrContRange * cr)
+void httpHeaderPutContRange(HttpHeader * hdr, const HttpHdrContRange * cr)
 {
     fatal ("dummy function\n");
 }
@@ -82,8 +82,8 @@ static void fatal_common(const char *);
 static void fatalvf(const char *fmt, va_list args);
 static void mail_warranty(void);
 #if MEM_GEN_TRACE
-extern void log_trace_done();
-extern void log_trace_init(char *);
+void log_trace_done();
+void log_trace_init(char *);
 #endif
 static void restoreCapabilities(int keep);
 int DebugSignal = -1;
@@ -623,8 +623,8 @@ tunnelConnectDone(const Comm::ConnectionPointer &conn, comm_err_t status, int xe
     commSetConnTimeout(conn, Config.Timeout.read, timeoutCall);
 }
 
-extern tos_t GetTosToServer(HttpRequest * request);
-extern nfmark_t GetNfmarkToServer(HttpRequest * request);
+tos_t GetTosToServer(HttpRequest * request);
+nfmark_t GetNfmarkToServer(HttpRequest * request);
 
 void
 tunnelStart(ClientHttpRequest * http, int64_t * size_ptr, int *status_ptr)
@@ -1,7 +1,5 @@
 #include "squid.h"
 
-/* $Id$
-
 /*
  * On some systems, FD_SETSIZE is set to something lower than the
  * actual number of files which can be opened.  IRIX is one case,
@@ -1,7 +1,3 @@
-/*
- * $Id$
- */
-
 // XXX: This file is made of large pieces of src/tools.cc
 // with only a few minor modifications. TODO: redesign or delete.
 
@@ -70,7 +70,6 @@ configuration file.
 modes of operation
 ==================
 
-$Id$
 Usage:  purge   [-a] [-c cf] [-d l] [-(f|F) fn | -(e|E) re] [-p h[:p]]
                 [-P #] [-s] [-v] [-C dir [-H]] [-n]
 
@@ -1,8 +1,5 @@
 #include "squid.h"
 
-//
-// $Id$
-//
 // Author:  Jens-S. V?ckler <voeckler@rvs.uni-hannover.de>
 //
 // File:    conffile.cc
@@ -1,6 +1,3 @@
-//
-// $Id$
-//
 // Author:  Jens-S. V?ckler <voeckler@rvs.uni-hannover.de>
 //
 // File:    conffile.hh
@@ -1,8 +1,5 @@
 #include "squid.h"
 
-//
-// $Id$
-//
 // Author:  Jens-S. V?ckler <voeckler@rvs.uni-hannover.de>
 //
 // File:    convert.cc
@@ -1,6 +1,3 @@
-//
-// $Id$
-//
 // Author:  Jens-S. V?ckler <voeckler@rvs.uni-hannover.de>
 //
 // File:    convert.hh
@@ -1,6 +1,3 @@
-//
-// $Id$
-//
 // Author:  Jens-S. V?ckler <voeckler@rvs.uni-hannover.de>
 //
 // File:    copyout.cc
@@ -1,6 +1,3 @@
-//
-// $Id$
-//
 // Author:  Jens-S. V?ckler <voeckler@rvs.uni-hannover.de>
 //
 // File:    copyout.hh
@@ -1,6 +1,3 @@
-//
-// $Id$
-//
 // Author:  Jens-S. V?ckler <voeckler@rvs.uni-hannover.de>
 //
 // File:    purge.cc
@@ -149,7 +146,6 @@ static bool verbose  = false;
 static bool envelope = false;
 static bool no_fork  = false;
 static const char* programname = 0;
-static const char* RCS_ID = "$Id$";
 
 // ----------------------------------------------------------------------
 
@@ -574,9 +570,9 @@ void
 helpMe( void )
 // purpuse: write help message and exit
 {
-    printf( "\n%s\nUsage:\t%s\t[-a] [-c cf] [-d l] [-(f|F) fn | -(e|E) re] "
+    printf( "\nUsage:\t%s\t[-a] [-c cf] [-d l] [-(f|F) fn | -(e|E) re] "
             "[-p h[:p]]\n\t\t[-P #] [-s] [-v] [-C dir [-H]] [-n]\n\n",
-            ::RCS_ID, ::programname );
+            ::programname );
     printf(
         " -a\tdisplay a little rotating thingy to indicate that I am alive (tty only).\n"
         " -c c\tsquid.conf location, default \"%s\".\n"
@@ -757,8 +753,8 @@ parseCommandline( int argc, char* argv[], REList*& head,
 
     // show results
     if ( showme ) {
-        printf( "#\n# Currently active values for %s:\n# %s\n",
-                ::programname, ::RCS_ID );
+        printf( "#\n# Currently active values for %s:\n",
+                ::programname);
         printf( "# Debug level       : " );
         if ( ::debugFlag ) printf( "%#6.4x", ::debugFlag );
         else printf( "production level" ); // printf omits 0x prefix for 0!
@@ -1,6 +1,3 @@
-//
-// $Id$
-//
 // Author:   Jens-S. V?ckler <voeckler@rvs.uni-hannover.de>
 // File:     signal.cc
 // Date:     Sat Feb 28 1998
@@ -1,6 +1,3 @@
-//
-// $Id$
-//
 // Author:   Jens-S. V?ckler <voeckler@rvs.uni-hannover.de>
 // File:     signal.hh
 // Date:     Sat Feb 28 1998
@@ -1,8 +1,4 @@
 #include "squid.h"
-
-//
-// $Id$
-//
 // Author:  Jens-S. V?ckler <voeckler@rvs.uni-hannover.de>
 //
 // File:    socket.hh
@@ -1,6 +1,3 @@
-//
-// $Id$
-//
 // Author:  Jens-S. V?ckler <voeckler@rvs.uni-hannover.de>
 //
 // File:    socket.hh
@@ -1,6 +1,3 @@
-//
-// $Id$
-//
 // Author:  Jens-S. V?ckler <voeckler@rvs.uni-hannover.de>
 //
 // File:    squid-tlv.cc
@@ -1,6 +1,3 @@
-//
-// $Id$
-//
 // Author:  Jens-S. V?ckler <voeckler@rvs.uni-hannover.de>
 //
 // File:    squid-tlv.hh