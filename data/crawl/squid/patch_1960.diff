@@ -1,6 +1,6 @@
 
 /*
- * $Id: comm.cc,v 1.65 1996/09/12 16:59:43 wessels Exp $
+ * $Id: comm.cc,v 1.66 1996/09/12 22:17:58 wessels Exp $
  *
  * DEBUG: section 5     Socket Functions
  * AUTHOR: Harvest Derived
@@ -205,7 +205,7 @@ u_short comm_local_port(fd)
 }
 
 #ifdef __STDC__
-static int commBind (int s, struct in_addr in_addr, u_short port)
+static int commBind(int s, struct in_addr in_addr, u_short port)
 #else /* K&R C */
 static int commBind(s, in_addr, port)
      int s;
@@ -532,8 +532,7 @@ int comm_cleanup_fd_entry(fd)
 
 /* Send a udp datagram to specified PORT at HOST. */
 #ifdef __STDC__
-int
-comm_udp_send(int fd, char *host, u_short port, char *buf, int len)
+int comm_udp_send(int fd, char *host, u_short port, char *buf, int len)
 #else /* K&R C */
 int comm_udp_send(fd, host, port, buf, len)
      int fd;
@@ -1,5 +1,5 @@
 /*
- * $Id: main.cc,v 1.70 1996/09/12 03:24:06 wessels Exp $
+ * $Id: main.cc,v 1.71 1996/09/12 22:17:59 wessels Exp $
  *
  * DEBUG: section 1     Startup and Main Loop
  * AUTHOR: Harvest Derived
@@ -118,7 +118,7 @@ int opt_foreground_rebuild = 0;
 int opt_zap_disk_store = 0;
 int opt_syslog_enable = 0;	/* disabled by default */
 int opt_no_ipcache = 0;		/* use ipcache by default */
-static int opt_send_signal = -1;/* no signal to send */
+static int opt_send_signal = -1;	/* no signal to send */
 int vhost_mode = 0;
 int unbuffered_logs = 1;	/* debug and hierarhcy unbuffered by default */
 int shutdown_pending = 0;	/* set by SIGTERM handler (shut_down()) */
@@ -240,7 +240,7 @@ static void mainParseOptions(argc, argv)
 	    else if (!strncmp(optarg, "kill", strlen(optarg)))
 		opt_send_signal = SIGKILL;
 	    else if (!strncmp(optarg, "check", strlen(optarg)))
-		opt_send_signal = 0;  /* SIGNULL */
+		opt_send_signal = 0;	/* SIGNULL */
 	    else
 		usage();
 	    break;
@@ -594,7 +594,6 @@ int main(argc, argv)
 	sendSignal();
 	/* NOTREACHED */
     }
-
     setMaxFD();
 
     if (opt_catch_signals)
@@ -675,25 +674,25 @@ int main(argc, argv)
 
 static void sendSignal()
 {
-	int pid;
-	debug_log = stderr;
-	if (ConfigFile == NULL)
-	    ConfigFile = xstrdup(DefaultConfigFile);
-	parseConfigFile(ConfigFile);
-	pid = readPidFile();
-	if (pid > 1) {
-	    if (kill(pid, opt_send_signal) &&
-		/* ignore permissions if just running check */
-		!(opt_send_signal == 0 && errno == EPERM)) {
-		fprintf(stderr, "%s: ERROR: Could not send ", appname);
-		fprintf(stderr, "signal %d to process %d: %s\n",
-			opt_send_signal, pid, xstrerror());
-		exit(1);
-	    }
-	} else {
-	    fprintf(stderr, "%s: ERROR: No running copy\n", appname);
+    int pid;
+    debug_log = stderr;
+    if (ConfigFile == NULL)
+	ConfigFile = xstrdup(DefaultConfigFile);
+    parseConfigFile(ConfigFile);
+    pid = readPidFile();
+    if (pid > 1) {
+	if (kill(pid, opt_send_signal) &&
+	/* ignore permissions if just running check */
+	    !(opt_send_signal == 0 && errno == EPERM)) {
+	    fprintf(stderr, "%s: ERROR: Could not send ", appname);
+	    fprintf(stderr, "signal %d to process %d: %s\n",
+		opt_send_signal, pid, xstrerror());
 	    exit(1);
 	}
-	/* signal successfully sent */
-	exit(0);
+    } else {
+	fprintf(stderr, "%s: ERROR: No running copy\n", appname);
+	exit(1);
     }
+    /* signal successfully sent */
+    exit(0);
+}
@@ -1,6 +1,6 @@
 
 /*
- * $Id: store.cc,v 1.105 1996/09/12 17:33:00 wessels Exp $
+ * $Id: store.cc,v 1.106 1996/09/12 22:18:00 wessels Exp $
  *
  * DEBUG: section 20    Storeage Manager
  * AUTHOR: Harvest Derived
@@ -1036,7 +1036,6 @@ void storeAppend(e, data, len)
 	debug_trap("storeAppend: NULL entry->mem_obj->data");
 	return;
     }
-
     if (len) {
 	debug(20, 5, "storeAppend: appending %d bytes for '%s'\n", len, e->key);
 	(void) storeGetMemSpace(len, 0);
@@ -1085,20 +1084,20 @@ int storeAddSwapDisk(path)
     if (CacheDirsAllocated == ncache_dirs) {
 	CacheDirsAllocated <<= 1;
 	tmp = xcalloc(CacheDirsAllocated, sizeof(char *));
-	for (i=0; i<ncache_dirs; i++)
-		*(tmp+i) = *(CacheDirs+i);
+	for (i = 0; i < ncache_dirs; i++)
+	    *(tmp + i) = *(CacheDirs + i);
 	xfree(CacheDirs);
 	CacheDirs = tmp;
     }
-    *(CacheDirs+ncache_dirs) = xstrdup(path);
+    *(CacheDirs + ncache_dirs) = xstrdup(path);
     return ++ncache_dirs;
 }
 
 /* return the nth swap directory */
 char *swappath(n)
      int n;
 {
-    return *(CacheDirs+(n % ncache_dirs));
+    return *(CacheDirs + (n % ncache_dirs));
 }
 
 
@@ -1213,7 +1212,6 @@ static int storeSwapInStart(e, swapin_complete_handler, swapin_complete_data)
 	debug_trap("storeSwapInStart: mem_obj already present");
 	return -1;
     }
-
     e->mem_obj = mem = new_MemObject();
 
     path = storeSwapFullPath(e->swap_file_number, NULL);
@@ -1726,11 +1724,10 @@ void storeAbort(e, msg)
     if (e->store_status != STORE_PENDING) {	/* XXX remove later */
 	debug_trap("storeAbort: bad store_status");
 	return;
-    } else if (mem == NULL) {		/* XXX remove later */
+    } else if (mem == NULL) {	/* XXX remove later */
 	debug_trap("storeAbort: null mem");
 	return;
     }
-
     debug(20, 6, "storeAbort: '%s'\n", e->key);
     storeNegativeCache(e);
     e->store_status = STORE_ABORTED;
@@ -2044,7 +2041,7 @@ int storeGetSwapSpace(size)
 		++expired_in_one_bucket;
 		storeRelease(e);
 	    } else if (!storeEntryLocked(e)) {
-		*(LRU_list+list_count) = e;
+		*(LRU_list + list_count) = e;
 		list_count++;
 		scan_count++;
 	    } else {
@@ -2068,7 +2065,7 @@ int storeGetSwapSpace(size)
 	    sizeof(StoreEntry *),
 	    (QS) compareLastRef);
 	if (list_count > SWAP_LRU_REMOVE_COUNT)
-	    list_count = SWAP_LRU_REMOVE_COUNT;	/* chop list */
+	    list_count = SWAP_LRU_REMOVE_COUNT;		/* chop list */
 	if (scan_count > SWAP_LRUSCAN_COUNT)
 	    break;
     }				/* for */
@@ -2101,11 +2098,11 @@ int storeGetSwapSpace(size)
 
     /* Kick LRU out until we have enough swap space */
     for (i = 0; i < list_count; i++) {
-	if (storeRelease(*(LRU_list+i)) == 0)
+	if (storeRelease(*(LRU_list + i)) == 0)
 	    removed++;
     }
     if (store_swap_size + kb_size <= store_swap_low)
-        fReduceSwap = 0;
+	fReduceSwap = 0;
     debug(20, 2, "storeGetSwapSpace: After Freeing Size:   %7d kbytes\n",
 	store_swap_size);
     /* free the list */
@@ -1,6 +1,6 @@
 
 /*
- * $Id: tools.cc,v 1.55 1996/09/12 17:33:01 wessels Exp $
+ * $Id: tools.cc,v 1.56 1996/09/12 22:18:01 wessels Exp $
  *
  * DEBUG: section 21    Misc Functions
  * AUTHOR: Harvest Derived
@@ -337,7 +337,7 @@ void _debug_trap(message)
 {
     if (opt_catch_signals)
 	fatal_dump(message);
-    _db_print(0,0,"WARNING: %s\n", message);
+    _db_print(0, 0, "WARNING: %s\n", message);
 }
 
 void sig_child(sig)
@@ -1,6 +1,6 @@
 
 /*
- * $Id: wais.cc,v 1.38 1996/09/12 16:39:57 wessels Exp $
+ * $Id: wais.cc,v 1.39 1996/09/12 22:18:01 wessels Exp $
  *
  * DEBUG: section 24    WAIS Relay
  * AUTHOR: Harvest Derived
@@ -226,10 +226,10 @@ static void waisReadReply(fd, waisState)
     len = read(fd, buf, 4096);
     debug(24, 5, "waisReadReply: FD %d read len:%d\n", fd, len);
     if (len > 0) {
-        IOStats.Wais.reads++;
-        for (clen = len - 1, bin = 0; clen; bin++)
-            clen >>= 1;
-        IOStats.Wais.read_hist[bin]++;
+	IOStats.Wais.reads++;
+	for (clen = len - 1, bin = 0; clen; bin++)
+	    clen >>= 1;
+	IOStats.Wais.read_hist[bin]++;
     }
     if (len < 0) {
 	debug(24, 1, "waisReadReply: FD %d: read failure: %s.\n", xstrerror());