@@ -71,15 +71,15 @@ typedef u_char oid;
 /* 32 bit integer compatability hack */
 #if SIZEOF_INT == 4
 typedef int num32;
-typedef unsigned int u_num32; 
+typedef unsigned int u_num32;
 #elif SIZEOF_LONG == 4
 typedef long num32;
 typedef unsigned long u_num32;
 #else
-typedef long num32;             /* assume that long's are 32bit */
+typedef long num32;		/* assume that long's are 32bit */
 typedef unsigned long u_num32;
 #endif
-#define NUM32LEN sizeof(num32)  /* this should always be 4 */
+#define NUM32LEN sizeof(num32)	/* this should always be 4 */
 
 /* 
  * internal 64 bit representation:
@@ -89,105 +89,105 @@ struct counter64 {
     u_num32 low;
 };
 
-extern u_char *asn_parse_int (u_char * data,
-	int *datalength,
-	u_char * type,
-	long *intp,
-	int intsize);
-
-extern u_char *asn_build_int (u_char * data,
-	int *datalength,
-	u_char type,
-	long *intp,
-	int intsize);
-
-extern u_char *asn_parse_unsigned_int (u_char * data,
-	int *datalength,
-	u_char * type,
-	u_long * intp,
-	int intsize);
-
-extern u_char *asn_build_unsigned_int (u_char * data,
-	int *datalength,
-	u_char type,
-	u_long * intp,
-	int intsize);
-
-extern u_char *asn_parse_string (u_char * data,
-	int *datalength,
-	u_char * type,
-	u_char * string,
-	int *len);
-
-extern u_char *asn_build_string (u_char * data,
-	int *datalength,
-	u_char type,
-	u_char * str,
-	int len);
-
-extern u_char *asn_parse_header (u_char * data,
-	int *datalength,
-	u_char * type);
-
-extern u_char *asn_build_header (u_char * data,
-	int *datalength,
-	u_char type,
-	int len);
-
-extern u_char *asn_build_sequence (u_char * data,
-	int *datalength,
-	u_char type,
-	int len);
-
-extern u_char *asn_parse_length (u_char * data,
-	u_long * eln);
-
-extern u_char *asn_build_length (u_char * data,
-	int *datalength,
-	int len);
-
-extern u_char *asn_parse_objid (
-	u_char * data,
-	int *datalength,
-	u_char * type,
-	oid * objid,
-	int *objidlength);
-
-extern u_char *asn_build_objid (u_char * data,
-	int *datalength,
-	u_char type,
-	oid * objid,
-	int objidlength);
-
-extern u_char *asn_parse_null (u_char * data,
-	int *datalength,
-	u_char * type);
-
-extern u_char *asn_build_null (u_char * data,
-	int *datalength,
-	u_char type);
-extern u_char *asn_parse_bitstring (u_char * data,
-	int *datalength,
-	u_char * type,
-	u_char * str,
-	int *len);
-
-extern u_char *asn_build_bitstring (u_char * data,
-	int *datalength,
-	u_char type,
-	u_char * str,
-	int len);
-
-extern u_char *asn_parse_unsigned_int64 (u_char * data,
-	int *datalength,
-	u_char * type,
-	struct counter64 * cp,
-	int cp_size);
-
-extern u_char *asn_build_unsigned_int64 (u_char * data,
-	int *datalength,
-	u_char type,
-	struct counter64 * cp,
-	int cp_size);
+extern u_char *asn_parse_int(u_char * data,
+    int *datalength,
+    u_char * type,
+    long *intp,
+    int intsize);
+
+extern u_char *asn_build_int(u_char * data,
+    int *datalength,
+    u_char type,
+    long *intp,
+    int intsize);
+
+extern u_char *asn_parse_unsigned_int(u_char * data,
+    int *datalength,
+    u_char * type,
+    u_long * intp,
+    int intsize);
+
+extern u_char *asn_build_unsigned_int(u_char * data,
+    int *datalength,
+    u_char type,
+    u_long * intp,
+    int intsize);
+
+extern u_char *asn_parse_string(u_char * data,
+    int *datalength,
+    u_char * type,
+    u_char * string,
+    int *len);
+
+extern u_char *asn_build_string(u_char * data,
+    int *datalength,
+    u_char type,
+    u_char * str,
+    int len);
+
+extern u_char *asn_parse_header(u_char * data,
+    int *datalength,
+    u_char * type);
+
+extern u_char *asn_build_header(u_char * data,
+    int *datalength,
+    u_char type,
+    int len);
+
+extern u_char *asn_build_sequence(u_char * data,
+    int *datalength,
+    u_char type,
+    int len);
+
+extern u_char *asn_parse_length(u_char * data,
+    u_long * eln);
+
+extern u_char *asn_build_length(u_char * data,
+    int *datalength,
+    int len);
+
+extern u_char *asn_parse_objid(
+    u_char * data,
+    int *datalength,
+    u_char * type,
+    oid * objid,
+    int *objidlength);
+
+extern u_char *asn_build_objid(u_char * data,
+    int *datalength,
+    u_char type,
+    oid * objid,
+    int objidlength);
+
+extern u_char *asn_parse_null(u_char * data,
+    int *datalength,
+    u_char * type);
+
+extern u_char *asn_build_null(u_char * data,
+    int *datalength,
+    u_char type);
+extern u_char *asn_parse_bitstring(u_char * data,
+    int *datalength,
+    u_char * type,
+    u_char * str,
+    int *len);
+
+extern u_char *asn_build_bitstring(u_char * data,
+    int *datalength,
+    u_char type,
+    u_char * str,
+    int len);
+
+extern u_char *asn_parse_unsigned_int64(u_char * data,
+    int *datalength,
+    u_char * type,
+    struct counter64 *cp,
+    int cp_size);
+
+extern u_char *asn_build_unsigned_int64(u_char * data,
+    int *datalength,
+    u_char type,
+    struct counter64 *cp,
+    int cp_size);
 
 #endif
@@ -87,7 +87,7 @@ struct tree {
 #define TYPE_NSAPADDRESS    13
 #define TYPE_UINTEGER	    14
 
-struct tree *read_mib (const char *fname);
+struct tree *read_mib(const char *fname);
 
 
 #endif
@@ -4,26 +4,26 @@
  *
  */
 /*
-	Copyright 1988, 1989 by Carnegie Mellon University
-
-                      All Rights Reserved
-
-Permission to use, copy, modify, and distribute this software and its 
-documentation for any purpose and without fee is hereby granted, 
-provided that the above copyright notice appear in all copies and that
-both that copyright notice and this permission notice appear in 
-supporting documentation, and that the name of CMU not be
-used in advertising or publicity pertaining to distribution of the
-software without specific, written prior permission.  
-
-CMU DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING
-ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT SHALL
-CMU BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR
-ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
-WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
-ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
-SOFTWARE.
-*/
+ * Copyright 1988, 1989 by Carnegie Mellon University
+ * 
+ * All Rights Reserved
+ * 
+ * Permission to use, copy, modify, and distribute this software and its 
+ * documentation for any purpose and without fee is hereby granted, 
+ * provided that the above copyright notice appear in all copies and that
+ * both that copyright notice and this permission notice appear in 
+ * supporting documentation, and that the name of CMU not be
+ * used in advertising or publicity pertaining to distribution of the
+ * software without specific, written prior permission.  
+ * 
+ * CMU DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING
+ * ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT SHALL
+ * CMU BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR
+ * ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
+ * WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
+ * ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
+ * SOFTWARE.
+ */
 
 #ifndef SNMP_H
 #define SNMP_H
@@ -180,7 +180,7 @@ struct variable_list {
  * the pointer passed to snmp_open()).  On any error, NULL is returned
  * and snmp_errno is set to the appropriate error code.
  */
-struct snmp_session *snmp_open (struct snmp_session * session);
+struct snmp_session *snmp_open(struct snmp_session *session);
 
 /*
  * int snmp_close(session)
@@ -190,7 +190,7 @@ struct snmp_session *snmp_open (struct snmp_session * session);
  * dequeues any pending requests, and closes any sockets allocated for
  * the session.  Returns 0 on error, 1 otherwise.
  */
-int snmp_close (struct snmp_session * session);
+int snmp_close(struct snmp_session *session);
 
 
 /*
@@ -206,8 +206,8 @@ int snmp_close (struct snmp_session * session);
  * On any error, 0 is returned.
  * The pdu is freed by snmp_send() unless a failure occured.
  */
-int snmp_send (struct snmp_session * session,
-	struct snmp_pdu * pdu);
+int snmp_send(struct snmp_session *session,
+    struct snmp_pdu *pdu);
 
 
 /*
@@ -258,10 +258,10 @@ void snmp_free_pdu(struct snmp_pdu *pdu);
  *
  * snmp_select_info returns the number of open sockets.  (i.e. The number of sessions open)
  */
-int snmp_select_info (int *numfds,
-	fd_set * fdset,
-	struct timeval * timeout,
-	int *block);
+int snmp_select_info(int *numfds,
+    fd_set * fdset,
+    struct timeval *timeout,
+    int *block);
 
 /*
  * void snmp_timeout();
@@ -274,7 +274,7 @@ int snmp_select_info (int *numfds,
  * resent.  If there are no more retries available, the callback for the session
  * is used to alert the user of the timeout.
  */
-void snmp_timeout (void);
+void snmp_timeout(void);
 
 
 /*
@@ -40,10 +40,10 @@ struct synch_state {
 
 extern struct synch_state snmp_synch_state;
 
-extern struct snmp_pdu *snmp_pdu_create (int cmd);
+extern struct snmp_pdu *snmp_pdu_create(int cmd);
 
-extern struct snmp_pdu *snmp_fix_pdu (struct snmp_pdu * pdu,
-	int cmd);
-extern char *snmp_errstring (int errstat);
+extern struct snmp_pdu *snmp_fix_pdu(struct snmp_pdu *pdu,
+    int cmd);
+extern char *snmp_errstring(int errstat);
 
 #endif
@@ -90,32 +90,32 @@ SOFTWARE.
 /* from snmp.c */
 extern u_char sid[];		/* size SID_MAX_LEN */
 
-extern u_char *snmp_parse_var_op (u_char * data,
-	oid * var_name,
-	int *var_name_len,
-	u_char * var_val_type,
-	int *var_val_len,
-	u_char ** var_val,
-	int *listlength);
-
-extern u_char *snmp_build_var_op (u_char * data,
-	oid * var_name,
-	int *var_name_len,
-	u_char var_val_type,
-	int var_val_len,
-	u_char * var_val,
-	int *listlength);
-
-extern u_char *snmp_auth_parse (u_char * data,
-	int *length,
-	u_char * sid,
-	int *slen,
-	long *version);
-
-extern u_char *snmp_auth_build (u_char * data,
-	int *length,
-	struct snmp_session * session,
-	int is_agent,
-	int messagelen);
+extern u_char *snmp_parse_var_op(u_char * data,
+    oid * var_name,
+    int *var_name_len,
+    u_char * var_val_type,
+    int *var_val_len,
+    u_char ** var_val,
+    int *listlength);
+
+extern u_char *snmp_build_var_op(u_char * data,
+    oid * var_name,
+    int *var_name_len,
+    u_char var_val_type,
+    int var_val_len,
+    u_char * var_val,
+    int *listlength);
+
+extern u_char *snmp_auth_parse(u_char * data,
+    int *length,
+    u_char * sid,
+    int *slen,
+    long *version);
+
+extern u_char *snmp_auth_build(u_char * data,
+    int *length,
+    struct snmp_session *session,
+    int is_agent,
+    int messagelen);
 
 #endif
@@ -4,15 +4,15 @@
 /*
  * call a function at regular intervals (in seconds):
  */
-extern void snmp_alarm (int ival, void (*handler) (void));
+extern void snmp_alarm(int ival, void (*handler) (void));
 
 
 /*
  * service for filedescriptors:
  */
 
-extern void fd_add (int fd, void (*func) (int fd));
-extern void fd_service (void);
+extern void fd_add(int fd, void (*func) (int fd));
+extern void fd_service(void);
 
 
 /* ---------------------------------------------------------------------- */
@@ -28,21 +28,21 @@ extern void fd_service (void);
  * ** character is always '\0'.
  */
 void
-strcpy_safe (char *str, int str_len, char *val);
+     strcpy_safe(char *str, int str_len, char *val);
 
 
 /*
  * ** Function to get IP address of this agent
  * ** WARNING: this scans all interfaces (slow)
  */
 u_long
-Util_local_ip_address (void);
+Util_local_ip_address(void);
 
 /*
  * ** Function to get the current time in seconds
  */
 long
-Util_time_now (void);
+     Util_time_now(void);
 
 /*
  * ** Function to determine how long the agent has been running
@@ -55,13 +55,13 @@ long
  * ** Read data from file
  */
 int
-Util_file_read (char *file, int offset, char *data, int dataSz);
+    Util_file_read(char *file, int offset, char *data, int dataSz);
 
 /*
  * ** Write data into file
  */
 int
-Util_file_write (char *file, int offset, char *data, int dataSz);
+    Util_file_write(char *file, int offset, char *data, int dataSz);
 
 
 /* ---------------------------------------------------------------------- */
@@ -1,3 +1,4 @@
+
 /* A reasonably functional tmpnam. */
 
 /* Originally by Tom Hageman, tom@basil.icce.rug.nl */
@@ -1,5 +1,6 @@
+
 /*
- * $Id: util.c,v 1.35 1997/11/15 05:43:29 wessels Exp $
+ * $Id: util.c,v 1.36 1997/12/02 00:17:27 wessels Exp $
  *
  * DEBUG: 
  * AUTHOR: Harvest Derived
@@ -464,7 +464,7 @@ asn_build_sequence(data, datalength, type, length)
      u_char type;		/* IN - ASN type of object */
      int length;		/* IN - length of object */
 {
-	assert (*datalength >= 0);
+    assert(*datalength >= 0);
     *datalength -= 4;
     if (*datalength < 0) {
 	*datalength += 4;	/* fix up before punting */
@@ -593,8 +593,8 @@ void
 init_mib(const char *file)
 {
     char *prefix;
-	if (Mib!=NULL)
-		return;
+    if (Mib != NULL)
+	return;
 
     Mib = 0;
     if (file)
@@ -750,7 +750,7 @@ main(argc, argv)
     }
 }
 
-#endif	/* testing */
+#endif /* testing */
 
 
 #if 0
@@ -776,7 +776,7 @@ find_rfc1213_mib(root)
 }
 #endif
 
-int 
+int
 read_objid(input, output, out_len)
      char *input;
      oid *output;
@@ -809,7 +809,7 @@ read_objid(input, output, out_len)
 }
 
 #ifdef notdef
-int 
+int
 read_objid(input, output, out_len)
      char *input;
      oid *output;
@@ -1393,7 +1393,7 @@ parse_moduleIdentity(fp, name)
     return np;
 }
 
-int 
+int
 parse_mib_header(fp, name)
      FILE *fp;
      char *name;
@@ -1,5 +1,6 @@
+
 /*
- * $Id: cache_cf.cc,v 1.235 1997/12/01 22:45:49 wessels Exp $
+ * $Id: cache_cf.cc,v 1.236 1997/12/02 00:17:30 wessels Exp $
  *
  * DEBUG: section 3     Configuration File Parsing
  * AUTHOR: Harvest Derived
@@ -68,11 +69,11 @@ static size_t parseBytesUnits(const char *unit);
 static void free_all(void);
 static void requirePathnameExists(const char *name, const char *path);
 /*
-extern int create_view ( char **);
-extern int create_user ( char **);
-extern int create_community (char **);
-extern void tokenize ( char *, char **, int );
-*/
+ * extern int create_view ( char **);
+ * extern int create_user ( char **);
+ * extern int create_community (char **);
+ * extern void tokenize ( char *, char **, int );
+ */
 extern struct tree *Mib;
 
 static void
@@ -362,32 +363,31 @@ dump_acl(StoreEntry * entry, const char *name, acl * acl)
 }
 
 static void
-parse_snmp_conf(snmpconf **s)
+parse_snmp_conf(snmpconf ** s)
 {
-	static char buff[256];
-	static char *tokens[10], *p;
-	if (Mib==NULL)
-	{
-		if (Config.Snmp.mibPath) 
-			init_mib(Config.Snmp.mibPath) ;
-		else
-			fatal("snmp_mib_path should be defined before any snmp_agent_conf\n");
-	}
-	p=strtok(NULL, null_string);
-	strcpy(buff,p);
-	tokenize(buff, tokens, 10 );
+    static char buff[256];
+    static char *tokens[10], *p;
+    if (Mib == NULL) {
+	if (Config.Snmp.mibPath)
+	    init_mib(Config.Snmp.mibPath);
+	else
+	    fatal("snmp_mib_path should be defined before any snmp_agent_conf\n");
+    }
+    p = strtok(NULL, null_string);
+    strcpy(buff, p);
+    tokenize(buff, tokens, 10);
 
-	if ( !strcmp("view", tokens[0]) ) {
-		if (create_view(tokens) < 0 ) 
-			debug(49,5)("snmp: parse_snmpconf(): error\n");
-	} else if ( !strcmp("user", tokens[0])) {
-		if (create_user(tokens) < 0 )
-			debug(49,5)("snmp: parse_snmpconf(): error\n");
-	} else if ( !strcmp("community", tokens[0] )) { 
-		if ( create_community(tokens) < 0 ) 
-			debug(49,5)("snmp: parse_snmpconf(): error\n");
-	} else 
-		debug(49,5)("snmp: unknown directive %s\n",tokens[0]);
+    if (!strcmp("view", tokens[0])) {
+	if (create_view(tokens) < 0)
+	    debug(49, 5) ("snmp: parse_snmpconf(): error\n");
+    } else if (!strcmp("user", tokens[0])) {
+	if (create_user(tokens) < 0)
+	    debug(49, 5) ("snmp: parse_snmpconf(): error\n");
+    } else if (!strcmp("community", tokens[0])) {
+	if (create_community(tokens) < 0)
+	    debug(49, 5) ("snmp: parse_snmpconf(): error\n");
+    } else
+	debug(49, 5) ("snmp: unknown directive %s\n", tokens[0]);
 }
 
 static void
@@ -497,15 +497,15 @@ parse_cachedir(struct _cacheSwap *swap)
 	if (!strcmp(path, tmp->path)) {
 	    /* just reconfigure it */
 	    if (size == tmp->max_size)
-		debug(3,1)("Cache dir '%s' size remains unchanged at %d MB\n",
-			path, size);
+		debug(3, 1) ("Cache dir '%s' size remains unchanged at %d MB\n",
+		    path, size);
 	    else
-		debug(3,1)("Cache dir '%s' size changed to %d MB\n",
-			path, size);
+		debug(3, 1) ("Cache dir '%s' size changed to %d MB\n",
+		    path, size);
 	    tmp->max_size = size;
 	    if (tmp->read_only != readonly)
-		debug(3,1)("Cache dir '%s' now %s\n",
-			readonly ? "Read-Only" : "Read-Write");
+		debug(3, 1) ("Cache dir '%s' now %s\n",
+		    readonly ? "Read-Only" : "Read-Write");
 	    tmp->read_only = readonly;
 	    return;
 	}
@@ -914,9 +914,9 @@ parse_onoff(int *var)
 #define free_eol free_string
 
 static void
-dump_snmp_conf(StoreEntry *entry, const char *name, snmpconf *head) 
+dump_snmp_conf(StoreEntry * entry, const char *name, snmpconf * head)
 {
-	storeAppendPrintf(entry, "%s -- UNIMPLEMENTED\n", name);
+    storeAppendPrintf(entry, "%s -- UNIMPLEMENTED\n", name);
 }
 
 static void
@@ -981,14 +981,14 @@ parse_refreshpattern(refresh_t ** head)
 }
 
 static void
-free_snmp_conf(snmpconf **head)
+free_snmp_conf(snmpconf ** head)
 {
-	snmpconf *t;
-	while (( t= *head ) != NULL ) { 
-	*head=t->next;
+    snmpconf *t;
+    while ((t = *head) != NULL) {
+	*head = t->next;
 	safe_free(t->line);
 	safe_free(t);
-	}
+    }
 }
 
 static void
@@ -1,6 +1,7 @@
 
+
 /*
- * $Id: cbdata.cc,v 1.10 1997/11/29 17:00:43 wessels Exp $
+ * $Id: cbdata.cc,v 1.11 1997/12/02 00:17:31 wessels Exp $
  *
  * DEBUG: section 45    Callback Data Registry
  * AUTHOR: Duane Wessels
@@ -1,7 +1,7 @@
 
 
 /*
- * $Id: client.cc,v 1.44 1997/12/01 05:34:55 wessels Exp $
+ * $Id: client.cc,v 1.45 1997/12/02 00:17:31 wessels Exp $
  *
  * DEBUG: section 0     WWW Client
  * AUTHOR: Harvest Derived
@@ -244,9 +244,9 @@ main(int argc, char *argv[])
     }
     if (keep_alive) {
 	if (port != 80)
-		snprintf(buf, BUFSIZ, "Proxy-Connection: Keep-Alive\r\n");
+	    snprintf(buf, BUFSIZ, "Proxy-Connection: Keep-Alive\r\n");
 	else
-		snprintf(buf, BUFSIZ, "Connection: Keep-Alive\r\n");
+	    snprintf(buf, BUFSIZ, "Connection: Keep-Alive\r\n");
 	strcat(msg, buf);
     }
     snprintf(buf, BUFSIZ, "\r\n");
@@ -1,6 +1,6 @@
 
 /*
- * $Id: client_side.cc,v 1.163 1997/12/01 04:46:50 wessels Exp $
+ * $Id: client_side.cc,v 1.164 1997/12/02 00:17:32 wessels Exp $
  *
  * DEBUG: section 33    Client-side Routines
  * AUTHOR: Duane Wessels
@@ -1781,7 +1781,7 @@ icpCheckTransferDone(clientHttpRequest * http)
 	 * or wait for EOF on the socket.
 	 */
 	if (mem->reply->code == 200)
-		return 0;
+	    return 0;
 	/*
 	 * reply->hdr_sz will be set by httpParseReplyHeaders()
 	 * if we find the end of the headers.  If we find the end,
@@ -365,7 +365,7 @@ typedef enum {
 } allow_t;
 
 enum {
-SNMP_C_VIEW,
-SNMP_C_USER,
-SNMP_C_COMMUNITY
+    SNMP_C_VIEW,
+    SNMP_C_USER,
+    SNMP_C_COMMUNITY
 };
@@ -1,6 +1,6 @@
 
 /*
- * $Id: errorpage.cc,v 1.106 1997/11/30 03:08:37 wessels Exp $
+ * $Id: errorpage.cc,v 1.107 1997/12/02 00:17:33 wessels Exp $
  *
  * DEBUG: section 4     Error Generation
  * AUTHOR: Duane Wessels
@@ -188,7 +188,7 @@ errorStateFree(ErrorState * err)
 #define CVT_BUF_SZ 512
 
 /*
- * B - URL with FTP %2f hack			x
+ * B - URL with FTP %2f hack                  x
  * c - Squid error code
  * d - seconds elapsed since request received
  * e - errno                                    x
@@ -1,5 +1,6 @@
+
 /*
- * $Id: fd.cc,v 1.15 1997/11/02 03:21:59 wessels Exp $
+ * $Id: fd.cc,v 1.16 1997/12/02 00:17:34 wessels Exp $
  *
  * DEBUG: section 51    Filedescriptor Functions
  * AUTHOR: Duane Wessels
@@ -1,6 +1,6 @@
 
 /*
- * $Id: fqdncache.cc,v 1.70 1997/12/01 22:45:51 wessels Exp $
+ * $Id: fqdncache.cc,v 1.71 1997/12/02 00:17:34 wessels Exp $
  *
  * DEBUG: section 35    FQDN Cache
  * AUTHOR: Harvest Derived
@@ -140,8 +140,8 @@ static void fqdncache_dnsHandleRead(int, void *);
 static fqdncache_entry *fqdncache_parsebuffer(const char *buf, dnsserver_t *);
 static int fqdncache_purgelru(void);
 static void fqdncache_release(fqdncache_entry *);
- fqdncache_entry *fqdncache_GetFirst(void);
- fqdncache_entry *fqdncache_GetNext(void);
+fqdncache_entry *fqdncache_GetFirst(void);
+fqdncache_entry *fqdncache_GetNext(void);
 static fqdncache_entry *fqdncache_create(const char *name);
 static void fqdncache_add_to_hash(fqdncache_entry *);
 static void fqdncache_call_pending(fqdncache_entry *);
@@ -240,13 +240,13 @@ fqdncache_get(const char *name)
     return f;
 }
 
- fqdncache_entry *
+fqdncache_entry *
 fqdncache_GetFirst(void)
 {
     return (fqdncache_entry *) hash_first(fqdn_table);
 }
 
- fqdncache_entry *
+fqdncache_entry *
 fqdncache_GetNext(void)
 {
     return (fqdncache_entry *) hash_next(fqdn_table);
@@ -1,5 +1,6 @@
+
 /*
- * $Id: ftp.cc,v 1.175 1997/11/30 03:08:38 wessels Exp $
+ * $Id: ftp.cc,v 1.176 1997/12/02 00:17:35 wessels Exp $
  *
  * DEBUG: section 9     File Transfer Protocol (FTP)
  * AUTHOR: Harvest Derived
@@ -1,6 +1,6 @@
 
 /*
- * $Id: http.cc,v 1.225 1997/12/01 02:17:29 wessels Exp $
+ * $Id: http.cc,v 1.226 1997/12/02 00:17:37 wessels Exp $
  *
  * DEBUG: section 11    Hypertext Transfer Protocol (HTTP)
  * AUTHOR: Harvest Derived
@@ -580,7 +580,7 @@ httpPconnTransferDone(HttpStateData * httpState)
     if (reply->code != 200)
 	if (reply->content_length < 0)
 	    if (httpState->reply_hdr_state > 1)
-	        return 1;
+		return 1;
     /*
      * If there is no content-length, then we probably can't be persistent
      */
@@ -1,6 +1,6 @@
 
 /*
- * $Id: ipcache.cc,v 1.147 1997/12/01 22:45:52 wessels Exp $
+ * $Id: ipcache.cc,v 1.148 1997/12/02 00:17:38 wessels Exp $
  *
  * DEBUG: section 14    IP Cache
  * AUTHOR: Harvest Derived
@@ -130,7 +130,7 @@ static struct {
     int release_locked;
 } IpcacheStats;
 
- dlink_list lru_list;
+dlink_list lru_list;
 
 static int ipcache_testname(void);
 #if OLD_CODE
@@ -1,5 +1,6 @@
 
 
+
 extern void accessLogLog(AccessLogEntry *);
 extern void accessLogRotate(void);
 extern void accessLogClose(void);
@@ -1,5 +1,6 @@
+
 /*
- * $Id: recv-announce.cc,v 1.14 1997/10/25 17:22:56 wessels Exp $
+ * $Id: recv-announce.cc,v 1.15 1997/12/02 00:17:39 wessels Exp $
  *
  * DEBUG: section 0     Announcement Server
  * AUTHOR: Harvest Derived
@@ -1,5 +1,6 @@
+
 /*
- * $Id: redirect.cc,v 1.49 1997/11/12 00:09:03 wessels Exp $
+ * $Id: redirect.cc,v 1.50 1997/12/02 00:17:40 wessels Exp $
  *
  * DEBUG: section 29    Redirector
  * AUTHOR: Duane Wessels
@@ -374,7 +374,7 @@ snmp_agent_parse(sn_data, length, out_sn_data, out_length, sourceip, ireqid)
 	    create_toobig(out_auth, *out_length, reqid, pi);
 	    break;
 	}			/* else FALLTHRU */
-#tendif
+#ntendif
     case SNMP_ERR_NOACCESS:
     case SNMP_ERR_WRONGTYPE:
     case SNMP_ERR_WRONGLENGTH:
@@ -772,7 +772,7 @@ check_auth(session, sn_data, length, pp, plen, ueret)
     return 0;
 }
 
-int 
+int
 get_community(sessionid)
      u_char *sessionid;
 {
@@ -797,7 +797,7 @@ get_community(sessionid)
     return 0;
 }
 
-static int 
+static int
 goodValue(inType, inLen, actualType, actualLen)
      u_char inType, actualType;
      int inLen, actualLen;
@@ -1,6 +1,6 @@
 
 /*
- * $Id: stat.cc,v 1.177 1997/12/01 22:45:57 wessels Exp $
+ * $Id: stat.cc,v 1.178 1997/12/02 00:17:43 wessels Exp $
  *
  * DEBUG: section 18    Cache Manager Statistics
  * AUTHOR: Harvest Derived
@@ -115,7 +115,7 @@ static void proto_count(cacheinfo *, protocol_t, log_type);
 static void proto_newobject(cacheinfo *, protocol_t, int, int);
 static void proto_purgeobject(cacheinfo *, protocol_t, int);
 static void proto_touchobject(cacheinfo *, protocol_t, int);
- int memoryAccounted(void);
+int memoryAccounted(void);
 static void statAvgTick(void *notused);
 
 #ifdef XMALLOC_STATISTICS
@@ -496,7 +496,7 @@ statFiledescriptors(StoreEntry * sentry)
     storeAppendPrintf(sentry, close_bracket);
 }
 
- int
+int
 memoryAccounted(void)
 {
     return (int)
@@ -35,9 +35,9 @@ struct _acl_deny_info_list {
 };
 
 struct _snmpconf {
-	char *line;
-	int type;
-	struct _snmpconf *next;
+    char *line;
+    int type;
+    struct _snmpconf *next;
 };
 
 struct _acl {
@@ -143,9 +143,9 @@ struct _SquidConfig {
 	int do_queueing;
 	int conf_authtraps;
 	struct _snmpconf *snmpconf;
-	viewEntry       *views;
-	usecEntry       *users;
-	communityEntry  *communities;
+	viewEntry *views;
+	usecEntry *users;
+	communityEntry *communities;
     } Snmp;
     struct {
 	char *log;
@@ -106,7 +106,7 @@ typedef void SIGHDLR(int sig);
 /* 32 bit integer compatability hack */
 #if SIZEOF_INT == 4
 /*typedef int num32;
-typedef unsigned int u_num32;*/
+ * typedef unsigned int u_num32; */
 #elif SIZEOF_LONG == 4
 typedef long num32;
 typedef unsigned long u_num32;