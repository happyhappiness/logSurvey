url,date,title,changes,file_name,reason_for_consistence,is_trivial,old_hunk_file,new_hunk_file,old_log_locs,new_log_locs
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=7340f67b9860ea0531c1450e5aa261c50f67165d,29 Oct 2016,"When extracting, skip "".."" members

* NEWS: Document this.
* src/extract.c (extract_archive): Skip members whose names
contain "".."".",16,data/crawl/tar/hunk_0.cpp,,,data/crawl/tar/old_hunk_0.cpp,data/crawl/tar/new_hunk_0.cpp,[],[12]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=9a33077a7b7ad7d32815a21dee54eba63b38a81c,27 May 2016,"Report positional options that were used but had no effect during
 archive creation

* src/names.c (file_selection_option)
(file_selection_option_name): New functions.
(unconsumed_option_push, unconsumed_option_free)
(unconsumed_option_report): New functions.
(name_list_advance): Maintain a list
of eventually unconsumed options during archive creation.
Report unconsumed options, if any.

* tests/positional01.at: New test case.
* tests/positional02.at: New test case.
* tests/positional03.at: New test case.
* tests/Makefile.am: Add new test cases.
* tests/testsuite.at: Likewise.

* NEWS: Document the changes.
* configure.ac: Version 1.29.90
* doc/tar.texi: Document the changes.",315,data/crawl/tar/hunk_1.cpp,,,data/crawl/tar/old_hunk_1.cpp,data/crawl/tar/new_hunk_1.cpp,[],"[10, 48, 59, 64, 68]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=3010818f369be1555b6b2d1532682e15a11c12cc,6 Apr 2016,"Remove iotty test

The auxiliary utility ttyemu proved to be unreliable.  Given existing
differences between pty implementations and termios ioctls on various
platforms, writing it in a portable way requires effort disproportional
to its actual purpose.

* configure.ac: Remove check for grantpt
* gnulib.modules: Remove posix_openpt, ptsname, and unlockpt
* tests/Makefile.am (TESTSUITE_AT): Remove iotty.at
(check_PROGRAMS): Remove ttyemu.
* tests/testsuite.at: Remove iotty.at
* tests/iotty.at: Remove.
* tests/ttyemu.c: Remove.",530,data/crawl/tar/hunk_2.cpp,,,data/crawl/tar/old_hunk_2.cpp,data/crawl/tar/new_hunk_2.cpp,[219],[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=239441b5dfd0468858bca2e219aae563e1f96d02,6 Dec 2015,"Bugfix

* src/buffer.c (try_new_volume): Warn if user supplied malformed
tar archive.
Consistently use WARN (instead of ERROR) when reporting.",9,data/crawl/tar/hunk_3.cpp,,,data/crawl/tar/old_hunk_3.cpp,data/crawl/tar/new_hunk_3.cpp,[3],[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=239441b5dfd0468858bca2e219aae563e1f96d02,6 Dec 2015,"Bugfix

* src/buffer.c (try_new_volume): Warn if user supplied malformed
tar archive.
Consistently use WARN (instead of ERROR) when reporting.",9,data/crawl/tar/hunk_4.cpp,,,data/crawl/tar/old_hunk_4.cpp,data/crawl/tar/new_hunk_4.cpp,[3],[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=1a615a41f5e1c84b8386d2b524af9126ebb810b1,2 Nov 2015,"New options: --owner-map and --group-map.

* NEWS: Update.
* doc/tar.1: Document --owner-map and --group-map
* doc/tar.texi: Likewise.

* src/map.c: New file.
* src/Makefile.am: Add map.c
* src/common.h (owner_map_read, owner_map_translate)
(group_map_read, group_map_translate): New protos.
* src/create.c (start_header): Use owner_map_translate
and group_map_translate to optionally translate user/group names/ids.
* src/tar.c: New options --owner-map and --group-map.

* tests/map.at: New file.
* tests/Makefile.am: Add map.at
* tests/testsuite.at: Include map.at.",566,data/crawl/tar/hunk_5.cpp,,,data/crawl/tar/old_hunk_5.cpp,data/crawl/tar/new_hunk_5.cpp,[],"[59, 64, 109, 127, 160]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=ae23a57d7003eee5cf323a29bf956c19aea3b63f,31 Aug 2015,"Improve option sanity checking

Any two conflicting options are reported only if they both occur in
the command line.  Otherwise, options defined in the command line
silently override those set in the TAR_OPTIONS environment variable.

* src/common.h (option_source): New enum.
(option_locus): New struct.
* src/names.c (name_elt): New member: line.
(name_add_file): Initialize line.
(read_name_from_file): Keep track of input line number for diagnostic
purposes.
(handle_option): Take a pointer to struct name_elt as 2nd parameter;
pass locus info to more_options().
* src/tar.c (tar_args): New member: loc.
(option_class): New enum.
(optloc_save,optloc_lookup)
(option_set_in_cl,optloc_eq): New functions.
(set_use_compress_program_option): Take into account option location.
(set_old_files_option): New function.
(parse_opt): Keep track of option locations.
(more_options): Improve error reporting.
(parse_default_options): New function.
(decode_options): Parse TAR_OPTION and command line separately.
Options from the latter silently override those from the former.

* lib/prepargs.c: Remove.
* lib/prepargs.h: Remove.
* lib/Makefile.am: Update.",421,data/crawl/tar/hunk_6.cpp,,,data/crawl/tar/old_hunk_6.cpp,data/crawl/tar/new_hunk_6.cpp,[],"[5, 8]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=21f86195b7c48196e7912bbb2755e56af5ea62ff,25 Jul 2015,"Fix typos (preceeded etc.)

Copyright-paperwork-exempt: yes",22,data/crawl/tar/hunk_7.cpp,,,data/crawl/tar/old_hunk_7.cpp,data/crawl/tar/new_hunk_7.cpp,[3],[3]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=21f86195b7c48196e7912bbb2755e56af5ea62ff,25 Jul 2015,"Fix typos (preceeded etc.)

Copyright-paperwork-exempt: yes",22,data/crawl/tar/hunk_8.cpp,,,data/crawl/tar/old_hunk_8.cpp,data/crawl/tar/new_hunk_8.cpp,[2],[2]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=b0902369e789c9aadf584799889a34637688d601,20 Mar 2014,"Fail if archive comes from a terminal.

Based on patch from Pavel Raiskup <praiskup@redhat.com>.

* gnulib.modules: Add new modules.
* src/buffer.c (_open_archive): Refuse to read archive from a tty.
* tests/Makefile.am (TESTSUITE_AT): Add iotty.at
(check_PROGRAMS): New program ttyemu
* tests/testsuite.at: Include iotty.at
* tests/iotty.at: New file.
* tests/ttyemu.c: New file.",527,data/crawl/tar/hunk_9.cpp,,,data/crawl/tar/old_hunk_9.cpp,data/crawl/tar/new_hunk_9.cpp,[],[219]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=93906c238d9309f95afeddfa9ac8d7ce92351e70,21 Feb 2014,"Support exclusion patterns from various VCS ignore lists.

* src/Makefile.am (tar_SOURCES): Add exclist.c
* src/common.h (EXCL_DEFAULT, EXCL_RECURSIVE)
(EXCL_NON_RECURSIVE): New flags.
(excfile_add, info_attach_exclist)
(info_cleanup_exclist,info_free_exclist)
(exclude_vcs_ignores): New prototypes.
* src/create.c (dump_dir0): Call info_attach_exclist.
* src/exclist.c: New file.
* src/incremen.c (scan_directory): Call info_attach_exclist.
* src/names.c (excluded_name): Moved to exclist.c. Change signature.
All uses updated.
* src/tar.c: New options: --exclude-ignore, --exclude-ignore-recursive
and --exclude-vcs-ignores.
(tar_stat_destroy): Free exclist.
* src/tar.h (tar_stat_info): New member exclude_list.

* NEWS: Document new exclusion options.
* doc/tar.texi: Likewise.
* doc/tar.1: Likewise.",564,data/crawl/tar/hunk_10.cpp,,,data/crawl/tar/old_hunk_10.cpp,data/crawl/tar/new_hunk_10.cpp,[],[92]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=f5048215892c1bf6cf602c41146c556f60a63a51,27 Jan 2014,"Provide tar(1) and rmt(8) manpages.

* NEWS: Update.
* doc/Makefile.am: Add manpages.
* doc/tar.1: New file.

* src/tar.c (tar_help_filter): Handle LZOP_OPTION.",1148,data/crawl/tar/hunk_11.cpp,,,data/crawl/tar/old_hunk_11.cpp,data/crawl/tar/new_hunk_11.cpp,[],[356]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=a09e840507c16357ec11b17a02e103c3a26adebc,23 Jan 2014,"Make sure transformed file names retain trailing slash in listing.

* src/list.c (simple_print_header): Print trailing slash
if using the transformed name.
Use had_trailing_slash instead of analyzing last byte if temp_name",11,data/crawl/tar/hunk_12.cpp,,,data/crawl/tar/old_hunk_12.cpp,data/crawl/tar/new_hunk_12.cpp,[],[3]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=eb7e2aa9334d80747c6f6c4f093716fd030f3f15,22 Jan 2014,"checkpoint actions: further improvements.

* NEWS: Update.
* doc/tar.texi: Update.
* src/buffer.c (print_stats): Avoid use of additional string buffer.
Allow for text to be NULL.
Call gettext if it is not.
(format_total_stats): Don't use gettext when calling print_stats.
* src/checkpoint.c (def_format): Change default format.
(format_checkpoint_string): Implement optional arguments for
T conversion.
(finish_checkpoint_actions): Rename to checkpoint_flush_actions,
make extern.  All uses changed.
* src/common.h (checkpoint_flush_actions): New proto.
* src/tar.c (main): Set error_hook",130,data/crawl/tar/hunk_13.cpp,,,data/crawl/tar/old_hunk_13.cpp,data/crawl/tar/new_hunk_13.cpp,[],[13]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=f0a1f78196f75678424712ac36f0a4a46e3e5658,21 Jan 2014,"Implement statistics display in checkpoint actions.

* NEWS: Update.
* configure.ac: Version 1.27.90
* gnulib.modules: Add fprintftime.
* doc/tar.texi: Document the ""totals"" action and new format specifiers
for echo and ttyout checkpoint actions.
* src/buffer.c (compute_duration): Return computed value.
(print_stats): Don't print trailing newline.  Return number of
characters output.
(format_total_stats): New function.
(print_total_stats): Rewrite via format_total_stats.
* src/checkpoint.c (checkpoint_opcode) <cop_totals>: New opcode.
(checkpoint_compile_action): Handle cop_totals.
(expand_checkpoint_string): Remove.
(format_checkpoint_string): New function to be used instead of
expand_checkpoint_string.  All callers updated.
* src/common.h (TF_READ,TF_WRITE)
(TF_DELETED): New constants.
(format_total_stats,print_total_stats): New protos.",383,data/crawl/tar/hunk_14.cpp,,,data/crawl/tar/old_hunk_14.cpp,data/crawl/tar/new_hunk_14.cpp,[],"[101, 106]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=5cb79ed51999e36add131116d3d3db586be9870e,25 Sep 2013,"Improve tar-snapshot-edit

Support architecture-specific field ranges for the ""-c"" function.
Better handle negative or larger-than-32-bit field values even
when running in 32-bit Perl (for the default ""print a summary""
function)",248,data/crawl/tar/hunk_15.cpp,,,data/crawl/tar/old_hunk_15.cpp,data/crawl/tar/new_hunk_15.cpp,[3],[4]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=bff9c3637d9e3c010be697a81d93e934c919d83c,17 Aug 2013,"Improve error diagnostics

* src/names.c (file_list_name): New static function.
(add_file_id): If a filelist is being read twice, print the names
of the files that caused it.
* tests/T-rec.at: New test case.
* tests/Makefile.am: Add new file.
* tests/testsuite.at: Include new file.",74,data/crawl/tar/hunk_16.cpp,,,data/crawl/tar/old_hunk_16.cpp,data/crawl/tar/new_hunk_16.cpp,[18],[36]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=077d7bceff9f28209972325097509d7ae775c1f0,16 Aug 2013,"Don't treat attempts to read an already read file list as fatal
 errors.

* src/names.c (add_file_id): Report error and return 1 if the file
has already been read.
(read_next_name): Don't try to open file if add_file_id returns 1.
(name_next_elt): Simplify conditional.",11,data/crawl/tar/hunk_17.cpp,,,data/crawl/tar/old_hunk_17.cpp,data/crawl/tar/new_hunk_17.cpp,[],[3]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=df7b55a8f6354e30e8da62eec7f706df033d0c81,22 Dec 2012,"Fix some problems with negative and out-of-range integers.

Original problem reported for HP-UX LVM v2.2 by Michael White in
<http://lists.gnu.org/archive/html/bug-tar/2012-10/msg00000.html>.
This patch fixes some other gotchas that I noticed.
* gnulib.modules: Add extern-inline.
* src/common.h: Use _GL_INLINE_HEADER_BEGIN, _GL_INLINE_HEADER_END.
(COMMON_INLINE, max, min): New macros.
(represent_uintmax, valid_timespec): New inline functions.
(SYSINT_BUFSIZE): New constant.
(sysinttostr, strtosysint, decode_timespec): New decls.
* src/create.c (start_private_header): Silently bring the time_t
value into range; it is now the caller's responsibility to deal
with any overflow error.  Use uid 0 and gid 0 rather than the
user's uid/gid, since the faked header isn't ""owned"" by the user
and the uid/gid could in theory be out of range.  Leave major and
minor zeroed.
(FILL): Remove.
(write_gnu_long_link): Let start_private_header zero things out.
* src/create.c (write_gnu_long_link, write_extended):
* src/xheader.c (xheader_write_global):
Use start_time, not current time; no point hammering on the clock.
* src/compare.c (diff_multivol): Check that offset, size are in range.
* src/incremen.c (read_incr_db_01, write_directory_file_entry):
Allow negative time_t, dev_t, and ino_t.
* src/list.c (max): Remove (moved to common.h).
(read_header): Check that size is in range.
(from_header): Return intmax_t, not uintmax_t, to allow negative.
All callers changed.  At compile time, check assumptions about
intmax_t and uintmax_t.  Use bool for booleans.  Avoid overflow
hassles on picky hosts.
(mode_from_header): Last arg is now bool *, not unsigned *.
All callers changed.
(simple_print_header): Do not assume UID, GID fit in 'long'.
* src/list.c (from_header):
* src/xheader.c (out_of_range_header):
Arg is now a plain minimum value, not minus minval converted to
uintmax_t.  All callers changed.
* src/misc.c (COMMON_INLINE): New macro.
(sysinttostr, strtosysint, decode_timespec): New functions.
* src/sparse.c (oldgnu_add_sparse, oldgnu_fixup_header)
(star_fixup_header):
Check for offset overflow.
(decode_num): Clear errno before calling strtoumax.
* src/tar.c (expand_pax_option): Don't discard nanoseconds.
* src/xheader.c (assign_time_option): Allow negative time_t.
(decode_record): Simplify, since out-of-range string is guaranteed
to produce a value exceeding len_max.
(xheader_read): Last arg is off_t, not size_t.
Caller should diagnose negative arg, as needed.
Check that it's in range.
(enum decode_time_status): Remove.
(_decode_time): Remove, folding into decode_time.
(decode_time): Return bool, not enum decode_time_status.
Rely on decode_timespec to do most of the work.
(code_signed_num): New function.
(code_num): Use it.
(decode_signed_num): New function.
(decode_num): Use it.
(gid_coder, gid_decoder, uid_coder, uid_decoder, sparse_map_decoder)
(sparse_map_decoder): Code and decode negative values.
(sparse_map_decoder): Improve check for out-of-range values.
* tests/time01.at: New file.
* tests/Makefile.am (TESTSUITE_AT): Add it.
* tests/testsuite.at: Include it.",759,data/crawl/tar/hunk_18.cpp,,,data/crawl/tar/old_hunk_18.cpp,data/crawl/tar/new_hunk_18.cpp,[5],[7]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=df7b55a8f6354e30e8da62eec7f706df033d0c81,22 Dec 2012,"Fix some problems with negative and out-of-range integers.

Original problem reported for HP-UX LVM v2.2 by Michael White in
<http://lists.gnu.org/archive/html/bug-tar/2012-10/msg00000.html>.
This patch fixes some other gotchas that I noticed.
* gnulib.modules: Add extern-inline.
* src/common.h: Use _GL_INLINE_HEADER_BEGIN, _GL_INLINE_HEADER_END.
(COMMON_INLINE, max, min): New macros.
(represent_uintmax, valid_timespec): New inline functions.
(SYSINT_BUFSIZE): New constant.
(sysinttostr, strtosysint, decode_timespec): New decls.
* src/create.c (start_private_header): Silently bring the time_t
value into range; it is now the caller's responsibility to deal
with any overflow error.  Use uid 0 and gid 0 rather than the
user's uid/gid, since the faked header isn't ""owned"" by the user
and the uid/gid could in theory be out of range.  Leave major and
minor zeroed.
(FILL): Remove.
(write_gnu_long_link): Let start_private_header zero things out.
* src/create.c (write_gnu_long_link, write_extended):
* src/xheader.c (xheader_write_global):
Use start_time, not current time; no point hammering on the clock.
* src/compare.c (diff_multivol): Check that offset, size are in range.
* src/incremen.c (read_incr_db_01, write_directory_file_entry):
Allow negative time_t, dev_t, and ino_t.
* src/list.c (max): Remove (moved to common.h).
(read_header): Check that size is in range.
(from_header): Return intmax_t, not uintmax_t, to allow negative.
All callers changed.  At compile time, check assumptions about
intmax_t and uintmax_t.  Use bool for booleans.  Avoid overflow
hassles on picky hosts.
(mode_from_header): Last arg is now bool *, not unsigned *.
All callers changed.
(simple_print_header): Do not assume UID, GID fit in 'long'.
* src/list.c (from_header):
* src/xheader.c (out_of_range_header):
Arg is now a plain minimum value, not minus minval converted to
uintmax_t.  All callers changed.
* src/misc.c (COMMON_INLINE): New macro.
(sysinttostr, strtosysint, decode_timespec): New functions.
* src/sparse.c (oldgnu_add_sparse, oldgnu_fixup_header)
(star_fixup_header):
Check for offset overflow.
(decode_num): Clear errno before calling strtoumax.
* src/tar.c (expand_pax_option): Don't discard nanoseconds.
* src/xheader.c (assign_time_option): Allow negative time_t.
(decode_record): Simplify, since out-of-range string is guaranteed
to produce a value exceeding len_max.
(xheader_read): Last arg is off_t, not size_t.
Caller should diagnose negative arg, as needed.
Check that it's in range.
(enum decode_time_status): Remove.
(_decode_time): Remove, folding into decode_time.
(decode_time): Return bool, not enum decode_time_status.
Rely on decode_timespec to do most of the work.
(code_signed_num): New function.
(code_num): Use it.
(decode_signed_num): New function.
(decode_num): Use it.
(gid_coder, gid_decoder, uid_coder, uid_decoder, sparse_map_decoder)
(sparse_map_decoder): Code and decode negative values.
(sparse_map_decoder): Improve check for out-of-range values.
* tests/time01.at: New file.
* tests/Makefile.am (TESTSUITE_AT): Add it.
* tests/testsuite.at: Include it.",759,data/crawl/tar/hunk_19.cpp,,,data/crawl/tar/old_hunk_19.cpp,data/crawl/tar/new_hunk_19.cpp,[10],[6]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=df7b55a8f6354e30e8da62eec7f706df033d0c81,22 Dec 2012,"Fix some problems with negative and out-of-range integers.

Original problem reported for HP-UX LVM v2.2 by Michael White in
<http://lists.gnu.org/archive/html/bug-tar/2012-10/msg00000.html>.
This patch fixes some other gotchas that I noticed.
* gnulib.modules: Add extern-inline.
* src/common.h: Use _GL_INLINE_HEADER_BEGIN, _GL_INLINE_HEADER_END.
(COMMON_INLINE, max, min): New macros.
(represent_uintmax, valid_timespec): New inline functions.
(SYSINT_BUFSIZE): New constant.
(sysinttostr, strtosysint, decode_timespec): New decls.
* src/create.c (start_private_header): Silently bring the time_t
value into range; it is now the caller's responsibility to deal
with any overflow error.  Use uid 0 and gid 0 rather than the
user's uid/gid, since the faked header isn't ""owned"" by the user
and the uid/gid could in theory be out of range.  Leave major and
minor zeroed.
(FILL): Remove.
(write_gnu_long_link): Let start_private_header zero things out.
* src/create.c (write_gnu_long_link, write_extended):
* src/xheader.c (xheader_write_global):
Use start_time, not current time; no point hammering on the clock.
* src/compare.c (diff_multivol): Check that offset, size are in range.
* src/incremen.c (read_incr_db_01, write_directory_file_entry):
Allow negative time_t, dev_t, and ino_t.
* src/list.c (max): Remove (moved to common.h).
(read_header): Check that size is in range.
(from_header): Return intmax_t, not uintmax_t, to allow negative.
All callers changed.  At compile time, check assumptions about
intmax_t and uintmax_t.  Use bool for booleans.  Avoid overflow
hassles on picky hosts.
(mode_from_header): Last arg is now bool *, not unsigned *.
All callers changed.
(simple_print_header): Do not assume UID, GID fit in 'long'.
* src/list.c (from_header):
* src/xheader.c (out_of_range_header):
Arg is now a plain minimum value, not minus minval converted to
uintmax_t.  All callers changed.
* src/misc.c (COMMON_INLINE): New macro.
(sysinttostr, strtosysint, decode_timespec): New functions.
* src/sparse.c (oldgnu_add_sparse, oldgnu_fixup_header)
(star_fixup_header):
Check for offset overflow.
(decode_num): Clear errno before calling strtoumax.
* src/tar.c (expand_pax_option): Don't discard nanoseconds.
* src/xheader.c (assign_time_option): Allow negative time_t.
(decode_record): Simplify, since out-of-range string is guaranteed
to produce a value exceeding len_max.
(xheader_read): Last arg is off_t, not size_t.
Caller should diagnose negative arg, as needed.
Check that it's in range.
(enum decode_time_status): Remove.
(_decode_time): Remove, folding into decode_time.
(decode_time): Return bool, not enum decode_time_status.
Rely on decode_timespec to do most of the work.
(code_signed_num): New function.
(code_num): Use it.
(decode_signed_num): New function.
(decode_num): Use it.
(gid_coder, gid_decoder, uid_coder, uid_decoder, sparse_map_decoder)
(sparse_map_decoder): Code and decode negative values.
(sparse_map_decoder): Improve check for out-of-range values.
* tests/time01.at: New file.
* tests/Makefile.am (TESTSUITE_AT): Add it.
* tests/testsuite.at: Include it.",759,data/crawl/tar/hunk_20.cpp,,,data/crawl/tar/old_hunk_20.cpp,data/crawl/tar/new_hunk_20.cpp,[9],[6]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=df7b55a8f6354e30e8da62eec7f706df033d0c81,22 Dec 2012,"Fix some problems with negative and out-of-range integers.

Original problem reported for HP-UX LVM v2.2 by Michael White in
<http://lists.gnu.org/archive/html/bug-tar/2012-10/msg00000.html>.
This patch fixes some other gotchas that I noticed.
* gnulib.modules: Add extern-inline.
* src/common.h: Use _GL_INLINE_HEADER_BEGIN, _GL_INLINE_HEADER_END.
(COMMON_INLINE, max, min): New macros.
(represent_uintmax, valid_timespec): New inline functions.
(SYSINT_BUFSIZE): New constant.
(sysinttostr, strtosysint, decode_timespec): New decls.
* src/create.c (start_private_header): Silently bring the time_t
value into range; it is now the caller's responsibility to deal
with any overflow error.  Use uid 0 and gid 0 rather than the
user's uid/gid, since the faked header isn't ""owned"" by the user
and the uid/gid could in theory be out of range.  Leave major and
minor zeroed.
(FILL): Remove.
(write_gnu_long_link): Let start_private_header zero things out.
* src/create.c (write_gnu_long_link, write_extended):
* src/xheader.c (xheader_write_global):
Use start_time, not current time; no point hammering on the clock.
* src/compare.c (diff_multivol): Check that offset, size are in range.
* src/incremen.c (read_incr_db_01, write_directory_file_entry):
Allow negative time_t, dev_t, and ino_t.
* src/list.c (max): Remove (moved to common.h).
(read_header): Check that size is in range.
(from_header): Return intmax_t, not uintmax_t, to allow negative.
All callers changed.  At compile time, check assumptions about
intmax_t and uintmax_t.  Use bool for booleans.  Avoid overflow
hassles on picky hosts.
(mode_from_header): Last arg is now bool *, not unsigned *.
All callers changed.
(simple_print_header): Do not assume UID, GID fit in 'long'.
* src/list.c (from_header):
* src/xheader.c (out_of_range_header):
Arg is now a plain minimum value, not minus minval converted to
uintmax_t.  All callers changed.
* src/misc.c (COMMON_INLINE): New macro.
(sysinttostr, strtosysint, decode_timespec): New functions.
* src/sparse.c (oldgnu_add_sparse, oldgnu_fixup_header)
(star_fixup_header):
Check for offset overflow.
(decode_num): Clear errno before calling strtoumax.
* src/tar.c (expand_pax_option): Don't discard nanoseconds.
* src/xheader.c (assign_time_option): Allow negative time_t.
(decode_record): Simplify, since out-of-range string is guaranteed
to produce a value exceeding len_max.
(xheader_read): Last arg is off_t, not size_t.
Caller should diagnose negative arg, as needed.
Check that it's in range.
(enum decode_time_status): Remove.
(_decode_time): Remove, folding into decode_time.
(decode_time): Return bool, not enum decode_time_status.
Rely on decode_timespec to do most of the work.
(code_signed_num): New function.
(code_num): Use it.
(decode_signed_num): New function.
(decode_num): Use it.
(gid_coder, gid_decoder, uid_coder, uid_decoder, sparse_map_decoder)
(sparse_map_decoder): Code and decode negative values.
(sparse_map_decoder): Improve check for out-of-range values.
* tests/time01.at: New file.
* tests/Makefile.am (TESTSUITE_AT): Add it.
* tests/testsuite.at: Include it.",759,data/crawl/tar/hunk_21.cpp,,,data/crawl/tar/old_hunk_21.cpp,data/crawl/tar/new_hunk_21.cpp,"[0, 20, 35]","[0, 16, 24]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=df7b55a8f6354e30e8da62eec7f706df033d0c81,22 Dec 2012,"Fix some problems with negative and out-of-range integers.

Original problem reported for HP-UX LVM v2.2 by Michael White in
<http://lists.gnu.org/archive/html/bug-tar/2012-10/msg00000.html>.
This patch fixes some other gotchas that I noticed.
* gnulib.modules: Add extern-inline.
* src/common.h: Use _GL_INLINE_HEADER_BEGIN, _GL_INLINE_HEADER_END.
(COMMON_INLINE, max, min): New macros.
(represent_uintmax, valid_timespec): New inline functions.
(SYSINT_BUFSIZE): New constant.
(sysinttostr, strtosysint, decode_timespec): New decls.
* src/create.c (start_private_header): Silently bring the time_t
value into range; it is now the caller's responsibility to deal
with any overflow error.  Use uid 0 and gid 0 rather than the
user's uid/gid, since the faked header isn't ""owned"" by the user
and the uid/gid could in theory be out of range.  Leave major and
minor zeroed.
(FILL): Remove.
(write_gnu_long_link): Let start_private_header zero things out.
* src/create.c (write_gnu_long_link, write_extended):
* src/xheader.c (xheader_write_global):
Use start_time, not current time; no point hammering on the clock.
* src/compare.c (diff_multivol): Check that offset, size are in range.
* src/incremen.c (read_incr_db_01, write_directory_file_entry):
Allow negative time_t, dev_t, and ino_t.
* src/list.c (max): Remove (moved to common.h).
(read_header): Check that size is in range.
(from_header): Return intmax_t, not uintmax_t, to allow negative.
All callers changed.  At compile time, check assumptions about
intmax_t and uintmax_t.  Use bool for booleans.  Avoid overflow
hassles on picky hosts.
(mode_from_header): Last arg is now bool *, not unsigned *.
All callers changed.
(simple_print_header): Do not assume UID, GID fit in 'long'.
* src/list.c (from_header):
* src/xheader.c (out_of_range_header):
Arg is now a plain minimum value, not minus minval converted to
uintmax_t.  All callers changed.
* src/misc.c (COMMON_INLINE): New macro.
(sysinttostr, strtosysint, decode_timespec): New functions.
* src/sparse.c (oldgnu_add_sparse, oldgnu_fixup_header)
(star_fixup_header):
Check for offset overflow.
(decode_num): Clear errno before calling strtoumax.
* src/tar.c (expand_pax_option): Don't discard nanoseconds.
* src/xheader.c (assign_time_option): Allow negative time_t.
(decode_record): Simplify, since out-of-range string is guaranteed
to produce a value exceeding len_max.
(xheader_read): Last arg is off_t, not size_t.
Caller should diagnose negative arg, as needed.
Check that it's in range.
(enum decode_time_status): Remove.
(_decode_time): Remove, folding into decode_time.
(decode_time): Return bool, not enum decode_time_status.
Rely on decode_timespec to do most of the work.
(code_signed_num): New function.
(code_num): Use it.
(decode_signed_num): New function.
(decode_num): Use it.
(gid_coder, gid_decoder, uid_coder, uid_decoder, sparse_map_decoder)
(sparse_map_decoder): Code and decode negative values.
(sparse_map_decoder): Improve check for out-of-range values.
* tests/time01.at: New file.
* tests/Makefile.am (TESTSUITE_AT): Add it.
* tests/testsuite.at: Include it.",759,data/crawl/tar/hunk_22.cpp,,,data/crawl/tar/old_hunk_22.cpp,data/crawl/tar/new_hunk_22.cpp,[7],[6]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=df7b55a8f6354e30e8da62eec7f706df033d0c81,22 Dec 2012,"Fix some problems with negative and out-of-range integers.

Original problem reported for HP-UX LVM v2.2 by Michael White in
<http://lists.gnu.org/archive/html/bug-tar/2012-10/msg00000.html>.
This patch fixes some other gotchas that I noticed.
* gnulib.modules: Add extern-inline.
* src/common.h: Use _GL_INLINE_HEADER_BEGIN, _GL_INLINE_HEADER_END.
(COMMON_INLINE, max, min): New macros.
(represent_uintmax, valid_timespec): New inline functions.
(SYSINT_BUFSIZE): New constant.
(sysinttostr, strtosysint, decode_timespec): New decls.
* src/create.c (start_private_header): Silently bring the time_t
value into range; it is now the caller's responsibility to deal
with any overflow error.  Use uid 0 and gid 0 rather than the
user's uid/gid, since the faked header isn't ""owned"" by the user
and the uid/gid could in theory be out of range.  Leave major and
minor zeroed.
(FILL): Remove.
(write_gnu_long_link): Let start_private_header zero things out.
* src/create.c (write_gnu_long_link, write_extended):
* src/xheader.c (xheader_write_global):
Use start_time, not current time; no point hammering on the clock.
* src/compare.c (diff_multivol): Check that offset, size are in range.
* src/incremen.c (read_incr_db_01, write_directory_file_entry):
Allow negative time_t, dev_t, and ino_t.
* src/list.c (max): Remove (moved to common.h).
(read_header): Check that size is in range.
(from_header): Return intmax_t, not uintmax_t, to allow negative.
All callers changed.  At compile time, check assumptions about
intmax_t and uintmax_t.  Use bool for booleans.  Avoid overflow
hassles on picky hosts.
(mode_from_header): Last arg is now bool *, not unsigned *.
All callers changed.
(simple_print_header): Do not assume UID, GID fit in 'long'.
* src/list.c (from_header):
* src/xheader.c (out_of_range_header):
Arg is now a plain minimum value, not minus minval converted to
uintmax_t.  All callers changed.
* src/misc.c (COMMON_INLINE): New macro.
(sysinttostr, strtosysint, decode_timespec): New functions.
* src/sparse.c (oldgnu_add_sparse, oldgnu_fixup_header)
(star_fixup_header):
Check for offset overflow.
(decode_num): Clear errno before calling strtoumax.
* src/tar.c (expand_pax_option): Don't discard nanoseconds.
* src/xheader.c (assign_time_option): Allow negative time_t.
(decode_record): Simplify, since out-of-range string is guaranteed
to produce a value exceeding len_max.
(xheader_read): Last arg is off_t, not size_t.
Caller should diagnose negative arg, as needed.
Check that it's in range.
(enum decode_time_status): Remove.
(_decode_time): Remove, folding into decode_time.
(decode_time): Return bool, not enum decode_time_status.
Rely on decode_timespec to do most of the work.
(code_signed_num): New function.
(code_num): Use it.
(decode_signed_num): New function.
(decode_num): Use it.
(gid_coder, gid_decoder, uid_coder, uid_decoder, sparse_map_decoder)
(sparse_map_decoder): Code and decode negative values.
(sparse_map_decoder): Improve check for out-of-range values.
* tests/time01.at: New file.
* tests/Makefile.am (TESTSUITE_AT): Add it.
* tests/testsuite.at: Include it.",759,data/crawl/tar/hunk_23.cpp,,,data/crawl/tar/old_hunk_23.cpp,data/crawl/tar/new_hunk_23.cpp,[7],[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=df7b55a8f6354e30e8da62eec7f706df033d0c81,22 Dec 2012,"Fix some problems with negative and out-of-range integers.

Original problem reported for HP-UX LVM v2.2 by Michael White in
<http://lists.gnu.org/archive/html/bug-tar/2012-10/msg00000.html>.
This patch fixes some other gotchas that I noticed.
* gnulib.modules: Add extern-inline.
* src/common.h: Use _GL_INLINE_HEADER_BEGIN, _GL_INLINE_HEADER_END.
(COMMON_INLINE, max, min): New macros.
(represent_uintmax, valid_timespec): New inline functions.
(SYSINT_BUFSIZE): New constant.
(sysinttostr, strtosysint, decode_timespec): New decls.
* src/create.c (start_private_header): Silently bring the time_t
value into range; it is now the caller's responsibility to deal
with any overflow error.  Use uid 0 and gid 0 rather than the
user's uid/gid, since the faked header isn't ""owned"" by the user
and the uid/gid could in theory be out of range.  Leave major and
minor zeroed.
(FILL): Remove.
(write_gnu_long_link): Let start_private_header zero things out.
* src/create.c (write_gnu_long_link, write_extended):
* src/xheader.c (xheader_write_global):
Use start_time, not current time; no point hammering on the clock.
* src/compare.c (diff_multivol): Check that offset, size are in range.
* src/incremen.c (read_incr_db_01, write_directory_file_entry):
Allow negative time_t, dev_t, and ino_t.
* src/list.c (max): Remove (moved to common.h).
(read_header): Check that size is in range.
(from_header): Return intmax_t, not uintmax_t, to allow negative.
All callers changed.  At compile time, check assumptions about
intmax_t and uintmax_t.  Use bool for booleans.  Avoid overflow
hassles on picky hosts.
(mode_from_header): Last arg is now bool *, not unsigned *.
All callers changed.
(simple_print_header): Do not assume UID, GID fit in 'long'.
* src/list.c (from_header):
* src/xheader.c (out_of_range_header):
Arg is now a plain minimum value, not minus minval converted to
uintmax_t.  All callers changed.
* src/misc.c (COMMON_INLINE): New macro.
(sysinttostr, strtosysint, decode_timespec): New functions.
* src/sparse.c (oldgnu_add_sparse, oldgnu_fixup_header)
(star_fixup_header):
Check for offset overflow.
(decode_num): Clear errno before calling strtoumax.
* src/tar.c (expand_pax_option): Don't discard nanoseconds.
* src/xheader.c (assign_time_option): Allow negative time_t.
(decode_record): Simplify, since out-of-range string is guaranteed
to produce a value exceeding len_max.
(xheader_read): Last arg is off_t, not size_t.
Caller should diagnose negative arg, as needed.
Check that it's in range.
(enum decode_time_status): Remove.
(_decode_time): Remove, folding into decode_time.
(decode_time): Return bool, not enum decode_time_status.
Rely on decode_timespec to do most of the work.
(code_signed_num): New function.
(code_num): Use it.
(decode_signed_num): New function.
(decode_num): Use it.
(gid_coder, gid_decoder, uid_coder, uid_decoder, sparse_map_decoder)
(sparse_map_decoder): Code and decode negative values.
(sparse_map_decoder): Improve check for out-of-range values.
* tests/time01.at: New file.
* tests/Makefile.am (TESTSUITE_AT): Add it.
* tests/testsuite.at: Include it.",759,data/crawl/tar/hunk_24.cpp,,,data/crawl/tar/old_hunk_24.cpp,data/crawl/tar/new_hunk_24.cpp,"[95, 123]","[15, 48]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=cbc51277aa4de1f41434ba073f2e4546ead63005,18 Dec 2012,"build: new configure option --enable-gcc-warnings

This has a similar meaning as in other GNU applications
such as coreutils and Emacs.
* NEWS: Document it.
* .gitignore: Remove redundant build-aux.
Remove gnu, since gnu/Makefile.am is now in git.
Add gnu/.gitignore, gnu/charset.alias, gnu/*.h, gnu/*/ to cover
autogenerated files.
* bootstrap.conf (gnulib_mk): Remove.
* configure.ac: Add support for --enable-gcc-warnings,
taken from coreutils and simplified.
* gnu/Makefile.am: New file.  Formerly this was autogenerated,
but the autogenerated file has been renamed to gnulib.mk,
its usual name when bootstrapping from gnulib.
This way, AM_CFLAGS can incorporate warning options.
* gnulib.modules: Add manywarnings.
* lib/Makefile.am, src/Makefile.am (AM_CFLAGS): New macro,
incorporating warning options.
* lib/attr-xattr.in.h (ENOATTR): New macro, if not already defined.
* src/buffer.c (magic): Don't rely on incomplete initializers.
* src/common.h (report_difference): Add printf format attribute.
* src/system.c (sys_exec_command, sys_exec_info_script)
(sys_exec_checkpoint_script):
* src/tar.c (update_argv):
Add casts to char * to pacify GCC warnings about using string
literals in a char * context.
* src/xattrs.c, src/xattrs.h (xattrs_clear_setup):
Declare parameters as (void), not ().
* src/xheader.c (xheader_format_name): Initialize pptr to null,
to pacify GCC.  Remove unnecessary test of nptr versus null.",161,data/crawl/tar/hunk_25.cpp,,,data/crawl/tar/old_hunk_25.cpp,data/crawl/tar/new_hunk_25.cpp,[3],[3]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=3c4e51fad6dbd595a2fb1e34f11e5a804b9b33ab,19 Nov 2012,"Various fixes.

* src/xattrs.c: Don't mix variable declarations and statements.
Use proper data types.  Remove improper use of const qualifiers.
Use x2nrealloc to reallocate memory buffers.",394,data/crawl/tar/hunk_26.cpp,,,data/crawl/tar/old_hunk_26.cpp,data/crawl/tar/new_hunk_26.cpp,[8],[8]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=3c4e51fad6dbd595a2fb1e34f11e5a804b9b33ab,19 Nov 2012,"Various fixes.

* src/xattrs.c: Don't mix variable declarations and statements.
Use proper data types.  Remove improper use of const qualifiers.
Use x2nrealloc to reallocate memory buffers.",394,data/crawl/tar/hunk_27.cpp,,,data/crawl/tar/old_hunk_27.cpp,data/crawl/tar/new_hunk_27.cpp,"[14, 23]","[13, 22]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=3c4e51fad6dbd595a2fb1e34f11e5a804b9b33ab,19 Nov 2012,"Various fixes.

* src/xattrs.c: Don't mix variable declarations and statements.
Use proper data types.  Remove improper use of const qualifiers.
Use x2nrealloc to reallocate memory buffers.",394,data/crawl/tar/hunk_28.cpp,,,data/crawl/tar/old_hunk_28.cpp,data/crawl/tar/new_hunk_28.cpp,"[16, 25]","[16, 25]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=3c4e51fad6dbd595a2fb1e34f11e5a804b9b33ab,19 Nov 2012,"Various fixes.

* src/xattrs.c: Don't mix variable declarations and statements.
Use proper data types.  Remove improper use of const qualifiers.
Use x2nrealloc to reallocate memory buffers.",394,data/crawl/tar/hunk_29.cpp,,,data/crawl/tar/old_hunk_29.cpp,data/crawl/tar/new_hunk_29.cpp,[27],[26]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=3c4e51fad6dbd595a2fb1e34f11e5a804b9b33ab,19 Nov 2012,"Various fixes.

* src/xattrs.c: Don't mix variable declarations and statements.
Use proper data types.  Remove improper use of const qualifiers.
Use x2nrealloc to reallocate memory buffers.",394,data/crawl/tar/hunk_30.cpp,,,data/crawl/tar/old_hunk_30.cpp,data/crawl/tar/new_hunk_30.cpp,"[31, 61]","[30, 59]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=3c4e51fad6dbd595a2fb1e34f11e5a804b9b33ab,19 Nov 2012,"Various fixes.

* src/xattrs.c: Don't mix variable declarations and statements.
Use proper data types.  Remove improper use of const qualifiers.
Use x2nrealloc to reallocate memory buffers.",394,data/crawl/tar/hunk_31.cpp,,,data/crawl/tar/old_hunk_31.cpp,data/crawl/tar/new_hunk_31.cpp,[17],[18]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=4ac671c49ba5df93c2f386bc8d7dbe50f4671a57,18 Nov 2012,"Minor change.

* src/xattrs.c: Fix indentation. Fix copyleft statement, promote to GPLv3+.
* src/xattrs.h: Likewise",461,data/crawl/tar/hunk_32.cpp,,,data/crawl/tar/old_hunk_32.cpp,data/crawl/tar/new_hunk_32.cpp,[8],[8]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=4ac671c49ba5df93c2f386bc8d7dbe50f4671a57,18 Nov 2012,"Minor change.

* src/xattrs.c: Fix indentation. Fix copyleft statement, promote to GPLv3+.
* src/xattrs.h: Likewise",461,data/crawl/tar/hunk_33.cpp,,,data/crawl/tar/old_hunk_33.cpp,data/crawl/tar/new_hunk_33.cpp,[21],[24]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=4ac671c49ba5df93c2f386bc8d7dbe50f4671a57,18 Nov 2012,"Minor change.

* src/xattrs.c: Fix indentation. Fix copyleft statement, promote to GPLv3+.
* src/xattrs.h: Likewise",461,data/crawl/tar/hunk_34.cpp,,,data/crawl/tar/old_hunk_34.cpp,data/crawl/tar/new_hunk_34.cpp,[15],[16]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=4ac671c49ba5df93c2f386bc8d7dbe50f4671a57,18 Nov 2012,"Minor change.

* src/xattrs.c: Fix indentation. Fix copyleft statement, promote to GPLv3+.
* src/xattrs.h: Likewise",461,data/crawl/tar/hunk_35.cpp,,,data/crawl/tar/old_hunk_35.cpp,data/crawl/tar/new_hunk_35.cpp,[19],[20]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=4ac671c49ba5df93c2f386bc8d7dbe50f4671a57,18 Nov 2012,"Minor change.

* src/xattrs.c: Fix indentation. Fix copyleft statement, promote to GPLv3+.
* src/xattrs.h: Likewise",461,data/crawl/tar/hunk_36.cpp,,,data/crawl/tar/old_hunk_36.cpp,data/crawl/tar/new_hunk_36.cpp,"[30, 59]","[33, 63]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=4ac671c49ba5df93c2f386bc8d7dbe50f4671a57,18 Nov 2012,"Minor change.

* src/xattrs.c: Fix indentation. Fix copyleft statement, promote to GPLv3+.
* src/xattrs.h: Likewise",461,data/crawl/tar/hunk_37.cpp,,,data/crawl/tar/old_hunk_37.cpp,data/crawl/tar/new_hunk_37.cpp,[34],[36]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=085cace1805308589c6211429068f68047be0b0e,18 Nov 2012,"Add SELinux context store/restore/list support.

* gnulib.modules: Add selinux-at.
* src/Makefile.am (tar_LDADD): Add LIB_SELINUX.

* src/create.c (start_header, dump_file0): Handle selinux contexts.
* src/extract.c (delayed_set_stat) <cntx_name>: New member.
(delayed_link) <cntx_name>: New member.
(set_stat, delay_set_stat)
(apply_nonancestor_delayed_set_stat): Handle selinux contexts.
* src/tar.c: New options: ""--selinux"", ""--no-selinux"".
(tar_stat_destroy): Free cntx_name.
* src/tar.h (tar_stat_info) <cntx_name>: New member.
* src/xattrs.c (xattrs_selinux_get)
(xattrs_selinux_set): New functions.
(xattrs_print_char): Honor selinux_context_option.
(xattrs_print): Print selinux context.
* src/xheader.c: Handle new keyword ""RHT.security.selinux"".
* tests/Makefile.am: Add new tests.
* tests/testsuite.at: Likewise.
* tests/selacl01.at: New test.
* tests/selnx01.at: New test.",311,data/crawl/tar/hunk_38.cpp,,,data/crawl/tar/old_hunk_38.cpp,data/crawl/tar/new_hunk_38.cpp,[],[20]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=d36f5a3cc3280d6c4a58367bf51b527d5c14ac04,18 Nov 2012,"Support for POSIX ACLs

* configure.ac: Check whether ACLs are available on the
host system.
* gnulib.modules: Add acl
* src/create.c (start_header): Store ACLs when creating
a POSIX archive.
(dump_file0): Handle ACLs.
* src/extract.c (delayed_set_stat) <acls_a_ptr, acls_a_len>
<acls_d_ptr, acls_d_len>: New members.
(delayed_link): Likewise.
(set_stat,delay_set_stat)
(apply_nonancestor_delayed_set_stat): Set ACLs.
* src/tar.c: New options: ""--acls"", ""--no-acls""
(tar_stat_destroy): Free acls_a_ptr and acls_d_ptr fields.
* src/tar.h (tar_stat_info) <acls_a_ptr, acls_a_len>
<acls_d_ptr, acls_d_len>: New members.
* src/xattrs.c (xattrs_acls_get, xattrs_acls_set): New functions.
* src/xheader.c: Support new keywors: ""SCHILY.acl.access"" and
""SCHILY.acl.default"".
* tests/Makefile.am: Add new tests.
* tests/testsuite.at: Likewise.
* tests/acls01.at: New test.
* tests/acls02.at: New test.",627,data/crawl/tar/hunk_39.cpp,,,data/crawl/tar/old_hunk_39.cpp,data/crawl/tar/new_hunk_39.cpp,[],"[155, 179, 188, 210, 219, 282]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=696338043e52f440853e1143c52b81b41cd59723,18 Nov 2012,"Add basic suuport for extended attributes.

* src/Makefile.am: Add xattrs.[ch]
* src/xattrs.c: New file.
* src/xattrs.h: New file.
* src/common.h (READ_LIKE_SUBCOMMAND): New define.
(selinux_context_option, acls_option, xattrs_option): New globals.
(xheader_xattr_init, xheader_xattr_free)
(xheader_xattr_copy, xheader_xattr_add): New protos.
(WARN_XATTR_WRITE): New mask.
* src/create.c (start_header): Handle xattrs pairs if in POSIX format.
(dump_file0): Handle extended attributes.
* src/extract.c (delayed_set_stat,delayed_link) <xattr_map_size>
<xattr_map>: New members.
(set_xattr): New static function.
(open_output_file): Accept an additional argument indicating
whether the file has already been created.
(set_stat,delay_set_stat)
(apply_nonancestor_delayed_set_stat)
(extract_file): Handle extended attributes.
* src/list.c (decode_header, simple_print_header): Display
extended attributes.
* src/tar.c: New options --xattrs, --no-xattrs, --xattrs-include,
--xattrs-exclude
(tar_stat_destroy): Free the xattr_map storage.
* src/tar.h (xattr_array): New struct.
(tar_stat_info) <xattr_map_size, xattr_map>: New members.
* src/warning.c: New warning control keyword ""xattr-write"".
* src/xheader.c (xheader_xattr_init)
(xheader_xattr_free, xheader_xattr_add)
(xheader_xattr_copy): New functions.
(struct xhdr_tab) <prefix>: New member.
(locate_handler): Permit selecting the keyword based on its
prefix.
(xheader_protected_pattern_p)
(xheader_protected_keyword_p): Likewise.
(xattr_coder, xattr_decoder): New functions.
(xhdr_tab): Reflect the changes to struct xhdr_tab.
New keyword ""SCHILY.xattr"".
* tests/Makefile.am: Add new tests.
* tests/testsuite.at: Likewise.
(AT_CHECK_UTIL, AT_XATTRS_UTILS_PREREQ)
(AT_CAPABILITIES_UTILS_PREREQ, AT_XATTRS_PREREQ): New defuns.
* tests/xattr01.at: New test.
* tests/xattr02.at: New test.
* tests/xattr03.at: New test.
* tests/xattr04.at: New test.
* tests/capabs_raw01.at: New test.",822,data/crawl/tar/hunk_40.cpp,,,data/crawl/tar/old_hunk_40.cpp,data/crawl/tar/new_hunk_40.cpp,[],"[114, 143]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=debc485626c0c143731b0ca229d18b48085bb2ef,18 Jan 2012,"tar: quote 'like this', not `like this'

This fixes some test failures recently introduced by gnulib updates
prompted by recent changes to the GNU coding standards,
which now advise to use quotes 'like this' or ""like this""
rather than `like this'.
* NEWS: Document this.
* README, README-hacking, doc/Makefile.am, scripts/backup.in:
* scripts/backup.sh.in, scripts/dump-remind.in:
* src/buffer.c, src/checkpoint.c, src/create.c, src/incremen.c:
* src/misc.c, src/names.c, src/sparse.c, src/transform.c:
* tests/incr02.at, tests/incremental.at, tests/multiv08.at:
* tests/sparse04.at, tests/star/README, tests/update01.at:
Quote 'like this' in comments.
* src/tar.h:
Quote ""like this"" in comments, when quoting English phrases rather
than code.
* configure.ac:
* scripts/xsparse.c (get_var, read_xheader, main):
* src/compare.c (diff_archive):
* src/extract.c (prepare_to_extract):
* src/tar.c (request_stdin, tar_set_quoting_style, doc, options)
(set_subcommand_option, report_textual_dates, parse_opt)
(decode_options, main):
* src/xheader.c (decx):
Quote 'like this' in diagnostics.
* doc/tar.texi (list, warnings, override)
(Selecting Archive Members, quoting styles, after, hard links)
(Sparse Recovery, Multi-Volume Archives, label):
Adjust documentation to match new output.
* tests/backup01.at, tests/incr01.at, tests/incr04.at:
* tests/label04.at, tests/label05.at, tests/link03.at:
* tests/listed02.at, tests/multiv03.at, tests/multiv05.at:
* tests/rename01.at, tests/rename02.at, tests/rename03.at:
* tests/volume.at:
Adjust tests to match new quoting behavior.",527,data/crawl/tar/hunk_41.cpp,,,data/crawl/tar/old_hunk_41.cpp,data/crawl/tar/new_hunk_41.cpp,[3],[3]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=debc485626c0c143731b0ca229d18b48085bb2ef,18 Jan 2012,"tar: quote 'like this', not `like this'

This fixes some test failures recently introduced by gnulib updates
prompted by recent changes to the GNU coding standards,
which now advise to use quotes 'like this' or ""like this""
rather than `like this'.
* NEWS: Document this.
* README, README-hacking, doc/Makefile.am, scripts/backup.in:
* scripts/backup.sh.in, scripts/dump-remind.in:
* src/buffer.c, src/checkpoint.c, src/create.c, src/incremen.c:
* src/misc.c, src/names.c, src/sparse.c, src/transform.c:
* tests/incr02.at, tests/incremental.at, tests/multiv08.at:
* tests/sparse04.at, tests/star/README, tests/update01.at:
Quote 'like this' in comments.
* src/tar.h:
Quote ""like this"" in comments, when quoting English phrases rather
than code.
* configure.ac:
* scripts/xsparse.c (get_var, read_xheader, main):
* src/compare.c (diff_archive):
* src/extract.c (prepare_to_extract):
* src/tar.c (request_stdin, tar_set_quoting_style, doc, options)
(set_subcommand_option, report_textual_dates, parse_opt)
(decode_options, main):
* src/xheader.c (decx):
Quote 'like this' in diagnostics.
* doc/tar.texi (list, warnings, override)
(Selecting Archive Members, quoting styles, after, hard links)
(Sparse Recovery, Multi-Volume Archives, label):
Adjust documentation to match new output.
* tests/backup01.at, tests/incr01.at, tests/incr04.at:
* tests/label04.at, tests/label05.at, tests/link03.at:
* tests/listed02.at, tests/multiv03.at, tests/multiv05.at:
* tests/rename01.at, tests/rename02.at, tests/rename03.at:
* tests/volume.at:
Adjust tests to match new quoting behavior.",527,data/crawl/tar/hunk_42.cpp,,,data/crawl/tar/old_hunk_42.cpp,data/crawl/tar/new_hunk_42.cpp,[3],[3]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=debc485626c0c143731b0ca229d18b48085bb2ef,18 Jan 2012,"tar: quote 'like this', not `like this'

This fixes some test failures recently introduced by gnulib updates
prompted by recent changes to the GNU coding standards,
which now advise to use quotes 'like this' or ""like this""
rather than `like this'.
* NEWS: Document this.
* README, README-hacking, doc/Makefile.am, scripts/backup.in:
* scripts/backup.sh.in, scripts/dump-remind.in:
* src/buffer.c, src/checkpoint.c, src/create.c, src/incremen.c:
* src/misc.c, src/names.c, src/sparse.c, src/transform.c:
* tests/incr02.at, tests/incremental.at, tests/multiv08.at:
* tests/sparse04.at, tests/star/README, tests/update01.at:
Quote 'like this' in comments.
* src/tar.h:
Quote ""like this"" in comments, when quoting English phrases rather
than code.
* configure.ac:
* scripts/xsparse.c (get_var, read_xheader, main):
* src/compare.c (diff_archive):
* src/extract.c (prepare_to_extract):
* src/tar.c (request_stdin, tar_set_quoting_style, doc, options)
(set_subcommand_option, report_textual_dates, parse_opt)
(decode_options, main):
* src/xheader.c (decx):
Quote 'like this' in diagnostics.
* doc/tar.texi (list, warnings, override)
(Selecting Archive Members, quoting styles, after, hard links)
(Sparse Recovery, Multi-Volume Archives, label):
Adjust documentation to match new output.
* tests/backup01.at, tests/incr01.at, tests/incr04.at:
* tests/label04.at, tests/label05.at, tests/link03.at:
* tests/listed02.at, tests/multiv03.at, tests/multiv05.at:
* tests/rename01.at, tests/rename02.at, tests/rename03.at:
* tests/volume.at:
Adjust tests to match new quoting behavior.",527,data/crawl/tar/hunk_43.cpp,,,data/crawl/tar/old_hunk_43.cpp,data/crawl/tar/new_hunk_43.cpp,[2],[2]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=d88b2a613f4b1a5554e8c34c8f75b91abff5f0e9,15 Nov 2011,"Fix operation of --verify in conjunction with --listed-incremental

* src/common.h (clear_directory_table): New proto.
* src/incremen.c (clear_directory_table): New function.
* src/compare.c (diff_dumpdir): Take a pointer to struct
tar_stat_info as argument.
Initialize its fd.
(diff_archive): Update call to diff_dumpdir.
(verify_volume): Call clear_directory_table.",60,data/crawl/tar/hunk_44.cpp,,,data/crawl/tar/old_hunk_44.cpp,data/crawl/tar/new_hunk_44.cpp,[24],[40]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=51b272f5723b782fb079b1cd55daf934331596b6,19 Sep 2011,"Upgrade tar-snapshot-edit script.

* scripts/tar-snapshot-edit: Update Perl syntax to work
correctly with more recent versions of Perl.  (The original
code worked with in the v5.8 timeframe but not with
Perl v5.10.1 and later.)
Add a ""-c"" option to check the snapshot file for invalid
field values.
Handle NFS indicator character (""+"") in version 0 and 1 files.
Preserve the original header/version line when editing version 1
or 2 files.
Tweak output formatting.
* doc/tar-snapshot-edit.texi: Update documentation.",390,data/crawl/tar/hunk_45.cpp,,,data/crawl/tar/old_hunk_45.cpp,data/crawl/tar/new_hunk_45.cpp,[],[14]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=ea964cce810e8d4592299a784b81fade0f759ccb,17 Sep 2010,"tar: extract symlink attributes, close some symlink-related races

* NEWS: Describe symlink-extraction improvements.
* src/extract.c (enum permstatus): Remove.
(fchmod, fchown): Define dummy replacement macros if the system
does not supply them.
(implemented): New function.
(struct delayed_set_stat): Remove members invert_permissions,
permstatus.  They were too confusing, and tried to do too much
in too-little space.  Instead, add members current_mode,
current_mode_mask, interdir, atflag.  All users changed.
(struct delayed_link): Add members mode, atime, mtime, to support
platforms such as BSD where symlinks have these attributes.
All users changed.
(fd_chmod): Renamed from fdchmod.  New argument atflag.  Check for
operation not supported at run-time, not at configure-time.  Put
fd argument first.  All callers changed.
(fd_chown): Likewise, renaming from fdchown.
(fd_stat): Likewise, renaming from fdstat.
(set_mode): Remove args stat_info, cur_info, invert_permissions,
permstatus.  Add args mode, mode_mask, current_mode, current_mode_mask,
atflag.  All callers changed.  Close some races.  Use an easier-to
understand method for computing permissions.  Work around POSIX
incompatibility in Linux fchmodat.  Support extraction of symlink
modes, if the OS allows it.
(set_stat): Remove args cur_info, invert_permissions, permstatus.
Add args current_mode, current_mode_mask, interdir, atflag.
All callers changed.  Close some races.  Support extraction of
attributes on symlinks, if the OS allows it.
(delay_set_stat): Remove args invert_permissions, permstatus.
Add args current_mode, current_mode_mask, mode, atflag.
The ST arg can be null now, indicating that it's an intermediate
directory.  All callers changed.
(repair_delayed_set_stat, apply_nonancestor_delayed_set_stat):
Close some races.
(extract_dir): Also be paranoid if only --same-permissions, due
to semantics of setgid and setuid directories on some hosts.
This closes a race on those hosts.  Simplify calculation of
delay_set_stat arguments; the old code was truly strange and
probably wrong in some border cases.
(extract_dir, extract_file, extract_node, extract_fifo): Don't rely on
unspecified behavior in mode arg of open, mknod, etc.  Instead,
mask out those bits when creating the file, and add them later via
fchmod or chmodat.
(open_output_file): file_name is now const.  Add arg current_mode,
current_mode_mask.  All callers changed.  When overwriting old files,
refuse to overwrite something that is not a regular file, since
we're extracting a regular file.
(extract_file): Remove the FIXME comment.  Whatever the protection
issues were, they should be fixed now.  As a result of all the other
API changes, we now use fchmod etc. rather than chmod etc., closing
some races.
(create_placeholder_file, apply_delayed_links): Record desired
mode and times for symlinks, for OSes that support that.",575,data/crawl/tar/hunk_46.cpp,,,data/crawl/tar/old_hunk_46.cpp,data/crawl/tar/new_hunk_46.cpp,[11],[14]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=f6edb92580aa886a2a0189463c19189a050dc62d,16 Jun 2010,"Remove some lint, found by gcc -W etc.

* src/common.h (label_notfound): New decl.
* src/buffer.c (set_volume_start_time, compress_type):
(guess_seekable_archive, open_compressed_archive, init_buffer):
(_flush_write, archive_is-dev, increase_volume_number):
(change_tape_menu, try_new_volume, add_chunk_header):
(multi_volume_sync):
Declare as 'static' if it's not exported.
Use function prototype (void) rather than old-style ().
* src/checkpoint.c (expand_checkpoint_string): Likewise.
* src/incremen.c (dirlist_replace_prefix, makedumpdir, read_incr_db_2):
Likewise.
* src/list.c (print_volume_label): Likewise.
* src/misc.c (normalize_filename_x): Likewise.
* src/names.c (make_name, free_name, check_name_alloc, name_next_elt):
Likewise.
* src/tar.c (tar_list_quoting_style, add_exclude_array):
(set_stat_signal): Likewise.
* src/transform.c (new_transform, _single_transform_name_to_obstack):
(_transform_name_to_obstack): Likewise.
* src/unlink.c (dunlink_alloc): Likewise.

* src/buffer.c (struct zip_magic): Use const when appropriate.
* src/incremen.c (obstack_code_rename, write_directory_file_entry):
Likewise.
* src/sparse.c (COPY_STRING): Likewise.
* src/system.c (dec_to_env, time_to_env, oct_to_env, str_to_env):
(chr_to_env): Likewise.
* src/tar.c (tar_list_quoting_style, set_stat_signal): Likewise.

* src/extract.c (extract_node): Don't return garbage.

* src/names.c: Remove old-style declarations of getgrnam etc.
All modern systems declare these, and it's not worth the hassle
of ignoring the warnings on modern systems for old-style decls.",804,data/crawl/tar/hunk_47.cpp,,,data/crawl/tar/old_hunk_47.cpp,data/crawl/tar/new_hunk_47.cpp,"[1, 6]","[1, 6]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=f6edb92580aa886a2a0189463c19189a050dc62d,16 Jun 2010,"Remove some lint, found by gcc -W etc.

* src/common.h (label_notfound): New decl.
* src/buffer.c (set_volume_start_time, compress_type):
(guess_seekable_archive, open_compressed_archive, init_buffer):
(_flush_write, archive_is-dev, increase_volume_number):
(change_tape_menu, try_new_volume, add_chunk_header):
(multi_volume_sync):
Declare as 'static' if it's not exported.
Use function prototype (void) rather than old-style ().
* src/checkpoint.c (expand_checkpoint_string): Likewise.
* src/incremen.c (dirlist_replace_prefix, makedumpdir, read_incr_db_2):
Likewise.
* src/list.c (print_volume_label): Likewise.
* src/misc.c (normalize_filename_x): Likewise.
* src/names.c (make_name, free_name, check_name_alloc, name_next_elt):
Likewise.
* src/tar.c (tar_list_quoting_style, add_exclude_array):
(set_stat_signal): Likewise.
* src/transform.c (new_transform, _single_transform_name_to_obstack):
(_transform_name_to_obstack): Likewise.
* src/unlink.c (dunlink_alloc): Likewise.

* src/buffer.c (struct zip_magic): Use const when appropriate.
* src/incremen.c (obstack_code_rename, write_directory_file_entry):
Likewise.
* src/sparse.c (COPY_STRING): Likewise.
* src/system.c (dec_to_env, time_to_env, oct_to_env, str_to_env):
(chr_to_env): Likewise.
* src/tar.c (tar_list_quoting_style, set_stat_signal): Likewise.

* src/extract.c (extract_node): Don't return garbage.

* src/names.c: Remove old-style declarations of getgrnam etc.
All modern systems declare these, and it's not worth the hassle
of ignoring the warnings on modern systems for old-style decls.",804,data/crawl/tar/hunk_48.cpp,,,data/crawl/tar/old_hunk_48.cpp,data/crawl/tar/new_hunk_48.cpp,[0],[0]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=f6edb92580aa886a2a0189463c19189a050dc62d,16 Jun 2010,"Remove some lint, found by gcc -W etc.

* src/common.h (label_notfound): New decl.
* src/buffer.c (set_volume_start_time, compress_type):
(guess_seekable_archive, open_compressed_archive, init_buffer):
(_flush_write, archive_is-dev, increase_volume_number):
(change_tape_menu, try_new_volume, add_chunk_header):
(multi_volume_sync):
Declare as 'static' if it's not exported.
Use function prototype (void) rather than old-style ().
* src/checkpoint.c (expand_checkpoint_string): Likewise.
* src/incremen.c (dirlist_replace_prefix, makedumpdir, read_incr_db_2):
Likewise.
* src/list.c (print_volume_label): Likewise.
* src/misc.c (normalize_filename_x): Likewise.
* src/names.c (make_name, free_name, check_name_alloc, name_next_elt):
Likewise.
* src/tar.c (tar_list_quoting_style, add_exclude_array):
(set_stat_signal): Likewise.
* src/transform.c (new_transform, _single_transform_name_to_obstack):
(_transform_name_to_obstack): Likewise.
* src/unlink.c (dunlink_alloc): Likewise.

* src/buffer.c (struct zip_magic): Use const when appropriate.
* src/incremen.c (obstack_code_rename, write_directory_file_entry):
Likewise.
* src/sparse.c (COPY_STRING): Likewise.
* src/system.c (dec_to_env, time_to_env, oct_to_env, str_to_env):
(chr_to_env): Likewise.
* src/tar.c (tar_list_quoting_style, set_stat_signal): Likewise.

* src/extract.c (extract_node): Don't return garbage.

* src/names.c: Remove old-style declarations of getgrnam etc.
All modern systems declare these, and it's not worth the hassle
of ignoring the warnings on modern systems for old-style decls.",804,data/crawl/tar/hunk_49.cpp,,,data/crawl/tar/old_hunk_49.cpp,data/crawl/tar/new_hunk_49.cpp,[0],[0]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=f6edb92580aa886a2a0189463c19189a050dc62d,16 Jun 2010,"Remove some lint, found by gcc -W etc.

* src/common.h (label_notfound): New decl.
* src/buffer.c (set_volume_start_time, compress_type):
(guess_seekable_archive, open_compressed_archive, init_buffer):
(_flush_write, archive_is-dev, increase_volume_number):
(change_tape_menu, try_new_volume, add_chunk_header):
(multi_volume_sync):
Declare as 'static' if it's not exported.
Use function prototype (void) rather than old-style ().
* src/checkpoint.c (expand_checkpoint_string): Likewise.
* src/incremen.c (dirlist_replace_prefix, makedumpdir, read_incr_db_2):
Likewise.
* src/list.c (print_volume_label): Likewise.
* src/misc.c (normalize_filename_x): Likewise.
* src/names.c (make_name, free_name, check_name_alloc, name_next_elt):
Likewise.
* src/tar.c (tar_list_quoting_style, add_exclude_array):
(set_stat_signal): Likewise.
* src/transform.c (new_transform, _single_transform_name_to_obstack):
(_transform_name_to_obstack): Likewise.
* src/unlink.c (dunlink_alloc): Likewise.

* src/buffer.c (struct zip_magic): Use const when appropriate.
* src/incremen.c (obstack_code_rename, write_directory_file_entry):
Likewise.
* src/sparse.c (COPY_STRING): Likewise.
* src/system.c (dec_to_env, time_to_env, oct_to_env, str_to_env):
(chr_to_env): Likewise.
* src/tar.c (tar_list_quoting_style, set_stat_signal): Likewise.

* src/extract.c (extract_node): Don't return garbage.

* src/names.c: Remove old-style declarations of getgrnam etc.
All modern systems declare these, and it's not worth the hassle
of ignoring the warnings on modern systems for old-style decls.",804,data/crawl/tar/hunk_50.cpp,,,data/crawl/tar/old_hunk_50.cpp,data/crawl/tar/new_hunk_50.cpp,[5],[5]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=f6edb92580aa886a2a0189463c19189a050dc62d,16 Jun 2010,"Remove some lint, found by gcc -W etc.

* src/common.h (label_notfound): New decl.
* src/buffer.c (set_volume_start_time, compress_type):
(guess_seekable_archive, open_compressed_archive, init_buffer):
(_flush_write, archive_is-dev, increase_volume_number):
(change_tape_menu, try_new_volume, add_chunk_header):
(multi_volume_sync):
Declare as 'static' if it's not exported.
Use function prototype (void) rather than old-style ().
* src/checkpoint.c (expand_checkpoint_string): Likewise.
* src/incremen.c (dirlist_replace_prefix, makedumpdir, read_incr_db_2):
Likewise.
* src/list.c (print_volume_label): Likewise.
* src/misc.c (normalize_filename_x): Likewise.
* src/names.c (make_name, free_name, check_name_alloc, name_next_elt):
Likewise.
* src/tar.c (tar_list_quoting_style, add_exclude_array):
(set_stat_signal): Likewise.
* src/transform.c (new_transform, _single_transform_name_to_obstack):
(_transform_name_to_obstack): Likewise.
* src/unlink.c (dunlink_alloc): Likewise.

* src/buffer.c (struct zip_magic): Use const when appropriate.
* src/incremen.c (obstack_code_rename, write_directory_file_entry):
Likewise.
* src/sparse.c (COPY_STRING): Likewise.
* src/system.c (dec_to_env, time_to_env, oct_to_env, str_to_env):
(chr_to_env): Likewise.
* src/tar.c (tar_list_quoting_style, set_stat_signal): Likewise.

* src/extract.c (extract_node): Don't return garbage.

* src/names.c: Remove old-style declarations of getgrnam etc.
All modern systems declare these, and it's not worth the hassle
of ignoring the warnings on modern systems for old-style decls.",804,data/crawl/tar/hunk_51.cpp,,,data/crawl/tar/old_hunk_51.cpp,data/crawl/tar/new_hunk_51.cpp,[3],[3]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=f6edb92580aa886a2a0189463c19189a050dc62d,16 Jun 2010,"Remove some lint, found by gcc -W etc.

* src/common.h (label_notfound): New decl.
* src/buffer.c (set_volume_start_time, compress_type):
(guess_seekable_archive, open_compressed_archive, init_buffer):
(_flush_write, archive_is-dev, increase_volume_number):
(change_tape_menu, try_new_volume, add_chunk_header):
(multi_volume_sync):
Declare as 'static' if it's not exported.
Use function prototype (void) rather than old-style ().
* src/checkpoint.c (expand_checkpoint_string): Likewise.
* src/incremen.c (dirlist_replace_prefix, makedumpdir, read_incr_db_2):
Likewise.
* src/list.c (print_volume_label): Likewise.
* src/misc.c (normalize_filename_x): Likewise.
* src/names.c (make_name, free_name, check_name_alloc, name_next_elt):
Likewise.
* src/tar.c (tar_list_quoting_style, add_exclude_array):
(set_stat_signal): Likewise.
* src/transform.c (new_transform, _single_transform_name_to_obstack):
(_transform_name_to_obstack): Likewise.
* src/unlink.c (dunlink_alloc): Likewise.

* src/buffer.c (struct zip_magic): Use const when appropriate.
* src/incremen.c (obstack_code_rename, write_directory_file_entry):
Likewise.
* src/sparse.c (COPY_STRING): Likewise.
* src/system.c (dec_to_env, time_to_env, oct_to_env, str_to_env):
(chr_to_env): Likewise.
* src/tar.c (tar_list_quoting_style, set_stat_signal): Likewise.

* src/extract.c (extract_node): Don't return garbage.

* src/names.c: Remove old-style declarations of getgrnam etc.
All modern systems declare these, and it's not worth the hassle
of ignoring the warnings on modern systems for old-style decls.",804,data/crawl/tar/hunk_52.cpp,,,data/crawl/tar/old_hunk_52.cpp,data/crawl/tar/new_hunk_52.cpp,[3],[3]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=f6edb92580aa886a2a0189463c19189a050dc62d,16 Jun 2010,"Remove some lint, found by gcc -W etc.

* src/common.h (label_notfound): New decl.
* src/buffer.c (set_volume_start_time, compress_type):
(guess_seekable_archive, open_compressed_archive, init_buffer):
(_flush_write, archive_is-dev, increase_volume_number):
(change_tape_menu, try_new_volume, add_chunk_header):
(multi_volume_sync):
Declare as 'static' if it's not exported.
Use function prototype (void) rather than old-style ().
* src/checkpoint.c (expand_checkpoint_string): Likewise.
* src/incremen.c (dirlist_replace_prefix, makedumpdir, read_incr_db_2):
Likewise.
* src/list.c (print_volume_label): Likewise.
* src/misc.c (normalize_filename_x): Likewise.
* src/names.c (make_name, free_name, check_name_alloc, name_next_elt):
Likewise.
* src/tar.c (tar_list_quoting_style, add_exclude_array):
(set_stat_signal): Likewise.
* src/transform.c (new_transform, _single_transform_name_to_obstack):
(_transform_name_to_obstack): Likewise.
* src/unlink.c (dunlink_alloc): Likewise.

* src/buffer.c (struct zip_magic): Use const when appropriate.
* src/incremen.c (obstack_code_rename, write_directory_file_entry):
Likewise.
* src/sparse.c (COPY_STRING): Likewise.
* src/system.c (dec_to_env, time_to_env, oct_to_env, str_to_env):
(chr_to_env): Likewise.
* src/tar.c (tar_list_quoting_style, set_stat_signal): Likewise.

* src/extract.c (extract_node): Don't return garbage.

* src/names.c: Remove old-style declarations of getgrnam etc.
All modern systems declare these, and it's not worth the hassle
of ignoring the warnings on modern systems for old-style decls.",804,data/crawl/tar/hunk_53.cpp,,,data/crawl/tar/old_hunk_53.cpp,data/crawl/tar/new_hunk_53.cpp,[7],[7]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=f6edb92580aa886a2a0189463c19189a050dc62d,16 Jun 2010,"Remove some lint, found by gcc -W etc.

* src/common.h (label_notfound): New decl.
* src/buffer.c (set_volume_start_time, compress_type):
(guess_seekable_archive, open_compressed_archive, init_buffer):
(_flush_write, archive_is-dev, increase_volume_number):
(change_tape_menu, try_new_volume, add_chunk_header):
(multi_volume_sync):
Declare as 'static' if it's not exported.
Use function prototype (void) rather than old-style ().
* src/checkpoint.c (expand_checkpoint_string): Likewise.
* src/incremen.c (dirlist_replace_prefix, makedumpdir, read_incr_db_2):
Likewise.
* src/list.c (print_volume_label): Likewise.
* src/misc.c (normalize_filename_x): Likewise.
* src/names.c (make_name, free_name, check_name_alloc, name_next_elt):
Likewise.
* src/tar.c (tar_list_quoting_style, add_exclude_array):
(set_stat_signal): Likewise.
* src/transform.c (new_transform, _single_transform_name_to_obstack):
(_transform_name_to_obstack): Likewise.
* src/unlink.c (dunlink_alloc): Likewise.

* src/buffer.c (struct zip_magic): Use const when appropriate.
* src/incremen.c (obstack_code_rename, write_directory_file_entry):
Likewise.
* src/sparse.c (COPY_STRING): Likewise.
* src/system.c (dec_to_env, time_to_env, oct_to_env, str_to_env):
(chr_to_env): Likewise.
* src/tar.c (tar_list_quoting_style, set_stat_signal): Likewise.

* src/extract.c (extract_node): Don't return garbage.

* src/names.c: Remove old-style declarations of getgrnam etc.
All modern systems declare these, and it's not worth the hassle
of ignoring the warnings on modern systems for old-style decls.",804,data/crawl/tar/hunk_54.cpp,,,data/crawl/tar/old_hunk_54.cpp,data/crawl/tar/new_hunk_54.cpp,[3],[3]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=0ba8bdf5f3401fdc8c1595857ab69f6c65e04353,11 Mar 2010,"Fix `--test-label' and `--label -r' behavior.

* doc/tar.texi (Including a Label in the Archive): Revise
the section.
* NEWS: Update

* src/buffer.c (open_archive): Check volume label on
ACCESS_UPDATE as well.
* src/list.c (test_archive_label): Rewrite to match the
documentation.
* src/names.c (regex_usage_warning): Return int.
(names_notfound): Rewrite the conditional.
(label_notfound): New function.

* tests/label03.at: New testcase.
* tests/label04.at: New testcase.
* tests/label05.at: New testcase.
* tests/Makefile.am: Add new testcases.
* tests/testsuite.at: Likewise.",376,data/crawl/tar/hunk_55.cpp,,,data/crawl/tar/old_hunk_55.cpp,data/crawl/tar/new_hunk_55.cpp,"[4, 7]",[3]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=0ba8bdf5f3401fdc8c1595857ab69f6c65e04353,11 Mar 2010,"Fix `--test-label' and `--label -r' behavior.

* doc/tar.texi (Including a Label in the Archive): Revise
the section.
* NEWS: Update

* src/buffer.c (open_archive): Check volume label on
ACCESS_UPDATE as well.
* src/list.c (test_archive_label): Rewrite to match the
documentation.
* src/names.c (regex_usage_warning): Return int.
(names_notfound): Rewrite the conditional.
(label_notfound): New function.

* tests/label03.at: New testcase.
* tests/label04.at: New testcase.
* tests/label05.at: New testcase.
* tests/Makefile.am: Add new testcases.
* tests/testsuite.at: Likewise.",376,data/crawl/tar/hunk_56.cpp,,,data/crawl/tar/old_hunk_56.cpp,data/crawl/tar/new_hunk_56.cpp,[],[17]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=c3fa22fc8023ad21ad32b13f934c3324756c9236,25 Jan 2010,"Read POSIX multivolume archives split at the header boundary.

* src/common.h (read_header_mode): New enum.
(read_header): Change type of the 3rd argument.
* src/list.c (read_header): Change type of the 3rd argument.
All callers updated.
* src/buffer.c (try_new_volume): Allow for volumes split at the
extended/ustar header boundary. This is against POSIX specs, but
we must be able to read such archives anyway.

* tests/multiv07.at: New test case.
* tests/Makefile.am: Add multiv07.at
* tests/testsuite.at: Likewise.

* src/compare.c: Update calls to read_header.
* src/delete.c: Likewise.
* src/update.c: Likewise.",157,data/crawl/tar/hunk_57.cpp,,,data/crawl/tar/old_hunk_57.cpp,data/crawl/tar/new_hunk_57.cpp,[],"[7, 36]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=63e092548a9b87c0be0f0b286c883e1f3d52294c,7 Oct 2009,"Provide a way to explicitly set mtime for extended header ustar
 blocks.

* src/tar.c (struct textual_date): ts is a copy of the structure,
not a pointer to it. Date is a copy as well, hence the `const' is
taken away.
(get_date_or_file): Return 0/1 depending on success/failure.
Copy timestamp to the `ts' member. Store a copy of the string
in `date'.
(report_textual_dates): Report only if verbose_option is set,
but always free the list.
(expand_pax_option): New function.
(parse_opt): Preprocess the argument to xheader_set_option with
expand_pax_option.
(decode_options): Call report_textual_dates unconditionally.
* src/xheader.c (exthdr_mtime_option, exthdr_mtime)
(globexthdr_mtime_option, globexthdr_mtime): New statics.
(xheader_set_keyword_equal): handle exthdr.mtime and globexthdr.mtime.
(xheader_write): Override `t' argument if a corresponding
exthdr.mtime or globexthdr.mtime option is set.
* NEWS: Update
* doc/tar.texi: Document the changes.",206,data/crawl/tar/hunk_58.cpp,,,data/crawl/tar/old_hunk_58.cpp,data/crawl/tar/new_hunk_58.cpp,[],[9]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=4dfcd6c054a5e9e1a371c822a3be90564dd9b690,7 Oct 2009,"Fix bugs in handling the --remove-files option.

Make sure the files are deleted only if they were succesfully stored
to the archive.

* src/exit.c: New file.
* src/unlink.c: New file.
* src/Makefile.am (tar_SOURCES): Add exit.c and unlink.c.
* src/common.h: Include progname.h
(program_name): Remove global.
(records_written): New extern.
(queue_deferred_unlink, finish_deferred_unlinks): New prototypes.
(fatal_exit_hook): New extern.
* src/create.c (create_archive): Call finish_deferred_unlinks.
(dump_hard_link, dump_file0): Don't actually unlink the file,
queue it to deferred_unlinks instead.
* src/delete.c (records_written): Remove extern: declared in
common.h.
* src/extract.c (extract_archive): Set fatal_exit_hook.
(fatal_exit, xalloc_die): Move to exit.c
* src/system.c (sys_wait_for_child): Exit immediately
if the child dies or exits with a non-zero status.
(sys_child_open_for_compress)
(sys_child_open_for_uncompress): Use set_program_name,
instead of setting program_name directly.
* src/tar.c (main): Use set_program_name,
instead of setting program_name directly.

* tests/Makefile.am (TESTSUITE_AT): Add remfiles01.at
and remfiles02.at.
* tests/testsuite.at: Likewise.
* tests/gzip.at: Reflect the above changes.",401,data/crawl/tar/hunk_59.cpp,,,data/crawl/tar/old_hunk_59.cpp,data/crawl/tar/new_hunk_59.cpp,[],"[27, 34]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=4dfcd6c054a5e9e1a371c822a3be90564dd9b690,7 Oct 2009,"Fix bugs in handling the --remove-files option.

Make sure the files are deleted only if they were succesfully stored
to the archive.

* src/exit.c: New file.
* src/unlink.c: New file.
* src/Makefile.am (tar_SOURCES): Add exit.c and unlink.c.
* src/common.h: Include progname.h
(program_name): Remove global.
(records_written): New extern.
(queue_deferred_unlink, finish_deferred_unlinks): New prototypes.
(fatal_exit_hook): New extern.
* src/create.c (create_archive): Call finish_deferred_unlinks.
(dump_hard_link, dump_file0): Don't actually unlink the file,
queue it to deferred_unlinks instead.
* src/delete.c (records_written): Remove extern: declared in
common.h.
* src/extract.c (extract_archive): Set fatal_exit_hook.
(fatal_exit, xalloc_die): Move to exit.c
* src/system.c (sys_wait_for_child): Exit immediately
if the child dies or exits with a non-zero status.
(sys_child_open_for_compress)
(sys_child_open_for_uncompress): Use set_program_name,
instead of setting program_name directly.
* src/tar.c (main): Use set_program_name,
instead of setting program_name directly.

* tests/Makefile.am (TESTSUITE_AT): Add remfiles01.at
and remfiles02.at.
* tests/testsuite.at: Likewise.
* tests/gzip.at: Reflect the above changes.",401,data/crawl/tar/hunk_60.cpp,,,data/crawl/tar/old_hunk_60.cpp,data/crawl/tar/new_hunk_60.cpp,"[8, 15]",[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=4dfcd6c054a5e9e1a371c822a3be90564dd9b690,7 Oct 2009,"Fix bugs in handling the --remove-files option.

Make sure the files are deleted only if they were succesfully stored
to the archive.

* src/exit.c: New file.
* src/unlink.c: New file.
* src/Makefile.am (tar_SOURCES): Add exit.c and unlink.c.
* src/common.h: Include progname.h
(program_name): Remove global.
(records_written): New extern.
(queue_deferred_unlink, finish_deferred_unlinks): New prototypes.
(fatal_exit_hook): New extern.
* src/create.c (create_archive): Call finish_deferred_unlinks.
(dump_hard_link, dump_file0): Don't actually unlink the file,
queue it to deferred_unlinks instead.
* src/delete.c (records_written): Remove extern: declared in
common.h.
* src/extract.c (extract_archive): Set fatal_exit_hook.
(fatal_exit, xalloc_die): Move to exit.c
* src/system.c (sys_wait_for_child): Exit immediately
if the child dies or exits with a non-zero status.
(sys_child_open_for_compress)
(sys_child_open_for_uncompress): Use set_program_name,
instead of setting program_name directly.
* src/tar.c (main): Use set_program_name,
instead of setting program_name directly.

* tests/Makefile.am (TESTSUITE_AT): Add remfiles01.at
and remfiles02.at.
* tests/testsuite.at: Likewise.
* tests/gzip.at: Reflect the above changes.",401,data/crawl/tar/hunk_61.cpp,,,data/crawl/tar/old_hunk_61.cpp,data/crawl/tar/new_hunk_61.cpp,"[3, 6]",[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=92773d860f94323c14cc8c1b27436f2e73a174fd,16 Sep 2009,"Restore extra help output.

* src/tar.c (tar_list_quoting_styles): Change first argument to
struct obstack.
(format_default_settings): New function.
(show_default_settings)
(show_default_settings_fs): Removed.
(tar_help): Removed.
(tar_help_filter): New function.
(argp): Set help_filter.
(parse_opt): Fix error message.",370,data/crawl/tar/hunk_62.cpp,,,data/crawl/tar/old_hunk_62.cpp,data/crawl/tar/new_hunk_62.cpp,[8],[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=92773d860f94323c14cc8c1b27436f2e73a174fd,16 Sep 2009,"Restore extra help output.

* src/tar.c (tar_list_quoting_styles): Change first argument to
struct obstack.
(format_default_settings): New function.
(show_default_settings)
(show_default_settings_fs): Removed.
(tar_help): Removed.
(tar_help_filter): New function.
(argp): Set help_filter.
(parse_opt): Fix error message.",370,data/crawl/tar/hunk_63.cpp,,,data/crawl/tar/old_hunk_63.cpp,data/crawl/tar/new_hunk_63.cpp,"[13, 20]",[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=c30c4ffb9fc874aafea6f6c91f3fc78595db4154,18 Jun 2009,"Remove files that were removed in CVS, but reappeared after migration
 to Git
",5265,data/crawl/tar/hunk_64.cpp,,,data/crawl/tar/old_hunk_64.cpp,data/crawl/tar/new_hunk_64.cpp,"[309, 319, 330, 336, 563, 691, 702, 704, 710, 711, 712, 715]",[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=c30c4ffb9fc874aafea6f6c91f3fc78595db4154,18 Jun 2009,"Remove files that were removed in CVS, but reappeared after migration
 to Git
",5265,data/crawl/tar/hunk_65.cpp,,,data/crawl/tar/old_hunk_65.cpp,data/crawl/tar/new_hunk_65.cpp,"[167, 168, 170]",[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=ac6caa71bc6077d75ff5073f76f97d53225e78ae,7 Mar 2009,"Migrate to Git
",29623,data/crawl/tar/hunk_66.cpp,,,data/crawl/tar/old_hunk_66.cpp,data/crawl/tar/new_hunk_66.cpp,"[186, 744, 2835, 3493, 7819]",[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=ac6caa71bc6077d75ff5073f76f97d53225e78ae,7 Mar 2009,"Migrate to Git
",29623,data/crawl/tar/hunk_67.cpp,,,data/crawl/tar/old_hunk_67.cpp,data/crawl/tar/new_hunk_67.cpp,[],"[186, 744, 2835, 3493, 7819]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=ac6caa71bc6077d75ff5073f76f97d53225e78ae,7 Mar 2009,"Migrate to Git
",29623,data/crawl/tar/hunk_68.cpp,,,data/crawl/tar/old_hunk_68.cpp,data/crawl/tar/new_hunk_68.cpp,[137],[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=ac6caa71bc6077d75ff5073f76f97d53225e78ae,7 Mar 2009,"Migrate to Git
",29623,data/crawl/tar/hunk_69.cpp,,,data/crawl/tar/old_hunk_69.cpp,data/crawl/tar/new_hunk_69.cpp,[402],[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=ac6caa71bc6077d75ff5073f76f97d53225e78ae,7 Mar 2009,"Migrate to Git
",29623,data/crawl/tar/hunk_70.cpp,,,data/crawl/tar/old_hunk_70.cpp,data/crawl/tar/new_hunk_70.cpp,"[41, 51]",[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=ac6caa71bc6077d75ff5073f76f97d53225e78ae,7 Mar 2009,"Migrate to Git
",29623,data/crawl/tar/hunk_71.cpp,,,data/crawl/tar/old_hunk_71.cpp,data/crawl/tar/new_hunk_71.cpp,"[230, 232]",[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=ac6caa71bc6077d75ff5073f76f97d53225e78ae,7 Mar 2009,"Migrate to Git
",29623,data/crawl/tar/hunk_72.cpp,,,data/crawl/tar/old_hunk_72.cpp,data/crawl/tar/new_hunk_72.cpp,[72],[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=ac6caa71bc6077d75ff5073f76f97d53225e78ae,7 Mar 2009,"Migrate to Git
",29623,data/crawl/tar/hunk_73.cpp,,,data/crawl/tar/old_hunk_73.cpp,data/crawl/tar/new_hunk_73.cpp,"[58, 63, 68]",[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=5fa60b8d4347e17e06411f0a63896cda5bdebc2a,5 Mar 2009,"Version 1.22
",125,data/crawl/tar/hunk_74.cpp,,,data/crawl/tar/old_hunk_74.cpp,data/crawl/tar/new_hunk_74.cpp,"[17, 25, 31]","[22, 30, 36]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=7f6e6e6a3e4e9a66f86f0c781da0680a438df61a,25 Nov 2008,"Do not try to drain the input pipe before closing the archive.

* src/buffer.c (close_archive): Remove call to
sys_drain_input_pipe. Pass hit_eof as the second
argument to sys_wait_for_child.
* src/common.h (sys_drain_input_pipe): Remove
(sys_wait_for_child): Declare second argument.
* src/system.c (sys_drain_input_pipe): Remove.
(sys_wait_for_child): Take two arguments. The second one helps to
decide whether to tolerate child termination on SIGPIPE.",58,data/crawl/tar/hunk_75.cpp,,,data/crawl/tar/old_hunk_75.cpp,data/crawl/tar/new_hunk_75.cpp,"[3, 6]","[6, 9]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=1d79c6734cfbd302e53358760b4c3fe3e7b9be61,24 Jul 2008,"Untabify
",790,data/crawl/tar/hunk_76.cpp,,,data/crawl/tar/old_hunk_76.cpp,data/crawl/tar/new_hunk_76.cpp,"[18, 23]","[18, 23]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=1d79c6734cfbd302e53358760b4c3fe3e7b9be61,24 Jul 2008,"Untabify
",790,data/crawl/tar/hunk_77.cpp,,,data/crawl/tar/old_hunk_77.cpp,data/crawl/tar/new_hunk_77.cpp,[45],[45]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=c9a7297a8a135c0afd8f984b91578a822ba3b04c,26 Jun 2008,"* configure.ac, NEWS: Version 1.20.90 * doc/tar.texi: Document -J,
 --no-auto-compress, etc. * src/buffer.c (ct_tar): New constant. (magic): Add
 lzop support.  Proposed by Kevin Day <thekevinday@gmail.com>.
 (check_compressed_archive): Do not use autodetect if the compression program
 was specified explicitly. Fall back to analyzing archive name, if the
 autodetection fails. * src/suffix.c: Add .lzo * src/tar.c: New options --lzop
 and --no-auto-compress. New short option -J (alias for --lzma).
",171,data/crawl/tar/hunk_78.cpp,,,data/crawl/tar/old_hunk_78.cpp,data/crawl/tar/new_hunk_78.cpp,[2],[14]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=c9a7297a8a135c0afd8f984b91578a822ba3b04c,26 Jun 2008,"* configure.ac, NEWS: Version 1.20.90 * doc/tar.texi: Document -J,
 --no-auto-compress, etc. * src/buffer.c (ct_tar): New constant. (magic): Add
 lzop support.  Proposed by Kevin Day <thekevinday@gmail.com>.
 (check_compressed_archive): Do not use autodetect if the compression program
 was specified explicitly. Fall back to analyzing archive name, if the
 autodetection fails. * src/suffix.c: Add .lzo * src/tar.c: New options --lzop
 and --no-auto-compress. New short option -J (alias for --lzma).
",171,data/crawl/tar/hunk_79.cpp,,,data/crawl/tar/old_hunk_79.cpp,data/crawl/tar/new_hunk_79.cpp,[9],"[12, 17]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=985637ab5a7448cf89e59ac433229a4fef2d265d,26 Jun 2008,"Bugfixes.

* src/buffer.c (try_new_volume): Print more information with error
diagnostics.
(_gnu_flush_write): Improve error checking.  Adjust
real_s_sizeleft before calling new_volume to avoid creating
malformed multivolume headers.
* tests/delete05.at, tests/gzip.at, tests/ignfail.at,
tests/longv7.at, tests/lustar01.at, tests/lustar02.at,
tests/shortfile.at: Update to match new diagnostic wording
(see 2008-05-06).

* NEWS: Update.",57,data/crawl/tar/hunk_80.cpp,,,data/crawl/tar/old_hunk_80.cpp,data/crawl/tar/new_hunk_80.cpp,[],[2]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=985637ab5a7448cf89e59ac433229a4fef2d265d,26 Jun 2008,"Bugfixes.

* src/buffer.c (try_new_volume): Print more information with error
diagnostics.
(_gnu_flush_write): Improve error checking.  Adjust
real_s_sizeleft before calling new_volume to avoid creating
malformed multivolume headers.
* tests/delete05.at, tests/gzip.at, tests/ignfail.at,
tests/longv7.at, tests/lustar01.at, tests/lustar02.at,
tests/shortfile.at: Update to match new diagnostic wording
(see 2008-05-06).

* NEWS: Update.",57,data/crawl/tar/hunk_81.cpp,,,data/crawl/tar/old_hunk_81.cpp,data/crawl/tar/new_hunk_81.cpp,[],[5]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=8aa729b90e579cce02d1ef77256c3c4f7b8af29c,5 May 2008,"(main): Reword the ""delayed error"" message. New wording proposed by
 Karl Berry.
",2,data/crawl/tar/hunk_82.cpp,,,data/crawl/tar/old_hunk_82.cpp,data/crawl/tar/new_hunk_82.cpp,[3],[3]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=5f4d99491da44c47654f3b4f0cab30ed84328138,5 Dec 2007,"(check_compressed_archive): Do not bail out if the file is too short,
 set boolean flag, passed as an argument instead.  This fixes a bug introduced
 on 2007-08-24. See also tests/shortupd.at.
",31,data/crawl/tar/hunk_83.cpp,,,data/crawl/tar/old_hunk_83.cpp,data/crawl/tar/new_hunk_83.cpp,[4],[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=5f4d99491da44c47654f3b4f0cab30ed84328138,5 Dec 2007,"(check_compressed_archive): Do not bail out if the file is too short,
 set boolean flag, passed as an argument instead.  This fixes a bug introduced
 on 2007-08-24. See also tests/shortupd.at.
",31,data/crawl/tar/hunk_84.cpp,,,data/crawl/tar/old_hunk_84.cpp,data/crawl/tar/new_hunk_84.cpp,[],[9]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=5f4d99491da44c47654f3b4f0cab30ed84328138,5 Dec 2007,"(check_compressed_archive): Do not bail out if the file is too short,
 set boolean flag, passed as an argument instead.  This fixes a bug introduced
 on 2007-08-24. See also tests/shortupd.at.
",31,data/crawl/tar/hunk_85.cpp,,,data/crawl/tar/old_hunk_85.cpp,data/crawl/tar/new_hunk_85.cpp,[],[14]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=5099ddf6cc764dcb55c42a5d5a3415ce03ac191c,30 Oct 2007,"Document --hard-dereference and --checkpoint-action options. Improve
 documentation of --check-links.
",333,data/crawl/tar/hunk_86.cpp,,,data/crawl/tar/old_hunk_86.cpp,data/crawl/tar/new_hunk_86.cpp,[],[36]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=efe6609cd997116b4f29181b57117ff6d91c7d98,26 Sep 2007,"(struct directory): New member tagfile (make_directory): Initialize
 tagfile to NULL (procdir): New argument: entry Hanlde exclusion tags.
 (makedumpdir): Take into account directory->tagfile. (scan_directory): Hanlde
 exclusion tags.
",65,data/crawl/tar/hunk_87.cpp,,,data/crawl/tar/old_hunk_87.cpp,data/crawl/tar/new_hunk_87.cpp,[],"[13, 21, 27]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=a1b1b7cc8aa3e3787834dccc96b516f467225b7b,26 Sep 2007,"(exclusion_tag_warning, check_exclusion_tags): New prototypes
",6,data/crawl/tar/hunk_88.cpp,,,data/crawl/tar/old_hunk_88.cpp,data/crawl/tar/new_hunk_88.cpp,[],[3]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=7c0b81cbb9790ab9402e983a4d677a8ebde010d5,24 Aug 2007,"(check_compressed_archive): Detect files smaller than 512 bytes.
",11,data/crawl/tar/hunk_89.cpp,,,data/crawl/tar/old_hunk_89.cpp,data/crawl/tar/new_hunk_89.cpp,[],[4]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=967fcb93181ffea221561bc09224cc6172aadbba,30 May 2007," (decx): Unknown pax keywords produce a warning,not error.
",4,data/crawl/tar/hunk_90.cpp,,,data/crawl/tar/old_hunk_90.cpp,data/crawl/tar/new_hunk_90.cpp,[3],[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=b9588c472262be876400e0804c529c57102d6f0d,23 Jan 2007,"(struct exclude_tag): rename to exclusion_tag (check_exclusion_tags):
 New function (cachedir_file_p): New function (from check_cache_directory)
 (dump_dir0,dump_file0): Use check_exclusion_tags
",215,data/crawl/tar/hunk_91.cpp,,,data/crawl/tar/old_hunk_91.cpp,data/crawl/tar/new_hunk_91.cpp,[],"[42, 53]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=b9588c472262be876400e0804c529c57102d6f0d,23 Jan 2007,"(struct exclude_tag): rename to exclusion_tag (check_exclusion_tags):
 New function (cachedir_file_p): New function (from check_cache_directory)
 (dump_dir0,dump_file0): Use check_exclusion_tags
",215,data/crawl/tar/hunk_92.cpp,,,data/crawl/tar/old_hunk_92.cpp,data/crawl/tar/new_hunk_92.cpp,[],[10]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=868ee7402884604c679ee13f6fe9772e05ba3ddd,19 Jan 2007,"(expand_sparse): use ftruncate to handle the trailing hole
",23,data/crawl/tar/hunk_93.cpp,,,data/crawl/tar/old_hunk_93.cpp,data/crawl/tar/new_hunk_93.cpp,"[8, 10]","[12, 14]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=445d95be07e497f6b1e3c94d20c5a80cfbf23af5,4 Jan 2007,"(diff_dumpdir): Compare directory contents using dumpdir_cmp.  Do not
 free dumpdir_buffer, it will leave the incremental directory table in the
 inconsistent state and trigger full dump. (read_and_process): Process
 dumpdirs no matter what the archive format.
",66,data/crawl/tar/hunk_94.cpp,,,data/crawl/tar/old_hunk_94.cpp,data/crawl/tar/new_hunk_94.cpp,[12],[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=445d95be07e497f6b1e3c94d20c5a80cfbf23af5,4 Jan 2007,"(diff_dumpdir): Compare directory contents using dumpdir_cmp.  Do not
 free dumpdir_buffer, it will leave the incremental directory table in the
 inconsistent state and trigger full dump. (read_and_process): Process
 dumpdirs no matter what the archive format.
",66,data/crawl/tar/hunk_95.cpp,,,data/crawl/tar/old_hunk_95.cpp,data/crawl/tar/new_hunk_95.cpp,[0],[0]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=445d95be07e497f6b1e3c94d20c5a80cfbf23af5,4 Jan 2007,"(diff_dumpdir): Compare directory contents using dumpdir_cmp.  Do not
 free dumpdir_buffer, it will leave the incremental directory table in the
 inconsistent state and trigger full dump. (read_and_process): Process
 dumpdirs no matter what the archive format.
",66,data/crawl/tar/hunk_96.cpp,,,data/crawl/tar/old_hunk_96.cpp,data/crawl/tar/new_hunk_96.cpp,[],[4]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=8e3f3adf9888cca4acedfe005d277867c999fcb3,12 Dec 2006,"Port to Forte Developer 7 C 5.4 and C99. * src/common.h
 (add_exclude_tag): Add decl; C99 requires this and Forte warns about it. *
 src/incremen.c: Include <mkdtemp.h> for mkdtemp prototype, for same reason. *
 src/misc.c (get_max_open_files): Rewrite to avoid code that Forte C complains
 about as being unreachable. * src/xheader.c (mtime_code): Rewrite to avoid
 Forte error reported by Trond Hasle Amundsen.

* src/incremen.c (compare_dirnames): Rewrite to avoid casts.
* src/utf8.c (string_ascii_p): Likewise.
* src/xheader.c (mtime_coder, volume_size_coder, volume_offset_coder):
Likewise.

SCALAR(0x8283218)",72,data/crawl/tar/hunk_97.cpp,,,data/crawl/tar/old_hunk_97.cpp,data/crawl/tar/new_hunk_97.cpp,[],[9]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=8e3f3adf9888cca4acedfe005d277867c999fcb3,12 Dec 2006,"Port to Forte Developer 7 C 5.4 and C99. * src/common.h
 (add_exclude_tag): Add decl; C99 requires this and Forte warns about it. *
 src/incremen.c: Include <mkdtemp.h> for mkdtemp prototype, for same reason. *
 src/misc.c (get_max_open_files): Rewrite to avoid code that Forte C complains
 about as being unreachable. * src/xheader.c (mtime_code): Rewrite to avoid
 Forte error reported by Trond Hasle Amundsen.

* src/incremen.c (compare_dirnames): Rewrite to avoid casts.
* src/utf8.c (string_ascii_p): Likewise.
* src/xheader.c (mtime_coder, volume_size_coder, volume_offset_coder):
Likewise.

SCALAR(0x8283218)",72,data/crawl/tar/hunk_98.cpp,,,data/crawl/tar/old_hunk_98.cpp,data/crawl/tar/new_hunk_98.cpp,[0],[0]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=49ea4c50575f66e8f0450e463e1d882eed6255ec,30 Nov 2006,"* NEWS: Remove support for mangled names. * doc/tar.texi (verbose
 tutorial): Likewise. * src/Makefile.am (tar_SOURCES): Remove mangle.c. *
 src/common.h (extract_mangle): Remove decl. * src/extract.c
 (extract_mangle_wrapper): Remove. (prepare_to_extract): Remove support for
 mangled names. * src/list.c (read_and, print_header): Likewise. *
 src/mangle.c: Remove. * src/tar.h (GNUTYPE_NAMES): Remove.
",174,data/crawl/tar/hunk_99.cpp,,,data/crawl/tar/old_hunk_99.cpp,data/crawl/tar/new_hunk_99.cpp,[8],[4]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=49ea4c50575f66e8f0450e463e1d882eed6255ec,30 Nov 2006,"* NEWS: Remove support for mangled names. * doc/tar.texi (verbose
 tutorial): Likewise. * src/Makefile.am (tar_SOURCES): Remove mangle.c. *
 src/common.h (extract_mangle): Remove decl. * src/extract.c
 (extract_mangle_wrapper): Remove. (prepare_to_extract): Remove support for
 mangled names. * src/list.c (read_and, print_header): Likewise. *
 src/mangle.c: Remove. * src/tar.h (GNUTYPE_NAMES): Remove.
",174,data/crawl/tar/hunk_100.cpp,,,data/crawl/tar/old_hunk_100.cpp,data/crawl/tar/new_hunk_100.cpp,"[53, 89, 109, 116]",[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=f2541c66cd25b855cf4b2871f1453aeaa6521b75,14 Oct 2006,"(Synopsis): Document tar exit codes.
",34,data/crawl/tar/hunk_101.cpp,,,data/crawl/tar/old_hunk_101.cpp,data/crawl/tar/new_hunk_101.cpp,[],[20]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=05805868f26533141b8b02d5a6449965652ef187,7 Aug 2006,"(read_incr_db_01): Check input strings more carefully.  Do not pass
 arbitrary char values to isspace, as this has undefined behavior.  Likewise
 for assigning arbitrary uintmax_t values to other types. (read_negative_num,
 read_unsigned_num, read_timespec): New functions, to check input values a bit
 more carefuly. (read_num): Use read_unsigned_num.  New arg MAX_VAL; all
 callers changed. (read_incr_db_2): Use these new functions. Use a consistent
 diagnostic for unexpected EOF. (read_directory_file): Do not assign arbitrary
 uintmax_t value to int. (read_timespec, write_directory_file_entry,
 write_directory_file): Handle negative time_t values correctly.  We don't
 bother to do this with pre-2 formats, since presumably the time stamps were
 output incorrectly.
",434,data/crawl/tar/hunk_102.cpp,,,data/crawl/tar/old_hunk_102.cpp,data/crawl/tar/new_hunk_102.cpp,"[6, 11, 21, 26]","[11, 28]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=05805868f26533141b8b02d5a6449965652ef187,7 Aug 2006,"(read_incr_db_01): Check input strings more carefully.  Do not pass
 arbitrary char values to isspace, as this has undefined behavior.  Likewise
 for assigning arbitrary uintmax_t values to other types. (read_negative_num,
 read_unsigned_num, read_timespec): New functions, to check input values a bit
 more carefuly. (read_num): Use read_unsigned_num.  New arg MAX_VAL; all
 callers changed. (read_incr_db_2): Use these new functions. Use a consistent
 diagnostic for unexpected EOF. (read_directory_file): Do not assign arbitrary
 uintmax_t value to int. (read_timespec, write_directory_file_entry,
 write_directory_file): Handle negative time_t values correctly.  We don't
 bother to do this with pre-2 formats, since presumably the time stamps were
 output incorrectly.
",434,data/crawl/tar/hunk_103.cpp,,,data/crawl/tar/old_hunk_103.cpp,data/crawl/tar/new_hunk_103.cpp,"[14, 18, 26, 30, 41, 45, 53, 57]","[17, 32, 52, 67]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=05805868f26533141b8b02d5a6449965652ef187,7 Aug 2006,"(read_incr_db_01): Check input strings more carefully.  Do not pass
 arbitrary char values to isspace, as this has undefined behavior.  Likewise
 for assigning arbitrary uintmax_t values to other types. (read_negative_num,
 read_unsigned_num, read_timespec): New functions, to check input values a bit
 more carefuly. (read_num): Use read_unsigned_num.  New arg MAX_VAL; all
 callers changed. (read_incr_db_2): Use these new functions. Use a consistent
 diagnostic for unexpected EOF. (read_directory_file): Do not assign arbitrary
 uintmax_t value to int. (read_timespec, write_directory_file_entry,
 write_directory_file): Handle negative time_t values correctly.  We don't
 bother to do this with pre-2 formats, since presumably the time stamps were
 output incorrectly.
",434,data/crawl/tar/hunk_104.cpp,,,data/crawl/tar/old_hunk_104.cpp,data/crawl/tar/new_hunk_104.cpp,[1],[1]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=05805868f26533141b8b02d5a6449965652ef187,7 Aug 2006,"(read_incr_db_01): Check input strings more carefully.  Do not pass
 arbitrary char values to isspace, as this has undefined behavior.  Likewise
 for assigning arbitrary uintmax_t values to other types. (read_negative_num,
 read_unsigned_num, read_timespec): New functions, to check input values a bit
 more carefuly. (read_num): Use read_unsigned_num.  New arg MAX_VAL; all
 callers changed. (read_incr_db_2): Use these new functions. Use a consistent
 diagnostic for unexpected EOF. (read_directory_file): Do not assign arbitrary
 uintmax_t value to int. (read_timespec, write_directory_file_entry,
 write_directory_file): Handle negative time_t values correctly.  We don't
 bother to do this with pre-2 formats, since presumably the time stamps were
 output incorrectly.
",434,data/crawl/tar/hunk_105.cpp,,,data/crawl/tar/old_hunk_105.cpp,data/crawl/tar/new_hunk_105.cpp,[5],[5]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=05805868f26533141b8b02d5a6449965652ef187,7 Aug 2006,"(read_incr_db_01): Check input strings more carefully.  Do not pass
 arbitrary char values to isspace, as this has undefined behavior.  Likewise
 for assigning arbitrary uintmax_t values to other types. (read_negative_num,
 read_unsigned_num, read_timespec): New functions, to check input values a bit
 more carefuly. (read_num): Use read_unsigned_num.  New arg MAX_VAL; all
 callers changed. (read_incr_db_2): Use these new functions. Use a consistent
 diagnostic for unexpected EOF. (read_directory_file): Do not assign arbitrary
 uintmax_t value to int. (read_timespec, write_directory_file_entry,
 write_directory_file): Handle negative time_t values correctly.  We don't
 bother to do this with pre-2 formats, since presumably the time stamps were
 output incorrectly.
",434,data/crawl/tar/hunk_106.cpp,,,data/crawl/tar/old_hunk_106.cpp,data/crawl/tar/new_hunk_106.cpp,"[7, 13]","[7, 13]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=6488588c5fc97c8d4d6a86be76016ca980fc871f,26 Jun 2006,"Update
",1908,data/crawl/tar/hunk_107.cpp,,,data/crawl/tar/old_hunk_107.cpp,data/crawl/tar/new_hunk_107.cpp,[564],[1026]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=39e5d9182c02b0a5204d406794640ef6e71bdcb8,25 Jun 2006,"(Other Tars): New node describing how to extract GNU-specific member
 formats using third-party tars.
",375,data/crawl/tar/hunk_108.cpp,,,data/crawl/tar/old_hunk_108.cpp,data/crawl/tar/new_hunk_108.cpp,[],[212]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=bf5ba3dbefa4878d712b83ea16c95220c2197417,25 Jun 2006,"A sample utility to expand sparse files extracted by third-party
 tars. It is not meant to be installed nor to be included in the distribution.
 It is here, so that it can be obtained either from CVS or from the tar web
 site.
",469,data/crawl/tar/hunk_109.cpp,,,data/crawl/tar/old_hunk_109.cpp,data/crawl/tar/new_hunk_109.cpp,[],"[310, 312]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=d0201294c0978972fa1ce303d4b56de5cef48ee3,24 Jun 2006,"(xhdr_tab.decoder): pass keyword as a second argument. All callers
 changed. (decode_record): Check for numeric overflow (xheader_string_end):
 Return boolean value. Check for possible numeric overflow
",170,data/crawl/tar/hunk_110.cpp,,,data/crawl/tar/old_hunk_110.cpp,data/crawl/tar/new_hunk_110.cpp,[],[6]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=d0201294c0978972fa1ce303d4b56de5cef48ee3,24 Jun 2006,"(xhdr_tab.decoder): pass keyword as a second argument. All callers
 changed. (decode_record): Check for numeric overflow (xheader_string_end):
 Return boolean value. Check for possible numeric overflow
",170,data/crawl/tar/hunk_111.cpp,,,data/crawl/tar/old_hunk_111.cpp,data/crawl/tar/new_hunk_111.cpp,[5],[5]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=d0201294c0978972fa1ce303d4b56de5cef48ee3,24 Jun 2006,"(xhdr_tab.decoder): pass keyword as a second argument. All callers
 changed. (decode_record): Check for numeric overflow (xheader_string_end):
 Return boolean value. Check for possible numeric overflow
",170,data/crawl/tar/hunk_112.cpp,,,data/crawl/tar/old_hunk_112.cpp,data/crawl/tar/new_hunk_112.cpp,[],[6]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=d0201294c0978972fa1ce303d4b56de5cef48ee3,24 Jun 2006,"(xhdr_tab.decoder): pass keyword as a second argument. All callers
 changed. (decode_record): Check for numeric overflow (xheader_string_end):
 Return boolean value. Check for possible numeric overflow
",170,data/crawl/tar/hunk_113.cpp,,,data/crawl/tar/old_hunk_113.cpp,data/crawl/tar/new_hunk_113.cpp,[12],[14]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=4b3dd17c002c2499c60c957780db10011805f015,24 Jun 2006,"(pax_dump_header_0): Return false if xheader_string_end fails (for
 0.1 formats). (pax_dump_header): Return meaningful value
",54,data/crawl/tar/hunk_114.cpp,,,data/crawl/tar/old_hunk_114.cpp,data/crawl/tar/new_hunk_114.cpp,[3],[3]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=090d1d36ae038a82d2b4bb54a8464bb7629188b7,23 Jun 2006,"Implement sparse format versioning. Implement new version (1.0) of
 PAX sparse format. (pax_sparse_member_p): Fix condition (pax_dump_header): A
 dispatcher function (pax_dump_header_0,pax_dump_header_1): New functions.
 (pax_optab): Update (oldgnu_dump_header): Minor fix: make sure
 sparse_header.isextended is set before calling set_next_block_after
",283,data/crawl/tar/hunk_115.cpp,,,data/crawl/tar/old_hunk_115.cpp,data/crawl/tar/new_hunk_115.cpp,[],"[129, 152, 167, 175]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=4ef056729e5dc97952d04590afe33422ff6bb938,11 Jun 2006,"(xheader_set_single_keyword): Fix typo. (decode_time): Avoid using
 gotos.
",51,data/crawl/tar/hunk_116.cpp,,,data/crawl/tar/old_hunk_116.cpp,data/crawl/tar/new_hunk_116.cpp,[7],[18]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=f9bd340c1bdcb47ce99e33bc995ef28de5f6d2eb,8 Jun 2006,"--checkpoint takes an optional argument specifying number of records
 between two successive checkpoints (proposed by Jason Armistead on
 2004-06-22).Optional dot starting the argument means ""print dots instead of
 textual checkpoints"". (tar_help): New function
",108,data/crawl/tar/hunk_117.cpp,,,data/crawl/tar/old_hunk_117.cpp,data/crawl/tar/new_hunk_117.cpp,[],[8]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=f9bd340c1bdcb47ce99e33bc995ef28de5f6d2eb,8 Jun 2006,"--checkpoint takes an optional argument specifying number of records
 between two successive checkpoints (proposed by Jason Armistead on
 2004-06-22).Optional dot starting the argument means ""print dots instead of
 textual checkpoints"". (tar_help): New function
",108,data/crawl/tar/hunk_118.cpp,,,data/crawl/tar/old_hunk_118.cpp,data/crawl/tar/new_hunk_118.cpp,[],"[13, 20]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=2d2e1d411e09126a7ed82ad774e24082914a51ce,8 Jun 2006,"(dumpdir_locate,obstack_code_rename,purge_directory): Re-implement
 renaming. Introduce X control code. (make_tmp_dir_name): Remove
",212,data/crawl/tar/hunk_119.cpp,,,data/crawl/tar/old_hunk_119.cpp,data/crawl/tar/new_hunk_119.cpp,[],"[14, 24, 37, 50, 56, 76, 125]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=9d2e8df19540bfa074d818f8b3d3a7759bc4682a,6 Jun 2006,"Update
",4387,data/crawl/tar/hunk_120.cpp,,,data/crawl/tar/old_hunk_120.cpp,data/crawl/tar/new_hunk_120.cpp,"[811, 812, 817, 818, 1807]","[547, 548, 553, 554, 1543]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=8b471d55ffddb1893fc0e8b78434ceb352f53119,25 May 2006,"Rewritten handling of member names in the command line. Tar no longer
 attempts to guess globbing patterns, instead it relies on --wildcard option.
 (init_names): Removed. (struct name_elt): New structure. (name_array): Change
 type to struct name_elt. All references updated (name_add_name,name_add_dir):
 New functions (name_next_elt): New function (name_next): Rewritten using
 name_next_elt. (namelist_match): Rewritten pattern matching using
 exclude_fnmatch. (names_notfound): Warn if globbing patterns were used
 without --wildcards option
",284,data/crawl/tar/hunk_121.cpp,,,data/crawl/tar/old_hunk_121.cpp,data/crawl/tar/new_hunk_121.cpp,"[6, 9]","[7, 10]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=8b471d55ffddb1893fc0e8b78434ceb352f53119,25 May 2006,"Rewritten handling of member names in the command line. Tar no longer
 attempts to guess globbing patterns, instead it relies on --wildcard option.
 (init_names): Removed. (struct name_elt): New structure. (name_array): Change
 type to struct name_elt. All references updated (name_add_name,name_add_dir):
 New functions (name_next_elt): New function (name_next): Rewritten using
 name_next_elt. (namelist_match): Rewritten pattern matching using
 exclude_fnmatch. (names_notfound): Warn if globbing patterns were used
 without --wildcards option
",284,data/crawl/tar/hunk_122.cpp,,,data/crawl/tar/old_hunk_122.cpp,data/crawl/tar/new_hunk_122.cpp,[6],[8]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=c9e7465642f8dc879ea589b628176e6c9b6656bf,8 May 2006,"(struct directory.contents, flags): New members (nfs,found,new):
 Remove. Replaced by appropriate bitmask values in `flags' field. All uses
 updated. (directory_meta_table): New table. (hash_directory): Rename to
 hash_directory_name (compare_directories): Rename to compare_directory_names
 (hash_directory_meta,compare_directory_meta,find_directory_meta): New
 functions (compare_dirents): Removed (note_directory): Get 7th argument:
 directory contents. All callers updated (dumpdir_locate,makedumpdir): New
 functions (scan_directory): Rewritten. Use makedumpdir to create a sorted
 dumpdir array. This makes the obstack argument unnecessary. Besides,
 ALL_CHILDREN flag is set only for new directories. (procdir): Change return
 type to struct directory. Return immediately if the directory was already
 initialized. Discover directory renames using directory_meta_table.
 (append_incremental_renames): New function. (read_directory_file,
 write_directory_file): Use new snapshot file format.
",1158,data/crawl/tar/hunk_123.cpp,,,data/crawl/tar/old_hunk_123.cpp,data/crawl/tar/new_hunk_123.cpp,[],"[35, 40, 50, 55, 86, 90, 98, 102, 113, 117, 125, 129]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=c9e7465642f8dc879ea589b628176e6c9b6656bf,8 May 2006,"(struct directory.contents, flags): New members (nfs,found,new):
 Remove. Replaced by appropriate bitmask values in `flags' field. All uses
 updated. (directory_meta_table): New table. (hash_directory): Rename to
 hash_directory_name (compare_directories): Rename to compare_directory_names
 (hash_directory_meta,compare_directory_meta,find_directory_meta): New
 functions (compare_dirents): Removed (note_directory): Get 7th argument:
 directory contents. All callers updated (dumpdir_locate,makedumpdir): New
 functions (scan_directory): Rewritten. Use makedumpdir to create a sorted
 dumpdir array. This makes the obstack argument unnecessary. Besides,
 ALL_CHILDREN flag is set only for new directories. (procdir): Change return
 type to struct directory. Return immediately if the directory was already
 initialized. Discover directory renames using directory_meta_table.
 (append_incremental_renames): New function. (read_directory_file,
 write_directory_file): Use new snapshot file format.
",1158,data/crawl/tar/hunk_124.cpp,,,data/crawl/tar/old_hunk_124.cpp,data/crawl/tar/new_hunk_124.cpp,"[0, 15, 20, 25, 35, 40, 71, 75, 83, 87, 98, 102, 110, 114]","[0, 19]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=c9e7465642f8dc879ea589b628176e6c9b6656bf,8 May 2006,"(struct directory.contents, flags): New members (nfs,found,new):
 Remove. Replaced by appropriate bitmask values in `flags' field. All uses
 updated. (directory_meta_table): New table. (hash_directory): Rename to
 hash_directory_name (compare_directories): Rename to compare_directory_names
 (hash_directory_meta,compare_directory_meta,find_directory_meta): New
 functions (compare_dirents): Removed (note_directory): Get 7th argument:
 directory contents. All callers updated (dumpdir_locate,makedumpdir): New
 functions (scan_directory): Rewritten. Use makedumpdir to create a sorted
 dumpdir array. This makes the obstack argument unnecessary. Besides,
 ALL_CHILDREN flag is set only for new directories. (procdir): Change return
 type to struct directory. Return immediately if the directory was already
 initialized. Discover directory renames using directory_meta_table.
 (append_incremental_renames): New function. (read_directory_file,
 write_directory_file): Use new snapshot file format.
",1158,data/crawl/tar/hunk_125.cpp,,,data/crawl/tar/old_hunk_125.cpp,data/crawl/tar/new_hunk_125.cpp,[0],[0]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=a0b4431f26a72addb201c306ae02c2e12c2d5092,8 May 2006,"(rename_directory): New function
",36,data/crawl/tar/hunk_126.cpp,,,data/crawl/tar/old_hunk_126.cpp,data/crawl/tar/new_hunk_126.cpp,[],[28]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=f03fc1e078693d5315031739cf15b092349ab93c,9 Dec 2005,"(read_directory_file): Fix format string
",2,data/crawl/tar/hunk_127.cpp,,,data/crawl/tar/old_hunk_127.cpp,data/crawl/tar/new_hunk_127.cpp,[3],[3]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=a169d65b94722c55b0daa20997a1cb02307159cf,8 Dec 2005,"(gid_to_chars, major_to_chars, minor_to_chars) (mode_to_chars,
 off_to_chars, size_to_chars, time_to_chars) (uid_to_chars, uintmax_to_chars):
 Return bool (to_chars): Return bool (start_header): Check return values of
 convertion routines. Fail if unable to store data in the header.
",237,data/crawl/tar/hunk_128.cpp,,,data/crawl/tar/old_hunk_128.cpp,data/crawl/tar/new_hunk_128.cpp,[],[61]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=a169d65b94722c55b0daa20997a1cb02307159cf,8 Dec 2005,"(gid_to_chars, major_to_chars, minor_to_chars) (mode_to_chars,
 off_to_chars, size_to_chars, time_to_chars) (uid_to_chars, uintmax_to_chars):
 Return bool (to_chars): Return bool (start_header): Check return values of
 convertion routines. Fail if unable to store data in the header.
",237,data/crawl/tar/hunk_129.cpp,,,data/crawl/tar/old_hunk_129.cpp,data/crawl/tar/new_hunk_129.cpp,[97],[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=49e7ba5b17aa74483e9d9debdfd31a7748dad8d1,7 Dec 2005,"Following the discussion with Karl Berry, discontinue using @value{}
 substitutions for Texinfo commands. Properly index all long options. Print a
 separate long option index.
",1572,data/crawl/tar/hunk_130.cpp,,,data/crawl/tar/old_hunk_130.cpp,data/crawl/tar/new_hunk_130.cpp,[12],[15]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=49e7ba5b17aa74483e9d9debdfd31a7748dad8d1,7 Dec 2005,"Following the discussion with Karl Berry, discontinue using @value{}
 substitutions for Texinfo commands. Properly index all long options. Print a
 separate long option index.
",1572,data/crawl/tar/hunk_131.cpp,,,data/crawl/tar/old_hunk_131.cpp,data/crawl/tar/new_hunk_131.cpp,[17],[21]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=49e7ba5b17aa74483e9d9debdfd31a7748dad8d1,7 Dec 2005,"Following the discussion with Karl Berry, discontinue using @value{}
 substitutions for Texinfo commands. Properly index all long options. Print a
 separate long option index.
",1572,data/crawl/tar/hunk_132.cpp,,,data/crawl/tar/old_hunk_132.cpp,data/crawl/tar/new_hunk_132.cpp,"[3, 8]","[3, 4, 9, 10]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=a5da71b1421e2f6850d3057aef837e67ded012e3,6 Dec 2005,"Document --to-command and --info-script options. Add missing xrefs.
",421,data/crawl/tar/hunk_133.cpp,,,data/crawl/tar/old_hunk_133.cpp,data/crawl/tar/new_hunk_133.cpp,[],[14]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=a5da71b1421e2f6850d3057aef837e67ded012e3,6 Dec 2005,"Document --to-command and --info-script options. Add missing xrefs.
",421,data/crawl/tar/hunk_134.cpp,,,data/crawl/tar/old_hunk_134.cpp,data/crawl/tar/new_hunk_134.cpp,[],[9]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=a5da71b1421e2f6850d3057aef837e67ded012e3,6 Dec 2005,"Document --to-command and --info-script options. Add missing xrefs.
",421,data/crawl/tar/hunk_135.cpp,,,data/crawl/tar/old_hunk_135.cpp,data/crawl/tar/new_hunk_135.cpp,[],"[106, 111]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=5b1df7b55e9a77587984511e222b70d01b637205,11 Nov 2005,"(flush_write,flush_read): Change data type. (flush_archive): Compute
 actual buffer fill level before calling low level function. (close_archive):
 Call flush_archive again if the first call resulted in partially filled
 buffer. (try_new_volume): Rewritten handling of initial headers.
 (add_chunk_header): New function. Write an additional header before the
 continuation chunk. The purpose of the header is to allow third-party tars to
 extract the member. (simple_flush_write): Take an argument.
 (_gnu_flush_write): Correctly handle partially filled buffers.
",185,data/crawl/tar/hunk_136.cpp,,,data/crawl/tar/old_hunk_136.cpp,data/crawl/tar/new_hunk_136.cpp,[],[14]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=374ae10d39e9e52789a00202c831a1c7c45e1610,7 Nov 2005,"(xheader_keyword_deleted_p): Remove static qualifier. (struct
 xhdr_tab.decoder): Change prototype. POSIX allows string values to contain
 embedded nulls, so take an extra argument specifying the length of the
 string. (decx,decg,dummy_decoder,atime_decoder,gid_decoder)
 (gname_decoder,linkpath_decoder,ctime_decoder,mtime_decoder)
 (path_decoder,size_decoder,uid_decoder,uname_decoder)
 (sparse_size_decoder,sparse_numblocks_decoder)
 (sparse_offset_decoder,sparse_numbytes_decoder): Likewise. (decode_record):
 Pass value length to the handler (run_override_list): Pass value length to
 the decoder (xheader_print_n): New function (xheader_print): Rewritten using
 xheader_print_n (xheader_finish): Do not rely om strlen to compute the length
 of the collected string: it can contain embedded nulls
 (xheader_string_begin,xheader_string_add,xheader_string_end): New functions.
 (sparse_map_decoder,dumpdir_coder,dumpdir_decoder): New functions. Handle
 GNU.sparse.map and GNU.dumpdir variables. (xhdr_tab): Add new variables.
",275,data/crawl/tar/hunk_137.cpp,,,data/crawl/tar/old_hunk_137.cpp,data/crawl/tar/new_hunk_137.cpp,[],[5]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=374ae10d39e9e52789a00202c831a1c7c45e1610,7 Nov 2005,"(xheader_keyword_deleted_p): Remove static qualifier. (struct
 xhdr_tab.decoder): Change prototype. POSIX allows string values to contain
 embedded nulls, so take an extra argument specifying the length of the
 string. (decx,decg,dummy_decoder,atime_decoder,gid_decoder)
 (gname_decoder,linkpath_decoder,ctime_decoder,mtime_decoder)
 (path_decoder,size_decoder,uid_decoder,uname_decoder)
 (sparse_size_decoder,sparse_numblocks_decoder)
 (sparse_offset_decoder,sparse_numbytes_decoder): Likewise. (decode_record):
 Pass value length to the handler (run_override_list): Pass value length to
 the decoder (xheader_print_n): New function (xheader_print): Rewritten using
 xheader_print_n (xheader_finish): Do not rely om strlen to compute the length
 of the collected string: it can contain embedded nulls
 (xheader_string_begin,xheader_string_add,xheader_string_end): New functions.
 (sparse_map_decoder,dumpdir_coder,dumpdir_decoder): New functions. Handle
 GNU.sparse.map and GNU.dumpdir variables. (xhdr_tab): Add new variables.
",275,data/crawl/tar/hunk_138.cpp,,,data/crawl/tar/old_hunk_138.cpp,data/crawl/tar/new_hunk_138.cpp,[],"[19, 47, 59, 69]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=f6458a827ae7a2c41616490f653714068072b257,7 Nov 2005,"(list_archive): Handle incremental backups in pax format.
 (decode_header): Initialize stat_info.dumpdir
",47,data/crawl/tar/hunk_139.cpp,,,data/crawl/tar/old_hunk_139.cpp,data/crawl/tar/new_hunk_139.cpp,[28],[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=08a8d2dec63967653c7f54a1b4b7cb49c3c12679,7 Nov 2005,"(dumpdir_size, get_gnu_dumpdir): New functions. (purge_directory):
 Use stat_info.dumpdir instead of getting its value explicitely.
",80,data/crawl/tar/hunk_140.cpp,,,data/crawl/tar/old_hunk_140.cpp,data/crawl/tar/new_hunk_140.cpp,[37],[31]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=1e304fc5fd4fba5455057e74b09d08f954753340,5 Nov 2005,"(struct directory.mtime): New member. (note_directory): Take
 additional arguments. All callers updated. (scan_directory): Updated to use
 more metadata. In particular, this allows to correctly detect renamed files.
 (read_directory_file,write_directory_file) (write_directory_file_entry):
 Support new directory file format.
",284,data/crawl/tar/hunk_141.cpp,,,data/crawl/tar/old_hunk_141.cpp,data/crawl/tar/new_hunk_141.cpp,"[7, 10]","[11, 14, 29, 34, 39, 49, 54]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=1e304fc5fd4fba5455057e74b09d08f954753340,5 Nov 2005,"(struct directory.mtime): New member. (note_directory): Take
 additional arguments. All callers updated. (scan_directory): Updated to use
 more metadata. In particular, this allows to correctly detect renamed files.
 (read_directory_file,write_directory_file) (write_directory_file_entry):
 Support new directory file format.
",284,data/crawl/tar/hunk_142.cpp,,,data/crawl/tar/old_hunk_142.cpp,data/crawl/tar/new_hunk_142.cpp,[],"[15, 19, 27, 31]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=040b5ab5f969f9ee6c69a54bc284e2ff57b86556,23 Jun 2005,"A sweep of the sparse code prompted by a bug report by Jim Meyering.
 * src/sparse.c: Include <inttostr.h>. (struct tar_sparse_file): offset and
 dumped_size are off_t, not size_t.  optab is now const *. (dump_zeros):
 Return bool success flag, not off_t. All callers changed. Use a constant-zero
 buffer rather than clearing a buffer each time. Don't mess up if write fails.
 (dump_zeros, check_sparse_region): Don't assume off_t is no wider than
 size_t. (tar_sparse_init): Don't bother clearing a field that is already
 clear. (zero_block_p): First arg is const *, not *. (clear_block,
 SPARSES_INIT_COUNT): Remove. (sparse_add_map): First arg is now struct
 start_stat_info *, not struct tar_sparse_file *.  All callers changed. Use
 x2nrealloc to check for size_t overflow. (parse_scan_file): Cache
 commonly-used parts of file. Use an auto buffer, not a static one. Don't
 bother clearing the buffer; not needed. Don't bother clearing items that are
 already clear. (oldgnu_optab, star_optab, pax_optab): Now const.
 (sparse_dump_region): Don't bother clearing the buffer before reading into
 it; just clear the parts that aren't read into. (sparse_dump_file): Clear the
 whole local variable 'file'. (diff_buffer): Remove; now a local var.
 (check_sparse_region): Don't bother clearing buffer before reading into it. 
 Don't assume off_t is promoted to long. (oldgnu_get_sparse_info,
 star_get_sparse_info): Use an auto status, not static. * src/tar.h (struct
 tar_stat_info): had_trailing_slash is now bool, not int. * src/xheader.c
 (sparse_offset_coder, sparse_numbytes_coder): Rewrite to avoid cast.
 (sparse_offset_decoder, sparse_numbytes_decoder): Diagnose excess entries
 rather than crashing.
",225,data/crawl/tar/hunk_143.cpp,,,data/crawl/tar/old_hunk_143.cpp,data/crawl/tar/new_hunk_143.cpp,[3],[4]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=040b5ab5f969f9ee6c69a54bc284e2ff57b86556,23 Jun 2005,"A sweep of the sparse code prompted by a bug report by Jim Meyering.
 * src/sparse.c: Include <inttostr.h>. (struct tar_sparse_file): offset and
 dumped_size are off_t, not size_t.  optab is now const *. (dump_zeros):
 Return bool success flag, not off_t. All callers changed. Use a constant-zero
 buffer rather than clearing a buffer each time. Don't mess up if write fails.
 (dump_zeros, check_sparse_region): Don't assume off_t is no wider than
 size_t. (tar_sparse_init): Don't bother clearing a field that is already
 clear. (zero_block_p): First arg is const *, not *. (clear_block,
 SPARSES_INIT_COUNT): Remove. (sparse_add_map): First arg is now struct
 start_stat_info *, not struct tar_sparse_file *.  All callers changed. Use
 x2nrealloc to check for size_t overflow. (parse_scan_file): Cache
 commonly-used parts of file. Use an auto buffer, not a static one. Don't
 bother clearing the buffer; not needed. Don't bother clearing items that are
 already clear. (oldgnu_optab, star_optab, pax_optab): Now const.
 (sparse_dump_region): Don't bother clearing the buffer before reading into
 it; just clear the parts that aren't read into. (sparse_dump_file): Clear the
 whole local variable 'file'. (diff_buffer): Remove; now a local var.
 (check_sparse_region): Don't bother clearing buffer before reading into it. 
 Don't assume off_t is promoted to long. (oldgnu_get_sparse_info,
 star_get_sparse_info): Use an auto status, not static. * src/tar.h (struct
 tar_stat_info): had_trailing_slash is now bool, not int. * src/xheader.c
 (sparse_offset_coder, sparse_numbytes_coder): Rewrite to avoid cast.
 (sparse_offset_decoder, sparse_numbytes_decoder): Diagnose excess entries
 rather than crashing.
",225,data/crawl/tar/hunk_144.cpp,,,data/crawl/tar/old_hunk_144.cpp,data/crawl/tar/new_hunk_144.cpp,[],[7]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=040b5ab5f969f9ee6c69a54bc284e2ff57b86556,23 Jun 2005,"A sweep of the sparse code prompted by a bug report by Jim Meyering.
 * src/sparse.c: Include <inttostr.h>. (struct tar_sparse_file): offset and
 dumped_size are off_t, not size_t.  optab is now const *. (dump_zeros):
 Return bool success flag, not off_t. All callers changed. Use a constant-zero
 buffer rather than clearing a buffer each time. Don't mess up if write fails.
 (dump_zeros, check_sparse_region): Don't assume off_t is no wider than
 size_t. (tar_sparse_init): Don't bother clearing a field that is already
 clear. (zero_block_p): First arg is const *, not *. (clear_block,
 SPARSES_INIT_COUNT): Remove. (sparse_add_map): First arg is now struct
 start_stat_info *, not struct tar_sparse_file *.  All callers changed. Use
 x2nrealloc to check for size_t overflow. (parse_scan_file): Cache
 commonly-used parts of file. Use an auto buffer, not a static one. Don't
 bother clearing the buffer; not needed. Don't bother clearing items that are
 already clear. (oldgnu_optab, star_optab, pax_optab): Now const.
 (sparse_dump_region): Don't bother clearing the buffer before reading into
 it; just clear the parts that aren't read into. (sparse_dump_file): Clear the
 whole local variable 'file'. (diff_buffer): Remove; now a local var.
 (check_sparse_region): Don't bother clearing buffer before reading into it. 
 Don't assume off_t is promoted to long. (oldgnu_get_sparse_info,
 star_get_sparse_info): Use an auto status, not static. * src/tar.h (struct
 tar_stat_info): had_trailing_slash is now bool, not int. * src/xheader.c
 (sparse_offset_coder, sparse_numbytes_coder): Rewrite to avoid cast.
 (sparse_offset_decoder, sparse_numbytes_decoder): Diagnose excess entries
 rather than crashing.
",225,data/crawl/tar/hunk_145.cpp,,,data/crawl/tar/old_hunk_145.cpp,data/crawl/tar/new_hunk_145.cpp,[],[6]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=d659cbaccdc1f3279c49107cf15f15a639738529,22 Jun 2005,"Carefully crafted invalid headers can cause buffer overrun. Invalid
 header fields go undiagnosed. Some valid time strings are ignored.

* NEWS: Better support for full-resolution time stamps.
The -v option now prints time stamps only to 1-minute resolution.
* gnulib.modules: Add utimens.
* lib/.cvsignore: Add imaxtostr.c, inttostr.c, inttostr.h,
offtostr.c, umaxtostr.c, utimens.c, utimens.h.  Remove paxconvert.c.
* lib/Makefile.tmpl (libtar_a_SOURCES): Remove paxconvert.c.
* lib/paxconvert.c: Remove; superseded by umaxtostr.c.
* po/POTFILES.in: Remove lib/paxconvert.c.  Add lib/xalloc-die.c,
lib/obstack.c.
* src/buffer.c (set_start_time, compute_duration, start_time):
Use gettime rather than rolling our own code.
* src/common.h (OLDGNU_NAME_FIELD_SIZE, MAXOCTAL11, MAXOCTAL7): Remove.
(newer_ctime_option): Remove.
(timespec_lt): New function.
(OLDER_STAT_TIME): Use it.
(string_to_chars): First arg is char const *, not char *.
(tartime): Time arg is now struct timespec.  New bool arg.
All callers changed.
(code_ns_fraction): New decl.
(sys_stat_nanoseconds): Remove decl.
(get_stat_atime, get_stat_ctime, get_stat_mtime): New functions.
(set_stat_atime, set_stat_ctime, set_stat_mtime): New functions.
* src/compare.c: Include utimens.h rather than rolling our own.
(diff_dir, diff_file, diff_link, diff_symlink, diff_special):
Prototype.
(diff_dumpdir, diff_multivol): Prototype.
(diff_file): Support higher-resolution time stamps.
* src/create.c: Include utimens.h rather than rolling our own.
(MAX_OCTAL_VAL): New macro.
(tar_copy_str, string_to_chars): Don't bother to zero-fill;
the destination is already zeroed.
(string_to_chars): First arg is char const *.
(start_private_header): Use MINOR_TO_CHARS, not MAJOR_TO_CHARS,
for minor device number.
(write_header_name, dump_hard_link, dump_file0):
Simplify test for old GNU format.
(start_header): Put in placeholders for uid, etc., even when
using extended headers, for benefit of older ""tar"" implementations.
Don't assume uintmax_t is wider than 32 bits.
Output extended header for mtime if needed.
(dump_regular_finish, dump_file0):
Support extended time stamp resolution.
* src/extract.c: Include utimens.h rather than rolling our own.
(check_time): Support extended time stamp resolution.
* src/list.c: Include <inttostr.h>.
(tartime): Use umaxtostr rather than stringify_uintmax_t_backwards.
* src/xheader.c: Include <inttostr.h>.
Do not include <xstrtol.h>.
(strtoimax) [!HAVE_DECL_STRTOIMAX && !defined strtoimax]: New decl.
(strtoumax) [!HAVE_DECL_STRTOUMAX && !defined strtoumax]: New decl.
(BILLION, LOG10_BILLION): New constants.
(to_decimal): Remove; superseded by inttostr.  All callers changed
to use umaxtostr.
(xheader_format_name): Don't assume pids and uintmax_t values
fit in 63 bytes (!) when printed.
(decode_record): Don't bother to check for ERANGE; an out of range
value must be treater than len_max anyway.
If the length is out of range, output it in the diagnostic.
(format_uintmax): Remove; all callers changed to use umaxtostr.
(xheader_print): Don't assume sizes can be printed in 99 bytes (!).
(out_of_range_header): New function.
(decode_time): Use it.
(code_time): Accept struct timespec, not time_t and unsigned long.
All callers changed.  Size sbuf properly, and remove unnecessary check.
Don't assume time stamps can fit in 199 bytes.
Handle negative time stamps.  Handle fractional time stamps
more consistently.  Don't output unnecessary trailing zeros.
(decode_time): Yield struct timespec, not time_t and unsigned long.
All callers changed.
Handle negative time stamps.  Truncate towards minus infinity
consistently.  Improve overflow checks, and output a better
diagnostic on overflow.
(code_num): Don't assume uintmax_t can be printed in 99 bytes (!).
(decode_num): New function, for better diagnostics.
(atime_coder, atime_decoder, gid_decoder, ctime_coder):
(ctime_decoder, mtime_coder, mtime_decoder, size_decoder):
(uid_decoder, sparse_size_decoder, sparse_numblocks_decoder):
(sparse_offset_decoder, sparse_numbytes_decoder):
Use decode_num, etc., instead of xstrtoumax, etc.

* src/xheader.c (sparse_numblocks_decoder): Remove unchecked use
of `calloc'.  Use xcalloc instead.
(decode_time, gid_decoder, size_decoder, uid_decoder):
(sparse_size_decoder, sparse_offset_decoder, sparse_numblocks_decoder):
Ensure that the result of calling xstrtoumax is no larger than
the maximum value for the target type.  Upon any failure, exit with
a diagnostic.
(sparse_numblocks_decoder): Avoid buffer overrun/heap corruption:
use x2nrealloc, rather than `n *= 2' and xrealloc(p, n,....
(decode_time): Rewrite to accept time strings like
1119018481.000000000.  Before, such strings were always ignored.",1185,data/crawl/tar/hunk_146.cpp,,,data/crawl/tar/old_hunk_146.cpp,data/crawl/tar/new_hunk_146.cpp,[5],[6]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=d659cbaccdc1f3279c49107cf15f15a639738529,22 Jun 2005,"Carefully crafted invalid headers can cause buffer overrun. Invalid
 header fields go undiagnosed. Some valid time strings are ignored.

* NEWS: Better support for full-resolution time stamps.
The -v option now prints time stamps only to 1-minute resolution.
* gnulib.modules: Add utimens.
* lib/.cvsignore: Add imaxtostr.c, inttostr.c, inttostr.h,
offtostr.c, umaxtostr.c, utimens.c, utimens.h.  Remove paxconvert.c.
* lib/Makefile.tmpl (libtar_a_SOURCES): Remove paxconvert.c.
* lib/paxconvert.c: Remove; superseded by umaxtostr.c.
* po/POTFILES.in: Remove lib/paxconvert.c.  Add lib/xalloc-die.c,
lib/obstack.c.
* src/buffer.c (set_start_time, compute_duration, start_time):
Use gettime rather than rolling our own code.
* src/common.h (OLDGNU_NAME_FIELD_SIZE, MAXOCTAL11, MAXOCTAL7): Remove.
(newer_ctime_option): Remove.
(timespec_lt): New function.
(OLDER_STAT_TIME): Use it.
(string_to_chars): First arg is char const *, not char *.
(tartime): Time arg is now struct timespec.  New bool arg.
All callers changed.
(code_ns_fraction): New decl.
(sys_stat_nanoseconds): Remove decl.
(get_stat_atime, get_stat_ctime, get_stat_mtime): New functions.
(set_stat_atime, set_stat_ctime, set_stat_mtime): New functions.
* src/compare.c: Include utimens.h rather than rolling our own.
(diff_dir, diff_file, diff_link, diff_symlink, diff_special):
Prototype.
(diff_dumpdir, diff_multivol): Prototype.
(diff_file): Support higher-resolution time stamps.
* src/create.c: Include utimens.h rather than rolling our own.
(MAX_OCTAL_VAL): New macro.
(tar_copy_str, string_to_chars): Don't bother to zero-fill;
the destination is already zeroed.
(string_to_chars): First arg is char const *.
(start_private_header): Use MINOR_TO_CHARS, not MAJOR_TO_CHARS,
for minor device number.
(write_header_name, dump_hard_link, dump_file0):
Simplify test for old GNU format.
(start_header): Put in placeholders for uid, etc., even when
using extended headers, for benefit of older ""tar"" implementations.
Don't assume uintmax_t is wider than 32 bits.
Output extended header for mtime if needed.
(dump_regular_finish, dump_file0):
Support extended time stamp resolution.
* src/extract.c: Include utimens.h rather than rolling our own.
(check_time): Support extended time stamp resolution.
* src/list.c: Include <inttostr.h>.
(tartime): Use umaxtostr rather than stringify_uintmax_t_backwards.
* src/xheader.c: Include <inttostr.h>.
Do not include <xstrtol.h>.
(strtoimax) [!HAVE_DECL_STRTOIMAX && !defined strtoimax]: New decl.
(strtoumax) [!HAVE_DECL_STRTOUMAX && !defined strtoumax]: New decl.
(BILLION, LOG10_BILLION): New constants.
(to_decimal): Remove; superseded by inttostr.  All callers changed
to use umaxtostr.
(xheader_format_name): Don't assume pids and uintmax_t values
fit in 63 bytes (!) when printed.
(decode_record): Don't bother to check for ERANGE; an out of range
value must be treater than len_max anyway.
If the length is out of range, output it in the diagnostic.
(format_uintmax): Remove; all callers changed to use umaxtostr.
(xheader_print): Don't assume sizes can be printed in 99 bytes (!).
(out_of_range_header): New function.
(decode_time): Use it.
(code_time): Accept struct timespec, not time_t and unsigned long.
All callers changed.  Size sbuf properly, and remove unnecessary check.
Don't assume time stamps can fit in 199 bytes.
Handle negative time stamps.  Handle fractional time stamps
more consistently.  Don't output unnecessary trailing zeros.
(decode_time): Yield struct timespec, not time_t and unsigned long.
All callers changed.
Handle negative time stamps.  Truncate towards minus infinity
consistently.  Improve overflow checks, and output a better
diagnostic on overflow.
(code_num): Don't assume uintmax_t can be printed in 99 bytes (!).
(decode_num): New function, for better diagnostics.
(atime_coder, atime_decoder, gid_decoder, ctime_coder):
(ctime_decoder, mtime_coder, mtime_decoder, size_decoder):
(uid_decoder, sparse_size_decoder, sparse_numblocks_decoder):
(sparse_offset_decoder, sparse_numbytes_decoder):
Use decode_num, etc., instead of xstrtoumax, etc.

* src/xheader.c (sparse_numblocks_decoder): Remove unchecked use
of `calloc'.  Use xcalloc instead.
(decode_time, gid_decoder, size_decoder, uid_decoder):
(sparse_size_decoder, sparse_offset_decoder, sparse_numblocks_decoder):
Ensure that the result of calling xstrtoumax is no larger than
the maximum value for the target type.  Upon any failure, exit with
a diagnostic.
(sparse_numblocks_decoder): Avoid buffer overrun/heap corruption:
use x2nrealloc, rather than `n *= 2' and xrealloc(p, n,....
(decode_time): Rewrite to accept time strings like
1119018481.000000000.  Before, such strings were always ignored.",1185,data/crawl/tar/hunk_147.cpp,,,data/crawl/tar/old_hunk_147.cpp,data/crawl/tar/new_hunk_147.cpp,[],[17]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=d659cbaccdc1f3279c49107cf15f15a639738529,22 Jun 2005,"Carefully crafted invalid headers can cause buffer overrun. Invalid
 header fields go undiagnosed. Some valid time strings are ignored.

* NEWS: Better support for full-resolution time stamps.
The -v option now prints time stamps only to 1-minute resolution.
* gnulib.modules: Add utimens.
* lib/.cvsignore: Add imaxtostr.c, inttostr.c, inttostr.h,
offtostr.c, umaxtostr.c, utimens.c, utimens.h.  Remove paxconvert.c.
* lib/Makefile.tmpl (libtar_a_SOURCES): Remove paxconvert.c.
* lib/paxconvert.c: Remove; superseded by umaxtostr.c.
* po/POTFILES.in: Remove lib/paxconvert.c.  Add lib/xalloc-die.c,
lib/obstack.c.
* src/buffer.c (set_start_time, compute_duration, start_time):
Use gettime rather than rolling our own code.
* src/common.h (OLDGNU_NAME_FIELD_SIZE, MAXOCTAL11, MAXOCTAL7): Remove.
(newer_ctime_option): Remove.
(timespec_lt): New function.
(OLDER_STAT_TIME): Use it.
(string_to_chars): First arg is char const *, not char *.
(tartime): Time arg is now struct timespec.  New bool arg.
All callers changed.
(code_ns_fraction): New decl.
(sys_stat_nanoseconds): Remove decl.
(get_stat_atime, get_stat_ctime, get_stat_mtime): New functions.
(set_stat_atime, set_stat_ctime, set_stat_mtime): New functions.
* src/compare.c: Include utimens.h rather than rolling our own.
(diff_dir, diff_file, diff_link, diff_symlink, diff_special):
Prototype.
(diff_dumpdir, diff_multivol): Prototype.
(diff_file): Support higher-resolution time stamps.
* src/create.c: Include utimens.h rather than rolling our own.
(MAX_OCTAL_VAL): New macro.
(tar_copy_str, string_to_chars): Don't bother to zero-fill;
the destination is already zeroed.
(string_to_chars): First arg is char const *.
(start_private_header): Use MINOR_TO_CHARS, not MAJOR_TO_CHARS,
for minor device number.
(write_header_name, dump_hard_link, dump_file0):
Simplify test for old GNU format.
(start_header): Put in placeholders for uid, etc., even when
using extended headers, for benefit of older ""tar"" implementations.
Don't assume uintmax_t is wider than 32 bits.
Output extended header for mtime if needed.
(dump_regular_finish, dump_file0):
Support extended time stamp resolution.
* src/extract.c: Include utimens.h rather than rolling our own.
(check_time): Support extended time stamp resolution.
* src/list.c: Include <inttostr.h>.
(tartime): Use umaxtostr rather than stringify_uintmax_t_backwards.
* src/xheader.c: Include <inttostr.h>.
Do not include <xstrtol.h>.
(strtoimax) [!HAVE_DECL_STRTOIMAX && !defined strtoimax]: New decl.
(strtoumax) [!HAVE_DECL_STRTOUMAX && !defined strtoumax]: New decl.
(BILLION, LOG10_BILLION): New constants.
(to_decimal): Remove; superseded by inttostr.  All callers changed
to use umaxtostr.
(xheader_format_name): Don't assume pids and uintmax_t values
fit in 63 bytes (!) when printed.
(decode_record): Don't bother to check for ERANGE; an out of range
value must be treater than len_max anyway.
If the length is out of range, output it in the diagnostic.
(format_uintmax): Remove; all callers changed to use umaxtostr.
(xheader_print): Don't assume sizes can be printed in 99 bytes (!).
(out_of_range_header): New function.
(decode_time): Use it.
(code_time): Accept struct timespec, not time_t and unsigned long.
All callers changed.  Size sbuf properly, and remove unnecessary check.
Don't assume time stamps can fit in 199 bytes.
Handle negative time stamps.  Handle fractional time stamps
more consistently.  Don't output unnecessary trailing zeros.
(decode_time): Yield struct timespec, not time_t and unsigned long.
All callers changed.
Handle negative time stamps.  Truncate towards minus infinity
consistently.  Improve overflow checks, and output a better
diagnostic on overflow.
(code_num): Don't assume uintmax_t can be printed in 99 bytes (!).
(decode_num): New function, for better diagnostics.
(atime_coder, atime_decoder, gid_decoder, ctime_coder):
(ctime_decoder, mtime_coder, mtime_decoder, size_decoder):
(uid_decoder, sparse_size_decoder, sparse_numblocks_decoder):
(sparse_offset_decoder, sparse_numbytes_decoder):
Use decode_num, etc., instead of xstrtoumax, etc.

* src/xheader.c (sparse_numblocks_decoder): Remove unchecked use
of `calloc'.  Use xcalloc instead.
(decode_time, gid_decoder, size_decoder, uid_decoder):
(sparse_size_decoder, sparse_offset_decoder, sparse_numblocks_decoder):
Ensure that the result of calling xstrtoumax is no larger than
the maximum value for the target type.  Upon any failure, exit with
a diagnostic.
(sparse_numblocks_decoder): Avoid buffer overrun/heap corruption:
use x2nrealloc, rather than `n *= 2' and xrealloc(p, n,....
(decode_time): Rewrite to accept time strings like
1119018481.000000000.  Before, such strings were always ignored.",1185,data/crawl/tar/hunk_148.cpp,,,data/crawl/tar/old_hunk_148.cpp,data/crawl/tar/new_hunk_148.cpp,[],"[98, 125]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=5c35fdb275b519373e6eb34621d956d09a52bf31,19 May 2005,"Remove defines and declarations imported from paxutils
",429,data/crawl/tar/hunk_149.cpp,,,data/crawl/tar/old_hunk_149.cpp,data/crawl/tar/new_hunk_149.cpp,[22],[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=5c35fdb275b519373e6eb34621d956d09a52bf31,19 May 2005,"Remove defines and declarations imported from paxutils
",429,data/crawl/tar/hunk_150.cpp,,,data/crawl/tar/old_hunk_150.cpp,data/crawl/tar/new_hunk_150.cpp,"[37, 78, 86, 93, 99]",[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=5c35fdb275b519373e6eb34621d956d09a52bf31,19 May 2005,"Remove defines and declarations imported from paxutils
",429,data/crawl/tar/hunk_151.cpp,,,data/crawl/tar/old_hunk_151.cpp,data/crawl/tar/new_hunk_151.cpp,"[12, 19, 25, 31, 37, 49]",[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=5c35fdb275b519373e6eb34621d956d09a52bf31,19 May 2005,"Remove defines and declarations imported from paxutils
",429,data/crawl/tar/hunk_152.cpp,,,data/crawl/tar/old_hunk_152.cpp,data/crawl/tar/new_hunk_152.cpp,"[5, 13]",[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=5c35fdb275b519373e6eb34621d956d09a52bf31,19 May 2005,"Remove defines and declarations imported from paxutils
",429,data/crawl/tar/hunk_153.cpp,,,data/crawl/tar/old_hunk_153.cpp,data/crawl/tar/new_hunk_153.cpp,"[24, 30]",[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=5c35fdb275b519373e6eb34621d956d09a52bf31,19 May 2005,"Remove defines and declarations imported from paxutils
",429,data/crawl/tar/hunk_154.cpp,,,data/crawl/tar/old_hunk_154.cpp,data/crawl/tar/new_hunk_154.cpp,"[5, 11]",[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=5c35fdb275b519373e6eb34621d956d09a52bf31,19 May 2005,"Remove defines and declarations imported from paxutils
",429,data/crawl/tar/hunk_155.cpp,,,data/crawl/tar/old_hunk_155.cpp,data/crawl/tar/new_hunk_155.cpp,"[5, 13, 21]",[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=5c35fdb275b519373e6eb34621d956d09a52bf31,19 May 2005,"Remove defines and declarations imported from paxutils
",429,data/crawl/tar/hunk_156.cpp,,,data/crawl/tar/old_hunk_156.cpp,data/crawl/tar/new_hunk_156.cpp,"[6, 19, 25]",[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=5c35fdb275b519373e6eb34621d956d09a52bf31,19 May 2005,"Remove defines and declarations imported from paxutils
",429,data/crawl/tar/hunk_157.cpp,,,data/crawl/tar/old_hunk_157.cpp,data/crawl/tar/new_hunk_157.cpp,"[5, 11, 17, 23, 29, 35, 44]",[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=82c746410d910c0884fd9f42f687aa6d3daf8f7e,2 May 2005,"(parse_opt): Adjust to new modechange API.
",254,data/crawl/tar/hunk_158.cpp,,,data/crawl/tar/old_hunk_158.cpp,data/crawl/tar/new_hunk_158.cpp,[2],[2]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=82c746410d910c0884fd9f42f687aa6d3daf8f7e,2 May 2005,"(parse_opt): Adjust to new modechange API.
",254,data/crawl/tar/hunk_159.cpp,,,data/crawl/tar/old_hunk_159.cpp,data/crawl/tar/new_hunk_159.cpp,[0],[0]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=82c746410d910c0884fd9f42f687aa6d3daf8f7e,2 May 2005,"(parse_opt): Adjust to new modechange API.
",254,data/crawl/tar/hunk_160.cpp,,,data/crawl/tar/old_hunk_160.cpp,data/crawl/tar/new_hunk_160.cpp,[3],[3]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=781d3818e520a7fe6ab1ceb051bc13777f8511d7,7 Apr 2005,"(diff_init): Read directory file if in listed incremental. This
 prevents spurious 'Contents differ' diagnostics. (diff_archive): Minor fixes
 to text messages (diff_file,diff_dumpdir,diff_multivol): Assign
 orig_file_name to save_name uniformly over the program. This fixes matching
 directory names at the start of an archive volume.
",11,data/crawl/tar/hunk_161.cpp,,,data/crawl/tar/old_hunk_161.cpp,data/crawl/tar/new_hunk_161.cpp,[3],[3]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=62599b528521f9a87f259b0448ada4e33a2d547a,7 Apr 2005,"Minor fixes to text messages. Proposed by Benno Schulenberg.
",18,data/crawl/tar/hunk_162.cpp,,,data/crawl/tar/old_hunk_162.cpp,data/crawl/tar/new_hunk_162.cpp,[3],[3]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=95fa3422d7365bfec419cb6537da6d9e0efbab83,2 Apr 2005,"(decode_record): Don't dump core when given a corrupted extended
 header.  Problem reported by Jim Meyering. Also, check for other ways that
 the header might be invalid, e.g., missing newline at end.  Do not allow keys
 with nulls. Allow blanks before and after length, as POSIX requires. Do not
 allow leading ""-"" in length.  Check for length overflow. (xheader_decode,
 xheader_decode_global): Let decode_record check for exhaustion of record.
 (xheader_read): Null-terminate the extended record; decode_record relies on
 this.
",87,data/crawl/tar/hunk_163.cpp,,,data/crawl/tar/old_hunk_163.cpp,data/crawl/tar/new_hunk_163.cpp,"[22, 34]","[24, 33, 43, 52, 58]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=5c2e32780ed9aa2c03408bf0eeea3fb564fc0b48,6 Feb 2005,"Various fixes in help and diagnostic messages
",20,data/crawl/tar/hunk_164.cpp,,,data/crawl/tar/old_hunk_164.cpp,data/crawl/tar/new_hunk_164.cpp,[3],[3]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=fa63755f6bf50d67c4403a709a4ff5d02ad23ef3,5 Feb 2005,"(exec_error,fork_error,dup2_error,pipe_error): Removed unneeded
 functions.
",24,data/crawl/tar/hunk_165.cpp,,,data/crawl/tar/old_hunk_165.cpp,data/crawl/tar/new_hunk_165.cpp,"[5, 11, 17, 23, 29]",[5]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=9a71d32d2f16989a8c82d3946d4f7ecd6093a55a,5 Feb 2005,"Code clean up.
",489,data/crawl/tar/hunk_166.cpp,,,data/crawl/tar/old_hunk_166.cpp,data/crawl/tar/new_hunk_166.cpp,[3],[3]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=9a71d32d2f16989a8c82d3946d4f7ecd6093a55a,5 Feb 2005,"Code clean up.
",489,data/crawl/tar/hunk_167.cpp,,,data/crawl/tar/old_hunk_167.cpp,data/crawl/tar/new_hunk_167.cpp,"[26, 49, 56]","[13, 16, 28, 35]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=9a71d32d2f16989a8c82d3946d4f7ecd6093a55a,5 Feb 2005,"Code clean up.
",489,data/crawl/tar/hunk_168.cpp,,,data/crawl/tar/old_hunk_168.cpp,data/crawl/tar/new_hunk_168.cpp,"[1, 12, 58, 78, 82, 104, 112, 118, 156, 162, 183, 191, 201, 209]","[1, 12, 60, 80, 84, 105, 113, 119, 166, 174, 184, 192, 233]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=c580a1c40747f38e0d7c36da2e4976cf951e34ee,5 Feb 2005,"Updated
",25,data/crawl/tar/hunk_169.cpp,,,data/crawl/tar/old_hunk_169.cpp,data/crawl/tar/new_hunk_169.cpp,[],[22]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=0b939d7dbc87703afe765410202d2781f3f7b222,5 Feb 2005,"(sys_exec_command,sys_wait_command): New functions
",165,data/crawl/tar/hunk_170.cpp,,,data/crawl/tar/old_hunk_170.cpp,data/crawl/tar/new_hunk_170.cpp,[],"[153, 162]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=75a16f75a954f16eff5a076aa4bb51ded85e70b7,5 Feb 2005,"(exec_error, fork_error, dup_error,pipe_error): New functions
",24,data/crawl/tar/hunk_171.cpp,,,data/crawl/tar/old_hunk_171.cpp,data/crawl/tar/new_hunk_171.cpp,[5],"[5, 11, 17, 23, 29]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=5179c0b5e6a658ff002916058f95f246ed3216c8,4 Feb 2005,"Further rewrite
",441,data/crawl/tar/hunk_172.cpp,,,data/crawl/tar/old_hunk_172.cpp,data/crawl/tar/new_hunk_172.cpp,"[52, 123, 133]","[103, 111, 196]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=1e2e868af584e5e922948424545f73dc54fb634a,4 Feb 2005,"Add translators' comments
",9,data/crawl/tar/hunk_173.cpp,,,data/crawl/tar/old_hunk_173.cpp,data/crawl/tar/new_hunk_173.cpp,[2],[2]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=1e2e868af584e5e922948424545f73dc54fb634a,4 Feb 2005,"Add translators' comments
",9,data/crawl/tar/hunk_174.cpp,,,data/crawl/tar/old_hunk_174.cpp,data/crawl/tar/new_hunk_174.cpp,[2],[2]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=1e2e868af584e5e922948424545f73dc54fb634a,4 Feb 2005,"Add translators' comments
",9,data/crawl/tar/hunk_175.cpp,,,data/crawl/tar/old_hunk_175.cpp,data/crawl/tar/new_hunk_175.cpp,[2],[2]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=1e2e868af584e5e922948424545f73dc54fb634a,4 Feb 2005,"Add translators' comments
",9,data/crawl/tar/hunk_176.cpp,,,data/crawl/tar/old_hunk_176.cpp,data/crawl/tar/new_hunk_176.cpp,[3],[4]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=1e2e868af584e5e922948424545f73dc54fb634a,4 Feb 2005,"Add translators' comments
",9,data/crawl/tar/hunk_177.cpp,,,data/crawl/tar/old_hunk_177.cpp,data/crawl/tar/new_hunk_177.cpp,[3],[3]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=c8764440d9cb0187fcbabe26e7f6191c0148178e,4 Feb 2005,"(extract_archive): Rewritten
",836,data/crawl/tar/hunk_178.cpp,,,data/crawl/tar/old_hunk_178.cpp,data/crawl/tar/new_hunk_178.cpp,[],[168]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=c8764440d9cb0187fcbabe26e7f6191c0148178e,4 Feb 2005,"(extract_archive): Rewritten
",836,data/crawl/tar/hunk_179.cpp,,,data/crawl/tar/old_hunk_179.cpp,data/crawl/tar/new_hunk_179.cpp,[86],[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=c8764440d9cb0187fcbabe26e7f6191c0148178e,4 Feb 2005,"(extract_archive): Rewritten
",836,data/crawl/tar/hunk_180.cpp,,,data/crawl/tar/old_hunk_180.cpp,data/crawl/tar/new_hunk_180.cpp,[3],[3]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=368172bf255c539fdbf2fd74328514c7e0acde8f,21 Dec 2004,"(from_header, tar_checksum): Changed declaration. All callers
 updated.
",71,data/crawl/tar/hunk_181.cpp,,,data/crawl/tar/old_hunk_181.cpp,data/crawl/tar/new_hunk_181.cpp,[4],[4]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=368172bf255c539fdbf2fd74328514c7e0acde8f,21 Dec 2004,"(from_header, tar_checksum): Changed declaration. All callers
 updated.
",71,data/crawl/tar/hunk_182.cpp,,,data/crawl/tar/old_hunk_182.cpp,data/crawl/tar/new_hunk_182.cpp,[13],[14]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=368172bf255c539fdbf2fd74328514c7e0acde8f,21 Dec 2004,"(from_header, tar_checksum): Changed declaration. All callers
 updated.
",71,data/crawl/tar/hunk_183.cpp,,,data/crawl/tar/old_hunk_183.cpp,data/crawl/tar/new_hunk_183.cpp,[4],[4]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=368172bf255c539fdbf2fd74328514c7e0acde8f,21 Dec 2004,"(from_header, tar_checksum): Changed declaration. All callers
 updated.
",71,data/crawl/tar/hunk_184.cpp,,,data/crawl/tar/old_hunk_184.cpp,data/crawl/tar/new_hunk_184.cpp,[4],[4]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=368172bf255c539fdbf2fd74328514c7e0acde8f,21 Dec 2004,"(from_header, tar_checksum): Changed declaration. All callers
 updated.
",71,data/crawl/tar/hunk_185.cpp,,,data/crawl/tar/old_hunk_185.cpp,data/crawl/tar/new_hunk_185.cpp,[3],[4]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=00478f4bd3c475d41a151d797c19a1c6c2d0daf5,7 Sep 2004,"Integrated into paxutils.
",171,data/crawl/tar/hunk_186.cpp,,,data/crawl/tar/old_hunk_186.cpp,data/crawl/tar/new_hunk_186.cpp,[69],[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=7347b4f5d51c15bb19637ea52e9bf7dff832cc52,6 Sep 2004,"Started merging with cpio into paxutils.
",2224,data/crawl/tar/hunk_187.cpp,,,data/crawl/tar/old_hunk_187.cpp,data/crawl/tar/new_hunk_187.cpp,[12],[9]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=7347b4f5d51c15bb19637ea52e9bf7dff832cc52,6 Sep 2004,"Started merging with cpio into paxutils.
",2224,data/crawl/tar/hunk_188.cpp,,,data/crawl/tar/old_hunk_188.cpp,data/crawl/tar/new_hunk_188.cpp,"[291, 295, 298, 506]",[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=303132dcdcb4c1f2cb9051826265640aaddf6f93,12 Aug 2004,"Adjust to changes to gnulib xalloc module. (extr_init): Remove
 assignment to xalloc_fail_func; no longer needed. (xalloc_die): New function.
",8,data/crawl/tar/hunk_189.cpp,,,data/crawl/tar/old_hunk_189.cpp,data/crawl/tar/new_hunk_189.cpp,[0],"[0, 7]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=e4afe72b7a026c6df07ed563c5d92147c5c3bd6e,10 Jul 2004,"src/extract.c (extract_archive): Do not report an error when
 hard-linking X to X when X exists.
",32,data/crawl/tar/hunk_190.cpp,,,data/crawl/tar/old_hunk_190.cpp,data/crawl/tar/new_hunk_190.cpp,[],[2]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=a447fd3714cbcb37950f399390809f797b0633ec,16 May 2004,"Use argp for command line parsing.
",2030,data/crawl/tar/hunk_191.cpp,,,data/crawl/tar/old_hunk_191.cpp,data/crawl/tar/new_hunk_191.cpp,"[162, 173, 178, 191, 217, 235, 249, 257, 278, 303, 309, 313, 328, 335]",[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=a447fd3714cbcb37950f399390809f797b0633ec,16 May 2004,"Use argp for command line parsing.
",2030,data/crawl/tar/hunk_192.cpp,,,data/crawl/tar/old_hunk_192.cpp,data/crawl/tar/new_hunk_192.cpp,[],"[580, 616, 635]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=d21a12cf6204706b7434769465dd661cbc5bbe1d,5 May 2004,"Oops, sorry. Mistakingly added...
",168,data/crawl/tar/hunk_193.cpp,,,data/crawl/tar/old_hunk_193.cpp,data/crawl/tar/new_hunk_193.cpp,[17],[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=6d9cdefe838033b261c8ec0583f14f8455fd5401,5 May 2004,"Added to the repository
",168,data/crawl/tar/hunk_194.cpp,,,data/crawl/tar/old_hunk_194.cpp,data/crawl/tar/new_hunk_194.cpp,[],[17]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=af244aeef3f45e0b431fd6fe8a7d2673ceefb254,26 Apr 2004,"Produce an error, not warning, if the filename is too long.
",26,data/crawl/tar/hunk_195.cpp,,,data/crawl/tar/old_hunk_195.cpp,data/crawl/tar/new_hunk_195.cpp,[],"[3, 12]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=af244aeef3f45e0b431fd6fe8a7d2673ceefb254,26 Apr 2004,"Produce an error, not warning, if the filename is too long.
",26,data/crawl/tar/hunk_196.cpp,,,data/crawl/tar/old_hunk_196.cpp,data/crawl/tar/new_hunk_196.cpp,[],[3]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=af244aeef3f45e0b431fd6fe8a7d2673ceefb254,26 Apr 2004,"Produce an error, not warning, if the filename is too long.
",26,data/crawl/tar/hunk_197.cpp,,,data/crawl/tar/old_hunk_197.cpp,data/crawl/tar/new_hunk_197.cpp,[],[3]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=2bda83b48d8a6807632312403561b11b79048443,5 Apr 2004,"Merge recent gnulib changes, and remove some lint.
",1583,data/crawl/tar/hunk_198.cpp,,,data/crawl/tar/old_hunk_198.cpp,data/crawl/tar/new_hunk_198.cpp,[0],[0]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=2bda83b48d8a6807632312403561b11b79048443,5 Apr 2004,"Merge recent gnulib changes, and remove some lint.
",1583,data/crawl/tar/hunk_199.cpp,,,data/crawl/tar/old_hunk_199.cpp,data/crawl/tar/new_hunk_199.cpp,"[27, 31]","[26, 30]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=2bda83b48d8a6807632312403561b11b79048443,5 Apr 2004,"Merge recent gnulib changes, and remove some lint.
",1583,data/crawl/tar/hunk_200.cpp,,,data/crawl/tar/old_hunk_200.cpp,data/crawl/tar/new_hunk_200.cpp,[10],[11]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=2bda83b48d8a6807632312403561b11b79048443,5 Apr 2004,"Merge recent gnulib changes, and remove some lint.
",1583,data/crawl/tar/hunk_201.cpp,,,data/crawl/tar/old_hunk_201.cpp,data/crawl/tar/new_hunk_201.cpp,[2],[2]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=2bda83b48d8a6807632312403561b11b79048443,5 Apr 2004,"Merge recent gnulib changes, and remove some lint.
",1583,data/crawl/tar/hunk_202.cpp,,,data/crawl/tar/old_hunk_202.cpp,data/crawl/tar/new_hunk_202.cpp,[0],[0]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=2bda83b48d8a6807632312403561b11b79048443,5 Apr 2004,"Merge recent gnulib changes, and remove some lint.
",1583,data/crawl/tar/hunk_203.cpp,,,data/crawl/tar/old_hunk_203.cpp,data/crawl/tar/new_hunk_203.cpp,[11],[5]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=2bda83b48d8a6807632312403561b11b79048443,5 Apr 2004,"Merge recent gnulib changes, and remove some lint.
",1583,data/crawl/tar/hunk_204.cpp,,,data/crawl/tar/old_hunk_204.cpp,data/crawl/tar/new_hunk_204.cpp,[8],[8]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=2bda83b48d8a6807632312403561b11b79048443,5 Apr 2004,"Merge recent gnulib changes, and remove some lint.
",1583,data/crawl/tar/hunk_205.cpp,,,data/crawl/tar/old_hunk_205.cpp,data/crawl/tar/new_hunk_205.cpp,[0],[0]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=2bda83b48d8a6807632312403561b11b79048443,5 Apr 2004,"Merge recent gnulib changes, and remove some lint.
",1583,data/crawl/tar/hunk_206.cpp,,,data/crawl/tar/old_hunk_206.cpp,data/crawl/tar/new_hunk_206.cpp,[4],[4]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=440e65ef2c2b61b43a4d520f4bca9a669f71a789,18 Feb 2004,"Implement pax -o option. Fixed misleading heading comment (introduced
 2003-09-02).
",338,data/crawl/tar/hunk_207.cpp,,,data/crawl/tar/old_hunk_207.cpp,data/crawl/tar/new_hunk_207.cpp,[3],[3]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=8d6e47cc7fcfb6781b82ba60b8eb823c7fdc7013,17 Nov 2003,"Support for star sparse format
",157,data/crawl/tar/hunk_208.cpp,,,data/crawl/tar/old_hunk_208.cpp,data/crawl/tar/new_hunk_208.cpp,[],"[45, 55]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=bb798080beec25634f7552934324b5f5c995707f,17 Nov 2003,"(diff_archive): Use sparse_diff_file.
",67,data/crawl/tar/hunk_209.cpp,,,data/crawl/tar/old_hunk_209.cpp,data/crawl/tar/new_hunk_209.cpp,"[3, 7]","[3, 7]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=bb798080beec25634f7552934324b5f5c995707f,17 Nov 2003,"(diff_archive): Use sparse_diff_file.
",67,data/crawl/tar/hunk_210.cpp,,,data/crawl/tar/old_hunk_210.cpp,data/crawl/tar/new_hunk_210.cpp,[3],[3]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=bb798080beec25634f7552934324b5f5c995707f,17 Nov 2003,"(diff_archive): Use sparse_diff_file.
",67,data/crawl/tar/hunk_211.cpp,,,data/crawl/tar/old_hunk_211.cpp,data/crawl/tar/new_hunk_211.cpp,[3],[3]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=bb798080beec25634f7552934324b5f5c995707f,17 Nov 2003,"(diff_archive): Use sparse_diff_file.
",67,data/crawl/tar/hunk_212.cpp,,,data/crawl/tar/old_hunk_212.cpp,data/crawl/tar/new_hunk_212.cpp,[3],[3]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=bb798080beec25634f7552934324b5f5c995707f,17 Nov 2003,"(diff_archive): Use sparse_diff_file.
",67,data/crawl/tar/hunk_213.cpp,,,data/crawl/tar/old_hunk_213.cpp,data/crawl/tar/new_hunk_213.cpp,"[3, 9, 14, 18]","[3, 10, 13, 15, 18, 22]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=bb798080beec25634f7552934324b5f5c995707f,17 Nov 2003,"(diff_archive): Use sparse_diff_file.
",67,data/crawl/tar/hunk_214.cpp,,,data/crawl/tar/old_hunk_214.cpp,data/crawl/tar/new_hunk_214.cpp,[3],[3]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=bb798080beec25634f7552934324b5f5c995707f,17 Nov 2003,"(diff_archive): Use sparse_diff_file.
",67,data/crawl/tar/hunk_215.cpp,,,data/crawl/tar/old_hunk_215.cpp,data/crawl/tar/new_hunk_215.cpp,[],[4]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=bb798080beec25634f7552934324b5f5c995707f,17 Nov 2003,"(diff_archive): Use sparse_diff_file.
",67,data/crawl/tar/hunk_216.cpp,,,data/crawl/tar/old_hunk_216.cpp,data/crawl/tar/new_hunk_216.cpp,"[3, 7]","[3, 7]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=bb798080beec25634f7552934324b5f5c995707f,17 Nov 2003,"(diff_archive): Use sparse_diff_file.
",67,data/crawl/tar/hunk_217.cpp,,,data/crawl/tar/old_hunk_217.cpp,data/crawl/tar/new_hunk_217.cpp,[3],[3]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=bb798080beec25634f7552934324b5f5c995707f,17 Nov 2003,"(diff_archive): Use sparse_diff_file.
",67,data/crawl/tar/hunk_218.cpp,,,data/crawl/tar/old_hunk_218.cpp,data/crawl/tar/new_hunk_218.cpp,"[3, 9]","[3, 9]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=bb798080beec25634f7552934324b5f5c995707f,17 Nov 2003,"(diff_archive): Use sparse_diff_file.
",67,data/crawl/tar/hunk_219.cpp,,,data/crawl/tar/old_hunk_219.cpp,data/crawl/tar/new_hunk_219.cpp,"[3, 9]","[3, 9]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=bb798080beec25634f7552934324b5f5c995707f,17 Nov 2003,"(diff_archive): Use sparse_diff_file.
",67,data/crawl/tar/hunk_220.cpp,,,data/crawl/tar/old_hunk_220.cpp,data/crawl/tar/new_hunk_220.cpp,[3],[3]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=bb798080beec25634f7552934324b5f5c995707f,17 Nov 2003,"(diff_archive): Use sparse_diff_file.
",67,data/crawl/tar/hunk_221.cpp,,,data/crawl/tar/old_hunk_221.cpp,data/crawl/tar/new_hunk_221.cpp,[3],[3]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=bb798080beec25634f7552934324b5f5c995707f,17 Nov 2003,"(diff_archive): Use sparse_diff_file.
",67,data/crawl/tar/hunk_222.cpp,,,data/crawl/tar/old_hunk_222.cpp,data/crawl/tar/new_hunk_222.cpp,[3],[3]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=bb798080beec25634f7552934324b5f5c995707f,17 Nov 2003,"(diff_archive): Use sparse_diff_file.
",67,data/crawl/tar/hunk_223.cpp,,,data/crawl/tar/old_hunk_223.cpp,data/crawl/tar/new_hunk_223.cpp,[3],[3]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=d4e70d365615e56cadd4093aaa5c0046cf2c9c95,17 Nov 2003,"(sys_compare_uid,sys_compare_gid): New functions
 (sys_compare_uid_gid): Removed. (sys_compare_links): Changed declaration
",44,data/crawl/tar/hunk_224.cpp,,,data/crawl/tar/old_hunk_224.cpp,data/crawl/tar/new_hunk_224.cpp,"[7, 9, 18]",[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=82e94dab6da1a6a22bafea07ab85f5aa14a68dd6,17 Nov 2003,"(sys_compare_uid,sys_compare_gid): New functions
 (sys_compare_uid_gid): Removed. (sys_compare_links,report_difference):
 Changed prototype (sparse_diff_file): New function
",8,data/crawl/tar/hunk_225.cpp,,,data/crawl/tar/old_hunk_225.cpp,data/crawl/tar/new_hunk_225.cpp,[3],[3]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=a8b2b68c33e6166c8035f094574fc0d1d3459cd8,17 Nov 2003,"(sparse_diff_file): New function
",115,data/crawl/tar/hunk_226.cpp,,,data/crawl/tar/old_hunk_226.cpp,data/crawl/tar/new_hunk_226.cpp,[],"[30, 57, 75]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=3999bf6360930179f08a1265ce8713705aafd405,17 Nov 2003,"(diff_sparse_files): Temporary placeholder.
",144,data/crawl/tar/hunk_227.cpp,,,data/crawl/tar/old_hunk_227.cpp,data/crawl/tar/new_hunk_227.cpp,"[47, 68, 72, 100, 104, 146]",[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=87fa28ed2abd92693a08e58523d7ab7f7c4563f0,17 Nov 2003,"Use new sparse file interface.
",163,data/crawl/tar/hunk_228.cpp,,,data/crawl/tar/old_hunk_228.cpp,data/crawl/tar/new_hunk_228.cpp,"[42, 80, 99, 122]",[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=18ef8acac57d9af27d42b11925c8767470976be9,17 Nov 2003,"Added sparse.c
",532,data/crawl/tar/hunk_229.cpp,,,data/crawl/tar/old_hunk_229.cpp,data/crawl/tar/new_hunk_229.cpp,[],"[295, 451, 461]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=1e7d274cd8125901600d2f302b9a108933b0c57a,4 Oct 2003,"Fix some misspellings.
",26,data/crawl/tar/hunk_230.cpp,,,data/crawl/tar/old_hunk_230.cpp,data/crawl/tar/new_hunk_230.cpp,"[0, 3]","[0, 3]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=c1b9212b16a53da408548efa3f9c8b1a62335b42,4 Oct 2003,"Moved system dependencies to system.c
",664,data/crawl/tar/hunk_231.cpp,,,data/crawl/tar/old_hunk_231.cpp,data/crawl/tar/new_hunk_231.cpp,[6],[6]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=c1b9212b16a53da408548efa3f9c8b1a62335b42,4 Oct 2003,"Moved system dependencies to system.c
",664,data/crawl/tar/hunk_232.cpp,,,data/crawl/tar/old_hunk_232.cpp,data/crawl/tar/new_hunk_232.cpp,"[37, 40]",[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=c1b9212b16a53da408548efa3f9c8b1a62335b42,4 Oct 2003,"Moved system dependencies to system.c
",664,data/crawl/tar/hunk_233.cpp,,,data/crawl/tar/old_hunk_233.cpp,data/crawl/tar/new_hunk_233.cpp,"[10, 19]","[9, 13]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=c1b9212b16a53da408548efa3f9c8b1a62335b42,4 Oct 2003,"Moved system dependencies to system.c
",664,data/crawl/tar/hunk_234.cpp,,,data/crawl/tar/old_hunk_234.cpp,data/crawl/tar/new_hunk_234.cpp,[3],[3]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=c1b9212b16a53da408548efa3f9c8b1a62335b42,4 Oct 2003,"Moved system dependencies to system.c
",664,data/crawl/tar/hunk_235.cpp,,,data/crawl/tar/old_hunk_235.cpp,data/crawl/tar/new_hunk_235.cpp,"[3, 14]","[3, 7]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=c1b9212b16a53da408548efa3f9c8b1a62335b42,4 Oct 2003,"Moved system dependencies to system.c
",664,data/crawl/tar/hunk_236.cpp,,,data/crawl/tar/old_hunk_236.cpp,data/crawl/tar/new_hunk_236.cpp,"[3, 14]","[3, 7]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=c1b9212b16a53da408548efa3f9c8b1a62335b42,4 Oct 2003,"Moved system dependencies to system.c
",664,data/crawl/tar/hunk_237.cpp,,,data/crawl/tar/old_hunk_237.cpp,data/crawl/tar/new_hunk_237.cpp,[3],[3]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=c1b9212b16a53da408548efa3f9c8b1a62335b42,4 Oct 2003,"Moved system dependencies to system.c
",664,data/crawl/tar/hunk_238.cpp,,,data/crawl/tar/old_hunk_238.cpp,data/crawl/tar/new_hunk_238.cpp,"[1, 8, 10, 14]","[1, 6]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=c1b9212b16a53da408548efa3f9c8b1a62335b42,4 Oct 2003,"Moved system dependencies to system.c
",664,data/crawl/tar/hunk_239.cpp,,,data/crawl/tar/old_hunk_239.cpp,data/crawl/tar/new_hunk_239.cpp,[3],[3]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=c1b9212b16a53da408548efa3f9c8b1a62335b42,4 Oct 2003,"Moved system dependencies to system.c
",664,data/crawl/tar/hunk_240.cpp,,,data/crawl/tar/old_hunk_240.cpp,data/crawl/tar/new_hunk_240.cpp,[21],[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=c1b9212b16a53da408548efa3f9c8b1a62335b42,4 Oct 2003,"Moved system dependencies to system.c
",664,data/crawl/tar/hunk_241.cpp,,,data/crawl/tar/old_hunk_241.cpp,data/crawl/tar/new_hunk_241.cpp,[3],[3]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=c1b9212b16a53da408548efa3f9c8b1a62335b42,4 Oct 2003,"Moved system dependencies to system.c
",664,data/crawl/tar/hunk_242.cpp,,,data/crawl/tar/old_hunk_242.cpp,data/crawl/tar/new_hunk_242.cpp,[3],[3]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=c1b9212b16a53da408548efa3f9c8b1a62335b42,4 Oct 2003,"Moved system dependencies to system.c
",664,data/crawl/tar/hunk_243.cpp,,,data/crawl/tar/old_hunk_243.cpp,data/crawl/tar/new_hunk_243.cpp,[3],[3]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=719c762d8097c70af065b0f7e6eacdcbd92e03c9,4 Oct 2003,"Prototypes for functions from system.c
",29,data/crawl/tar/hunk_244.cpp,,,data/crawl/tar/old_hunk_244.cpp,data/crawl/tar/new_hunk_244.cpp,[],[22]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=b085ca30976ec26256344bd3532205d440e69309,4 Oct 2003,"System-dependent functions
",633,data/crawl/tar/hunk_245.cpp,,,data/crawl/tar/old_hunk_245.cpp,data/crawl/tar/new_hunk_245.cpp,[],"[198, 201, 235, 237, 246]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=91493ea9b62a24ab139eedd4c919e4fcda9750c3,4 Oct 2003,"Count number of occurrences of each name in the archive.
 (name_match): Honor --occurence option. (names_done): Removed
 (all_names_found,names_notfound): Rewritten.
",79,data/crawl/tar/hunk_246.cpp,,,data/crawl/tar/old_hunk_246.cpp,data/crawl/tar/new_hunk_246.cpp,[4],"[6, 9]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=91493ea9b62a24ab139eedd4c919e4fcda9750c3,4 Oct 2003,"Count number of occurrences of each name in the archive.
 (name_match): Honor --occurence option. (names_done): Removed
 (all_names_found,names_notfound): Rewritten.
",79,data/crawl/tar/hunk_247.cpp,,,data/crawl/tar/old_hunk_247.cpp,data/crawl/tar/new_hunk_247.cpp,[4],[4]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=91b2d65e9dccae981f308a659d6c7bdd32285598,5 Sep 2003,"Use ngettext where appropriate.
",70,data/crawl/tar/hunk_248.cpp,,,data/crawl/tar/old_hunk_248.cpp,data/crawl/tar/new_hunk_248.cpp,[5],[8]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=91b2d65e9dccae981f308a659d6c7bdd32285598,5 Sep 2003,"Use ngettext where appropriate.
",70,data/crawl/tar/hunk_249.cpp,,,data/crawl/tar/old_hunk_249.cpp,data/crawl/tar/new_hunk_249.cpp,[5],[8]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=91b2d65e9dccae981f308a659d6c7bdd32285598,5 Sep 2003,"Use ngettext where appropriate.
",70,data/crawl/tar/hunk_250.cpp,,,data/crawl/tar/old_hunk_250.cpp,data/crawl/tar/new_hunk_250.cpp,[5],[8]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=91b2d65e9dccae981f308a659d6c7bdd32285598,5 Sep 2003,"Use ngettext where appropriate.
",70,data/crawl/tar/hunk_251.cpp,,,data/crawl/tar/old_hunk_251.cpp,data/crawl/tar/new_hunk_251.cpp,[2],[2]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=91b2d65e9dccae981f308a659d6c7bdd32285598,5 Sep 2003,"Use ngettext where appropriate.
",70,data/crawl/tar/hunk_252.cpp,,,data/crawl/tar/old_hunk_252.cpp,data/crawl/tar/new_hunk_252.cpp,[2],[2]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=91b2d65e9dccae981f308a659d6c7bdd32285598,5 Sep 2003,"Use ngettext where appropriate.
",70,data/crawl/tar/hunk_253.cpp,,,data/crawl/tar/old_hunk_253.cpp,data/crawl/tar/new_hunk_253.cpp,[3],[3]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=7645d20465e8c37f8f246b7490cbffbb0107045d,4 Sep 2003,"(read_header): Minor change.
",96,data/crawl/tar/hunk_254.cpp,,,data/crawl/tar/old_hunk_254.cpp,data/crawl/tar/new_hunk_254.cpp,[54],[50]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=3f998f69b9d3899e144323c322f8567237201cb1,4 Sep 2003,"(decode_record): Reversed the return condition.
",17,data/crawl/tar/hunk_255.cpp,,,data/crawl/tar/old_hunk_255.cpp,data/crawl/tar/new_hunk_255.cpp,[8],[8]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=3f998f69b9d3899e144323c322f8567237201cb1,4 Sep 2003,"(decode_record): Reversed the return condition.
",17,data/crawl/tar/hunk_256.cpp,,,data/crawl/tar/old_hunk_256.cpp,data/crawl/tar/new_hunk_256.cpp,[3],[3]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=10edb315da532371e65a7d83a16f50ade5b545e4,3 Sep 2003,"(struct xhdr_tab.keyword): Now pointer to const. (struct
 xhdr_tab.coder, struct xhdr_tab.decoder, locate_handler, decode_record,
 xheader_store, xheader_print, code_string, code_time, code_num, dummy_coder,
 dummy_decoder, atime_coder, atime_decoder, gid_coder, gid_decoder,
 gname_coder, gname_decoder, linkpath_coder, linkpath_decoder, ctime_coder,
 ctime_decoder, mtime_coder, mtime_decoder, path_coder, path_decoder,
 size_coder, size_decoder, uid_coder, uid_decoder, uname_coder,
 uname_decoder): Use pointers to const when possible. (xhdr_tab): Now const.

(struct xhdr_tab.decoder, dummy_decoder,
atime_decoder, gid_decoder, gname_decoder, linkpath_decoder,
ctime_decoder, mtime_decoder, path_decoder, size_decoder,
uid_decoder, uname_decoder): Remove unused keyword arg.
All uses changed.

(xhdr_tab, format_uintmax): Now static.

(dummy_coder, dummy_decoder, atime_coder,
atime_decoder, gid_coder, gid_decoder, gname_coder, gname_decoder,
linkpath_coder, linkpath_decoder, mtime_coder, mtime_decoder,
ctime_coder, ctime_decoder, path_coder, path_decoder, size_coder,
size_decoder, uid_coder, uid_decoder, uname_coder, uname_decoder):
Remove forward decls; no longer needed.
(xhdr_tab): Move to end, so that the forward decls aren't needed.
Add a forward declaration.

(decode_record): Return bool, not int.

(decode_record): Fix misspelling in diagnostic
""extended headed"" -> ""extended header"".

(decode_record, xheader_decode):
Do not use decls like ""char *p, *q;"".",258,data/crawl/tar/hunk_257.cpp,,,data/crawl/tar/old_hunk_257.cpp,data/crawl/tar/new_hunk_257.cpp,[17],[18]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=10edb315da532371e65a7d83a16f50ade5b545e4,3 Sep 2003,"(struct xhdr_tab.keyword): Now pointer to const. (struct
 xhdr_tab.coder, struct xhdr_tab.decoder, locate_handler, decode_record,
 xheader_store, xheader_print, code_string, code_time, code_num, dummy_coder,
 dummy_decoder, atime_coder, atime_decoder, gid_coder, gid_decoder,
 gname_coder, gname_decoder, linkpath_coder, linkpath_decoder, ctime_coder,
 ctime_decoder, mtime_coder, mtime_decoder, path_coder, path_decoder,
 size_coder, size_decoder, uid_coder, uid_decoder, uname_coder,
 uname_decoder): Use pointers to const when possible. (xhdr_tab): Now const.

(struct xhdr_tab.decoder, dummy_decoder,
atime_decoder, gid_decoder, gname_decoder, linkpath_decoder,
ctime_decoder, mtime_decoder, path_decoder, size_decoder,
uid_decoder, uname_decoder): Remove unused keyword arg.
All uses changed.

(xhdr_tab, format_uintmax): Now static.

(dummy_coder, dummy_decoder, atime_coder,
atime_decoder, gid_coder, gid_decoder, gname_coder, gname_decoder,
linkpath_coder, linkpath_decoder, mtime_coder, mtime_decoder,
ctime_coder, ctime_decoder, path_coder, path_decoder, size_coder,
size_decoder, uid_coder, uid_decoder, uname_coder, uname_decoder):
Remove forward decls; no longer needed.
(xhdr_tab): Move to end, so that the forward decls aren't needed.
Add a forward declaration.

(decode_record): Return bool, not int.

(decode_record): Fix misspelling in diagnostic
""extended headed"" -> ""extended header"".

(decode_record, xheader_decode):
Do not use decls like ""char *p, *q;"".",258,data/crawl/tar/hunk_258.cpp,,,data/crawl/tar/old_hunk_258.cpp,data/crawl/tar/new_hunk_258.cpp,[3],[3]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=d858a433c82626309e0d974ca923a79ac7f7f18f,31 Aug 2003,"Use current_stat_info
",2077,data/crawl/tar/hunk_259.cpp,,,data/crawl/tar/old_hunk_259.cpp,data/crawl/tar/new_hunk_259.cpp,"[68, 74, 81, 101]","[52, 58, 65, 81]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=d858a433c82626309e0d974ca923a79ac7f7f18f,31 Aug 2003,"Use current_stat_info
",2077,data/crawl/tar/hunk_260.cpp,,,data/crawl/tar/old_hunk_260.cpp,data/crawl/tar/new_hunk_260.cpp,[24],[21]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=d858a433c82626309e0d974ca923a79ac7f7f18f,31 Aug 2003,"Use current_stat_info
",2077,data/crawl/tar/hunk_261.cpp,,,data/crawl/tar/old_hunk_261.cpp,data/crawl/tar/new_hunk_261.cpp,"[45, 53]","[36, 57, 65]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=d858a433c82626309e0d974ca923a79ac7f7f18f,31 Aug 2003,"Use current_stat_info
",2077,data/crawl/tar/hunk_262.cpp,,,data/crawl/tar/old_hunk_262.cpp,data/crawl/tar/new_hunk_262.cpp,"[10, 18]","[12, 20]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=d858a433c82626309e0d974ca923a79ac7f7f18f,31 Aug 2003,"Use current_stat_info
",2077,data/crawl/tar/hunk_263.cpp,,,data/crawl/tar/old_hunk_263.cpp,data/crawl/tar/new_hunk_263.cpp,"[3, 22, 25, 26]","[3, 20, 50]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=d858a433c82626309e0d974ca923a79ac7f7f18f,31 Aug 2003,"Use current_stat_info
",2077,data/crawl/tar/hunk_264.cpp,,,data/crawl/tar/old_hunk_264.cpp,data/crawl/tar/new_hunk_264.cpp,"[17, 24, 31, 33, 37, 41, 59, 63, 88]","[14, 20, 27, 29, 33, 37, 48]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=d858a433c82626309e0d974ca923a79ac7f7f18f,31 Aug 2003,"Use current_stat_info
",2077,data/crawl/tar/hunk_265.cpp,,,data/crawl/tar/old_hunk_265.cpp,data/crawl/tar/new_hunk_265.cpp,"[15, 19, 30]",[18]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=d858a433c82626309e0d974ca923a79ac7f7f18f,31 Aug 2003,"Use current_stat_info
",2077,data/crawl/tar/hunk_266.cpp,,,data/crawl/tar/old_hunk_266.cpp,data/crawl/tar/new_hunk_266.cpp,"[13, 17, 24, 63, 76]","[17, 21, 43, 51, 57]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=d858a433c82626309e0d974ca923a79ac7f7f18f,31 Aug 2003,"Use current_stat_info
",2077,data/crawl/tar/hunk_267.cpp,,,data/crawl/tar/old_hunk_267.cpp,data/crawl/tar/new_hunk_267.cpp,"[40, 45]","[33, 39]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=d858a433c82626309e0d974ca923a79ac7f7f18f,31 Aug 2003,"Use current_stat_info
",2077,data/crawl/tar/hunk_268.cpp,,,data/crawl/tar/old_hunk_268.cpp,data/crawl/tar/new_hunk_268.cpp,"[12, 21, 31, 41, 59]","[11, 19, 29, 37]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=d858a433c82626309e0d974ca923a79ac7f7f18f,31 Aug 2003,"Use current_stat_info
",2077,data/crawl/tar/hunk_269.cpp,,,data/crawl/tar/old_hunk_269.cpp,data/crawl/tar/new_hunk_269.cpp,[14],[16]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=d858a433c82626309e0d974ca923a79ac7f7f18f,31 Aug 2003,"Use current_stat_info
",2077,data/crawl/tar/hunk_270.cpp,,,data/crawl/tar/old_hunk_270.cpp,data/crawl/tar/new_hunk_270.cpp,[67],[52]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=d858a433c82626309e0d974ca923a79ac7f7f18f,31 Aug 2003,"Use current_stat_info
",2077,data/crawl/tar/hunk_271.cpp,,,data/crawl/tar/old_hunk_271.cpp,data/crawl/tar/new_hunk_271.cpp,[3],[3]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=d858a433c82626309e0d974ca923a79ac7f7f18f,31 Aug 2003,"Use current_stat_info
",2077,data/crawl/tar/hunk_272.cpp,,,data/crawl/tar/old_hunk_272.cpp,data/crawl/tar/new_hunk_272.cpp,[1],[1]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=d858a433c82626309e0d974ca923a79ac7f7f18f,31 Aug 2003,"Use current_stat_info
",2077,data/crawl/tar/hunk_273.cpp,,,data/crawl/tar/old_hunk_273.cpp,data/crawl/tar/new_hunk_273.cpp,"[112, 157]",[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=d858a433c82626309e0d974ca923a79ac7f7f18f,31 Aug 2003,"Use current_stat_info
",2077,data/crawl/tar/hunk_274.cpp,,,data/crawl/tar/old_hunk_274.cpp,data/crawl/tar/new_hunk_274.cpp,"[94, 104, 144, 161, 181, 234, 246]","[42, 45, 65, 69, 77, 81]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=d858a433c82626309e0d974ca923a79ac7f7f18f,31 Aug 2003,"Use current_stat_info
",2077,data/crawl/tar/hunk_275.cpp,,,data/crawl/tar/old_hunk_275.cpp,data/crawl/tar/new_hunk_275.cpp,[12],[12]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=096bc2bffd857a690a9364043c33109eee0a53b4,31 Aug 2003,"(decode_header): Added initial support for POSIX extended and STAR
 headers. (skip_member): Check oldgnu_header only if current_format is set to
 OLDGNU_FORMAT.
",136,data/crawl/tar/hunk_276.cpp,,,data/crawl/tar/old_hunk_276.cpp,data/crawl/tar/new_hunk_276.cpp,[3],[3]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=5be0f2ba491f27074c35875185286d1d425ce044,31 Aug 2003,"New file
",295,data/crawl/tar/hunk_277.cpp,,,data/crawl/tar/old_hunk_277.cpp,data/crawl/tar/new_hunk_277.cpp,[],"[110, 121]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=81a9e2ae36bd8c5f6accd83acb00826ad7222bb6,30 Aug 2003,"Drop en_GB locale; it was more trouble than it was worth (e.g.,
 different users in en_GB disagree about -ize versus -ise).
",59,data/crawl/tar/hunk_278.cpp,,,data/crawl/tar/old_hunk_278.cpp,data/crawl/tar/new_hunk_278.cpp,"[26, 34]",[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=d52a1bb3663f9eb595e5f311037fc5cbd13d621e,27 Jul 2003,"New option --check-links. Changed semantics of -o to comply to UNIX98
 when extracting and to its previous semantics otherwise. (main): Call
 check_links if --check-links. was given.
",50,data/crawl/tar/hunk_279.cpp,,,data/crawl/tar/old_hunk_279.cpp,data/crawl/tar/new_hunk_279.cpp,[1],"[1, 8]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=1fef6258aa492f84ea63c1eea3e1e0e9c40c81bb,27 Jul 2003,"(check_links_option): New variable (orig_file_name): New variable
 (check_links): New proto.
",475,data/crawl/tar/hunk_280.cpp,,,data/crawl/tar/old_hunk_280.cpp,data/crawl/tar/new_hunk_280.cpp,"[8, 11]",[8]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=31d9c7e2a4344d8f884c93dd4fb467894de69e99,24 Jul 2003,"(chdir_do): Fixed call to restore_cwd
",899,data/crawl/tar/hunk_281.cpp,,,data/crawl/tar/old_hunk_281.cpp,data/crawl/tar/new_hunk_281.cpp,[3],[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=31d9c7e2a4344d8f884c93dd4fb467894de69e99,24 Jul 2003,"(chdir_do): Fixed call to restore_cwd
",899,data/crawl/tar/hunk_282.cpp,,,data/crawl/tar/old_hunk_282.cpp,data/crawl/tar/new_hunk_282.cpp,"[18, 34]","[20, 38, 173, 206, 214, 221, 233, 246, 253, 259, 265, 271, 283, 289, 297, 334, 340, 346, 352, 358, 366, 374, 391, 398, 404, 410, 416, 422, 428, 434, 440, 449]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=f7ccf5eb1c5927e9a045a46053ca697b2f869abb,5 Jul 2003,"Initial revision
",41,data/crawl/tar/hunk_283.cpp,,,data/crawl/tar/old_hunk_283.cpp,data/crawl/tar/new_hunk_283.cpp,[],"[26, 34]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=8912f582ac95ba39f4435046642e643921f9dd9f,5 Jul 2003,"Convert to UTF-8. Don't include <print-copyr.h>. (DEFAULT_PATTERN):
 Renamed from DEFAULT. (ZEROS_PATTERN): Renamed from ZEROS. (main): Use
 gettext to translate (C), not print_copyright.
",82,data/crawl/tar/hunk_284.cpp,,,data/crawl/tar/old_hunk_284.cpp,data/crawl/tar/new_hunk_284.cpp,"[7, 11]",[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=8912f582ac95ba39f4435046642e643921f9dd9f,5 Jul 2003,"Convert to UTF-8. Don't include <print-copyr.h>. (DEFAULT_PATTERN):
 Renamed from DEFAULT. (ZEROS_PATTERN): Renamed from ZEROS. (main): Use
 gettext to translate (C), not print_copyright.
",82,data/crawl/tar/hunk_285.cpp,,,data/crawl/tar/old_hunk_285.cpp,data/crawl/tar/new_hunk_285.cpp,"[3, 7, 11]",[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=42d05fcb6e724c52cd66c85828b0b8b9d2338e72,5 Jul 2003,"Do not include <print-copyr.h>. Include <getdate.h>. (get_date):
 Remove decl. (ATIME_PRESERVE_OPTION, CHECKPOINT_OPTION, FORCE_LOCAL_OPTION,
 IGNORE_FAILED_READ_OPTION, INDEX_FILE_OPTION, NO_OVERWRITE_DIR_OPTION,
 NUMERIC_OWNER_OPTION, RECURSIVE_UNLINK_OPTION, REMOVE_FILES_OPTION,
 SHOW_OMITTED_DIRS_OPTION, TOTALS_OPTION): New constants. (long_options,
 decode_options): Use them. (OVERWRITE_DIR_OPTION): Remove. (long_options):
 New options --index-file, --no-overwrite-dir. Remove --overwrite-dir option.
 (usage): Use PACKAGE_BUGREPORT. (decode_options): Terminate new argv
 properly. Use PACKAGE_NAME, PACKAGE_VERSION. If verbose, report how we
 grokked any textual date option. (main): Add support for index-file.
",118,data/crawl/tar/hunk_286.cpp,,,data/crawl/tar/old_hunk_286.cpp,data/crawl/tar/new_hunk_286.cpp,[3],[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=42d05fcb6e724c52cd66c85828b0b8b9d2338e72,5 Jul 2003,"Do not include <print-copyr.h>. Include <getdate.h>. (get_date):
 Remove decl. (ATIME_PRESERVE_OPTION, CHECKPOINT_OPTION, FORCE_LOCAL_OPTION,
 IGNORE_FAILED_READ_OPTION, INDEX_FILE_OPTION, NO_OVERWRITE_DIR_OPTION,
 NUMERIC_OWNER_OPTION, RECURSIVE_UNLINK_OPTION, REMOVE_FILES_OPTION,
 SHOW_OMITTED_DIRS_OPTION, TOTALS_OPTION): New constants. (long_options,
 decode_options): Use them. (OVERWRITE_DIR_OPTION): Remove. (long_options):
 New options --index-file, --no-overwrite-dir. Remove --overwrite-dir option.
 (usage): Use PACKAGE_BUGREPORT. (decode_options): Terminate new argv
 properly. Use PACKAGE_NAME, PACKAGE_VERSION. If verbose, report how we
 grokked any textual date option. (main): Add support for index-file.
",118,data/crawl/tar/hunk_287.cpp,,,data/crawl/tar/old_hunk_287.cpp,data/crawl/tar/new_hunk_287.cpp,[6],[6]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=40835c2c55e94876ee54442b2f51b2acd027024c,5 Jul 2003,"Use newer form for bug report and version.
",4,data/crawl/tar/hunk_288.cpp,,,data/crawl/tar/old_hunk_288.cpp,data/crawl/tar/new_hunk_288.cpp,[3],[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=675c5a2f243bb5e72c982c0e3c30762ec32e9a1b,5 Jul 2003,"(we_are_root): Now bool, not int. (check_time): Warn about
 implausibly old time stamps. (set_stat): Use utimbuf, not stat_info.
 (preprare_to_extract): New arg DIRECTORY. (fill_in_sparse_array): Moved here
 from compare.c. (extract_sparse_file): Now returns off_t, giving size left.
 Truncate file at end. (extract_archive): Use safer_name_suffix rather than
 rolling our own. Use fill_in_sparse_array rather than rolling our own. Strip
 trailing slashes more effectively. Check for unsafe names.
",391,data/crawl/tar/hunk_289.cpp,,,data/crawl/tar/old_hunk_289.cpp,data/crawl/tar/new_hunk_289.cpp,[],"[42, 80]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=675c5a2f243bb5e72c982c0e3c30762ec32e9a1b,5 Jul 2003,"(we_are_root): Now bool, not int. (check_time): Warn about
 implausibly old time stamps. (set_stat): Use utimbuf, not stat_info.
 (preprare_to_extract): New arg DIRECTORY. (fill_in_sparse_array): Moved here
 from compare.c. (extract_sparse_file): Now returns off_t, giving size left.
 Truncate file at end. (extract_archive): Use safer_name_suffix rather than
 rolling our own. Use fill_in_sparse_array rather than rolling our own. Strip
 trailing slashes more effectively. Check for unsafe names.
",391,data/crawl/tar/hunk_290.cpp,,,data/crawl/tar/old_hunk_290.cpp,data/crawl/tar/new_hunk_290.cpp,"[2, 25]","[2, 25]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=675c5a2f243bb5e72c982c0e3c30762ec32e9a1b,5 Jul 2003,"(we_are_root): Now bool, not int. (check_time): Warn about
 implausibly old time stamps. (set_stat): Use utimbuf, not stat_info.
 (preprare_to_extract): New arg DIRECTORY. (fill_in_sparse_array): Moved here
 from compare.c. (extract_sparse_file): Now returns off_t, giving size left.
 Truncate file at end. (extract_archive): Use safer_name_suffix rather than
 rolling our own. Use fill_in_sparse_array rather than rolling our own. Strip
 trailing slashes more effectively. Check for unsafe names.
",391,data/crawl/tar/hunk_291.cpp,,,data/crawl/tar/old_hunk_291.cpp,data/crawl/tar/new_hunk_291.cpp,"[12, 43]",[15]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=675c5a2f243bb5e72c982c0e3c30762ec32e9a1b,5 Jul 2003,"(we_are_root): Now bool, not int. (check_time): Warn about
 implausibly old time stamps. (set_stat): Use utimbuf, not stat_info.
 (preprare_to_extract): New arg DIRECTORY. (fill_in_sparse_array): Moved here
 from compare.c. (extract_sparse_file): Now returns off_t, giving size left.
 Truncate file at end. (extract_archive): Use safer_name_suffix rather than
 rolling our own. Use fill_in_sparse_array rather than rolling our own. Strip
 trailing slashes more effectively. Check for unsafe names.
",391,data/crawl/tar/hunk_292.cpp,,,data/crawl/tar/old_hunk_292.cpp,data/crawl/tar/new_hunk_292.cpp,[44],[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=01d81c7f0fc8761469d995ab6217395813189bca,5 Jul 2003,"Switch to new method for doing copyright notices. Use @acronym
 instead of @sc where appropriate. Remove empty examples.  Give a few more
 examples.
",1688,data/crawl/tar/hunk_293.cpp,,,data/crawl/tar/old_hunk_293.cpp,data/crawl/tar/new_hunk_293.cpp,[6],[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=fcb62b60d94ad17c766dcdd94e4300163c670282,10 Mar 2003,"import from gnulib
",96,data/crawl/tar/hunk_294.cpp,,,data/crawl/tar/old_hunk_294.cpp,data/crawl/tar/new_hunk_294.cpp,[15],[7]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=9ded0a0567b58bfbdf10a8dc98e0158e486466ac,11 Feb 2002,"Sync with fileutils
",174,data/crawl/tar/hunk_295.cpp,,,data/crawl/tar/old_hunk_295.cpp,data/crawl/tar/new_hunk_295.cpp,[],"[30, 32]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=9c93a32114dc61d91b2aa4090445cafb032d8885,26 Sep 2001,"Initial revision
",3571,data/crawl/tar/hunk_296.cpp,,,data/crawl/tar/old_hunk_296.cpp,data/crawl/tar/new_hunk_296.cpp,[],[2566]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=7f1bf2e09f8ec124c0fba9d2bf033505f827353e,26 Sep 2001,"just ignore them silently.
",7,data/crawl/tar/hunk_297.cpp,,,data/crawl/tar/old_hunk_297.cpp,data/crawl/tar/new_hunk_297.cpp,[5],[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=a942967415745514873bdaf7039f11438722fae8,21 Sep 2001,"(EILSEQ, ENOTSUP): New macros, if not defined by errno.h.
 (<error.h>): Do not include. (unicode_to_mb): Return int, not void.  New arg
 for failure callback. Invoke the failure callback instead of invoking
 'error'. (print_unicode_success): Renamed from fprintf_callback.  Now extern.
 Return -1 on failure, 0 on success. (print_unicode_failure): New function.
 (print_unicode_char): Return int.  Adjust to changes to unicode_to_mb. Do not
 report error: instead, print an approximation.
",96,data/crawl/tar/hunk_298.cpp,,,data/crawl/tar/old_hunk_298.cpp,data/crawl/tar/new_hunk_298.cpp,[3],[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=a942967415745514873bdaf7039f11438722fae8,21 Sep 2001,"(EILSEQ, ENOTSUP): New macros, if not defined by errno.h.
 (<error.h>): Do not include. (unicode_to_mb): Return int, not void.  New arg
 for failure callback. Invoke the failure callback instead of invoking
 'error'. (print_unicode_success): Renamed from fprintf_callback.  Now extern.
 Return -1 on failure, 0 on success. (print_unicode_failure): New function.
 (print_unicode_char): Return int.  Adjust to changes to unicode_to_mb. Do not
 report error: instead, print an approximation.
",96,data/crawl/tar/hunk_299.cpp,,,data/crawl/tar/old_hunk_299.cpp,data/crawl/tar/new_hunk_299.cpp,[3],[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=a942967415745514873bdaf7039f11438722fae8,21 Sep 2001,"(EILSEQ, ENOTSUP): New macros, if not defined by errno.h.
 (<error.h>): Do not include. (unicode_to_mb): Return int, not void.  New arg
 for failure callback. Invoke the failure callback instead of invoking
 'error'. (print_unicode_success): Renamed from fprintf_callback.  Now extern.
 Return -1 on failure, 0 on success. (print_unicode_failure): New function.
 (print_unicode_char): Return int.  Adjust to changes to unicode_to_mb. Do not
 report error: instead, print an approximation.
",96,data/crawl/tar/hunk_300.cpp,,,data/crawl/tar/old_hunk_300.cpp,data/crawl/tar/new_hunk_300.cpp,[3],[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=a942967415745514873bdaf7039f11438722fae8,21 Sep 2001,"(EILSEQ, ENOTSUP): New macros, if not defined by errno.h.
 (<error.h>): Do not include. (unicode_to_mb): Return int, not void.  New arg
 for failure callback. Invoke the failure callback instead of invoking
 'error'. (print_unicode_success): Renamed from fprintf_callback.  Now extern.
 Return -1 on failure, 0 on success. (print_unicode_failure): New function.
 (print_unicode_char): Return int.  Adjust to changes to unicode_to_mb. Do not
 report error: instead, print an approximation.
",96,data/crawl/tar/hunk_301.cpp,,,data/crawl/tar/old_hunk_301.cpp,data/crawl/tar/new_hunk_301.cpp,"[3, 9]",[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=4b5d60ef385197e76a2dc6122401e2a13e177f52,21 Sep 2001,"Rewrite from scratch, as print-copyr.c.
",77,data/crawl/tar/hunk_302.cpp,,,data/crawl/tar/old_hunk_302.cpp,data/crawl/tar/new_hunk_302.cpp,[],"[16, 26]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=e9da8d1a8020ad4dfe92416f3c77a33e6906b55e,20 Sep 2001,"Initial revision
",5887,data/crawl/tar/hunk_303.cpp,,,data/crawl/tar/old_hunk_303.cpp,data/crawl/tar/new_hunk_303.cpp,[],"[2282, 2453, 2627, 3507, 3991, 4525, 5301, 5429]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=95dda72cc6231e3966fcaeaa16d6b55a45f602ed,12 Sep 2001,"(struct delayed_set_stat): New member 'after_symlinks'.
 (delay_set_stat): Initialize it to 0. (set_mode): New arg current_stat_info. 
 Use it (if nonnull) to avoid taking an extra stat ourselves.  All callers
 changed. (set_stat): Likewise. (apply_nonancestor_delayed_set_stat): New arg
 'after_symlinks'. If false, stop when encountering a struct whose
 'after_symlinks' member is true.  Otherwise, go through all structures but
 check them more carefully. All callers changed. (extract_archive): When
 extracting a deferred symlink, if its parent directory's status needs fixing,
 then mark the directory as needing to be fixed after symlinks.
 (extract_finish): Fix status of ordinary directories, then apply delayed
 symlinks, then fix the status of directories that are ancestors of delayed
 symlinks.
",129,data/crawl/tar/hunk_304.cpp,,,data/crawl/tar/old_hunk_304.cpp,data/crawl/tar/new_hunk_304.cpp,[],[40]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=a52396de9bde77671ac389183de918bb86ac785b,27 Aug 2001,"(from_header): Do not issue a diagnostic if TYPE is zero. However,
 check for error even for '-' or '+' case.

(print_header): Try parsing uids and gids as unsigned integers first,
and as a uid_t or gid_t only if that fails.  This adds support for
listing positive uids and gids that are greater than UID_MAX and
GID_MAX.",169,data/crawl/tar/hunk_305.cpp,,,data/crawl/tar/old_hunk_305.cpp,data/crawl/tar/new_hunk_305.cpp,"[3, 36, 66]","[4, 33, 64]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=a7cd57a91dba44bba5bcc8039c5f7aae25315d52,27 Aug 2001,"(struct delayed_symlinks, extract_archive, apply_delayed_symlinks):
 Support hard links to symbolic links.

(struct delayed_symlink): Remove 'names' member, replacing it with
'sources' and 'target' member.  All uses changed.

(struct string_list): New type.

(delayed_set_stat, extract_archive): Use offsetof when computing sizes
for struct hack; this avoids wasted space in some cases.

(extract_archive): Fix test for absolute pathnames and/or "".."".
Use link_error to report errors for links.
Remove redundant trailing '/' at ""really_dir"", for all uses, not
just before invoking mkdir.
If overwriting old files, do not worry so much about existing directories.
Fix mode computation in the case where the directory exists.

(apply_delayed_symlinks): If we can't make a hard link to a symbolic
link, make a copy of the symbolic link.",168,data/crawl/tar/hunk_306.cpp,,,data/crawl/tar/old_hunk_306.cpp,data/crawl/tar/new_hunk_306.cpp,[3],[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=13b9e5afc861b6d86ed9de772958f48b45b34508,27 Aug 2001,"Add copyright notice.

(_DECLARE_XSTRTOL): Improve quality of diagnostic for
LONGINT_INVALID_SUFFIX_CHAR.",19,data/crawl/tar/hunk_307.cpp,,,data/crawl/tar/old_hunk_307.cpp,data/crawl/tar/new_hunk_307.cpp,[3],[3]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=01244cf13350f99483e8844a476e3d890254e9f9,21 Aug 2001,"glibc version.
",368,data/crawl/tar/hunk_308.cpp,,,data/crawl/tar/old_hunk_308.cpp,data/crawl/tar/new_hunk_308.cpp,[],[363]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=e873bb4ed86124a0a425cc825b4ad15754f86069,3 Apr 2001,"Initial revision
",250,data/crawl/tar/hunk_309.cpp,,,data/crawl/tar/old_hunk_309.cpp,data/crawl/tar/new_hunk_309.cpp,[],"[141, 153, 184, 194, 200]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=3b6f724b9262d4dee75f634d03481086a37ee9b5,13 Jan 2001,"(<time.h>): Do not include; system.h now does this. (time): Remove
 decl; likewise. (child_open_for_uncompress): Use new full_write semantics.
 (flush_write): Use ISSLASH instead of testing for '/'. (flush_read):
 Likewise.
",23,data/crawl/tar/hunk_310.cpp,,,data/crawl/tar/old_hunk_310.cpp,data/crawl/tar/new_hunk_310.cpp,[9],[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=eca497ef34cc119ad9134a7638fdad6ff36d7065,13 Jan 2001,"(<time.h>): Do not include; system.h now does this.
 (make_directories): Skip filesystem prefixes. Don't assume '/' is the only
 separator. (extract_sparse_file): Use new full_write semantics. On write
 error, return instead of invoking skip_file. Do not free sparsearray; caller
 does this now. (apply_nonancestor_delayed_set_stat): Do not assume '/' is the
 only separator. (extract_archive): Don't assume file name lengths fit in int.
 Report what got stripped from member name; it might be more than '/'. Use new
 full_write semantics. Do not pass redundant trailing ""/"" to mkdir, as POSIX
 does not allow mkdir to ignore it. Do not report mkdir error if
 old_files_option == KEEP_OLD_FILES.
",121,data/crawl/tar/hunk_311.cpp,,,data/crawl/tar/old_hunk_311.cpp,data/crawl/tar/new_hunk_311.cpp,[17],[5]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=8d37615dc435552e8438d3d0d7cddff66f2ed31d,28 Oct 2000,"(namelist_match): New function. (name_match, name_scan): Use it, to
 eliminate duplicate code. (names_notfound): Remove special case for Amiga.
",107,data/crawl/tar/hunk_312.cpp,,,data/crawl/tar/old_hunk_312.cpp,data/crawl/tar/new_hunk_312.cpp,[10],[7]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=7abb9b854d201c076e6056b920229c9a5ea67e5c,28 Oct 2000,"(flush_read): If read_full_records_option, try to fill the input
 buffer, as --delete -f - needs this.
",8,data/crawl/tar/hunk_313.cpp,,,data/crawl/tar/old_hunk_313.cpp,data/crawl/tar/new_hunk_313.cpp,[3],[4]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=e89bcb7fb33d6bae6db577bd8c6fe4599c5e2288,24 Oct 2000,"(we_are_root): Now global. (struct delayed_symlink): New type.
 (delayed_symlink_head): New var. (extr_init, fatal_exit): Invoke
 extract_finish on fatal errors, not apply_delayed_set_stat. (set_mode,
 set_stat): Pointer args are now const pointers. (check_time): New function.
 (set_stat): Warn if setting a file's timestamp to be the future.
 (make_directories): Do not save and restore errno. (maybe_recoverable): Set
 errno to ENOENT if we cannot make missing intermediate directories.
 (extract_archive): Invoke apply_nonancestor_delayed_set_stat here, not in
 caller. Extract potentially dangerous symbolic links more carefully,
 deferring their creation until the end, and using a regular file placeholder
 in the meantime. Do not remove trailing / and /. from file names. Do not
 bother checking for "".."" when checking whether a directory loops back on
 itself, as loopbacks can occur with symlinks too. Also, in that case, do not
 bother saving and restoring errno; just set it to EEXIST.
 (apply_nonancestor_delayed_set_stat): A prefix is a potential ancestor if it
 ends in slash too (as well as ending in a char just before slash).
 (apply_delayed_set_stat): Remove. (apply_delayed_symlinks, extract_finish):
 New functions.
",309,data/crawl/tar/hunk_314.cpp,,,data/crawl/tar/old_hunk_314.cpp,data/crawl/tar/new_hunk_314.cpp,[1],[1]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=e89bcb7fb33d6bae6db577bd8c6fe4599c5e2288,24 Oct 2000,"(we_are_root): Now global. (struct delayed_symlink): New type.
 (delayed_symlink_head): New var. (extr_init, fatal_exit): Invoke
 extract_finish on fatal errors, not apply_delayed_set_stat. (set_mode,
 set_stat): Pointer args are now const pointers. (check_time): New function.
 (set_stat): Warn if setting a file's timestamp to be the future.
 (make_directories): Do not save and restore errno. (maybe_recoverable): Set
 errno to ENOENT if we cannot make missing intermediate directories.
 (extract_archive): Invoke apply_nonancestor_delayed_set_stat here, not in
 caller. Extract potentially dangerous symbolic links more carefully,
 deferring their creation until the end, and using a regular file placeholder
 in the meantime. Do not remove trailing / and /. from file names. Do not
 bother checking for "".."" when checking whether a directory loops back on
 itself, as loopbacks can occur with symlinks too. Also, in that case, do not
 bother saving and restoring errno; just set it to EEXIST.
 (apply_nonancestor_delayed_set_stat): A prefix is a potential ancestor if it
 ends in slash too (as well as ending in a char just before slash).
 (apply_delayed_set_stat): Remove. (apply_delayed_symlinks, extract_finish):
 New functions.
",309,data/crawl/tar/hunk_315.cpp,,,data/crawl/tar/old_hunk_315.cpp,data/crawl/tar/new_hunk_315.cpp,[1],[1]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=e89bcb7fb33d6bae6db577bd8c6fe4599c5e2288,24 Oct 2000,"(we_are_root): Now global. (struct delayed_symlink): New type.
 (delayed_symlink_head): New var. (extr_init, fatal_exit): Invoke
 extract_finish on fatal errors, not apply_delayed_set_stat. (set_mode,
 set_stat): Pointer args are now const pointers. (check_time): New function.
 (set_stat): Warn if setting a file's timestamp to be the future.
 (make_directories): Do not save and restore errno. (maybe_recoverable): Set
 errno to ENOENT if we cannot make missing intermediate directories.
 (extract_archive): Invoke apply_nonancestor_delayed_set_stat here, not in
 caller. Extract potentially dangerous symbolic links more carefully,
 deferring their creation until the end, and using a regular file placeholder
 in the meantime. Do not remove trailing / and /. from file names. Do not
 bother checking for "".."" when checking whether a directory loops back on
 itself, as loopbacks can occur with symlinks too. Also, in that case, do not
 bother saving and restoring errno; just set it to EEXIST.
 (apply_nonancestor_delayed_set_stat): A prefix is a potential ancestor if it
 ends in slash too (as well as ending in a char just before slash).
 (apply_delayed_set_stat): Remove. (apply_delayed_symlinks, extract_finish):
 New functions.
",309,data/crawl/tar/hunk_316.cpp,,,data/crawl/tar/old_hunk_316.cpp,data/crawl/tar/new_hunk_316.cpp,[21],[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=e89bcb7fb33d6bae6db577bd8c6fe4599c5e2288,24 Oct 2000,"(we_are_root): Now global. (struct delayed_symlink): New type.
 (delayed_symlink_head): New var. (extr_init, fatal_exit): Invoke
 extract_finish on fatal errors, not apply_delayed_set_stat. (set_mode,
 set_stat): Pointer args are now const pointers. (check_time): New function.
 (set_stat): Warn if setting a file's timestamp to be the future.
 (make_directories): Do not save and restore errno. (maybe_recoverable): Set
 errno to ENOENT if we cannot make missing intermediate directories.
 (extract_archive): Invoke apply_nonancestor_delayed_set_stat here, not in
 caller. Extract potentially dangerous symbolic links more carefully,
 deferring their creation until the end, and using a regular file placeholder
 in the meantime. Do not remove trailing / and /. from file names. Do not
 bother checking for "".."" when checking whether a directory loops back on
 itself, as loopbacks can occur with symlinks too. Also, in that case, do not
 bother saving and restoring errno; just set it to EEXIST.
 (apply_nonancestor_delayed_set_stat): A prefix is a potential ancestor if it
 ends in slash too (as well as ending in a char just before slash).
 (apply_delayed_set_stat): Remove. (apply_delayed_symlinks, extract_finish):
 New functions.
",309,data/crawl/tar/hunk_317.cpp,,,data/crawl/tar/old_hunk_317.cpp,data/crawl/tar/new_hunk_317.cpp,[0],[0]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=e89bcb7fb33d6bae6db577bd8c6fe4599c5e2288,24 Oct 2000,"(we_are_root): Now global. (struct delayed_symlink): New type.
 (delayed_symlink_head): New var. (extr_init, fatal_exit): Invoke
 extract_finish on fatal errors, not apply_delayed_set_stat. (set_mode,
 set_stat): Pointer args are now const pointers. (check_time): New function.
 (set_stat): Warn if setting a file's timestamp to be the future.
 (make_directories): Do not save and restore errno. (maybe_recoverable): Set
 errno to ENOENT if we cannot make missing intermediate directories.
 (extract_archive): Invoke apply_nonancestor_delayed_set_stat here, not in
 caller. Extract potentially dangerous symbolic links more carefully,
 deferring their creation until the end, and using a regular file placeholder
 in the meantime. Do not remove trailing / and /. from file names. Do not
 bother checking for "".."" when checking whether a directory loops back on
 itself, as loopbacks can occur with symlinks too. Also, in that case, do not
 bother saving and restoring errno; just set it to EEXIST.
 (apply_nonancestor_delayed_set_stat): A prefix is a potential ancestor if it
 ends in slash too (as well as ending in a char just before slash).
 (apply_delayed_set_stat): Remove. (apply_delayed_symlinks, extract_finish):
 New functions.
",309,data/crawl/tar/hunk_318.cpp,,,data/crawl/tar/old_hunk_318.cpp,data/crawl/tar/new_hunk_318.cpp,[2],[2]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=e89bcb7fb33d6bae6db577bd8c6fe4599c5e2288,24 Oct 2000,"(we_are_root): Now global. (struct delayed_symlink): New type.
 (delayed_symlink_head): New var. (extr_init, fatal_exit): Invoke
 extract_finish on fatal errors, not apply_delayed_set_stat. (set_mode,
 set_stat): Pointer args are now const pointers. (check_time): New function.
 (set_stat): Warn if setting a file's timestamp to be the future.
 (make_directories): Do not save and restore errno. (maybe_recoverable): Set
 errno to ENOENT if we cannot make missing intermediate directories.
 (extract_archive): Invoke apply_nonancestor_delayed_set_stat here, not in
 caller. Extract potentially dangerous symbolic links more carefully,
 deferring their creation until the end, and using a regular file placeholder
 in the meantime. Do not remove trailing / and /. from file names. Do not
 bother checking for "".."" when checking whether a directory loops back on
 itself, as loopbacks can occur with symlinks too. Also, in that case, do not
 bother saving and restoring errno; just set it to EEXIST.
 (apply_nonancestor_delayed_set_stat): A prefix is a potential ancestor if it
 ends in slash too (as well as ending in a char just before slash).
 (apply_delayed_set_stat): Remove. (apply_delayed_symlinks, extract_finish):
 New functions.
",309,data/crawl/tar/hunk_319.cpp,,,data/crawl/tar/old_hunk_319.cpp,data/crawl/tar/new_hunk_319.cpp,[35],[60]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=8a098729c0f4f39b2acb9a45de1a56fe383a2a86,24 Oct 2000,"(extract_mangle): Fix diagnostic with wrong number of %s'es.
",11,data/crawl/tar/hunk_320.cpp,,,data/crawl/tar/old_hunk_320.cpp,data/crawl/tar/new_hunk_320.cpp,[3],[3]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=4dcebd965545a7a8ab3e0d6d4e0fdcd5f767d399,24 Oct 2000,"(_GNU_SOURCE): Remove; autoconf now does this.
 (child_open_for_compress, child_open_for_uncompress, close_archive):
 Propagate any failure of the compression process back to ""tar"".
 (open_archive, flush_write, flush_read, close_archive): Do not allocate an
 array of size PATH_MAX, as PATH_MAX might be (size_t) -1. Instead, allocate
 an array with the size that's needed. (open_archive): Don't bother checking
 S_ISCHR of /dev/null. (backspace_output): Don't try to backspace past start
 of archive. (close_archive): Remove special case for DELETE_SUBCOMMAND.
",292,data/crawl/tar/hunk_321.cpp,,,data/crawl/tar/old_hunk_321.cpp,data/crawl/tar/new_hunk_321.cpp,"[7, 17]","[3, 6]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=c18999bad51b56995a293cb4d6936315b5a6bdff,7 Jan 2000,"(read_and): Invoke apply_nonancestor_delayed_set_stat on file names
 after handling them. (list_archive): Use consistent message for unexpected
 EOF. Use error message functions to report errors consistently.
 (read_header): Use xalloc_die to report memory exhaustion. Use consistent
 message for unexpected EOF. (decode_mode): Remove; moved to misc.c.
 (skip_file): Use consistent message for unexpected EOF.
 (skip_extended_headers): Likewise.
",95,data/crawl/tar/hunk_322.cpp,,,data/crawl/tar/old_hunk_322.cpp,data/crawl/tar/new_hunk_322.cpp,[3],[3]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=c18999bad51b56995a293cb4d6936315b5a6bdff,7 Jan 2000,"(read_and): Invoke apply_nonancestor_delayed_set_stat on file names
 after handling them. (list_archive): Use consistent message for unexpected
 EOF. Use error message functions to report errors consistently.
 (read_header): Use xalloc_die to report memory exhaustion. Use consistent
 message for unexpected EOF. (decode_mode): Remove; moved to misc.c.
 (skip_file): Use consistent message for unexpected EOF.
 (skip_extended_headers): Likewise.
",95,data/crawl/tar/hunk_323.cpp,,,data/crawl/tar/old_hunk_323.cpp,data/crawl/tar/new_hunk_323.cpp,[4],[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=c18999bad51b56995a293cb4d6936315b5a6bdff,7 Jan 2000,"(read_and): Invoke apply_nonancestor_delayed_set_stat on file names
 after handling them. (list_archive): Use consistent message for unexpected
 EOF. Use error message functions to report errors consistently.
 (read_header): Use xalloc_die to report memory exhaustion. Use consistent
 message for unexpected EOF. (decode_mode): Remove; moved to misc.c.
 (skip_file): Use consistent message for unexpected EOF.
 (skip_extended_headers): Likewise.
",95,data/crawl/tar/hunk_324.cpp,,,data/crawl/tar/old_hunk_324.cpp,data/crawl/tar/new_hunk_324.cpp,[3],[3]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=f74454cb37c715674796f21a2fd75eb0a5a34002,7 Jan 2000,"(find_new_file_size): Return size instead of storing through pointer.
 All callers changed. (deal_with_sparse): Don't keep reading after read
 errors. (finish_sparse_file): Just abort if there is an internal error. Use
 error message functions to report errors consistently. (dump_file): Fix typo:
 stat_warn and stat_error were interchanged. Quote file names with colons if
 possible. Don't restore access times on directories during incremental dumps
 until after dealing with the directory. If ignoring failed reads, count
 closedir errors as warnings, not errors. Fix buffer overrun problem when
 dumping sparse files. If ignoring failed reads, count read errors as
 warnings, not errors. Use error message functions to report errors
 consistently. If ignoring failed reads, count unknown files as warnings, not
 errors.
",236,data/crawl/tar/hunk_325.cpp,,,data/crawl/tar/old_hunk_325.cpp,data/crawl/tar/new_hunk_325.cpp,"[17, 27]",[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=f74454cb37c715674796f21a2fd75eb0a5a34002,7 Jan 2000,"(find_new_file_size): Return size instead of storing through pointer.
 All callers changed. (deal_with_sparse): Don't keep reading after read
 errors. (finish_sparse_file): Just abort if there is an internal error. Use
 error message functions to report errors consistently. (dump_file): Fix typo:
 stat_warn and stat_error were interchanged. Quote file names with colons if
 possible. Don't restore access times on directories during incremental dumps
 until after dealing with the directory. If ignoring failed reads, count
 closedir errors as warnings, not errors. Fix buffer overrun problem when
 dumping sparse files. If ignoring failed reads, count read errors as
 warnings, not errors. Use error message functions to report errors
 consistently. If ignoring failed reads, count unknown files as warnings, not
 errors.
",236,data/crawl/tar/hunk_326.cpp,,,data/crawl/tar/old_hunk_326.cpp,data/crawl/tar/new_hunk_326.cpp,[22],[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=f74454cb37c715674796f21a2fd75eb0a5a34002,7 Jan 2000,"(find_new_file_size): Return size instead of storing through pointer.
 All callers changed. (deal_with_sparse): Don't keep reading after read
 errors. (finish_sparse_file): Just abort if there is an internal error. Use
 error message functions to report errors consistently. (dump_file): Fix typo:
 stat_warn and stat_error were interchanged. Quote file names with colons if
 possible. Don't restore access times on directories during incremental dumps
 until after dealing with the directory. If ignoring failed reads, count
 closedir errors as warnings, not errors. Fix buffer overrun problem when
 dumping sparse files. If ignoring failed reads, count read errors as
 warnings, not errors. Use error message functions to report errors
 consistently. If ignoring failed reads, count unknown files as warnings, not
 errors.
",236,data/crawl/tar/hunk_327.cpp,,,data/crawl/tar/old_hunk_327.cpp,data/crawl/tar/new_hunk_327.cpp,"[5, 18]",[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=f74454cb37c715674796f21a2fd75eb0a5a34002,7 Jan 2000,"(find_new_file_size): Return size instead of storing through pointer.
 All callers changed. (deal_with_sparse): Don't keep reading after read
 errors. (finish_sparse_file): Just abort if there is an internal error. Use
 error message functions to report errors consistently. (dump_file): Fix typo:
 stat_warn and stat_error were interchanged. Quote file names with colons if
 possible. Don't restore access times on directories during incremental dumps
 until after dealing with the directory. If ignoring failed reads, count
 closedir errors as warnings, not errors. Fix buffer overrun problem when
 dumping sparse files. If ignoring failed reads, count read errors as
 warnings, not errors. Use error message functions to report errors
 consistently. If ignoring failed reads, count unknown files as warnings, not
 errors.
",236,data/crawl/tar/hunk_328.cpp,,,data/crawl/tar/old_hunk_328.cpp,data/crawl/tar/new_hunk_328.cpp,[5],[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=f74454cb37c715674796f21a2fd75eb0a5a34002,7 Jan 2000,"(find_new_file_size): Return size instead of storing through pointer.
 All callers changed. (deal_with_sparse): Don't keep reading after read
 errors. (finish_sparse_file): Just abort if there is an internal error. Use
 error message functions to report errors consistently. (dump_file): Fix typo:
 stat_warn and stat_error were interchanged. Quote file names with colons if
 possible. Don't restore access times on directories during incremental dumps
 until after dealing with the directory. If ignoring failed reads, count
 closedir errors as warnings, not errors. Fix buffer overrun problem when
 dumping sparse files. If ignoring failed reads, count read errors as
 warnings, not errors. Use error message functions to report errors
 consistently. If ignoring failed reads, count unknown files as warnings, not
 errors.
",236,data/crawl/tar/hunk_329.cpp,,,data/crawl/tar/old_hunk_329.cpp,data/crawl/tar/new_hunk_329.cpp,[3],[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=f74454cb37c715674796f21a2fd75eb0a5a34002,7 Jan 2000,"(find_new_file_size): Return size instead of storing through pointer.
 All callers changed. (deal_with_sparse): Don't keep reading after read
 errors. (finish_sparse_file): Just abort if there is an internal error. Use
 error message functions to report errors consistently. (dump_file): Fix typo:
 stat_warn and stat_error were interchanged. Quote file names with colons if
 possible. Don't restore access times on directories during incremental dumps
 until after dealing with the directory. If ignoring failed reads, count
 closedir errors as warnings, not errors. Fix buffer overrun problem when
 dumping sparse files. If ignoring failed reads, count read errors as
 warnings, not errors. Use error message functions to report errors
 consistently. If ignoring failed reads, count unknown files as warnings, not
 errors.
",236,data/crawl/tar/hunk_330.cpp,,,data/crawl/tar/old_hunk_330.cpp,data/crawl/tar/new_hunk_330.cpp,[5],[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=f74454cb37c715674796f21a2fd75eb0a5a34002,7 Jan 2000,"(find_new_file_size): Return size instead of storing through pointer.
 All callers changed. (deal_with_sparse): Don't keep reading after read
 errors. (finish_sparse_file): Just abort if there is an internal error. Use
 error message functions to report errors consistently. (dump_file): Fix typo:
 stat_warn and stat_error were interchanged. Quote file names with colons if
 possible. Don't restore access times on directories during incremental dumps
 until after dealing with the directory. If ignoring failed reads, count
 closedir errors as warnings, not errors. Fix buffer overrun problem when
 dumping sparse files. If ignoring failed reads, count read errors as
 warnings, not errors. Use error message functions to report errors
 consistently. If ignoring failed reads, count unknown files as warnings, not
 errors.
",236,data/crawl/tar/hunk_331.cpp,,,data/crawl/tar/old_hunk_331.cpp,data/crawl/tar/new_hunk_331.cpp,[3],[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=f2b8b4a42da21d48aff58aa2993fd64852844f8a,7 Jan 2000,"(extract_mangle): Use xalloc_die to report memory exhaustion. Quote
 file names with colons if possible.
",10,data/crawl/tar/hunk_332.cpp,,,data/crawl/tar/old_hunk_332.cpp,data/crawl/tar/new_hunk_332.cpp,[3],[3]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=f2b8b4a42da21d48aff58aa2993fd64852844f8a,7 Jan 2000,"(extract_mangle): Use xalloc_die to report memory exhaustion. Quote
 file names with colons if possible.
",10,data/crawl/tar/hunk_333.cpp,,,data/crawl/tar/old_hunk_333.cpp,data/crawl/tar/new_hunk_333.cpp,[3],[3]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=53f16a59713b32843f27332dbe807c06c7fc34bf,7 Jan 2000,"(extr_init): If we run out of memory, invoke apply_delayed_set_stat.
 (set_mode): Use Use error message functions to report errors consistently.
 (set_stat): Likewise. (repair_delayed_set_stat): Quote file names with colons
 if possible. (prepare_to_extract): Don't complain if we can't remove ""."".
 (extract_sparse_file): Use consistent message for unexpected EOF. Use error
 message functions to report errors consistently. (extract_archive): Use
 consistent message for unexpected EOF. Use error message functions to report
 errors consistently. Quote file names with colons if possible.
 (apply_delayed_set_stat): New function. (apply_nonancestor_delayed_set_stat):
 Renamed from apply_delayed_set_stat. Don't remove head if it doesn't apply.
 (fatal_exit): Invoke apply_delayed_set_stat with no args.
",94,data/crawl/tar/hunk_334.cpp,,,data/crawl/tar/old_hunk_334.cpp,data/crawl/tar/new_hunk_334.cpp,[5],[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=53f16a59713b32843f27332dbe807c06c7fc34bf,7 Jan 2000,"(extr_init): If we run out of memory, invoke apply_delayed_set_stat.
 (set_mode): Use Use error message functions to report errors consistently.
 (set_stat): Likewise. (repair_delayed_set_stat): Quote file names with colons
 if possible. (prepare_to_extract): Don't complain if we can't remove ""."".
 (extract_sparse_file): Use consistent message for unexpected EOF. Use error
 message functions to report errors consistently. (extract_archive): Use
 consistent message for unexpected EOF. Use error message functions to report
 errors consistently. Quote file names with colons if possible.
 (apply_delayed_set_stat): New function. (apply_nonancestor_delayed_set_stat):
 Renamed from apply_delayed_set_stat. Don't remove head if it doesn't apply.
 (fatal_exit): Invoke apply_delayed_set_stat with no args.
",94,data/crawl/tar/hunk_335.cpp,,,data/crawl/tar/old_hunk_335.cpp,data/crawl/tar/new_hunk_335.cpp,[5],[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=53f16a59713b32843f27332dbe807c06c7fc34bf,7 Jan 2000,"(extr_init): If we run out of memory, invoke apply_delayed_set_stat.
 (set_mode): Use Use error message functions to report errors consistently.
 (set_stat): Likewise. (repair_delayed_set_stat): Quote file names with colons
 if possible. (prepare_to_extract): Don't complain if we can't remove ""."".
 (extract_sparse_file): Use consistent message for unexpected EOF. Use error
 message functions to report errors consistently. (extract_archive): Use
 consistent message for unexpected EOF. Use error message functions to report
 errors consistently. Quote file names with colons if possible.
 (apply_delayed_set_stat): New function. (apply_nonancestor_delayed_set_stat):
 Renamed from apply_delayed_set_stat. Don't remove head if it doesn't apply.
 (fatal_exit): Invoke apply_delayed_set_stat with no args.
",94,data/crawl/tar/hunk_336.cpp,,,data/crawl/tar/old_hunk_336.cpp,data/crawl/tar/new_hunk_336.cpp,"[5, 17]",[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=53f16a59713b32843f27332dbe807c06c7fc34bf,7 Jan 2000,"(extr_init): If we run out of memory, invoke apply_delayed_set_stat.
 (set_mode): Use Use error message functions to report errors consistently.
 (set_stat): Likewise. (repair_delayed_set_stat): Quote file names with colons
 if possible. (prepare_to_extract): Don't complain if we can't remove ""."".
 (extract_sparse_file): Use consistent message for unexpected EOF. Use error
 message functions to report errors consistently. (extract_archive): Use
 consistent message for unexpected EOF. Use error message functions to report
 errors consistently. Quote file names with colons if possible.
 (apply_delayed_set_stat): New function. (apply_nonancestor_delayed_set_stat):
 Renamed from apply_delayed_set_stat. Don't remove head if it doesn't apply.
 (fatal_exit): Invoke apply_delayed_set_stat with no args.
",94,data/crawl/tar/hunk_337.cpp,,,data/crawl/tar/old_hunk_337.cpp,data/crawl/tar/new_hunk_337.cpp,[3],[3]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=53f16a59713b32843f27332dbe807c06c7fc34bf,7 Jan 2000,"(extr_init): If we run out of memory, invoke apply_delayed_set_stat.
 (set_mode): Use Use error message functions to report errors consistently.
 (set_stat): Likewise. (repair_delayed_set_stat): Quote file names with colons
 if possible. (prepare_to_extract): Don't complain if we can't remove ""."".
 (extract_sparse_file): Use consistent message for unexpected EOF. Use error
 message functions to report errors consistently. (extract_archive): Use
 consistent message for unexpected EOF. Use error message functions to report
 errors consistently. Quote file names with colons if possible.
 (apply_delayed_set_stat): New function. (apply_nonancestor_delayed_set_stat):
 Renamed from apply_delayed_set_stat. Don't remove head if it doesn't apply.
 (fatal_exit): Invoke apply_delayed_set_stat with no args.
",94,data/crawl/tar/hunk_338.cpp,,,data/crawl/tar/old_hunk_338.cpp,data/crawl/tar/new_hunk_338.cpp,"[3, 10]",[3]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=53f16a59713b32843f27332dbe807c06c7fc34bf,7 Jan 2000,"(extr_init): If we run out of memory, invoke apply_delayed_set_stat.
 (set_mode): Use Use error message functions to report errors consistently.
 (set_stat): Likewise. (repair_delayed_set_stat): Quote file names with colons
 if possible. (prepare_to_extract): Don't complain if we can't remove ""."".
 (extract_sparse_file): Use consistent message for unexpected EOF. Use error
 message functions to report errors consistently. (extract_archive): Use
 consistent message for unexpected EOF. Use error message functions to report
 errors consistently. Quote file names with colons if possible.
 (apply_delayed_set_stat): New function. (apply_nonancestor_delayed_set_stat):
 Renamed from apply_delayed_set_stat. Don't remove head if it doesn't apply.
 (fatal_exit): Invoke apply_delayed_set_stat with no args.
",94,data/crawl/tar/hunk_339.cpp,,,data/crawl/tar/old_hunk_339.cpp,data/crawl/tar/new_hunk_339.cpp,[3],[3]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=53f16a59713b32843f27332dbe807c06c7fc34bf,7 Jan 2000,"(extr_init): If we run out of memory, invoke apply_delayed_set_stat.
 (set_mode): Use Use error message functions to report errors consistently.
 (set_stat): Likewise. (repair_delayed_set_stat): Quote file names with colons
 if possible. (prepare_to_extract): Don't complain if we can't remove ""."".
 (extract_sparse_file): Use consistent message for unexpected EOF. Use error
 message functions to report errors consistently. (extract_archive): Use
 consistent message for unexpected EOF. Use error message functions to report
 errors consistently. Quote file names with colons if possible.
 (apply_delayed_set_stat): New function. (apply_nonancestor_delayed_set_stat):
 Renamed from apply_delayed_set_stat. Don't remove head if it doesn't apply.
 (fatal_exit): Invoke apply_delayed_set_stat with no args.
",94,data/crawl/tar/hunk_340.cpp,,,data/crawl/tar/old_hunk_340.cpp,data/crawl/tar/new_hunk_340.cpp,[5],[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=53f16a59713b32843f27332dbe807c06c7fc34bf,7 Jan 2000,"(extr_init): If we run out of memory, invoke apply_delayed_set_stat.
 (set_mode): Use Use error message functions to report errors consistently.
 (set_stat): Likewise. (repair_delayed_set_stat): Quote file names with colons
 if possible. (prepare_to_extract): Don't complain if we can't remove ""."".
 (extract_sparse_file): Use consistent message for unexpected EOF. Use error
 message functions to report errors consistently. (extract_archive): Use
 consistent message for unexpected EOF. Use error message functions to report
 errors consistently. Quote file names with colons if possible.
 (apply_delayed_set_stat): New function. (apply_nonancestor_delayed_set_stat):
 Renamed from apply_delayed_set_stat. Don't remove head if it doesn't apply.
 (fatal_exit): Invoke apply_delayed_set_stat with no args.
",94,data/crawl/tar/hunk_341.cpp,,,data/crawl/tar/old_hunk_341.cpp,data/crawl/tar/new_hunk_341.cpp,[3],[3]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=53f16a59713b32843f27332dbe807c06c7fc34bf,7 Jan 2000,"(extr_init): If we run out of memory, invoke apply_delayed_set_stat.
 (set_mode): Use Use error message functions to report errors consistently.
 (set_stat): Likewise. (repair_delayed_set_stat): Quote file names with colons
 if possible. (prepare_to_extract): Don't complain if we can't remove ""."".
 (extract_sparse_file): Use consistent message for unexpected EOF. Use error
 message functions to report errors consistently. (extract_archive): Use
 consistent message for unexpected EOF. Use error message functions to report
 errors consistently. Quote file names with colons if possible.
 (apply_delayed_set_stat): New function. (apply_nonancestor_delayed_set_stat):
 Renamed from apply_delayed_set_stat. Don't remove head if it doesn't apply.
 (fatal_exit): Invoke apply_delayed_set_stat with no args.
",94,data/crawl/tar/hunk_342.cpp,,,data/crawl/tar/old_hunk_342.cpp,data/crawl/tar/new_hunk_342.cpp,[3],[3]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=53f16a59713b32843f27332dbe807c06c7fc34bf,7 Jan 2000,"(extr_init): If we run out of memory, invoke apply_delayed_set_stat.
 (set_mode): Use Use error message functions to report errors consistently.
 (set_stat): Likewise. (repair_delayed_set_stat): Quote file names with colons
 if possible. (prepare_to_extract): Don't complain if we can't remove ""."".
 (extract_sparse_file): Use consistent message for unexpected EOF. Use error
 message functions to report errors consistently. (extract_archive): Use
 consistent message for unexpected EOF. Use error message functions to report
 errors consistently. Quote file names with colons if possible.
 (apply_delayed_set_stat): New function. (apply_nonancestor_delayed_set_stat):
 Renamed from apply_delayed_set_stat. Don't remove head if it doesn't apply.
 (fatal_exit): Invoke apply_delayed_set_stat with no args.
",94,data/crawl/tar/hunk_343.cpp,,,data/crawl/tar/old_hunk_343.cpp,data/crawl/tar/new_hunk_343.cpp,[6],[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=53f16a59713b32843f27332dbe807c06c7fc34bf,7 Jan 2000,"(extr_init): If we run out of memory, invoke apply_delayed_set_stat.
 (set_mode): Use Use error message functions to report errors consistently.
 (set_stat): Likewise. (repair_delayed_set_stat): Quote file names with colons
 if possible. (prepare_to_extract): Don't complain if we can't remove ""."".
 (extract_sparse_file): Use consistent message for unexpected EOF. Use error
 message functions to report errors consistently. (extract_archive): Use
 consistent message for unexpected EOF. Use error message functions to report
 errors consistently. Quote file names with colons if possible.
 (apply_delayed_set_stat): New function. (apply_nonancestor_delayed_set_stat):
 Renamed from apply_delayed_set_stat. Don't remove head if it doesn't apply.
 (fatal_exit): Invoke apply_delayed_set_stat with no args.
",94,data/crawl/tar/hunk_344.cpp,,,data/crawl/tar/old_hunk_344.cpp,data/crawl/tar/new_hunk_344.cpp,[4],[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=53f16a59713b32843f27332dbe807c06c7fc34bf,7 Jan 2000,"(extr_init): If we run out of memory, invoke apply_delayed_set_stat.
 (set_mode): Use Use error message functions to report errors consistently.
 (set_stat): Likewise. (repair_delayed_set_stat): Quote file names with colons
 if possible. (prepare_to_extract): Don't complain if we can't remove ""."".
 (extract_sparse_file): Use consistent message for unexpected EOF. Use error
 message functions to report errors consistently. (extract_archive): Use
 consistent message for unexpected EOF. Use error message functions to report
 errors consistently. Quote file names with colons if possible.
 (apply_delayed_set_stat): New function. (apply_nonancestor_delayed_set_stat):
 Renamed from apply_delayed_set_stat. Don't remove head if it doesn't apply.
 (fatal_exit): Invoke apply_delayed_set_stat with no args.
",94,data/crawl/tar/hunk_345.cpp,,,data/crawl/tar/old_hunk_345.cpp,data/crawl/tar/new_hunk_345.cpp,[2],[2]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=53f16a59713b32843f27332dbe807c06c7fc34bf,7 Jan 2000,"(extr_init): If we run out of memory, invoke apply_delayed_set_stat.
 (set_mode): Use Use error message functions to report errors consistently.
 (set_stat): Likewise. (repair_delayed_set_stat): Quote file names with colons
 if possible. (prepare_to_extract): Don't complain if we can't remove ""."".
 (extract_sparse_file): Use consistent message for unexpected EOF. Use error
 message functions to report errors consistently. (extract_archive): Use
 consistent message for unexpected EOF. Use error message functions to report
 errors consistently. Quote file names with colons if possible.
 (apply_delayed_set_stat): New function. (apply_nonancestor_delayed_set_stat):
 Renamed from apply_delayed_set_stat. Don't remove head if it doesn't apply.
 (fatal_exit): Invoke apply_delayed_set_stat with no args.
",94,data/crawl/tar/hunk_346.cpp,,,data/crawl/tar/old_hunk_346.cpp,data/crawl/tar/new_hunk_346.cpp,[4],[4]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=a78ab36e1e4d7dccedaf7d1fcbaca6bb6ec0eed6,13 Dec 1999,"(<quotearg.h>): New include. (append_file): Don't assume that gettext
 preserves errno. Quote arbitrary strings in diagnostics. Check for close
 error.
",24,data/crawl/tar/hunk_347.cpp,,,data/crawl/tar/old_hunk_347.cpp,data/crawl/tar/new_hunk_347.cpp,"[3, 8]",[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=df2ff9e4e495a32a962f6a1e61cca714503cbed3,13 Dec 1999,"(read_and, list_archive): Quote arbitrary strings in diagnostics.
 (from_header): Use locale_quoting_style to quote diagnostics. (print_header,
 print_for_mkdir): Quote with quotearg, not quote_copy_string.
",66,data/crawl/tar/hunk_348.cpp,,,data/crawl/tar/old_hunk_348.cpp,data/crawl/tar/new_hunk_348.cpp,[3],[4]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=df2ff9e4e495a32a962f6a1e61cca714503cbed3,13 Dec 1999,"(read_and, list_archive): Quote arbitrary strings in diagnostics.
 (from_header): Use locale_quoting_style to quote diagnostics. (print_header,
 print_for_mkdir): Quote with quotearg, not quote_copy_string.
",66,data/crawl/tar/hunk_349.cpp,,,data/crawl/tar/old_hunk_349.cpp,data/crawl/tar/new_hunk_349.cpp,[9],[9]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=f0429c4a22e5b19eefbdbc684e9e175a1cca9a3e,13 Dec 1999,"(<quotearg.h>): New include. (name_init, name_next, name_close,
 names_notfound, collect_and_sort_names): Don't assume that gettext preserves
 errno. Quote arbitrary strings in diagnostics. (excluded_name): Fix typo that
 caused empty patterns to be mishandled.
",20,data/crawl/tar/hunk_350.cpp,,,data/crawl/tar/old_hunk_350.cpp,data/crawl/tar/new_hunk_350.cpp,[4],[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=f0429c4a22e5b19eefbdbc684e9e175a1cca9a3e,13 Dec 1999,"(<quotearg.h>): New include. (name_init, name_next, name_close,
 names_notfound, collect_and_sort_names): Don't assume that gettext preserves
 errno. Quote arbitrary strings in diagnostics. (excluded_name): Fix typo that
 caused empty patterns to be mishandled.
",20,data/crawl/tar/hunk_351.cpp,,,data/crawl/tar/old_hunk_351.cpp,data/crawl/tar/new_hunk_351.cpp,[3],[3]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=f0429c4a22e5b19eefbdbc684e9e175a1cca9a3e,13 Dec 1999,"(<quotearg.h>): New include. (name_init, name_next, name_close,
 names_notfound, collect_and_sort_names): Don't assume that gettext preserves
 errno. Quote arbitrary strings in diagnostics. (excluded_name): Fix typo that
 caused empty patterns to be mishandled.
",20,data/crawl/tar/hunk_352.cpp,,,data/crawl/tar/old_hunk_352.cpp,data/crawl/tar/new_hunk_352.cpp,[3],[3]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=f0429c4a22e5b19eefbdbc684e9e175a1cca9a3e,13 Dec 1999,"(<quotearg.h>): New include. (name_init, name_next, name_close,
 names_notfound, collect_and_sort_names): Don't assume that gettext preserves
 errno. Quote arbitrary strings in diagnostics. (excluded_name): Fix typo that
 caused empty patterns to be mishandled.
",20,data/crawl/tar/hunk_353.cpp,,,data/crawl/tar/old_hunk_353.cpp,data/crawl/tar/new_hunk_353.cpp,[3],[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=6e9d1539b665c8f3c173b36702ca1650cac977ad,13 Dec 1999,"(<quotearg.h>): New include. (enum permstatus): New enum. (struct
 delayed_set_stat): file_name is now at end of buffer, to avoid two mallocs. 
 New members file_name_len, invert_permissions, permstatus. (extr_init):
 Remove hack that silently adjusted newdir_umask. (set_mode, set_stat): New
 args invert_permissions, permstatus, typeflag. Use these args to decide
 whether and how to set modes. (set_mode, set_stat, prepare_to_extract,
 extract_sparse_file, extract_archive): Don't assume that gettext preserves
 errno. (set_stat): Remove arg symlink_flag; subsumed by typeflag.
 (delay_set_stat, repair_delayed_set_stat): New functions. (make_directories):
 Avoid mkdir where last part of path is "".."". Create a struct delayed_set_stat
 for each directory made. (prepare_to_extract): Renamed from
 unlink_destination, and return 0 immediately if to_stdout_option; all callers
 changed. (maybe_recoverable): New parameter interdir_made. Add support for
 --overwrite. (extract_sparse_file, extract_archive): Quote arbitrary strings
 in diagnostics. (extract_archive): By default, warn about "".."" in member
 names, and skip them. Don't open files with O_NONBLOCK or O_APPEND. Open with
 O_TRUNC only if --overwrite; otherwise, use O_EXCL to avoid overwriting them.
  Pass only rwxrwxrwx permissions to `open' and `mkdir', minus the current
 umask.  Keep track of intermediate directories made, to avoid looping when
 making x/../x when x doesn't exist; the earlier code solved this in a
 different way that didn't fit well into the new scheme.  Don't extract
 permissions onto existing directories unless --overwrite is given.  Do not
 add -wx------ permissions to new directories permanently; just do it
 temporarily. Remove no-longer-needed hack with MSDOS and directory time
 stamps. (apply_delayed_set_stat): New argument specifies which directories to
 fix statuses of.  Do not wait until the end of extraction to fix statuses;
 instead, fix a directory's status once we exit that directory. This requires
 less memory and does the right thing in some cases where the old method
 didn't. (fatal_exit): New function.
",600,data/crawl/tar/hunk_354.cpp,,,data/crawl/tar/old_hunk_354.cpp,data/crawl/tar/new_hunk_354.cpp,[32],[54]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=6e9d1539b665c8f3c173b36702ca1650cac977ad,13 Dec 1999,"(<quotearg.h>): New include. (enum permstatus): New enum. (struct
 delayed_set_stat): file_name is now at end of buffer, to avoid two mallocs. 
 New members file_name_len, invert_permissions, permstatus. (extr_init):
 Remove hack that silently adjusted newdir_umask. (set_mode, set_stat): New
 args invert_permissions, permstatus, typeflag. Use these args to decide
 whether and how to set modes. (set_mode, set_stat, prepare_to_extract,
 extract_sparse_file, extract_archive): Don't assume that gettext preserves
 errno. (set_stat): Remove arg symlink_flag; subsumed by typeflag.
 (delay_set_stat, repair_delayed_set_stat): New functions. (make_directories):
 Avoid mkdir where last part of path is "".."". Create a struct delayed_set_stat
 for each directory made. (prepare_to_extract): Renamed from
 unlink_destination, and return 0 immediately if to_stdout_option; all callers
 changed. (maybe_recoverable): New parameter interdir_made. Add support for
 --overwrite. (extract_sparse_file, extract_archive): Quote arbitrary strings
 in diagnostics. (extract_archive): By default, warn about "".."" in member
 names, and skip them. Don't open files with O_NONBLOCK or O_APPEND. Open with
 O_TRUNC only if --overwrite; otherwise, use O_EXCL to avoid overwriting them.
  Pass only rwxrwxrwx permissions to `open' and `mkdir', minus the current
 umask.  Keep track of intermediate directories made, to avoid looping when
 making x/../x when x doesn't exist; the earlier code solved this in a
 different way that didn't fit well into the new scheme.  Don't extract
 permissions onto existing directories unless --overwrite is given.  Do not
 add -wx------ permissions to new directories permanently; just do it
 temporarily. Remove no-longer-needed hack with MSDOS and directory time
 stamps. (apply_delayed_set_stat): New argument specifies which directories to
 fix statuses of.  Do not wait until the end of extraction to fix statuses;
 instead, fix a directory's status once we exit that directory. This requires
 less memory and does the right thing in some cases where the old method
 didn't. (fatal_exit): New function.
",600,data/crawl/tar/hunk_355.cpp,,,data/crawl/tar/old_hunk_355.cpp,data/crawl/tar/new_hunk_355.cpp,"[3, 30, 39]","[5, 32, 44, 110]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=6e9d1539b665c8f3c173b36702ca1650cac977ad,13 Dec 1999,"(<quotearg.h>): New include. (enum permstatus): New enum. (struct
 delayed_set_stat): file_name is now at end of buffer, to avoid two mallocs. 
 New members file_name_len, invert_permissions, permstatus. (extr_init):
 Remove hack that silently adjusted newdir_umask. (set_mode, set_stat): New
 args invert_permissions, permstatus, typeflag. Use these args to decide
 whether and how to set modes. (set_mode, set_stat, prepare_to_extract,
 extract_sparse_file, extract_archive): Don't assume that gettext preserves
 errno. (set_stat): Remove arg symlink_flag; subsumed by typeflag.
 (delay_set_stat, repair_delayed_set_stat): New functions. (make_directories):
 Avoid mkdir where last part of path is "".."". Create a struct delayed_set_stat
 for each directory made. (prepare_to_extract): Renamed from
 unlink_destination, and return 0 immediately if to_stdout_option; all callers
 changed. (maybe_recoverable): New parameter interdir_made. Add support for
 --overwrite. (extract_sparse_file, extract_archive): Quote arbitrary strings
 in diagnostics. (extract_archive): By default, warn about "".."" in member
 names, and skip them. Don't open files with O_NONBLOCK or O_APPEND. Open with
 O_TRUNC only if --overwrite; otherwise, use O_EXCL to avoid overwriting them.
  Pass only rwxrwxrwx permissions to `open' and `mkdir', minus the current
 umask.  Keep track of intermediate directories made, to avoid looping when
 making x/../x when x doesn't exist; the earlier code solved this in a
 different way that didn't fit well into the new scheme.  Don't extract
 permissions onto existing directories unless --overwrite is given.  Do not
 add -wx------ permissions to new directories permanently; just do it
 temporarily. Remove no-longer-needed hack with MSDOS and directory time
 stamps. (apply_delayed_set_stat): New argument specifies which directories to
 fix statuses of.  Do not wait until the end of extraction to fix statuses;
 instead, fix a directory's status once we exit that directory. This requires
 less memory and does the right thing in some cases where the old method
 didn't. (fatal_exit): New function.
",600,data/crawl/tar/hunk_356.cpp,,,data/crawl/tar/old_hunk_356.cpp,data/crawl/tar/new_hunk_356.cpp,[15],[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=6e9d1539b665c8f3c173b36702ca1650cac977ad,13 Dec 1999,"(<quotearg.h>): New include. (enum permstatus): New enum. (struct
 delayed_set_stat): file_name is now at end of buffer, to avoid two mallocs. 
 New members file_name_len, invert_permissions, permstatus. (extr_init):
 Remove hack that silently adjusted newdir_umask. (set_mode, set_stat): New
 args invert_permissions, permstatus, typeflag. Use these args to decide
 whether and how to set modes. (set_mode, set_stat, prepare_to_extract,
 extract_sparse_file, extract_archive): Don't assume that gettext preserves
 errno. (set_stat): Remove arg symlink_flag; subsumed by typeflag.
 (delay_set_stat, repair_delayed_set_stat): New functions. (make_directories):
 Avoid mkdir where last part of path is "".."". Create a struct delayed_set_stat
 for each directory made. (prepare_to_extract): Renamed from
 unlink_destination, and return 0 immediately if to_stdout_option; all callers
 changed. (maybe_recoverable): New parameter interdir_made. Add support for
 --overwrite. (extract_sparse_file, extract_archive): Quote arbitrary strings
 in diagnostics. (extract_archive): By default, warn about "".."" in member
 names, and skip them. Don't open files with O_NONBLOCK or O_APPEND. Open with
 O_TRUNC only if --overwrite; otherwise, use O_EXCL to avoid overwriting them.
  Pass only rwxrwxrwx permissions to `open' and `mkdir', minus the current
 umask.  Keep track of intermediate directories made, to avoid looping when
 making x/../x when x doesn't exist; the earlier code solved this in a
 different way that didn't fit well into the new scheme.  Don't extract
 permissions onto existing directories unless --overwrite is given.  Do not
 add -wx------ permissions to new directories permanently; just do it
 temporarily. Remove no-longer-needed hack with MSDOS and directory time
 stamps. (apply_delayed_set_stat): New argument specifies which directories to
 fix statuses of.  Do not wait until the end of extraction to fix statuses;
 instead, fix a directory's status once we exit that directory. This requires
 less memory and does the right thing in some cases where the old method
 didn't. (fatal_exit): New function.
",600,data/crawl/tar/hunk_357.cpp,,,data/crawl/tar/old_hunk_357.cpp,data/crawl/tar/new_hunk_357.cpp,[3],[4]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=6e9d1539b665c8f3c173b36702ca1650cac977ad,13 Dec 1999,"(<quotearg.h>): New include. (enum permstatus): New enum. (struct
 delayed_set_stat): file_name is now at end of buffer, to avoid two mallocs. 
 New members file_name_len, invert_permissions, permstatus. (extr_init):
 Remove hack that silently adjusted newdir_umask. (set_mode, set_stat): New
 args invert_permissions, permstatus, typeflag. Use these args to decide
 whether and how to set modes. (set_mode, set_stat, prepare_to_extract,
 extract_sparse_file, extract_archive): Don't assume that gettext preserves
 errno. (set_stat): Remove arg symlink_flag; subsumed by typeflag.
 (delay_set_stat, repair_delayed_set_stat): New functions. (make_directories):
 Avoid mkdir where last part of path is "".."". Create a struct delayed_set_stat
 for each directory made. (prepare_to_extract): Renamed from
 unlink_destination, and return 0 immediately if to_stdout_option; all callers
 changed. (maybe_recoverable): New parameter interdir_made. Add support for
 --overwrite. (extract_sparse_file, extract_archive): Quote arbitrary strings
 in diagnostics. (extract_archive): By default, warn about "".."" in member
 names, and skip them. Don't open files with O_NONBLOCK or O_APPEND. Open with
 O_TRUNC only if --overwrite; otherwise, use O_EXCL to avoid overwriting them.
  Pass only rwxrwxrwx permissions to `open' and `mkdir', minus the current
 umask.  Keep track of intermediate directories made, to avoid looping when
 making x/../x when x doesn't exist; the earlier code solved this in a
 different way that didn't fit well into the new scheme.  Don't extract
 permissions onto existing directories unless --overwrite is given.  Do not
 add -wx------ permissions to new directories permanently; just do it
 temporarily. Remove no-longer-needed hack with MSDOS and directory time
 stamps. (apply_delayed_set_stat): New argument specifies which directories to
 fix statuses of.  Do not wait until the end of extraction to fix statuses;
 instead, fix a directory's status once we exit that directory. This requires
 less memory and does the right thing in some cases where the old method
 didn't. (fatal_exit): New function.
",600,data/crawl/tar/hunk_358.cpp,,,data/crawl/tar/old_hunk_358.cpp,data/crawl/tar/new_hunk_358.cpp,[3],[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=6e9d1539b665c8f3c173b36702ca1650cac977ad,13 Dec 1999,"(<quotearg.h>): New include. (enum permstatus): New enum. (struct
 delayed_set_stat): file_name is now at end of buffer, to avoid two mallocs. 
 New members file_name_len, invert_permissions, permstatus. (extr_init):
 Remove hack that silently adjusted newdir_umask. (set_mode, set_stat): New
 args invert_permissions, permstatus, typeflag. Use these args to decide
 whether and how to set modes. (set_mode, set_stat, prepare_to_extract,
 extract_sparse_file, extract_archive): Don't assume that gettext preserves
 errno. (set_stat): Remove arg symlink_flag; subsumed by typeflag.
 (delay_set_stat, repair_delayed_set_stat): New functions. (make_directories):
 Avoid mkdir where last part of path is "".."". Create a struct delayed_set_stat
 for each directory made. (prepare_to_extract): Renamed from
 unlink_destination, and return 0 immediately if to_stdout_option; all callers
 changed. (maybe_recoverable): New parameter interdir_made. Add support for
 --overwrite. (extract_sparse_file, extract_archive): Quote arbitrary strings
 in diagnostics. (extract_archive): By default, warn about "".."" in member
 names, and skip them. Don't open files with O_NONBLOCK or O_APPEND. Open with
 O_TRUNC only if --overwrite; otherwise, use O_EXCL to avoid overwriting them.
  Pass only rwxrwxrwx permissions to `open' and `mkdir', minus the current
 umask.  Keep track of intermediate directories made, to avoid looping when
 making x/../x when x doesn't exist; the earlier code solved this in a
 different way that didn't fit well into the new scheme.  Don't extract
 permissions onto existing directories unless --overwrite is given.  Do not
 add -wx------ permissions to new directories permanently; just do it
 temporarily. Remove no-longer-needed hack with MSDOS and directory time
 stamps. (apply_delayed_set_stat): New argument specifies which directories to
 fix statuses of.  Do not wait until the end of extraction to fix statuses;
 instead, fix a directory's status once we exit that directory. This requires
 less memory and does the right thing in some cases where the old method
 didn't. (fatal_exit): New function.
",600,data/crawl/tar/hunk_359.cpp,,,data/crawl/tar/old_hunk_359.cpp,data/crawl/tar/new_hunk_359.cpp,"[3, 8]",[8]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=6e9d1539b665c8f3c173b36702ca1650cac977ad,13 Dec 1999,"(<quotearg.h>): New include. (enum permstatus): New enum. (struct
 delayed_set_stat): file_name is now at end of buffer, to avoid two mallocs. 
 New members file_name_len, invert_permissions, permstatus. (extr_init):
 Remove hack that silently adjusted newdir_umask. (set_mode, set_stat): New
 args invert_permissions, permstatus, typeflag. Use these args to decide
 whether and how to set modes. (set_mode, set_stat, prepare_to_extract,
 extract_sparse_file, extract_archive): Don't assume that gettext preserves
 errno. (set_stat): Remove arg symlink_flag; subsumed by typeflag.
 (delay_set_stat, repair_delayed_set_stat): New functions. (make_directories):
 Avoid mkdir where last part of path is "".."". Create a struct delayed_set_stat
 for each directory made. (prepare_to_extract): Renamed from
 unlink_destination, and return 0 immediately if to_stdout_option; all callers
 changed. (maybe_recoverable): New parameter interdir_made. Add support for
 --overwrite. (extract_sparse_file, extract_archive): Quote arbitrary strings
 in diagnostics. (extract_archive): By default, warn about "".."" in member
 names, and skip them. Don't open files with O_NONBLOCK or O_APPEND. Open with
 O_TRUNC only if --overwrite; otherwise, use O_EXCL to avoid overwriting them.
  Pass only rwxrwxrwx permissions to `open' and `mkdir', minus the current
 umask.  Keep track of intermediate directories made, to avoid looping when
 making x/../x when x doesn't exist; the earlier code solved this in a
 different way that didn't fit well into the new scheme.  Don't extract
 permissions onto existing directories unless --overwrite is given.  Do not
 add -wx------ permissions to new directories permanently; just do it
 temporarily. Remove no-longer-needed hack with MSDOS and directory time
 stamps. (apply_delayed_set_stat): New argument specifies which directories to
 fix statuses of.  Do not wait until the end of extraction to fix statuses;
 instead, fix a directory's status once we exit that directory. This requires
 less memory and does the right thing in some cases where the old method
 didn't. (fatal_exit): New function.
",600,data/crawl/tar/hunk_360.cpp,,,data/crawl/tar/old_hunk_360.cpp,data/crawl/tar/new_hunk_360.cpp,[],[19]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=6e9d1539b665c8f3c173b36702ca1650cac977ad,13 Dec 1999,"(<quotearg.h>): New include. (enum permstatus): New enum. (struct
 delayed_set_stat): file_name is now at end of buffer, to avoid two mallocs. 
 New members file_name_len, invert_permissions, permstatus. (extr_init):
 Remove hack that silently adjusted newdir_umask. (set_mode, set_stat): New
 args invert_permissions, permstatus, typeflag. Use these args to decide
 whether and how to set modes. (set_mode, set_stat, prepare_to_extract,
 extract_sparse_file, extract_archive): Don't assume that gettext preserves
 errno. (set_stat): Remove arg symlink_flag; subsumed by typeflag.
 (delay_set_stat, repair_delayed_set_stat): New functions. (make_directories):
 Avoid mkdir where last part of path is "".."". Create a struct delayed_set_stat
 for each directory made. (prepare_to_extract): Renamed from
 unlink_destination, and return 0 immediately if to_stdout_option; all callers
 changed. (maybe_recoverable): New parameter interdir_made. Add support for
 --overwrite. (extract_sparse_file, extract_archive): Quote arbitrary strings
 in diagnostics. (extract_archive): By default, warn about "".."" in member
 names, and skip them. Don't open files with O_NONBLOCK or O_APPEND. Open with
 O_TRUNC only if --overwrite; otherwise, use O_EXCL to avoid overwriting them.
  Pass only rwxrwxrwx permissions to `open' and `mkdir', minus the current
 umask.  Keep track of intermediate directories made, to avoid looping when
 making x/../x when x doesn't exist; the earlier code solved this in a
 different way that didn't fit well into the new scheme.  Don't extract
 permissions onto existing directories unless --overwrite is given.  Do not
 add -wx------ permissions to new directories permanently; just do it
 temporarily. Remove no-longer-needed hack with MSDOS and directory time
 stamps. (apply_delayed_set_stat): New argument specifies which directories to
 fix statuses of.  Do not wait until the end of extraction to fix statuses;
 instead, fix a directory's status once we exit that directory. This requires
 less memory and does the right thing in some cases where the old method
 didn't. (fatal_exit): New function.
",600,data/crawl/tar/hunk_361.cpp,,,data/crawl/tar/old_hunk_361.cpp,data/crawl/tar/new_hunk_361.cpp,[3],[4]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=6e9d1539b665c8f3c173b36702ca1650cac977ad,13 Dec 1999,"(<quotearg.h>): New include. (enum permstatus): New enum. (struct
 delayed_set_stat): file_name is now at end of buffer, to avoid two mallocs. 
 New members file_name_len, invert_permissions, permstatus. (extr_init):
 Remove hack that silently adjusted newdir_umask. (set_mode, set_stat): New
 args invert_permissions, permstatus, typeflag. Use these args to decide
 whether and how to set modes. (set_mode, set_stat, prepare_to_extract,
 extract_sparse_file, extract_archive): Don't assume that gettext preserves
 errno. (set_stat): Remove arg symlink_flag; subsumed by typeflag.
 (delay_set_stat, repair_delayed_set_stat): New functions. (make_directories):
 Avoid mkdir where last part of path is "".."". Create a struct delayed_set_stat
 for each directory made. (prepare_to_extract): Renamed from
 unlink_destination, and return 0 immediately if to_stdout_option; all callers
 changed. (maybe_recoverable): New parameter interdir_made. Add support for
 --overwrite. (extract_sparse_file, extract_archive): Quote arbitrary strings
 in diagnostics. (extract_archive): By default, warn about "".."" in member
 names, and skip them. Don't open files with O_NONBLOCK or O_APPEND. Open with
 O_TRUNC only if --overwrite; otherwise, use O_EXCL to avoid overwriting them.
  Pass only rwxrwxrwx permissions to `open' and `mkdir', minus the current
 umask.  Keep track of intermediate directories made, to avoid looping when
 making x/../x when x doesn't exist; the earlier code solved this in a
 different way that didn't fit well into the new scheme.  Don't extract
 permissions onto existing directories unless --overwrite is given.  Do not
 add -wx------ permissions to new directories permanently; just do it
 temporarily. Remove no-longer-needed hack with MSDOS and directory time
 stamps. (apply_delayed_set_stat): New argument specifies which directories to
 fix statuses of.  Do not wait until the end of extraction to fix statuses;
 instead, fix a directory's status once we exit that directory. This requires
 less memory and does the right thing in some cases where the old method
 didn't. (fatal_exit): New function.
",600,data/crawl/tar/hunk_362.cpp,,,data/crawl/tar/old_hunk_362.cpp,data/crawl/tar/new_hunk_362.cpp,[12],[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=6e9d1539b665c8f3c173b36702ca1650cac977ad,13 Dec 1999,"(<quotearg.h>): New include. (enum permstatus): New enum. (struct
 delayed_set_stat): file_name is now at end of buffer, to avoid two mallocs. 
 New members file_name_len, invert_permissions, permstatus. (extr_init):
 Remove hack that silently adjusted newdir_umask. (set_mode, set_stat): New
 args invert_permissions, permstatus, typeflag. Use these args to decide
 whether and how to set modes. (set_mode, set_stat, prepare_to_extract,
 extract_sparse_file, extract_archive): Don't assume that gettext preserves
 errno. (set_stat): Remove arg symlink_flag; subsumed by typeflag.
 (delay_set_stat, repair_delayed_set_stat): New functions. (make_directories):
 Avoid mkdir where last part of path is "".."". Create a struct delayed_set_stat
 for each directory made. (prepare_to_extract): Renamed from
 unlink_destination, and return 0 immediately if to_stdout_option; all callers
 changed. (maybe_recoverable): New parameter interdir_made. Add support for
 --overwrite. (extract_sparse_file, extract_archive): Quote arbitrary strings
 in diagnostics. (extract_archive): By default, warn about "".."" in member
 names, and skip them. Don't open files with O_NONBLOCK or O_APPEND. Open with
 O_TRUNC only if --overwrite; otherwise, use O_EXCL to avoid overwriting them.
  Pass only rwxrwxrwx permissions to `open' and `mkdir', minus the current
 umask.  Keep track of intermediate directories made, to avoid looping when
 making x/../x when x doesn't exist; the earlier code solved this in a
 different way that didn't fit well into the new scheme.  Don't extract
 permissions onto existing directories unless --overwrite is given.  Do not
 add -wx------ permissions to new directories permanently; just do it
 temporarily. Remove no-longer-needed hack with MSDOS and directory time
 stamps. (apply_delayed_set_stat): New argument specifies which directories to
 fix statuses of.  Do not wait until the end of extraction to fix statuses;
 instead, fix a directory's status once we exit that directory. This requires
 less memory and does the right thing in some cases where the old method
 didn't. (fatal_exit): New function.
",600,data/crawl/tar/hunk_363.cpp,,,data/crawl/tar/old_hunk_363.cpp,data/crawl/tar/new_hunk_363.cpp,"[3, 6]",[5]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=6e9d1539b665c8f3c173b36702ca1650cac977ad,13 Dec 1999,"(<quotearg.h>): New include. (enum permstatus): New enum. (struct
 delayed_set_stat): file_name is now at end of buffer, to avoid two mallocs. 
 New members file_name_len, invert_permissions, permstatus. (extr_init):
 Remove hack that silently adjusted newdir_umask. (set_mode, set_stat): New
 args invert_permissions, permstatus, typeflag. Use these args to decide
 whether and how to set modes. (set_mode, set_stat, prepare_to_extract,
 extract_sparse_file, extract_archive): Don't assume that gettext preserves
 errno. (set_stat): Remove arg symlink_flag; subsumed by typeflag.
 (delay_set_stat, repair_delayed_set_stat): New functions. (make_directories):
 Avoid mkdir where last part of path is "".."". Create a struct delayed_set_stat
 for each directory made. (prepare_to_extract): Renamed from
 unlink_destination, and return 0 immediately if to_stdout_option; all callers
 changed. (maybe_recoverable): New parameter interdir_made. Add support for
 --overwrite. (extract_sparse_file, extract_archive): Quote arbitrary strings
 in diagnostics. (extract_archive): By default, warn about "".."" in member
 names, and skip them. Don't open files with O_NONBLOCK or O_APPEND. Open with
 O_TRUNC only if --overwrite; otherwise, use O_EXCL to avoid overwriting them.
  Pass only rwxrwxrwx permissions to `open' and `mkdir', minus the current
 umask.  Keep track of intermediate directories made, to avoid looping when
 making x/../x when x doesn't exist; the earlier code solved this in a
 different way that didn't fit well into the new scheme.  Don't extract
 permissions onto existing directories unless --overwrite is given.  Do not
 add -wx------ permissions to new directories permanently; just do it
 temporarily. Remove no-longer-needed hack with MSDOS and directory time
 stamps. (apply_delayed_set_stat): New argument specifies which directories to
 fix statuses of.  Do not wait until the end of extraction to fix statuses;
 instead, fix a directory's status once we exit that directory. This requires
 less memory and does the right thing in some cases where the old method
 didn't. (fatal_exit): New function.
",600,data/crawl/tar/hunk_364.cpp,,,data/crawl/tar/old_hunk_364.cpp,data/crawl/tar/new_hunk_364.cpp,[3],[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=6e9d1539b665c8f3c173b36702ca1650cac977ad,13 Dec 1999,"(<quotearg.h>): New include. (enum permstatus): New enum. (struct
 delayed_set_stat): file_name is now at end of buffer, to avoid two mallocs. 
 New members file_name_len, invert_permissions, permstatus. (extr_init):
 Remove hack that silently adjusted newdir_umask. (set_mode, set_stat): New
 args invert_permissions, permstatus, typeflag. Use these args to decide
 whether and how to set modes. (set_mode, set_stat, prepare_to_extract,
 extract_sparse_file, extract_archive): Don't assume that gettext preserves
 errno. (set_stat): Remove arg symlink_flag; subsumed by typeflag.
 (delay_set_stat, repair_delayed_set_stat): New functions. (make_directories):
 Avoid mkdir where last part of path is "".."". Create a struct delayed_set_stat
 for each directory made. (prepare_to_extract): Renamed from
 unlink_destination, and return 0 immediately if to_stdout_option; all callers
 changed. (maybe_recoverable): New parameter interdir_made. Add support for
 --overwrite. (extract_sparse_file, extract_archive): Quote arbitrary strings
 in diagnostics. (extract_archive): By default, warn about "".."" in member
 names, and skip them. Don't open files with O_NONBLOCK or O_APPEND. Open with
 O_TRUNC only if --overwrite; otherwise, use O_EXCL to avoid overwriting them.
  Pass only rwxrwxrwx permissions to `open' and `mkdir', minus the current
 umask.  Keep track of intermediate directories made, to avoid looping when
 making x/../x when x doesn't exist; the earlier code solved this in a
 different way that didn't fit well into the new scheme.  Don't extract
 permissions onto existing directories unless --overwrite is given.  Do not
 add -wx------ permissions to new directories permanently; just do it
 temporarily. Remove no-longer-needed hack with MSDOS and directory time
 stamps. (apply_delayed_set_stat): New argument specifies which directories to
 fix statuses of.  Do not wait until the end of extraction to fix statuses;
 instead, fix a directory's status once we exit that directory. This requires
 less memory and does the right thing in some cases where the old method
 didn't. (fatal_exit): New function.
",600,data/crawl/tar/hunk_365.cpp,,,data/crawl/tar/old_hunk_365.cpp,data/crawl/tar/new_hunk_365.cpp,[7],[9]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=6e9d1539b665c8f3c173b36702ca1650cac977ad,13 Dec 1999,"(<quotearg.h>): New include. (enum permstatus): New enum. (struct
 delayed_set_stat): file_name is now at end of buffer, to avoid two mallocs. 
 New members file_name_len, invert_permissions, permstatus. (extr_init):
 Remove hack that silently adjusted newdir_umask. (set_mode, set_stat): New
 args invert_permissions, permstatus, typeflag. Use these args to decide
 whether and how to set modes. (set_mode, set_stat, prepare_to_extract,
 extract_sparse_file, extract_archive): Don't assume that gettext preserves
 errno. (set_stat): Remove arg symlink_flag; subsumed by typeflag.
 (delay_set_stat, repair_delayed_set_stat): New functions. (make_directories):
 Avoid mkdir where last part of path is "".."". Create a struct delayed_set_stat
 for each directory made. (prepare_to_extract): Renamed from
 unlink_destination, and return 0 immediately if to_stdout_option; all callers
 changed. (maybe_recoverable): New parameter interdir_made. Add support for
 --overwrite. (extract_sparse_file, extract_archive): Quote arbitrary strings
 in diagnostics. (extract_archive): By default, warn about "".."" in member
 names, and skip them. Don't open files with O_NONBLOCK or O_APPEND. Open with
 O_TRUNC only if --overwrite; otherwise, use O_EXCL to avoid overwriting them.
  Pass only rwxrwxrwx permissions to `open' and `mkdir', minus the current
 umask.  Keep track of intermediate directories made, to avoid looping when
 making x/../x when x doesn't exist; the earlier code solved this in a
 different way that didn't fit well into the new scheme.  Don't extract
 permissions onto existing directories unless --overwrite is given.  Do not
 add -wx------ permissions to new directories permanently; just do it
 temporarily. Remove no-longer-needed hack with MSDOS and directory time
 stamps. (apply_delayed_set_stat): New argument specifies which directories to
 fix statuses of.  Do not wait until the end of extraction to fix statuses;
 instead, fix a directory's status once we exit that directory. This requires
 less memory and does the right thing in some cases where the old method
 didn't. (fatal_exit): New function.
",600,data/crawl/tar/hunk_366.cpp,,,data/crawl/tar/old_hunk_366.cpp,data/crawl/tar/new_hunk_366.cpp,[14],[15]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=6e9d1539b665c8f3c173b36702ca1650cac977ad,13 Dec 1999,"(<quotearg.h>): New include. (enum permstatus): New enum. (struct
 delayed_set_stat): file_name is now at end of buffer, to avoid two mallocs. 
 New members file_name_len, invert_permissions, permstatus. (extr_init):
 Remove hack that silently adjusted newdir_umask. (set_mode, set_stat): New
 args invert_permissions, permstatus, typeflag. Use these args to decide
 whether and how to set modes. (set_mode, set_stat, prepare_to_extract,
 extract_sparse_file, extract_archive): Don't assume that gettext preserves
 errno. (set_stat): Remove arg symlink_flag; subsumed by typeflag.
 (delay_set_stat, repair_delayed_set_stat): New functions. (make_directories):
 Avoid mkdir where last part of path is "".."". Create a struct delayed_set_stat
 for each directory made. (prepare_to_extract): Renamed from
 unlink_destination, and return 0 immediately if to_stdout_option; all callers
 changed. (maybe_recoverable): New parameter interdir_made. Add support for
 --overwrite. (extract_sparse_file, extract_archive): Quote arbitrary strings
 in diagnostics. (extract_archive): By default, warn about "".."" in member
 names, and skip them. Don't open files with O_NONBLOCK or O_APPEND. Open with
 O_TRUNC only if --overwrite; otherwise, use O_EXCL to avoid overwriting them.
  Pass only rwxrwxrwx permissions to `open' and `mkdir', minus the current
 umask.  Keep track of intermediate directories made, to avoid looping when
 making x/../x when x doesn't exist; the earlier code solved this in a
 different way that didn't fit well into the new scheme.  Don't extract
 permissions onto existing directories unless --overwrite is given.  Do not
 add -wx------ permissions to new directories permanently; just do it
 temporarily. Remove no-longer-needed hack with MSDOS and directory time
 stamps. (apply_delayed_set_stat): New argument specifies which directories to
 fix statuses of.  Do not wait until the end of extraction to fix statuses;
 instead, fix a directory's status once we exit that directory. This requires
 less memory and does the right thing in some cases where the old method
 didn't. (fatal_exit): New function.
",600,data/crawl/tar/hunk_367.cpp,,,data/crawl/tar/old_hunk_367.cpp,data/crawl/tar/new_hunk_367.cpp,"[16, 42]",[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=6e9d1539b665c8f3c173b36702ca1650cac977ad,13 Dec 1999,"(<quotearg.h>): New include. (enum permstatus): New enum. (struct
 delayed_set_stat): file_name is now at end of buffer, to avoid two mallocs. 
 New members file_name_len, invert_permissions, permstatus. (extr_init):
 Remove hack that silently adjusted newdir_umask. (set_mode, set_stat): New
 args invert_permissions, permstatus, typeflag. Use these args to decide
 whether and how to set modes. (set_mode, set_stat, prepare_to_extract,
 extract_sparse_file, extract_archive): Don't assume that gettext preserves
 errno. (set_stat): Remove arg symlink_flag; subsumed by typeflag.
 (delay_set_stat, repair_delayed_set_stat): New functions. (make_directories):
 Avoid mkdir where last part of path is "".."". Create a struct delayed_set_stat
 for each directory made. (prepare_to_extract): Renamed from
 unlink_destination, and return 0 immediately if to_stdout_option; all callers
 changed. (maybe_recoverable): New parameter interdir_made. Add support for
 --overwrite. (extract_sparse_file, extract_archive): Quote arbitrary strings
 in diagnostics. (extract_archive): By default, warn about "".."" in member
 names, and skip them. Don't open files with O_NONBLOCK or O_APPEND. Open with
 O_TRUNC only if --overwrite; otherwise, use O_EXCL to avoid overwriting them.
  Pass only rwxrwxrwx permissions to `open' and `mkdir', minus the current
 umask.  Keep track of intermediate directories made, to avoid looping when
 making x/../x when x doesn't exist; the earlier code solved this in a
 different way that didn't fit well into the new scheme.  Don't extract
 permissions onto existing directories unless --overwrite is given.  Do not
 add -wx------ permissions to new directories permanently; just do it
 temporarily. Remove no-longer-needed hack with MSDOS and directory time
 stamps. (apply_delayed_set_stat): New argument specifies which directories to
 fix statuses of.  Do not wait until the end of extraction to fix statuses;
 instead, fix a directory's status once we exit that directory. This requires
 less memory and does the right thing in some cases where the old method
 didn't. (fatal_exit): New function.
",600,data/crawl/tar/hunk_368.cpp,,,data/crawl/tar/old_hunk_368.cpp,data/crawl/tar/new_hunk_368.cpp,[54],[33]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=6e9d1539b665c8f3c173b36702ca1650cac977ad,13 Dec 1999,"(<quotearg.h>): New include. (enum permstatus): New enum. (struct
 delayed_set_stat): file_name is now at end of buffer, to avoid two mallocs. 
 New members file_name_len, invert_permissions, permstatus. (extr_init):
 Remove hack that silently adjusted newdir_umask. (set_mode, set_stat): New
 args invert_permissions, permstatus, typeflag. Use these args to decide
 whether and how to set modes. (set_mode, set_stat, prepare_to_extract,
 extract_sparse_file, extract_archive): Don't assume that gettext preserves
 errno. (set_stat): Remove arg symlink_flag; subsumed by typeflag.
 (delay_set_stat, repair_delayed_set_stat): New functions. (make_directories):
 Avoid mkdir where last part of path is "".."". Create a struct delayed_set_stat
 for each directory made. (prepare_to_extract): Renamed from
 unlink_destination, and return 0 immediately if to_stdout_option; all callers
 changed. (maybe_recoverable): New parameter interdir_made. Add support for
 --overwrite. (extract_sparse_file, extract_archive): Quote arbitrary strings
 in diagnostics. (extract_archive): By default, warn about "".."" in member
 names, and skip them. Don't open files with O_NONBLOCK or O_APPEND. Open with
 O_TRUNC only if --overwrite; otherwise, use O_EXCL to avoid overwriting them.
  Pass only rwxrwxrwx permissions to `open' and `mkdir', minus the current
 umask.  Keep track of intermediate directories made, to avoid looping when
 making x/../x when x doesn't exist; the earlier code solved this in a
 different way that didn't fit well into the new scheme.  Don't extract
 permissions onto existing directories unless --overwrite is given.  Do not
 add -wx------ permissions to new directories permanently; just do it
 temporarily. Remove no-longer-needed hack with MSDOS and directory time
 stamps. (apply_delayed_set_stat): New argument specifies which directories to
 fix statuses of.  Do not wait until the end of extraction to fix statuses;
 instead, fix a directory's status once we exit that directory. This requires
 less memory and does the right thing in some cases where the old method
 didn't. (fatal_exit): New function.
",600,data/crawl/tar/hunk_369.cpp,,,data/crawl/tar/old_hunk_369.cpp,data/crawl/tar/new_hunk_369.cpp,[2],[2]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=6e9d1539b665c8f3c173b36702ca1650cac977ad,13 Dec 1999,"(<quotearg.h>): New include. (enum permstatus): New enum. (struct
 delayed_set_stat): file_name is now at end of buffer, to avoid two mallocs. 
 New members file_name_len, invert_permissions, permstatus. (extr_init):
 Remove hack that silently adjusted newdir_umask. (set_mode, set_stat): New
 args invert_permissions, permstatus, typeflag. Use these args to decide
 whether and how to set modes. (set_mode, set_stat, prepare_to_extract,
 extract_sparse_file, extract_archive): Don't assume that gettext preserves
 errno. (set_stat): Remove arg symlink_flag; subsumed by typeflag.
 (delay_set_stat, repair_delayed_set_stat): New functions. (make_directories):
 Avoid mkdir where last part of path is "".."". Create a struct delayed_set_stat
 for each directory made. (prepare_to_extract): Renamed from
 unlink_destination, and return 0 immediately if to_stdout_option; all callers
 changed. (maybe_recoverable): New parameter interdir_made. Add support for
 --overwrite. (extract_sparse_file, extract_archive): Quote arbitrary strings
 in diagnostics. (extract_archive): By default, warn about "".."" in member
 names, and skip them. Don't open files with O_NONBLOCK or O_APPEND. Open with
 O_TRUNC only if --overwrite; otherwise, use O_EXCL to avoid overwriting them.
  Pass only rwxrwxrwx permissions to `open' and `mkdir', minus the current
 umask.  Keep track of intermediate directories made, to avoid looping when
 making x/../x when x doesn't exist; the earlier code solved this in a
 different way that didn't fit well into the new scheme.  Don't extract
 permissions onto existing directories unless --overwrite is given.  Do not
 add -wx------ permissions to new directories permanently; just do it
 temporarily. Remove no-longer-needed hack with MSDOS and directory time
 stamps. (apply_delayed_set_stat): New argument specifies which directories to
 fix statuses of.  Do not wait until the end of extraction to fix statuses;
 instead, fix a directory's status once we exit that directory. This requires
 less memory and does the right thing in some cases where the old method
 didn't. (fatal_exit): New function.
",600,data/crawl/tar/hunk_370.cpp,,,data/crawl/tar/old_hunk_370.cpp,data/crawl/tar/new_hunk_370.cpp,[],[34]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=ed7e2ec8a334cc534db981fe2fd0e02b3d39bf62,13 Dec 1999,"(<quotearg.h>): New include. (start_header): Use `member names' to
 refer to archive member names, not `archive names'.  Warn about `..' in
 member names. (finish_sparse_file, dump_file): Quote arbitrary strings in
 diagnostics. (finish_sparse_file, dump_file): Don't assume that gettext
 preserves errno. (dump_file): Don't use `access' to determine whether a
 directory is readable; this isn't reliable if tar is setuid.  Use `opendir'
 instead. Check for readdir and closedir failures. Don't dump sockets as if
 they were fifos; just warn and skip.
",148,data/crawl/tar/hunk_371.cpp,,,data/crawl/tar/old_hunk_371.cpp,data/crawl/tar/new_hunk_371.cpp,"[1, 11]","[1, 11]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=ed7e2ec8a334cc534db981fe2fd0e02b3d39bf62,13 Dec 1999,"(<quotearg.h>): New include. (start_header): Use `member names' to
 refer to archive member names, not `archive names'.  Warn about `..' in
 member names. (finish_sparse_file, dump_file): Quote arbitrary strings in
 diagnostics. (finish_sparse_file, dump_file): Don't assume that gettext
 preserves errno. (dump_file): Don't use `access' to determine whether a
 directory is readable; this isn't reliable if tar is setuid.  Use `opendir'
 instead. Check for readdir and closedir failures. Don't dump sockets as if
 they were fifos; just warn and skip.
",148,data/crawl/tar/hunk_372.cpp,,,data/crawl/tar/old_hunk_372.cpp,data/crawl/tar/new_hunk_372.cpp,[3],[4]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=ed7e2ec8a334cc534db981fe2fd0e02b3d39bf62,13 Dec 1999,"(<quotearg.h>): New include. (start_header): Use `member names' to
 refer to archive member names, not `archive names'.  Warn about `..' in
 member names. (finish_sparse_file, dump_file): Quote arbitrary strings in
 diagnostics. (finish_sparse_file, dump_file): Don't assume that gettext
 preserves errno. (dump_file): Don't use `access' to determine whether a
 directory is readable; this isn't reliable if tar is setuid.  Use `opendir'
 instead. Check for readdir and closedir failures. Don't dump sockets as if
 they were fifos; just warn and skip.
",148,data/crawl/tar/hunk_373.cpp,,,data/crawl/tar/old_hunk_373.cpp,data/crawl/tar/new_hunk_373.cpp,[4],[4]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=ed7e2ec8a334cc534db981fe2fd0e02b3d39bf62,13 Dec 1999,"(<quotearg.h>): New include. (start_header): Use `member names' to
 refer to archive member names, not `archive names'.  Warn about `..' in
 member names. (finish_sparse_file, dump_file): Quote arbitrary strings in
 diagnostics. (finish_sparse_file, dump_file): Don't assume that gettext
 preserves errno. (dump_file): Don't use `access' to determine whether a
 directory is readable; this isn't reliable if tar is setuid.  Use `opendir'
 instead. Check for readdir and closedir failures. Don't dump sockets as if
 they were fifos; just warn and skip.
",148,data/crawl/tar/hunk_374.cpp,,,data/crawl/tar/old_hunk_374.cpp,data/crawl/tar/new_hunk_374.cpp,[2],[2]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=ed7e2ec8a334cc534db981fe2fd0e02b3d39bf62,13 Dec 1999,"(<quotearg.h>): New include. (start_header): Use `member names' to
 refer to archive member names, not `archive names'.  Warn about `..' in
 member names. (finish_sparse_file, dump_file): Quote arbitrary strings in
 diagnostics. (finish_sparse_file, dump_file): Don't assume that gettext
 preserves errno. (dump_file): Don't use `access' to determine whether a
 directory is readable; this isn't reliable if tar is setuid.  Use `opendir'
 instead. Check for readdir and closedir failures. Don't dump sockets as if
 they were fifos; just warn and skip.
",148,data/crawl/tar/hunk_375.cpp,,,data/crawl/tar/old_hunk_375.cpp,data/crawl/tar/new_hunk_375.cpp,[14],[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=ed7e2ec8a334cc534db981fe2fd0e02b3d39bf62,13 Dec 1999,"(<quotearg.h>): New include. (start_header): Use `member names' to
 refer to archive member names, not `archive names'.  Warn about `..' in
 member names. (finish_sparse_file, dump_file): Quote arbitrary strings in
 diagnostics. (finish_sparse_file, dump_file): Don't assume that gettext
 preserves errno. (dump_file): Don't use `access' to determine whether a
 directory is readable; this isn't reliable if tar is setuid.  Use `opendir'
 instead. Check for readdir and closedir failures. Don't dump sockets as if
 they were fifos; just warn and skip.
",148,data/crawl/tar/hunk_376.cpp,,,data/crawl/tar/old_hunk_376.cpp,data/crawl/tar/new_hunk_376.cpp,[3],[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=ed7e2ec8a334cc534db981fe2fd0e02b3d39bf62,13 Dec 1999,"(<quotearg.h>): New include. (start_header): Use `member names' to
 refer to archive member names, not `archive names'.  Warn about `..' in
 member names. (finish_sparse_file, dump_file): Quote arbitrary strings in
 diagnostics. (finish_sparse_file, dump_file): Don't assume that gettext
 preserves errno. (dump_file): Don't use `access' to determine whether a
 directory is readable; this isn't reliable if tar is setuid.  Use `opendir'
 instead. Check for readdir and closedir failures. Don't dump sockets as if
 they were fifos; just warn and skip.
",148,data/crawl/tar/hunk_377.cpp,,,data/crawl/tar/old_hunk_377.cpp,data/crawl/tar/new_hunk_377.cpp,[3],[4]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=ed7e2ec8a334cc534db981fe2fd0e02b3d39bf62,13 Dec 1999,"(<quotearg.h>): New include. (start_header): Use `member names' to
 refer to archive member names, not `archive names'.  Warn about `..' in
 member names. (finish_sparse_file, dump_file): Quote arbitrary strings in
 diagnostics. (finish_sparse_file, dump_file): Don't assume that gettext
 preserves errno. (dump_file): Don't use `access' to determine whether a
 directory is readable; this isn't reliable if tar is setuid.  Use `opendir'
 instead. Check for readdir and closedir failures. Don't dump sockets as if
 they were fifos; just warn and skip.
",148,data/crawl/tar/hunk_378.cpp,,,data/crawl/tar/old_hunk_378.cpp,data/crawl/tar/new_hunk_378.cpp,[1],[1]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=ed7e2ec8a334cc534db981fe2fd0e02b3d39bf62,13 Dec 1999,"(<quotearg.h>): New include. (start_header): Use `member names' to
 refer to archive member names, not `archive names'.  Warn about `..' in
 member names. (finish_sparse_file, dump_file): Quote arbitrary strings in
 diagnostics. (finish_sparse_file, dump_file): Don't assume that gettext
 preserves errno. (dump_file): Don't use `access' to determine whether a
 directory is readable; this isn't reliable if tar is setuid.  Use `opendir'
 instead. Check for readdir and closedir failures. Don't dump sockets as if
 they were fifos; just warn and skip.
",148,data/crawl/tar/hunk_379.cpp,,,data/crawl/tar/old_hunk_379.cpp,data/crawl/tar/new_hunk_379.cpp,"[3, 5, 7, 14]",[5]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=ed7e2ec8a334cc534db981fe2fd0e02b3d39bf62,13 Dec 1999,"(<quotearg.h>): New include. (start_header): Use `member names' to
 refer to archive member names, not `archive names'.  Warn about `..' in
 member names. (finish_sparse_file, dump_file): Quote arbitrary strings in
 diagnostics. (finish_sparse_file, dump_file): Don't assume that gettext
 preserves errno. (dump_file): Don't use `access' to determine whether a
 directory is readable; this isn't reliable if tar is setuid.  Use `opendir'
 instead. Check for readdir and closedir failures. Don't dump sockets as if
 they were fifos; just warn and skip.
",148,data/crawl/tar/hunk_380.cpp,,,data/crawl/tar/old_hunk_380.cpp,data/crawl/tar/new_hunk_380.cpp,[3],[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=ed7e2ec8a334cc534db981fe2fd0e02b3d39bf62,13 Dec 1999,"(<quotearg.h>): New include. (start_header): Use `member names' to
 refer to archive member names, not `archive names'.  Warn about `..' in
 member names. (finish_sparse_file, dump_file): Quote arbitrary strings in
 diagnostics. (finish_sparse_file, dump_file): Don't assume that gettext
 preserves errno. (dump_file): Don't use `access' to determine whether a
 directory is readable; this isn't reliable if tar is setuid.  Use `opendir'
 instead. Check for readdir and closedir failures. Don't dump sockets as if
 they were fifos; just warn and skip.
",148,data/crawl/tar/hunk_381.cpp,,,data/crawl/tar/old_hunk_381.cpp,data/crawl/tar/new_hunk_381.cpp,"[3, 8]",[8]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=196caec187f27a3c3e4a68eee6bb388d79dac960,13 Dec 1999,"(xclose, xdup2, child_open_for_compress, child_open_for_uncompress,
 archive_write_error, archive_read_error, flush_archive, close_archive,
 init_volume_number, new_volume): Don't assume that gettext preserves errno.

(xdup2): Don't report errno if dup returns an unexpected nonnegative value.
(open_archive): Reject multivolume verify attempts a bit earlier.
Rename local variable `access', in case it's defined by system header.

(open_archive, backspace_output): Use `Cannot' uniformly, instead of
`Could not' sometimes and `Cannot' others.

(open_archive, flush_read, flush_archive, close_archive, new_volume):
Quote arbitrary strings in diagnostics.

(read_error): Set archive to STDOUT_FILENO temporarily when writing
archive buffer.

(init_volume_number): Check for input and output errors in volno_file.

(new_volume): Use new fatal_exit function to exit, and new xfork
function to fork.",292,data/crawl/tar/hunk_382.cpp,,,data/crawl/tar/old_hunk_382.cpp,data/crawl/tar/new_hunk_382.cpp,[5],[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=196caec187f27a3c3e4a68eee6bb388d79dac960,13 Dec 1999,"(xclose, xdup2, child_open_for_compress, child_open_for_uncompress,
 archive_write_error, archive_read_error, flush_archive, close_archive,
 init_volume_number, new_volume): Don't assume that gettext preserves errno.

(xdup2): Don't report errno if dup returns an unexpected nonnegative value.
(open_archive): Reject multivolume verify attempts a bit earlier.
Rename local variable `access', in case it's defined by system header.

(open_archive, backspace_output): Use `Cannot' uniformly, instead of
`Could not' sometimes and `Cannot' others.

(open_archive, flush_read, flush_archive, close_archive, new_volume):
Quote arbitrary strings in diagnostics.

(read_error): Set archive to STDOUT_FILENO temporarily when writing
archive buffer.

(init_volume_number): Check for input and output errors in volno_file.

(new_volume): Use new fatal_exit function to exit, and new xfork
function to fork.",292,data/crawl/tar/hunk_383.cpp,,,data/crawl/tar/old_hunk_383.cpp,data/crawl/tar/new_hunk_383.cpp,[3],[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=196caec187f27a3c3e4a68eee6bb388d79dac960,13 Dec 1999,"(xclose, xdup2, child_open_for_compress, child_open_for_uncompress,
 archive_write_error, archive_read_error, flush_archive, close_archive,
 init_volume_number, new_volume): Don't assume that gettext preserves errno.

(xdup2): Don't report errno if dup returns an unexpected nonnegative value.
(open_archive): Reject multivolume verify attempts a bit earlier.
Rename local variable `access', in case it's defined by system header.

(open_archive, backspace_output): Use `Cannot' uniformly, instead of
`Could not' sometimes and `Cannot' others.

(open_archive, flush_read, flush_archive, close_archive, new_volume):
Quote arbitrary strings in diagnostics.

(read_error): Set archive to STDOUT_FILENO temporarily when writing
archive buffer.

(init_volume_number): Check for input and output errors in volno_file.

(new_volume): Use new fatal_exit function to exit, and new xfork
function to fork.",292,data/crawl/tar/hunk_384.cpp,,,data/crawl/tar/old_hunk_384.cpp,data/crawl/tar/new_hunk_384.cpp,"[4, 7]",[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=196caec187f27a3c3e4a68eee6bb388d79dac960,13 Dec 1999,"(xclose, xdup2, child_open_for_compress, child_open_for_uncompress,
 archive_write_error, archive_read_error, flush_archive, close_archive,
 init_volume_number, new_volume): Don't assume that gettext preserves errno.

(xdup2): Don't report errno if dup returns an unexpected nonnegative value.
(open_archive): Reject multivolume verify attempts a bit earlier.
Rename local variable `access', in case it's defined by system header.

(open_archive, backspace_output): Use `Cannot' uniformly, instead of
`Could not' sometimes and `Cannot' others.

(open_archive, flush_read, flush_archive, close_archive, new_volume):
Quote arbitrary strings in diagnostics.

(read_error): Set archive to STDOUT_FILENO temporarily when writing
archive buffer.

(init_volume_number): Check for input and output errors in volno_file.

(new_volume): Use new fatal_exit function to exit, and new xfork
function to fork.",292,data/crawl/tar/hunk_385.cpp,,,data/crawl/tar/old_hunk_385.cpp,data/crawl/tar/new_hunk_385.cpp,"[4, 7]",[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=196caec187f27a3c3e4a68eee6bb388d79dac960,13 Dec 1999,"(xclose, xdup2, child_open_for_compress, child_open_for_uncompress,
 archive_write_error, archive_read_error, flush_archive, close_archive,
 init_volume_number, new_volume): Don't assume that gettext preserves errno.

(xdup2): Don't report errno if dup returns an unexpected nonnegative value.
(open_archive): Reject multivolume verify attempts a bit earlier.
Rename local variable `access', in case it's defined by system header.

(open_archive, backspace_output): Use `Cannot' uniformly, instead of
`Could not' sometimes and `Cannot' others.

(open_archive, flush_read, flush_archive, close_archive, new_volume):
Quote arbitrary strings in diagnostics.

(read_error): Set archive to STDOUT_FILENO temporarily when writing
archive buffer.

(init_volume_number): Check for input and output errors in volno_file.

(new_volume): Use new fatal_exit function to exit, and new xfork
function to fork.",292,data/crawl/tar/hunk_386.cpp,,,data/crawl/tar/old_hunk_386.cpp,data/crawl/tar/new_hunk_386.cpp,[27],[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=3495d84e27c42c0619daf43c2b546d35e3ecbba6,3 Dec 1999,"(dump_file): Do not diagnose a file that the parent directory said
 should be there, but is absent.  It was probably removed between then and
 now. Do not pass meaningless errno to ERROR when reporting that the file
 changed as we read it.
",19,data/crawl/tar/hunk_387.cpp,,,data/crawl/tar/old_hunk_387.cpp,data/crawl/tar/new_hunk_387.cpp,"[0, 3, 5]","[0, 3, 5]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=859a4ec01f9174de4d3baea65b20b69c440ff8d0,7 Nov 1999,"(usage): Add examples.
",13,data/crawl/tar/hunk_388.cpp,,,data/crawl/tar/old_hunk_388.cpp,data/crawl/tar/new_hunk_388.cpp,[4],[10]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=859a4ec01f9174de4d3baea65b20b69c440ff8d0,7 Nov 1999,"(usage): Add examples.
",13,data/crawl/tar/hunk_389.cpp,,,data/crawl/tar/old_hunk_389.cpp,data/crawl/tar/new_hunk_389.cpp,[3],[3]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=02519e55752f86d85a03643332a0bdd0850c265c,7 Nov 1999,"Include getopt.h. (long_opts): New constant. (usage): New function.
 (main): Implement --help and --version. Output usage message if arguments are
 bad.
",59,data/crawl/tar/hunk_390.cpp,,,data/crawl/tar/old_hunk_390.cpp,data/crawl/tar/new_hunk_390.cpp,[],[25]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=7be178a4d4c884e0ddd27ce93e04a00411f4332a,7 Nov 1999,"(set_stat): Remove duplicate code.
",31,data/crawl/tar/hunk_391.cpp,,,data/crawl/tar/old_hunk_391.cpp,data/crawl/tar/new_hunk_391.cpp,[4],[5]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=7be178a4d4c884e0ddd27ce93e04a00411f4332a,7 Nov 1999,"(set_stat): Remove duplicate code.
",31,data/crawl/tar/hunk_392.cpp,,,data/crawl/tar/old_hunk_392.cpp,data/crawl/tar/new_hunk_392.cpp,[10],[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=51f0c7c36448cb51018feb81a47fb9bb792784c7,11 Oct 1999,"(tartime): Now extern. (read_and): Invalid headers cause errors, not
 warnings.
",7,data/crawl/tar/hunk_393.cpp,,,data/crawl/tar/old_hunk_393.cpp,data/crawl/tar/new_hunk_393.cpp,[],"[3, 8]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=cf4065dfe9a5fe2bf7238f58ae33d2f3365344bc,11 Oct 1999,"(decode_options): Invalid dates are now treated as (time_t) -1. Redo
 version message to conform to GNU standards.
",23,data/crawl/tar/hunk_394.cpp,,,data/crawl/tar/old_hunk_394.cpp,data/crawl/tar/new_hunk_394.cpp,"[4, 8, 12]",[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=f4f13c4705e3436e06ffadb00674a3586e0a4ed7,26 Sep 1999,"Initial revision
",117,data/crawl/tar/hunk_395.cpp,,,data/crawl/tar/old_hunk_395.cpp,data/crawl/tar/new_hunk_395.cpp,[],[72]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=29929863e80e7c0a2b1485d5ed2c7d492f2a9702,25 Sep 1999,"(write_error): Read error is an error, not just a warning.
",2,data/crawl/tar/hunk_396.cpp,,,data/crawl/tar/old_hunk_396.cpp,data/crawl/tar/new_hunk_396.cpp,[],[3]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=e6d8e9279f96aea82cf45faf24c6f3b792e7aae0,24 Sep 1999,"(update_archive): Remove call to name_expand; had no effect. Use
 chdir_do to change into directory. Use deref_stat instead of stat. Use
 add_avoided_name to mark names to be avoided; the old method of setting a bit
 with the name caused all descendants of that name to be avoided, in some
 circumstances.
",16,data/crawl/tar/hunk_397.cpp,,,data/crawl/tar/old_hunk_397.cpp,data/crawl/tar/new_hunk_397.cpp,[8],[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=6e36ce5668fdaf3e710ec29b3082c9a1f5c27de5,23 Sep 1999,"(name_next): Go back to using plain chdir. (name_gather): Use
 chdir_arg to keep track of arguments to chdir. (addname): Likewise.
 (name_match): Use chdir_do to act on chdir args. (merge_sort): Moved here
 from incremen.c. (compare_names, add_hierarchy_to_namelist,
 collect_and_sort_names): Likewise. (name_expand): Remove. (name_from_list):
 Skip fack names. Use chdir_do to act on chdir args. (struct avoided_name):
 New struct. (avoided_names): New var. (add_avoided_name, is_avoided_name):
 New functions.
",299,data/crawl/tar/hunk_398.cpp,,,data/crawl/tar/old_hunk_398.cpp,data/crawl/tar/new_hunk_398.cpp,[0],"[0, 184]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=e4e624848b53ac02f1212af2209a63d28e40afec,22 Sep 1999,"(time): Declare if not defined. (base_64_digits): Moved here from
 create.c. (base64_map): Use UCHAR_MAX for size, not less-clear (unsigned
 char) -1. (read_and): Don't get time from header unless we need it now; as
 getting time can cause duplicate diagnostics if bogus. Remove ""Hmm, "" from
 diagnostic. Use ""Skipping to next header"" uniformly. (from_header): Renamed
 from from_chars.  All uses changed. Allow different forms for unportable 2's
 complement numbers. Don't check for extended forms when parsing checksums.
 Parse base-256 output. (gid_from_header): Renamed from gid_from_chars.  All
 uses changed. (major_from_header): Renamed from major_from_chars.  All uses
 changed. (minor_from_header): Renamed from minor_from_chars.  All uses
 changed. (mode_from_header): Renamed from mode_from_chars.  All uses changed.
 (off_from_header): Renamed from off_from_chars.  All uses changed.
 (size_from_header): Renamed from size_from_chars.  All uses changed.
 (time_from_header): Renamed from time_from_chars.  All uses changed. Warn
 about future timestamps. (uid_from_header): Renamed from uid_from_chars.  All
 uses changed. (uintmax_from_header): Renamed from uintmax_from_chars.  All
 uses changed. (tartime): New function, incorporating isotime. (isotime):
 Delete. (print_header): Use tartime.
",364,data/crawl/tar/hunk_399.cpp,,,data/crawl/tar/old_hunk_399.cpp,data/crawl/tar/new_hunk_399.cpp,"[7, 35]","[43, 73, 103]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=0d70f547f3a9ff4a261b82e9b487c3f65b63fadf,21 Sep 1999,"(struct link): Remove unused linkcount member. (base_64_digits): Move
 to list.c. (base_8_digits): Remove. (to_octal): New function, with some of
 old contents of to_base. (to_base): Remove. (to_base256): New function.
 (to_chars): Use base 256, not base 64, for huge values. (mode_to_chars):
 Don't use two's complement in GNU format or POSIX format. (dump_file):
 Interchange last two arguments.  If TOP_LEVEL is negative, it means we have
 an incremental dump where we don't know whether this is a top-level call. Use
 deref_stat instead of statx / stat / lstat. Cast result of alloca. Check for
 dates if 0 < top_level, not if listed_incremental_option. Move multiple-link
 check after directory check. Do not dump avoided names. Dump hard links to
 symbolic names as links, not as separate symbolic links. start_header cannot
 return a null pointer, so don't test for it. Likewise for find_next_block.
",1015,data/crawl/tar/hunk_400.cpp,,,data/crawl/tar/old_hunk_400.cpp,data/crawl/tar/new_hunk_400.cpp,"[62, 309, 327, 341, 344, 346, 353, 413]",[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=0d70f547f3a9ff4a261b82e9b487c3f65b63fadf,21 Sep 1999,"(struct link): Remove unused linkcount member. (base_64_digits): Move
 to list.c. (base_8_digits): Remove. (to_octal): New function, with some of
 old contents of to_base. (to_base): Remove. (to_base256): New function.
 (to_chars): Use base 256, not base 64, for huge values. (mode_to_chars):
 Don't use two's complement in GNU format or POSIX format. (dump_file):
 Interchange last two arguments.  If TOP_LEVEL is negative, it means we have
 an incremental dump where we don't know whether this is a top-level call. Use
 deref_stat instead of statx / stat / lstat. Cast result of alloca. Check for
 dates if 0 < top_level, not if listed_incremental_option. Move multiple-link
 check after directory check. Do not dump avoided names. Dump hard links to
 symbolic names as links, not as separate symbolic links. start_header cannot
 return a null pointer, so don't test for it. Likewise for find_next_block.
",1015,data/crawl/tar/hunk_401.cpp,,,data/crawl/tar/old_hunk_401.cpp,data/crawl/tar/new_hunk_401.cpp,[5],[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=0d70f547f3a9ff4a261b82e9b487c3f65b63fadf,21 Sep 1999,"(struct link): Remove unused linkcount member. (base_64_digits): Move
 to list.c. (base_8_digits): Remove. (to_octal): New function, with some of
 old contents of to_base. (to_base): Remove. (to_base256): New function.
 (to_chars): Use base 256, not base 64, for huge values. (mode_to_chars):
 Don't use two's complement in GNU format or POSIX format. (dump_file):
 Interchange last two arguments.  If TOP_LEVEL is negative, it means we have
 an incremental dump where we don't know whether this is a top-level call. Use
 deref_stat instead of statx / stat / lstat. Cast result of alloca. Check for
 dates if 0 < top_level, not if listed_incremental_option. Move multiple-link
 check after directory check. Do not dump avoided names. Dump hard links to
 symbolic names as links, not as separate symbolic links. start_header cannot
 return a null pointer, so don't test for it. Likewise for find_next_block.
",1015,data/crawl/tar/hunk_402.cpp,,,data/crawl/tar/old_hunk_402.cpp,data/crawl/tar/new_hunk_402.cpp,[],"[58, 274, 292, 306, 309, 311, 318, 372]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=17e0cd7065a8eb84483788e5abbf06ccf2649fb5,20 Sep 1999,"(<human.h>): Include. (print_total_written): Also print
 human-readable byte count, and bytes/s. (open_archive, flush_write): Use
 start_time, not current time. (flush_read): Report about garbage bytes
 ignored at end of archive, but act on non-garbage bytes (instead of ignoring
 them). (new_volume): Use WARN for warnings.
",101,data/crawl/tar/hunk_403.cpp,,,data/crawl/tar/old_hunk_403.cpp,data/crawl/tar/new_hunk_403.cpp,[],[14]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=aeef4574607477cf4fcdeb230fce04c7876ca2fa,23 Aug 1999,"Lint cleanup. (linklist): Now static. (to_chars): Fix wording of
 message to match from_chars.
",79,data/crawl/tar/hunk_404.cpp,,,data/crawl/tar/old_hunk_404.cpp,data/crawl/tar/new_hunk_404.cpp,[9],[9]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=aeef4574607477cf4fcdeb230fce04c7876ca2fa,23 Aug 1999,"Lint cleanup. (linklist): Now static. (to_chars): Fix wording of
 message to match from_chars.
",79,data/crawl/tar/hunk_405.cpp,,,data/crawl/tar/old_hunk_405.cpp,data/crawl/tar/new_hunk_405.cpp,[6],[6]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=aa904fd8ec95f5d23db78b3dd81a1f7aeb18035d,23 Aug 1999,"Lint cleanup. (from_chars): Report out-of-range values more
 precisely. (off_from_chars): Do not allow negative offsets. (uid_from_chars):
 Allow negative uids.
",81,data/crawl/tar/hunk_406.cpp,,,data/crawl/tar/old_hunk_406.cpp,data/crawl/tar/new_hunk_406.cpp,[10],[10]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=aa904fd8ec95f5d23db78b3dd81a1f7aeb18035d,23 Aug 1999,"Lint cleanup. (from_chars): Report out-of-range values more
 precisely. (off_from_chars): Do not allow negative offsets. (uid_from_chars):
 Allow negative uids.
",81,data/crawl/tar/hunk_407.cpp,,,data/crawl/tar/old_hunk_407.cpp,data/crawl/tar/new_hunk_407.cpp,[],[4]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=aa904fd8ec95f5d23db78b3dd81a1f7aeb18035d,23 Aug 1999,"Lint cleanup. (from_chars): Report out-of-range values more
 precisely. (off_from_chars): Do not allow negative offsets. (uid_from_chars):
 Allow negative uids.
",81,data/crawl/tar/hunk_408.cpp,,,data/crawl/tar/old_hunk_408.cpp,data/crawl/tar/new_hunk_408.cpp,[],[4]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=aa904fd8ec95f5d23db78b3dd81a1f7aeb18035d,23 Aug 1999,"Lint cleanup. (from_chars): Report out-of-range values more
 precisely. (off_from_chars): Do not allow negative offsets. (uid_from_chars):
 Allow negative uids.
",81,data/crawl/tar/hunk_409.cpp,,,data/crawl/tar/old_hunk_409.cpp,data/crawl/tar/new_hunk_409.cpp,[2],[2]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=aa904fd8ec95f5d23db78b3dd81a1f7aeb18035d,23 Aug 1999,"Lint cleanup. (from_chars): Report out-of-range values more
 precisely. (off_from_chars): Do not allow negative offsets. (uid_from_chars):
 Allow negative uids.
",81,data/crawl/tar/hunk_410.cpp,,,data/crawl/tar/old_hunk_410.cpp,data/crawl/tar/new_hunk_410.cpp,[5],[14]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=6b6064c3fa29e0423ae46078185eca64ec2b4d3d,23 Aug 1999,"--bzip2 is now -I.  Remove bogus time zone info. Fix spelling.
",300,data/crawl/tar/hunk_411.cpp,,,data/crawl/tar/old_hunk_411.cpp,data/crawl/tar/new_hunk_411.cpp,[10],[10]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=72290b64a6433a3c88ecb7b3044c3047beffeadc,18 Aug 1999,"(extract_sparse_file, extract_archive): Don't assume find_next_block
 yields nonnull. (extract_archive): Fix sparse array bug: we did not find end
 of array correctly.
",14,data/crawl/tar/hunk_412.cpp,,,data/crawl/tar/old_hunk_412.cpp,data/crawl/tar/new_hunk_412.cpp,[],[5]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=72290b64a6433a3c88ecb7b3044c3047beffeadc,18 Aug 1999,"(extract_sparse_file, extract_archive): Don't assume find_next_block
 yields nonnull. (extract_archive): Fix sparse array bug: we did not find end
 of array correctly.
",14,data/crawl/tar/hunk_413.cpp,,,data/crawl/tar/old_hunk_413.cpp,data/crawl/tar/new_hunk_413.cpp,[],[5]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=fcde5487eb6a6bc6ff80bc85a54fa94746494350,17 Aug 1999,"Ghostscript 6.0
",720,data/crawl/tar/hunk_414.cpp,,,data/crawl/tar/old_hunk_414.cpp,data/crawl/tar/new_hunk_414.cpp,[],"[309, 319, 330, 336, 563, 691, 702, 704, 710, 711, 712, 715]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=14b158325624a6e42e8bf4f7169c7a55f0afb6f9,16 Aug 1999,"indenting fixes
",8,data/crawl/tar/hunk_415.cpp,,,data/crawl/tar/old_hunk_415.cpp,data/crawl/tar/new_hunk_415.cpp,[3],[3]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=14b158325624a6e42e8bf4f7169c7a55f0afb6f9,16 Aug 1999,"indenting fixes
",8,data/crawl/tar/hunk_416.cpp,,,data/crawl/tar/old_hunk_416.cpp,data/crawl/tar/new_hunk_416.cpp,[3],[3]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=5e0e027651e89233d4f3c4ca089db72468e31173,16 Aug 1999,"(make_directories): Do not chown intermediate directories, even if we
 are root.
",18,data/crawl/tar/hunk_417.cpp,,,data/crawl/tar/old_hunk_417.cpp,data/crawl/tar/new_hunk_417.cpp,[7],[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=5e0e027651e89233d4f3c4ca089db72468e31173,16 Aug 1999,"(make_directories): Do not chown intermediate directories, even if we
 are root.
",18,data/crawl/tar/hunk_418.cpp,,,data/crawl/tar/old_hunk_418.cpp,data/crawl/tar/new_hunk_418.cpp,[3],[3]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=203dea13a40bae5c6d2dfa221036babd0e345ffe,14 Aug 1999,"(time): Don't declare if defined. (child_open_for_compress): Undo
 previous change. (close_archive): Use waitpid, POSIX-style, instead of old
 BSD style. (new_volume): Likewise.
",126,data/crawl/tar/hunk_419.cpp,,,data/crawl/tar/old_hunk_419.cpp,data/crawl/tar/new_hunk_419.cpp,[8],[7]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=203dea13a40bae5c6d2dfa221036babd0e345ffe,14 Aug 1999,"(time): Don't declare if defined. (child_open_for_compress): Undo
 previous change. (close_archive): Use waitpid, POSIX-style, instead of old
 BSD style. (new_volume): Likewise.
",126,data/crawl/tar/hunk_420.cpp,,,data/crawl/tar/old_hunk_420.cpp,data/crawl/tar/new_hunk_420.cpp,"[23, 34]","[8, 17, 27]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=203dea13a40bae5c6d2dfa221036babd0e345ffe,14 Aug 1999,"(time): Don't declare if defined. (child_open_for_compress): Undo
 previous change. (close_archive): Use waitpid, POSIX-style, instead of old
 BSD style. (new_volume): Likewise.
",126,data/crawl/tar/hunk_421.cpp,,,data/crawl/tar/old_hunk_421.cpp,data/crawl/tar/new_hunk_421.cpp,[],[28]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=36682e50ccd859bb82bff444c4c68ff587966dc8,11 Aug 1999,"(base_64_digits): New constant. (base_8_digits): New macro.
 (MAX_VAL_WITH_DIGITS): New macro. (to_base): Renamed from to_oct.  Support
 base 64 too. New parameters specifying bits per digit and digits. Remove
 `type' parameter.  The result is now undefined if it doesn't fit; it's the
 caller's responsibility to check this. (to_chars): Other half of old to_oct,
 for 64-bit support. Mostly a new function. (GID_NOBODY, UID_NOBODY): Don't
 define if the headers don't. (gid_substitute, uid_substitute): Look up names
 dynamically if GID_NOBODY and UID_NOBODY aren't defined; use -2 if all else
 fails. (mode_to_chars): Renamed from mode_to_oct. Support negative values in
 all the _to_chars functions. (start_header): Use FILESYSTEM_PREFIX_LEN
 instead of MSDOS ifdef. Abort if archive format is DEFAULT_FORMAT when it
 shouldn't be. (dump_file): Inspect entire pathname, not just new file name
 component, when deciding whether to exclude it.
",329,data/crawl/tar/hunk_422.cpp,,,data/crawl/tar/old_hunk_422.cpp,data/crawl/tar/new_hunk_422.cpp,[64],[111]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=dc4a8aa0c6a5bd68735e2ae220260242487c3f1e,11 Aug 1999,"(<fnmatch.h>): Do not include. (from_chars): Renamed from from_oct. 
 New parameter specifing the negative of the minimum allowed value.  Support
 negative and base-64 values. (base64_map): New var. (base64_init): New
 function. (print_header): Output numeric uids and gids if
 numeric_owner_option.
",207,data/crawl/tar/hunk_423.cpp,,,data/crawl/tar/old_hunk_423.cpp,data/crawl/tar/new_hunk_423.cpp,[19],[22]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=dc4a8aa0c6a5bd68735e2ae220260242487c3f1e,11 Aug 1999,"(<fnmatch.h>): Do not include. (from_chars): Renamed from from_oct. 
 New parameter specifing the negative of the minimum allowed value.  Support
 negative and base-64 values. (base64_map): New var. (base64_init): New
 function. (print_header): Output numeric uids and gids if
 numeric_owner_option.
",207,data/crawl/tar/hunk_424.cpp,,,data/crawl/tar/old_hunk_424.cpp,data/crawl/tar/new_hunk_424.cpp,"[6, 19]","[6, 19]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=1f27dca9765c886a72629a655d538c36c6cb0fea,20 Jul 1999,"(decode_options): ERROR ((TAREXIT_FAILURE, ... -> FATAL_ERROR ((0,
 for consistency.
",8,data/crawl/tar/hunk_425.cpp,,,data/crawl/tar/old_hunk_425.cpp,data/crawl/tar/new_hunk_425.cpp,[3],[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=1f27dca9765c886a72629a655d538c36c6cb0fea,20 Jul 1999,"(decode_options): ERROR ((TAREXIT_FAILURE, ... -> FATAL_ERROR ((0,
 for consistency.
",8,data/crawl/tar/hunk_426.cpp,,,data/crawl/tar/old_hunk_426.cpp,data/crawl/tar/new_hunk_426.cpp,"[3, 5]",[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=1f27dca9765c886a72629a655d538c36c6cb0fea,20 Jul 1999,"(decode_options): ERROR ((TAREXIT_FAILURE, ... -> FATAL_ERROR ((0,
 for consistency.
",8,data/crawl/tar/hunk_427.cpp,,,data/crawl/tar/old_hunk_427.cpp,data/crawl/tar/new_hunk_427.cpp,[3],[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=9cb6f5c46626aa0a8b6ce89b949fe3d9aad3feee,20 Jul 1999,"this matches historical practice. (unlink_destination): New function,
 which checks for unlink failures. (maybe_recoverable): Stay quiet if -U.
 (extract_archive): Use O_EXCL if unlink_first_option. Report unlink failures.
 Use HAVE_SYMLINK, not S_ISLNK, to determine whether symlink exists. Use
 HAVE_MKFIFO || defined mkfifo, not S_ISFIFO, to determine whether mkfifo
 exists.
",71,data/crawl/tar/hunk_428.cpp,,,data/crawl/tar/old_hunk_428.cpp,data/crawl/tar/new_hunk_428.cpp,[16],[19]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=9cb6f5c46626aa0a8b6ce89b949fe3d9aad3feee,20 Jul 1999,"this matches historical practice. (unlink_destination): New function,
 which checks for unlink failures. (maybe_recoverable): Stay quiet if -U.
 (extract_archive): Use O_EXCL if unlink_first_option. Report unlink failures.
 Use HAVE_SYMLINK, not S_ISLNK, to determine whether symlink exists. Use
 HAVE_MKFIFO || defined mkfifo, not S_ISFIFO, to determine whether mkfifo
 exists.
",71,data/crawl/tar/hunk_429.cpp,,,data/crawl/tar/old_hunk_429.cpp,data/crawl/tar/new_hunk_429.cpp,[],[14]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=4dd9bd50bdcf78b6fbe86cb1153579d3fe57334b,12 Jul 1999,"(append_file): Open the file before statting it, to avoid a race.
 Complain about file shrinkage only when we reach EOF.
",65,data/crawl/tar/hunk_430.cpp,,,data/crawl/tar/old_hunk_430.cpp,data/crawl/tar/new_hunk_430.cpp,[10],"[8, 13]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=8e8acfbc97574b9313dea279ce53e5c9fa93cb1f,8 Jul 1999,"(exclude_pool, exclude_pool_size, allocated_exclude_pool_size,
 simple_exclude_array, simple_excludes, allocated_simple_excludes,
 pattern_exclude_array, pattern_excludes, allocated_pattern_excludes,
 add_exclude, add_exclude_file, check_exclude): Remove; now done in
 ../lib/exclude.c.
",145,data/crawl/tar/hunk_431.cpp,,,data/crawl/tar/old_hunk_431.cpp,data/crawl/tar/new_hunk_431.cpp,[107],[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=0f32adce258519bfa6af4cd8f972db453f91cf9b,2 Jul 1999,"(extr_init, make_directories, extract_archive): Do not assume mode
 bits have traditional Unix values. (set_mode): Use %04 not %0.4 format.
 (extract_sparse_file): Do not use data_block uninitialized. Check for lseek
 failures; use portable lseek whence values.
",68,data/crawl/tar/hunk_432.cpp,,,data/crawl/tar/old_hunk_432.cpp,data/crawl/tar/new_hunk_432.cpp,[3],[3]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=0f32adce258519bfa6af4cd8f972db453f91cf9b,2 Jul 1999,"(extr_init, make_directories, extract_archive): Do not assume mode
 bits have traditional Unix values. (set_mode): Use %04 not %0.4 format.
 (extract_sparse_file): Do not use data_block uninitialized. Check for lseek
 failures; use portable lseek whence values.
",68,data/crawl/tar/hunk_433.cpp,,,data/crawl/tar/old_hunk_433.cpp,data/crawl/tar/new_hunk_433.cpp,[18],"[14, 20]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=6eafcf3c9d4aa1c63f245c48204afe5bc9e0b3cf,2 Jul 1999,"Add braces to pacify gcc -Wall.
",76,data/crawl/tar/hunk_434.cpp,,,data/crawl/tar/old_hunk_434.cpp,data/crawl/tar/new_hunk_434.cpp,"[12, 23]","[13, 24]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=72adbbda36ab076df0a52832191580a7162e1db3,16 Jun 1999,"(backup_type): Remove decl; backupfile.h now has it. (intconv):
 Remove; use xstrto* fns instead. (""xstrtol.h""): Include. (check_decimal):
 Remove. (long_options, usage, OPTION_STRING, decode_options): Remove -y,
 --bzip2, --unbzip2. (decode_options): Use xget_version instead of
 get_version. Check for overflow with -b and -L and RECORD_SIZE_OPTION.
 Replace invocations of check_decimal  with xstrtoumax.
",116,data/crawl/tar/hunk_435.cpp,,,data/crawl/tar/old_hunk_435.cpp,data/crawl/tar/new_hunk_435.cpp,[5],[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=72adbbda36ab076df0a52832191580a7162e1db3,16 Jun 1999,"(backup_type): Remove decl; backupfile.h now has it. (intconv):
 Remove; use xstrto* fns instead. (""xstrtol.h""): Include. (check_decimal):
 Remove. (long_options, usage, OPTION_STRING, decode_options): Remove -y,
 --bzip2, --unbzip2. (decode_options): Use xget_version instead of
 get_version. Check for overflow with -b and -L and RECORD_SIZE_OPTION.
 Replace invocations of check_decimal  with xstrtoumax.
",116,data/crawl/tar/hunk_436.cpp,,,data/crawl/tar/old_hunk_436.cpp,data/crawl/tar/new_hunk_436.cpp,[4],[7]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=72adbbda36ab076df0a52832191580a7162e1db3,16 Jun 1999,"(backup_type): Remove decl; backupfile.h now has it. (intconv):
 Remove; use xstrto* fns instead. (""xstrtol.h""): Include. (check_decimal):
 Remove. (long_options, usage, OPTION_STRING, decode_options): Remove -y,
 --bzip2, --unbzip2. (decode_options): Use xget_version instead of
 get_version. Check for overflow with -b and -L and RECORD_SIZE_OPTION.
 Replace invocations of check_decimal  with xstrtoumax.
",116,data/crawl/tar/hunk_437.cpp,,,data/crawl/tar/old_hunk_437.cpp,data/crawl/tar/new_hunk_437.cpp,[4],[7]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=78e6911db8690eaecb4545ade0b457e23300e487,19 Apr 1999,"Initial revision
",64,data/crawl/tar/hunk_438.cpp,,,data/crawl/tar/old_hunk_438.cpp,data/crawl/tar/new_hunk_438.cpp,[],"[40, 45, 50]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=f31b9d842bad51e1c088390b17bcac44d554b56a,22 Mar 1999,"Include <quotearg.h>. (from_oct): Add forward decl. (read_header):
 Return HEADER_FAILURE if we can't parse the checksum. (from_oct): Report an
 error only if TYPE is nonzero. Quote any funny characters in bad header.
",41,data/crawl/tar/hunk_439.cpp,,,data/crawl/tar/old_hunk_439.cpp,data/crawl/tar/new_hunk_439.cpp,[3],[4]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=f31b9d842bad51e1c088390b17bcac44d554b56a,22 Mar 1999,"Include <quotearg.h>. (from_oct): Add forward decl. (read_header):
 Return HEADER_FAILURE if we can't parse the checksum. (from_oct): Report an
 error only if TYPE is nonzero. Quote any funny characters in bad header.
",41,data/crawl/tar/hunk_440.cpp,,,data/crawl/tar/old_hunk_440.cpp,data/crawl/tar/new_hunk_440.cpp,[3],[15]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=f31b9d842bad51e1c088390b17bcac44d554b56a,22 Mar 1999,"Include <quotearg.h>. (from_oct): Add forward decl. (read_header):
 Return HEADER_FAILURE if we can't parse the checksum. (from_oct): Report an
 error only if TYPE is nonzero. Quote any funny characters in bad header.
",41,data/crawl/tar/hunk_441.cpp,,,data/crawl/tar/old_hunk_441.cpp,data/crawl/tar/new_hunk_441.cpp,[3],[4]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=13617c42d896aa66178d914d744d2d42fb988248,2 Mar 1999,"(to_oct): New parameter substitute, giving a substitute value to use
 when the original value is out of range.  Do not append a space to the
 output; modern tars don't.  When a value is out of range, specify the maximum
 value, not the number of bits. (GID_NOBODY, UID_NOBODY): New macros.
 (gid_to_oct, uid_to_oct): Use them as substitutes. (finish_header): Do not
 assume that UINTMAX_TO_OCT appends a space. (dump_file): Check whether the
 file changed as we read it.
",79,data/crawl/tar/hunk_442.cpp,,,data/crawl/tar/old_hunk_442.cpp,data/crawl/tar/new_hunk_442.cpp,[4],[21]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=13617c42d896aa66178d914d744d2d42fb988248,2 Mar 1999,"(to_oct): New parameter substitute, giving a substitute value to use
 when the original value is out of range.  Do not append a space to the
 output; modern tars don't.  When a value is out of range, specify the maximum
 value, not the number of bits. (GID_NOBODY, UID_NOBODY): New macros.
 (gid_to_oct, uid_to_oct): Use them as substitutes. (finish_header): Do not
 assume that UINTMAX_TO_OCT appends a space. (dump_file): Check whether the
 file changed as we read it.
",79,data/crawl/tar/hunk_443.cpp,,,data/crawl/tar/old_hunk_443.cpp,data/crawl/tar/new_hunk_443.cpp,[],"[5, 8, 10]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=d434121129037355261deae143cb05cabd370cb4,25 Jan 1999,"GNU fileutils 4.0i
",316,data/crawl/tar/hunk_444.cpp,,,data/crawl/tar/old_hunk_444.cpp,data/crawl/tar/new_hunk_444.cpp,[],[169]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=48be206fbfd81aa56056d7327fa8295e27011e5f,31 Oct 1997,"(to_oct): Now static.  Value arg is now uintmax_t.  Accept new args
 giving name of type of octal field, for error messages.  Report an error if
 the value is too large to fit in the field. (gid_to_oct, major_to_oct,
 minor_to_oct, mode_to_oct, off_to_oct, size_to_oct, time_to_oct, uid_to_oct,
 uintmax_to_oct): New functions.

(write_eot, write_long, finish_header, deal_with_sparse,
finish_sparse_file, dump_file): Use dev_t, off_t, ssize_t, size_t when
appropriate.  Remove now-useless casts.  Use unsigned long to print
*_t types, except use STRINGIFY_BIGINT for off_t.

(find_new_file_size): 1st arg is now off_t*.
(finish_sparse_file): Args now use off_t, not long.
Check for lseek error.
(create_archive, dump_file): Cast -1 to dev_t when necessary.
(dump_file): Device arg is now dev_t.
Avoid overflow when testing whether file has holes
by using the new ST_NBLOCKSIZE macro.",281,data/crawl/tar/hunk_445.cpp,,,data/crawl/tar/old_hunk_445.cpp,data/crawl/tar/new_hunk_445.cpp,[],[37]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=48be206fbfd81aa56056d7327fa8295e27011e5f,31 Oct 1997,"(to_oct): Now static.  Value arg is now uintmax_t.  Accept new args
 giving name of type of octal field, for error messages.  Report an error if
 the value is too large to fit in the field. (gid_to_oct, major_to_oct,
 minor_to_oct, mode_to_oct, off_to_oct, size_to_oct, time_to_oct, uid_to_oct,
 uintmax_to_oct): New functions.

(write_eot, write_long, finish_header, deal_with_sparse,
finish_sparse_file, dump_file): Use dev_t, off_t, ssize_t, size_t when
appropriate.  Remove now-useless casts.  Use unsigned long to print
*_t types, except use STRINGIFY_BIGINT for off_t.

(find_new_file_size): 1st arg is now off_t*.
(finish_sparse_file): Args now use off_t, not long.
Check for lseek error.
(create_archive, dump_file): Cast -1 to dev_t when necessary.
(dump_file): Device arg is now dev_t.
Avoid overflow when testing whether file has holes
by using the new ST_NBLOCKSIZE macro.",281,data/crawl/tar/hunk_446.cpp,,,data/crawl/tar/old_hunk_446.cpp,data/crawl/tar/new_hunk_446.cpp,[4],"[6, 16]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=48be206fbfd81aa56056d7327fa8295e27011e5f,31 Oct 1997,"(to_oct): Now static.  Value arg is now uintmax_t.  Accept new args
 giving name of type of octal field, for error messages.  Report an error if
 the value is too large to fit in the field. (gid_to_oct, major_to_oct,
 minor_to_oct, mode_to_oct, off_to_oct, size_to_oct, time_to_oct, uid_to_oct,
 uintmax_to_oct): New functions.

(write_eot, write_long, finish_header, deal_with_sparse,
finish_sparse_file, dump_file): Use dev_t, off_t, ssize_t, size_t when
appropriate.  Remove now-useless casts.  Use unsigned long to print
*_t types, except use STRINGIFY_BIGINT for off_t.

(find_new_file_size): 1st arg is now off_t*.
(finish_sparse_file): Args now use off_t, not long.
Check for lseek error.
(create_archive, dump_file): Cast -1 to dev_t when necessary.
(dump_file): Device arg is now dev_t.
Avoid overflow when testing whether file has holes
by using the new ST_NBLOCKSIZE macro.",281,data/crawl/tar/hunk_447.cpp,,,data/crawl/tar/old_hunk_447.cpp,data/crawl/tar/new_hunk_447.cpp,[3],[4]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=48be206fbfd81aa56056d7327fa8295e27011e5f,31 Oct 1997,"(to_oct): Now static.  Value arg is now uintmax_t.  Accept new args
 giving name of type of octal field, for error messages.  Report an error if
 the value is too large to fit in the field. (gid_to_oct, major_to_oct,
 minor_to_oct, mode_to_oct, off_to_oct, size_to_oct, time_to_oct, uid_to_oct,
 uintmax_to_oct): New functions.

(write_eot, write_long, finish_header, deal_with_sparse,
finish_sparse_file, dump_file): Use dev_t, off_t, ssize_t, size_t when
appropriate.  Remove now-useless casts.  Use unsigned long to print
*_t types, except use STRINGIFY_BIGINT for off_t.

(find_new_file_size): 1st arg is now off_t*.
(finish_sparse_file): Args now use off_t, not long.
Check for lseek error.
(create_archive, dump_file): Cast -1 to dev_t when necessary.
(dump_file): Device arg is now dev_t.
Avoid overflow when testing whether file has holes
by using the new ST_NBLOCKSIZE macro.",281,data/crawl/tar/hunk_448.cpp,,,data/crawl/tar/old_hunk_448.cpp,data/crawl/tar/new_hunk_448.cpp,[9],[11]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=48be206fbfd81aa56056d7327fa8295e27011e5f,31 Oct 1997,"(to_oct): Now static.  Value arg is now uintmax_t.  Accept new args
 giving name of type of octal field, for error messages.  Report an error if
 the value is too large to fit in the field. (gid_to_oct, major_to_oct,
 minor_to_oct, mode_to_oct, off_to_oct, size_to_oct, time_to_oct, uid_to_oct,
 uintmax_to_oct): New functions.

(write_eot, write_long, finish_header, deal_with_sparse,
finish_sparse_file, dump_file): Use dev_t, off_t, ssize_t, size_t when
appropriate.  Remove now-useless casts.  Use unsigned long to print
*_t types, except use STRINGIFY_BIGINT for off_t.

(find_new_file_size): 1st arg is now off_t*.
(finish_sparse_file): Args now use off_t, not long.
Check for lseek error.
(create_archive, dump_file): Cast -1 to dev_t when necessary.
(dump_file): Device arg is now dev_t.
Avoid overflow when testing whether file has holes
by using the new ST_NBLOCKSIZE macro.",281,data/crawl/tar/hunk_449.cpp,,,data/crawl/tar/old_hunk_449.cpp,data/crawl/tar/new_hunk_449.cpp,[2],[2]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=48be206fbfd81aa56056d7327fa8295e27011e5f,31 Oct 1997,"(to_oct): Now static.  Value arg is now uintmax_t.  Accept new args
 giving name of type of octal field, for error messages.  Report an error if
 the value is too large to fit in the field. (gid_to_oct, major_to_oct,
 minor_to_oct, mode_to_oct, off_to_oct, size_to_oct, time_to_oct, uid_to_oct,
 uintmax_to_oct): New functions.

(write_eot, write_long, finish_header, deal_with_sparse,
finish_sparse_file, dump_file): Use dev_t, off_t, ssize_t, size_t when
appropriate.  Remove now-useless casts.  Use unsigned long to print
*_t types, except use STRINGIFY_BIGINT for off_t.

(find_new_file_size): 1st arg is now off_t*.
(finish_sparse_file): Args now use off_t, not long.
Check for lseek error.
(create_archive, dump_file): Cast -1 to dev_t when necessary.
(dump_file): Device arg is now dev_t.
Avoid overflow when testing whether file has holes
by using the new ST_NBLOCKSIZE macro.",281,data/crawl/tar/hunk_450.cpp,,,data/crawl/tar/old_hunk_450.cpp,data/crawl/tar/new_hunk_450.cpp,[6],[7]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=48be206fbfd81aa56056d7327fa8295e27011e5f,31 Oct 1997,"(to_oct): Now static.  Value arg is now uintmax_t.  Accept new args
 giving name of type of octal field, for error messages.  Report an error if
 the value is too large to fit in the field. (gid_to_oct, major_to_oct,
 minor_to_oct, mode_to_oct, off_to_oct, size_to_oct, time_to_oct, uid_to_oct,
 uintmax_to_oct): New functions.

(write_eot, write_long, finish_header, deal_with_sparse,
finish_sparse_file, dump_file): Use dev_t, off_t, ssize_t, size_t when
appropriate.  Remove now-useless casts.  Use unsigned long to print
*_t types, except use STRINGIFY_BIGINT for off_t.

(find_new_file_size): 1st arg is now off_t*.
(finish_sparse_file): Args now use off_t, not long.
Check for lseek error.
(create_archive, dump_file): Cast -1 to dev_t when necessary.
(dump_file): Device arg is now dev_t.
Avoid overflow when testing whether file has holes
by using the new ST_NBLOCKSIZE macro.",281,data/crawl/tar/hunk_451.cpp,,,data/crawl/tar/old_hunk_451.cpp,data/crawl/tar/new_hunk_451.cpp,[3],[6]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=48be206fbfd81aa56056d7327fa8295e27011e5f,31 Oct 1997,"(to_oct): Now static.  Value arg is now uintmax_t.  Accept new args
 giving name of type of octal field, for error messages.  Report an error if
 the value is too large to fit in the field. (gid_to_oct, major_to_oct,
 minor_to_oct, mode_to_oct, off_to_oct, size_to_oct, time_to_oct, uid_to_oct,
 uintmax_to_oct): New functions.

(write_eot, write_long, finish_header, deal_with_sparse,
finish_sparse_file, dump_file): Use dev_t, off_t, ssize_t, size_t when
appropriate.  Remove now-useless casts.  Use unsigned long to print
*_t types, except use STRINGIFY_BIGINT for off_t.

(find_new_file_size): 1st arg is now off_t*.
(finish_sparse_file): Args now use off_t, not long.
Check for lseek error.
(create_archive, dump_file): Cast -1 to dev_t when necessary.
(dump_file): Device arg is now dev_t.
Avoid overflow when testing whether file has holes
by using the new ST_NBLOCKSIZE macro.",281,data/crawl/tar/hunk_452.cpp,,,data/crawl/tar/old_hunk_452.cpp,data/crawl/tar/new_hunk_452.cpp,[6],[6]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=241bbee81b2136a216dab74ab1322ae6dd07555f,31 Oct 1997,"(read_and, list_archive, read_header, decode_mode, print_header,
 print_for_mkdir): Use mode_t, off_t, size_t when appropriate.  Remove
 now-useless casts.  Use unsigned long to print *_t types, except use
 STRINGIFY_BIGINT for off_t.

(read_header): Check for overflow when converting header size.

(from_oct): Now static.  Now returns uintmax_t.  `where' arg is now
const char *.  Size arg is now size_t.  Now takes new type and maxval
args.  Compute result using uintmax_t, not long.  Report error if
field does not contain octal number in range.
(gid_from_oct, major_from_oct, minor_from_oct, mode_from_oct,
off_from_oct, size_from_oct, time_from_oct, uid_from_oct,
uintmax_from_oct): New functions.

(stringify_uintmax_t_backwards): New function.

(decode_mode, print_for_mkdir): Mode arg is now mode_t.
(skip_file): Offset arg is now off_t.",246,data/crawl/tar/hunk_453.cpp,,,data/crawl/tar/old_hunk_453.cpp,data/crawl/tar/new_hunk_453.cpp,[3],[3]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=241bbee81b2136a216dab74ab1322ae6dd07555f,31 Oct 1997,"(read_and, list_archive, read_header, decode_mode, print_header,
 print_for_mkdir): Use mode_t, off_t, size_t when appropriate.  Remove
 now-useless casts.  Use unsigned long to print *_t types, except use
 STRINGIFY_BIGINT for off_t.

(read_header): Check for overflow when converting header size.

(from_oct): Now static.  Now returns uintmax_t.  `where' arg is now
const char *.  Size arg is now size_t.  Now takes new type and maxval
args.  Compute result using uintmax_t, not long.  Report error if
field does not contain octal number in range.
(gid_from_oct, major_from_oct, minor_from_oct, mode_from_oct,
off_from_oct, size_from_oct, time_from_oct, uid_from_oct,
uintmax_from_oct): New functions.

(stringify_uintmax_t_backwards): New function.

(decode_mode, print_for_mkdir): Mode arg is now mode_t.
(skip_file): Offset arg is now off_t.",246,data/crawl/tar/hunk_454.cpp,,,data/crawl/tar/old_hunk_454.cpp,data/crawl/tar/new_hunk_454.cpp,[],"[14, 37, 46]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=49086e2770abfa6ad6a7647e2d0707b607ee1bf8,31 Oct 1997,"(newdir_umask, current_umask): Now mode_t. (extract_sparse_file):
 Args now use off_t.

(set_mode, set_stat, make_directories, extract_sparse_file,
extract_archive): Use off_t, size_t, ssize_t when appropriate.  Remove
now-useless casts.  Use unsigned long to print *_t types, except use
STRINGIFY_BIGINT for off_t.",130,data/crawl/tar/hunk_455.cpp,,,data/crawl/tar/old_hunk_455.cpp,data/crawl/tar/new_hunk_455.cpp,[4],[4]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=49086e2770abfa6ad6a7647e2d0707b607ee1bf8,31 Oct 1997,"(newdir_umask, current_umask): Now mode_t. (extract_sparse_file):
 Args now use off_t.

(set_mode, set_stat, make_directories, extract_sparse_file,
extract_archive): Use off_t, size_t, ssize_t when appropriate.  Remove
now-useless casts.  Use unsigned long to print *_t types, except use
STRINGIFY_BIGINT for off_t.",130,data/crawl/tar/hunk_456.cpp,,,data/crawl/tar/old_hunk_456.cpp,data/crawl/tar/new_hunk_456.cpp,"[3, 9]","[3, 11]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=49086e2770abfa6ad6a7647e2d0707b607ee1bf8,31 Oct 1997,"(newdir_umask, current_umask): Now mode_t. (extract_sparse_file):
 Args now use off_t.

(set_mode, set_stat, make_directories, extract_sparse_file,
extract_archive): Use off_t, size_t, ssize_t when appropriate.  Remove
now-useless casts.  Use unsigned long to print *_t types, except use
STRINGIFY_BIGINT for off_t.",130,data/crawl/tar/hunk_457.cpp,,,data/crawl/tar/old_hunk_457.cpp,data/crawl/tar/new_hunk_457.cpp,[3],[3]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=49086e2770abfa6ad6a7647e2d0707b607ee1bf8,31 Oct 1997,"(newdir_umask, current_umask): Now mode_t. (extract_sparse_file):
 Args now use off_t.

(set_mode, set_stat, make_directories, extract_sparse_file,
extract_archive): Use off_t, size_t, ssize_t when appropriate.  Remove
now-useless casts.  Use unsigned long to print *_t types, except use
STRINGIFY_BIGINT for off_t.",130,data/crawl/tar/hunk_458.cpp,,,data/crawl/tar/old_hunk_458.cpp,data/crawl/tar/new_hunk_458.cpp,[2],[2]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=49086e2770abfa6ad6a7647e2d0707b607ee1bf8,31 Oct 1997,"(newdir_umask, current_umask): Now mode_t. (extract_sparse_file):
 Args now use off_t.

(set_mode, set_stat, make_directories, extract_sparse_file,
extract_archive): Use off_t, size_t, ssize_t when appropriate.  Remove
now-useless casts.  Use unsigned long to print *_t types, except use
STRINGIFY_BIGINT for off_t.",130,data/crawl/tar/hunk_459.cpp,,,data/crawl/tar/old_hunk_459.cpp,data/crawl/tar/new_hunk_459.cpp,"[6, 9]","[6, 11]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=49086e2770abfa6ad6a7647e2d0707b607ee1bf8,31 Oct 1997,"(newdir_umask, current_umask): Now mode_t. (extract_sparse_file):
 Args now use off_t.

(set_mode, set_stat, make_directories, extract_sparse_file,
extract_archive): Use off_t, size_t, ssize_t when appropriate.  Remove
now-useless casts.  Use unsigned long to print *_t types, except use
STRINGIFY_BIGINT for off_t.",130,data/crawl/tar/hunk_460.cpp,,,data/crawl/tar/old_hunk_460.cpp,data/crawl/tar/new_hunk_460.cpp,"[14, 17]","[14, 17]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=49086e2770abfa6ad6a7647e2d0707b607ee1bf8,31 Oct 1997,"(newdir_umask, current_umask): Now mode_t. (extract_sparse_file):
 Args now use off_t.

(set_mode, set_stat, make_directories, extract_sparse_file,
extract_archive): Use off_t, size_t, ssize_t when appropriate.  Remove
now-useless casts.  Use unsigned long to print *_t types, except use
STRINGIFY_BIGINT for off_t.",130,data/crawl/tar/hunk_461.cpp,,,data/crawl/tar/old_hunk_461.cpp,data/crawl/tar/new_hunk_461.cpp,[0],[0]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=49086e2770abfa6ad6a7647e2d0707b607ee1bf8,31 Oct 1997,"(newdir_umask, current_umask): Now mode_t. (extract_sparse_file):
 Args now use off_t.

(set_mode, set_stat, make_directories, extract_sparse_file,
extract_archive): Use off_t, size_t, ssize_t when appropriate.  Remove
now-useless casts.  Use unsigned long to print *_t types, except use
STRINGIFY_BIGINT for off_t.",130,data/crawl/tar/hunk_462.cpp,,,data/crawl/tar/old_hunk_462.cpp,data/crawl/tar/new_hunk_462.cpp,[2],[2]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=88ea940c0e3db80904f2405b01f1a3d01c522859,31 Oct 1997,"(check_decimal): Now returns 1 if successful, 0 otherwise, and
 returns uintmax_t value into new arg.  Check for arithmetic overflow.
 (decode_options): Avoid overflow if record_size fits in size_t but not int.
 Check for overflow on user or group ids.
",55,data/crawl/tar/hunk_463.cpp,,,data/crawl/tar/old_hunk_463.cpp,data/crawl/tar/new_hunk_463.cpp,[2],[2]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=88ea940c0e3db80904f2405b01f1a3d01c522859,31 Oct 1997,"(check_decimal): Now returns 1 if successful, 0 otherwise, and
 returns uintmax_t value into new arg.  Check for arithmetic overflow.
 (decode_options): Avoid overflow if record_size fits in size_t but not int.
 Check for overflow on user or group ids.
",55,data/crawl/tar/hunk_464.cpp,,,data/crawl/tar/old_hunk_464.cpp,data/crawl/tar/new_hunk_464.cpp,[4],[6]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=88ea940c0e3db80904f2405b01f1a3d01c522859,31 Oct 1997,"(check_decimal): Now returns 1 if successful, 0 otherwise, and
 returns uintmax_t value into new arg.  Check for arithmetic overflow.
 (decode_options): Avoid overflow if record_size fits in size_t but not int.
 Check for overflow on user or group ids.
",55,data/crawl/tar/hunk_465.cpp,,,data/crawl/tar/old_hunk_465.cpp,data/crawl/tar/new_hunk_465.cpp,[4],[6]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=3289dce5520299aeca677b1fc18383961a112949,25 Apr 1997,"GNU tar 1.12
",230,data/crawl/tar/hunk_466.cpp,,,data/crawl/tar/old_hunk_466.cpp,data/crawl/tar/new_hunk_466.cpp,[],[58]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=b7890ac7573e6df20fa843fd85400072b5638c28,25 Apr 1997,"GNU tar 1.12
",1227,data/crawl/tar/hunk_467.cpp,,,data/crawl/tar/old_hunk_467.cpp,data/crawl/tar/new_hunk_467.cpp,[],"[203, 215, 379, 653]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=5e0e89eac1a00a2edb87ea7b69f1f38c2b1249e1,25 Apr 1997,"GNU tar 1.12
",2453,data/crawl/tar/hunk_468.cpp,,,data/crawl/tar/old_hunk_468.cpp,data/crawl/tar/new_hunk_468.cpp,"[41, 679, 686, 690, 693, 698, 702]","[32, 293, 298, 303, 316, 330, 346, 359, 367, 378, 393, 399, 403, 415, 432, 839, 849, 851, 865, 998, 1002, 1006, 1190]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=3e3d9b7e3962df782fd733ea9dd2fe2be37f58d6,25 Apr 1997,"GNU tar 1.12
",336,data/crawl/tar/hunk_469.cpp,,,data/crawl/tar/old_hunk_469.cpp,data/crawl/tar/new_hunk_469.cpp,[],"[181, 259]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=27e87f4f2f4d49328c328fd55fa087d8a4507168,25 Apr 1997,"GNU tar 1.12
",4615,data/crawl/tar/hunk_470.cpp,,,data/crawl/tar/old_hunk_470.cpp,data/crawl/tar/new_hunk_470.cpp,[],[615]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=27e87f4f2f4d49328c328fd55fa087d8a4507168,25 Apr 1997,"GNU tar 1.12
",4615,data/crawl/tar/hunk_471.cpp,,,data/crawl/tar/old_hunk_471.cpp,data/crawl/tar/new_hunk_471.cpp,"[466, 473, 482, 483]","[14, 401, 412, 440, 443, 459, 462]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=27e87f4f2f4d49328c328fd55fa087d8a4507168,25 Apr 1997,"GNU tar 1.12
",4615,data/crawl/tar/hunk_472.cpp,,,data/crawl/tar/old_hunk_472.cpp,data/crawl/tar/new_hunk_472.cpp,[],"[479, 507, 530, 542]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=27e87f4f2f4d49328c328fd55fa087d8a4507168,25 Apr 1997,"GNU tar 1.12
",4615,data/crawl/tar/hunk_473.cpp,,,data/crawl/tar/old_hunk_473.cpp,data/crawl/tar/new_hunk_473.cpp,[],"[95, 351, 364, 381, 441, 601, 625, 695, 700]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=3728196fa69fb0908f5c175d750978d1423b8340,24 Apr 1997,"GNU tar 1.12
",481,data/crawl/tar/hunk_474.cpp,,,data/crawl/tar/old_hunk_474.cpp,data/crawl/tar/new_hunk_474.cpp,[],"[418, 457, 473]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=70b61d565b35d3c97f071177995f55c33d0cfdd0,24 Apr 1997,"GNU tar 1.12
",715,data/crawl/tar/hunk_475.cpp,,,data/crawl/tar/old_hunk_475.cpp,data/crawl/tar/new_hunk_475.cpp,[],"[185, 230, 445, 455, 495, 512, 532, 585, 597, 674, 705]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=093b8189300dcbdb8a7cd836a2986199664f3c89,24 Apr 1997,"GNU tar 1.12
",11150,data/crawl/tar/hunk_476.cpp,,,data/crawl/tar/old_hunk_476.cpp,data/crawl/tar/new_hunk_476.cpp,"[206, 1659, 1754, 2806, 2925, 2926, 2929, 2947]","[1251, 2072, 3180, 3325, 5001, 7494, 7706, 7707, 7710]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=818c240503f808e12705dafb1f69077cdd10053b,23 Apr 1997,"GNU tar 1.12
",1525,data/crawl/tar/hunk_477.cpp,,,data/crawl/tar/old_hunk_477.cpp,data/crawl/tar/new_hunk_477.cpp,[],"[106, 147, 175, 181, 190, 243, 328, 337, 347, 350, 424, 579, 629, 664, 667, 706, 738, 788, 821, 847, 923, 972, 982]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=be2c991f7ba04ec7b5306b7fa8ee5bfe6c6ee4ea,22 Apr 1997,"GNU tar 1.12
",471,data/crawl/tar/hunk_478.cpp,,,data/crawl/tar/old_hunk_478.cpp,data/crawl/tar/new_hunk_478.cpp,[],"[79, 82]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=5540d5aaff399b947f097772be9c5ebc39c8a7d5,22 Apr 1997,"tar 1.13
",194,data/crawl/tar/hunk_479.cpp,,,data/crawl/tar/old_hunk_479.cpp,data/crawl/tar/new_hunk_479.cpp,[],"[67, 133, 137, 156, 160, 164]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=768c69b838a4e84b715363a7dcf4128b3cd9ce4b,22 Apr 1997,"GNU tar 1.12
",983,data/crawl/tar/hunk_480.cpp,,,data/crawl/tar/old_hunk_480.cpp,data/crawl/tar/new_hunk_480.cpp,[],"[364, 619, 638, 871]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=eed93f9a58ed79ec07028b85d54804f042bf7af9,19 Apr 1997,"GNU tar 1.12
",688,data/crawl/tar/hunk_481.cpp,,,data/crawl/tar/old_hunk_481.cpp,data/crawl/tar/new_hunk_481.cpp,"[250, 255, 262, 265, 268, 271, 278]","[54, 130, 160]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=10797cd27b13ab09e09fa5b994dda79564b8e6b4,18 Apr 1997,"GNU tar 1.12
",573,data/crawl/tar/hunk_482.cpp,,,data/crawl/tar/old_hunk_482.cpp,data/crawl/tar/new_hunk_482.cpp,"[64, 229]",[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=a4f7f5bcc6c027b22c409ffad0410a8d55d0a305,15 Apr 1997,"GNU tar 1.12
",299,data/crawl/tar/hunk_483.cpp,,,data/crawl/tar/old_hunk_483.cpp,data/crawl/tar/new_hunk_483.cpp,[],"[60, 96, 115, 122]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=799e915cd3a889058eeefeaa25391cfe1eae7c3a,15 Apr 1997,"GNU tar 1.12
",1052,data/crawl/tar/hunk_484.cpp,,,data/crawl/tar/old_hunk_484.cpp,data/crawl/tar/new_hunk_484.cpp,[],"[96, 102, 109, 129, 158, 317, 325, 347, 355, 391, 410, 413, 414, 479, 486, 493, 495, 499, 503, 521, 525, 550, 570, 574, 585, 604, 608, 615, 654, 667, 712, 717, 736, 745, 755, 765, 783, 862]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=3c08ec43171c8538a2ef0f75b3455cf83f1f75f6,11 Nov 1996,"GNU tar 1.12
",775,data/crawl/tar/hunk_485.cpp,,,data/crawl/tar/old_hunk_485.cpp,data/crawl/tar/new_hunk_485.cpp,[],"[119, 124, 127, 287]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=e4fa391028f3fd141eeb4dd94afb7fd60bc5e593,16 Nov 1994,"*** empty log message ***
",1923,data/crawl/tar/hunk_486.cpp,,,data/crawl/tar/old_hunk_486.cpp,data/crawl/tar/new_hunk_486.cpp,[6],[6]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=e4fa391028f3fd141eeb4dd94afb7fd60bc5e593,16 Nov 1994,"*** empty log message ***
",1923,data/crawl/tar/hunk_487.cpp,,,data/crawl/tar/old_hunk_487.cpp,data/crawl/tar/new_hunk_487.cpp,"[9, 15]","[9, 17]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=e4fa391028f3fd141eeb4dd94afb7fd60bc5e593,16 Nov 1994,"*** empty log message ***
",1923,data/crawl/tar/hunk_488.cpp,,,data/crawl/tar/old_hunk_488.cpp,data/crawl/tar/new_hunk_488.cpp,[3],[4]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=e4fa391028f3fd141eeb4dd94afb7fd60bc5e593,16 Nov 1994,"*** empty log message ***
",1923,data/crawl/tar/hunk_489.cpp,,,data/crawl/tar/old_hunk_489.cpp,data/crawl/tar/new_hunk_489.cpp,[3],[4]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=e4fa391028f3fd141eeb4dd94afb7fd60bc5e593,16 Nov 1994,"*** empty log message ***
",1923,data/crawl/tar/hunk_490.cpp,,,data/crawl/tar/old_hunk_490.cpp,data/crawl/tar/new_hunk_490.cpp,[3],[4]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=54694ee258a974a6c8a9710718500f58c74cd257,16 Nov 1994,"Initial revision
",1352,data/crawl/tar/hunk_491.cpp,,,data/crawl/tar/old_hunk_491.cpp,data/crawl/tar/new_hunk_491.cpp,[],"[62, 609, 624, 629, 639, 650, 660]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=26aaccb0e954970d22da4dc9ef5d5b5c4f27c260,16 Nov 1994,"Initial revision
",466,data/crawl/tar/hunk_492.cpp,,,data/crawl/tar/old_hunk_492.cpp,data/crawl/tar/new_hunk_492.cpp,[],"[168, 169, 171]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=6556021bfdacadb3759670964e91911320c870d9,16 Nov 1994,"*** empty log message ***
",462,data/crawl/tar/hunk_493.cpp,,,data/crawl/tar/old_hunk_493.cpp,data/crawl/tar/new_hunk_493.cpp,[35],[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=6556021bfdacadb3759670964e91911320c870d9,16 Nov 1994,"*** empty log message ***
",462,data/crawl/tar/hunk_494.cpp,,,data/crawl/tar/old_hunk_494.cpp,data/crawl/tar/new_hunk_494.cpp,[],[11]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=9e95900ce7813c06b3a330267428266aec39ef0e,16 Nov 1994,"*** empty log message ***
",1177,data/crawl/tar/hunk_495.cpp,,,data/crawl/tar/old_hunk_495.cpp,data/crawl/tar/new_hunk_495.cpp,[],[54]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=9e95900ce7813c06b3a330267428266aec39ef0e,16 Nov 1994,"*** empty log message ***
",1177,data/crawl/tar/hunk_496.cpp,,,data/crawl/tar/old_hunk_496.cpp,data/crawl/tar/new_hunk_496.cpp,[503],[]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=7ac3cfedacb2f9a113fd80fd57443c703e3567e9,16 Nov 1994,"Initial revision
",3961,data/crawl/tar/hunk_497.cpp,,,data/crawl/tar/old_hunk_497.cpp,data/crawl/tar/new_hunk_497.cpp,[],"[789, 1770, 1865, 2924, 3043, 3044, 3047, 3065]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=9044aa8d8155f8450b9b7a7e15346e039c134cab,16 Nov 1994,"*** empty log message ***
",499,data/crawl/tar/hunk_498.cpp,,,data/crawl/tar/old_hunk_498.cpp,data/crawl/tar/new_hunk_498.cpp,"[24, 31, 40, 41]","[24, 31, 40, 41]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=474bce237b31fb74928557de16fedea9fd61407f,16 Nov 1994,"*** empty log message ***
",2094,data/crawl/tar/hunk_499.cpp,,,data/crawl/tar/old_hunk_499.cpp,data/crawl/tar/new_hunk_499.cpp,"[22, 29, 35, 36]","[24, 31, 40, 41]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=32841f71caa7337a62ce231ed787609003bce86f,16 Nov 1994,"*** empty log message ***
",1369,data/crawl/tar/hunk_500.cpp,,,data/crawl/tar/old_hunk_500.cpp,data/crawl/tar/new_hunk_500.cpp,[],"[1170, 1177, 1183, 1184]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=3887d2a5c3619e7d9b2d0e456df9a98853e11804,16 Nov 1994,"*** empty log message ***
",354,data/crawl/tar/hunk_501.cpp,,,data/crawl/tar/old_hunk_501.cpp,data/crawl/tar/new_hunk_501.cpp,"[19, 176]","[19, 184]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=5a64fdfa1f23ab659575116213853553dead1700,16 Nov 1994,"*** empty log message ***
",30,data/crawl/tar/hunk_502.cpp,,,data/crawl/tar/old_hunk_502.cpp,data/crawl/tar/new_hunk_502.cpp,[],[33]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=42d9112d1e64a930a3a2bd184414cba4df80ef7a,16 Nov 1994,"Initial revision
",254,data/crawl/tar/hunk_503.cpp,,,data/crawl/tar/old_hunk_503.cpp,data/crawl/tar/new_hunk_503.cpp,[],[200]
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=276133e43102fdcd9aa5a2e793c0796d692e7b8e,16 Nov 1994,"*** empty log message ***
",860,data/crawl/tar/hunk_504.cpp,,,data/crawl/tar/old_hunk_504.cpp,data/crawl/tar/new_hunk_504.cpp,"[172, 175, 180, 183, 186, 189, 196]","[185, 190, 197, 200, 203, 206, 213]"
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=4356a8387b4dd80914f930786a3fc469f2ed0739,16 Nov 1994,"Initial revision
",545,data/crawl/tar/hunk_505.cpp,,,data/crawl/tar/old_hunk_505.cpp,data/crawl/tar/new_hunk_505.cpp,[],"[235, 238, 243, 246, 249, 252, 259]"
