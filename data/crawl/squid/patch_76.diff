@@ -6,9 +6,6 @@ config.guess
 config.h.in
 config.sub
 configure
-helpers/negotiate_auth/squid_kerb_auth/depcomp
-helpers/negotiate_auth/squid_kerb_auth/missing
-helpers/negotiate_auth/squid_kerb_auth/ska_config.h.in
 install-sh
 ltmain.sh
 Makefile.in
@@ -665,320 +665,256 @@ errors/errorpage.css:
 
 ==============================================================================
 
-helpers/basic_auth/DB/:
-
-Copyright (C) 2007 Henrik Nordstrom <henrik@henriknordstrom.net>
-Copyright (C) 2010 Luis Daniel Lucio Quiroz <dlucio@okay.com.mx> (Joomla support)
-This program is free software. You may redistribute copies of it under the
-terms of the GNU General Public License version 2, or (at youropinion) any
-later version.
-
-==============================================================================
+icons/silk/:
 
-helpers/basic_auth/fake/fake.cc,
-helpers/defines.h,
-helpers/url_rewrite/fake/:
+  Silk icon set 1.3
+  _________________________________________
+  Mark James
+  http://www.famfamfam.com/lab/icons/silk/
+  _________________________________________
 
-/*
- * Copyright (c) 2009-2014, Treehouse Networks Ltd. New Zealand
- * All rights reserved.
- *
- * Redistribution and use in source and binary forms, with or without
- * modification, are permitted provided that the following conditions
- * are met:
- *
- * 1. Redistributions of source code must retain the above copyright
- * notice, this list of conditions and the following disclaimer.
- *
- * 2. Redistributions in binary form must reproduce the above copyright
- * notice, this list of conditions and the following disclaimer in the
- * documentation and/or other materials provided with the distribution.
- *
- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
- * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
- * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
- * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
- * COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
- * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
- * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
- * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
- * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
- * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
- * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
- * POSSIBILITY OF SUCH DAMAGE.
- */
+  This work is licensed under a
+  Creative Commons Attribution 2.5 License.
+  [ http://creativecommons.org/licenses/by/2.5/ ]
 
-==============================================================================
+  This means you may use it for any purpose,
+  and make any changes you like.
+  All I ask is that you include a link back
+  to this page in your credits.
 
-helpers/basic_auth/getpwnam/:
+  Are you using this icon set? Send me an email
+  (including a link or picture if available) to
+  mjames@gmail.com
 
- * AUTHOR: Erik Hofman <erik.hofman@a1.nl>
- *         Robin Elfrink <robin@a1.nl>
+  Any other questions about this icon set please
+  contact mjames@gmail.com
 
-==============================================================================
 
-helpers/basic_auth/LDAP/:
+  The icons can also be used under Creative Commons Attribution 3.0 License
+  (Hi Debian folks!) with the following requirements:
 
- * License: squid_ldap_auth is free software; you can redistribute it
- * and/or modify it under the terms of the GNU General Public License
- * as published by the Free Software Foundation; either version 2,
- * or (at your option) any later version.
+    As an author, I would appreciate a reference to my authorship of
+    the Silk icon set contents within a readme file or equivalent
+    documentation for the software which includes the set or a subset
+    of the icons contained within. 
 
 ==============================================================================
 
-helpers/basic_auth/NCSA/basic_ncsa_auth.8:
+icons/SN.png:
 
-This file is distributed in the hope that it will be useful,
-but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See
-the GNU General Public License for more details.
+  Squid NOW icon - copyright Squid Project
 
-You should have received a copy of the GNU General Public License
-along with this file; if not, write to the Free Software
-Foundation, Inc., 59 Temple Place, Suite 330, Boston,
-MA 02111\-1307 USA
+  This work is licensed under the
+  Creative Commons Attribution-ShareAlike 3.0 Unported Liscence (CC BY-SA 3.0)
+  [ http://creativecommons.org/licenses/by-sa/3.0/ ]
 
 ==============================================================================
 
-helpers/basic_auth/NCSA/crypt_md5.cc:
+include/asn1.h,
+include/snmp_api_error.h,
+include/snmp_api_util.h,
+include/snmp_coexist.h,
+include/snmp_error.h,
+include/snmp-internal.h,
+include/snmp-mib.h,
+include/snmp_msg.h,
+include/snmp_pdu.h,
+include/snmp_session.h,
+include/snmp_vars.h,
+include/snmp.h,
+lib/snmplib/asn1.c,
+lib/snmplib/coexistence.c,
+lib/snmplib/snmp_api.c,
+lib/snmplib/snmp_api_error.c,
+lib/snmplib/snmp_error.c,
+lib/snmplib/snmp_msg.c,
+lib/snmplib/snmp_pdu.c,
+lib/snmplib/snmp_vars.c:
 
- * Shamelessly stolen from linux-pam, and adopted to work with
- * OpenSSL md5 implementation and any magic string
+ *           Copyright 1997 by Carnegie Mellon University
  *
- * Origin2: md5_crypt.c,v 1.1.1.1 2000/01/03 17:34:46 gafton Exp
+ *                       All Rights Reserved
  *
- * ----------------------------------------------------------------------------
- * "THE BEER-WARE LICENSE" (Revision 42):
- * <phk@login.dknet.dk> wrote this file.  As long as you retain this notice you
- * can do whatever you want with this stuff. If we meet some day, and you think
- * this stuff is worth it, you can buy me a beer in return.   Poul-Henning Kamp
- * ----------------------------------------------------------------------------
+ * Permission to use, copy, modify, and distribute this software and its
+ * documentation for any purpose and without fee is hereby granted,
+ * provided that the above copyright notice appear in all copies and that
+ * both that copyright notice and this permission notice appear in
+ * supporting documentation, and that the name of CMU not be
+ * used in advertising or publicity pertaining to distribution of the
+ * software without specific, written prior permission.
  *
- * Origin: Id: crypt.c,v 1.3 1995/05/30 05:42:22 rgrimes Exp
+ * CMU DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING
+ * ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT SHALL
+ * CMU BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR
+ * ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
+ * WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
+ * ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
+ * SOFTWARE.
 
 ==============================================================================
 
-helpers/basic_auth/NIS/:
+include/base64.h:
+lib/base64.c:
+
+/*
+   Copyright (C) 2002 Niels MÃ¶ller, Dan Egnor
 
- * Adapted By Rabellino Sergio (rabellino@di.unito.it) For Solaris 2.x
- * From NCSA Authentication module
+   This file is part of GNU Nettle.
 
- * Written By Rabellino Sergio (rabellino@di.unito.it) For Solaris 2.x
+   GNU Nettle is free software: you can redistribute it and/or
+   modify it under the terms of either:
 
-==============================================================================
+     * the GNU Lesser General Public License as published by the Free
+       Software Foundation; either version 3 of the License, or (at your
+       option) any later version.
 
-helpers/basic_auth/PAM/:
+   or
 
- * Copyright (C) 1999,2002,2003 Henrik Nordstrom <hno@squid-cache.org>
- *
- *  This program is free software; you can redistribute it and/or modify
- *  it under the terms of the GNU General Public License as published by
- *  the Free Software Foundation; either version 2 of the License, or
- *  (at your option) any later version.
- *
- *  This program is distributed in the hope that it will be useful,
- *  but WITHOUT ANY WARRANTY; without even the implied warranty of
- *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- *  GNU General Public License for more details.
- *
- *  You should have received a copy of the GNU General Public License
- *  along with this program; if not, write to the Free Software
- *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111, USA.
+     * the GNU General Public License as published by the Free
+       Software Foundation; either version 2 of the License, or (at your
+       option) any later version.
 
-==============================================================================
+   or both in parallel, as here.
 
-helpers/basic_auth/POP3/,
-helpers/external_acl/session/:
+   GNU Nettle is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   General Public License for more details.
 
-# Copyright (C) 2006 Henrik Nordstrom <henrik@henriknordstrom.net>
-#
-# This program is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2 of the License, or
-# (at your option) any later version.
-#
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-#
-# You should have received a copy of the GNU General Public License
-# along with this program; if not, write to the Free Software
-# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111, USA.
+   You should have received copies of the GNU General Public License and
+   the GNU Lesser General Public License along with this program.  If
+   not, see http://www.gnu.org/licenses/.
+*/
 
 ==============================================================================
 
-helpers/basic_auth/RADIUS/:
+include/heap.h,
+lib/heap.cc:
 
-This program is based on code from Livingston Enterprises, Inc. and parts are
+ * AUTHOR: John Dilley, Hewlett Packard
 
-		COPYRIGHT NOTICE SQUID_RAD_AUTH
+ * Copyright (C) 1999 by Hewlett Packard
 
-Copyright (C) 1992-1995 Livingston Enterprises, Inc and Cistron Internet Services
-B.V. who both have given permission to modify and distribute those parts. The new
-parts of the code is Copyright (C) 1998 R.M. van Selm <selm@cistron.nl> with
-modifications Copyright (C) 2004 Henrik Nordstrom <hno@squid-cache.org>
+==============================================================================
 
-Permission to use, copy, modify, and distribute this software for any purpose
-and without fee is hereby granted, provided that this copyright and permission
-notice appear on all copies and supporting documentation, the name of
-Livingston Enterprises, Inc. not be used in advertising or publicity pertaining
-to distribution of the program without specific prior permission, and notice be
-given in supporting documentation that copying and distribution is by
-permission of Livingston Enterprises, Inc. and Cistron Internet Services B.V.
+include/md5.h,
+lib/md5.c:
 
-Neither Livingston Enterprises, Inc. nor Cistron Internet Services B.V. nor I
-(R.M. van Selm) make representations about the suitability of this software for
-any purpose. It isprovided "as is" without express or implied warranty.
+ * The algorithm is due to Ron Rivest.  This code was
+ * written by Colin Plumb in 1993, no copyright is claimed.
+ * This code is in the public domain; do with it what you wish.
 
-Marc van Selm <selm@cistron.nl>
+==============================================================================
 
+include/parse.h,
+include/snmp_api.h,
+lib/snmplib/parse.c:
 
-		COPYRIGHT NOTICE SQUID_RAD_AUTH Documentation
+/***********************************************************
+        Copyright 1989 by Carnegie Mellon University
 
-Copyright (C) 2004 Henrik Nordstrom
+                      All Rights Reserved
 
-Permission to use, copy, modify, and distribute this software for any purpose
-and without fee is hereby granted, provided that this copyright and permission
-notice appear on all copies and supporting documentation, the name of Henrik
-Nordstrom. not be used in advertising or publicity pertaining to distribution
-of the program without specific prior permission.
+Permission to use, copy, modify, and distribute this software and its
+documentation for any purpose and without fee is hereby granted,
+provided that the above copyright notice appear in all copies and that
+both that copyright notice and this permission notice appear in
+supporting documentation, and that the name of CMU not be
+used in advertising or publicity pertaining to distribution of the
+software without specific, written prior permission.
 
-The author makes no representations about the suitability of this documentation
-for any purpose. It isprovided "as is" without express or implied warranty.
+CMU DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING
+ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT SHALL
+CMU BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR
+ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
+WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
+ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
+SOFTWARE.
+******************************************************************/
 
-Henrik Nordstrom <hno@squid-cache.org>
+==============================================================================
 
-		COPYRIGHT NOTICE CISTRON RADIUS
+include/radix.h,
+lib/radix.c:
 
-/* This program is based on code from Livingston Enterprises, Inc. and parts are
- * Copyright (C) 1992-1995 Livingston Enterprises, Inc who has given permission
- * to modify and distribute those parts. The new code is Copyright (C) 1996-1997
- * Cistron Internet Services B.V.
+ * Copyright (c) 1988, 1989, 1993
+ *      The Regents of the University of California.  All rights reserved.
  *
- * Permission to use, copy, modify, and distribute this software for any purpose
- * and without fee is hereby granted, provided that this copyright and permission
- * notice appear on all copies and supporting documentation, the name of
- * Livingston Enterprises, Inc. not be used in advertising or publicity pertaining
- * to distribution of the program without specific prior permission, and notice be
- * given in supporting documentation that copying and distribution is by
- * permission of Livingston Enterprises, Inc. and Cistron Internet Services B.V.
-
- * Neither Livingston Enterprises, Inc. nor Cistron Internet Services B.V. make
- * representations about the suitability of this software for any purpose. It is
- * provided "as is" without express or implied warranty.
-*/
-
-		COPYRIGHT NOTICE LIVINGSTON RADIUS 1.16
-
-/*
- *
- *	RADIUS
- *	Remote Authentication Dial In User Service
- *
- *
- *	Livingston Enterprises, Inc.
- *	6920 Koll Center Parkway
- *	Pleasanton, CA   94566
- *
- *	Copyright 1992 Livingston Enterprises, Inc.
- *
- *	Permission to use, copy, modify, and distribute this software for any
- *	purpose and without fee is hereby granted, provided that this
- *	copyright and permission notice appear on all copies and supporting
- *	documentation, the name of Livingston Enterprises, Inc. not be used
- *	in advertising or publicity pertaining to distribution of the
- *	program without specific prior permission, and notice be given
- *	in supporting documentation that copying and distribution is by
- *	permission of Livingston Enterprises, Inc.   
- *
- *	Livingston Enterprises, Inc. makes no representations about
- *	the suitability of this software for any purpose.  It is
- *	provided "as is" without express or implied warranty.
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ * 1. Redistributions of source code must retain the above copyright
+ *    notice, this list of conditions and the following disclaimer.
+ * 2. Redistributions in binary form must reproduce the above copyright
+ *    notice, this list of conditions and the following disclaimer in the
+ *    documentation and/or other materials provided with the distribution.
+ * 3. Neither the name of the University nor the names of its contributors
+ *    may be used to endorse or promote products derived from this software
+ *    without specific prior written permission.
  *
+ * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
+ * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
+ * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
+ * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
+ * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
+ * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
+ * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
+ * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
+ * SUCH DAMAGE.
 
+==============================================================================
 
-		COPYRIGHT NOTICE RSA Data Security MD5 (md5.c)
-
-MD5C.C - RSA Data Security, Inc., MD5 message-digest algorithm
-
-Copyright (C) 1991-2, RSA Data Security, Inc. Created 1991. All
-rights reserved.
-
-License to copy and use this software is granted provided that it
-is identified as the "RSA Data Security, Inc. MD5 Message-Digest
-Algorithm" in all material mentioning or referencing this software
-or this function.
-
-License is also granted to make and use derivative works provided
-that such works are identified as "derived from the RSA Data
-Security, Inc. MD5 Message-Digest Algorithm" in all material
-mentioning or referencing the derived work.
+include/rfc2617.h,
+lib/rfc2617.c:
 
-RSA Data Security, Inc. makes no representations concerning either
-the merchantability of this software or the suitability of this
-software for any particular purpose. It is provided "as is"
-without express or implied warranty of any kind.
+ * The source in this file is derived from the reference implementation
+ * in RFC 2617.
+ * RFC 2617 is Copyright (C) The Internet Society (1999).  All Rights Reserved.
 
-These notices must be retained in any copies of any part of this
-documentation and/or software.
+==============================================================================
 
+include/snmp_client.h,
+include/snmp_impl.h,
+lib/snmplib/mib.c:
 
-/*
- * The new parts of the code is Copyright (C) 1998 R.M. van Selm <selm@cistron.nl>
- * with modifications
- *      Copyright (C) 2004 Henrik Nordstrom <hno@squid-cache.org>
- *      Copyright (C) 2006 Henrik Nordstrom <hno@squid-cache.org>
- */
+/***********************************************************
+        Copyright 1988, 1989 by Carnegie Mellon University
 
-==============================================================================
+                      All Rights Reserved
 
-helpers/basic_auth/SASL/:
+Permission to use, copy, modify, and distribute this software and its
+documentation for any purpose and without fee is hereby granted,
+provided that the above copyright notice appear in all copies and that
+both that copyright notice and this permission notice appear in
+supporting documentation, and that the name of CMU not be
+used in advertising or publicity pertaining to distribution of the
+software without specific, written prior permission.
 
- * Copyright (C) 2002 Ian Castle <ian.castle@coldcomfortfarm.net>
- *
- *  This program is free software; you can redistribute it and/or modify
- *  it under the terms of the GNU General Public License as published by
- *  the Free Software Foundation; either version 2 of the License, or
- *  (at your option) any later version.
- *
- *  This program is distributed in the hope that it will be useful,
- *  but WITHOUT ANY WARRANTY; without even the implied warranty of
- *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- *  GNU General Public License for more details.
- *
- *  You should have received a copy of the GNU General Public License
- *  along with this program; if not, write to the Free Software
- *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111, USA.
+CMU DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING
+ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT SHALL
+CMU BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR
+ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
+WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
+ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
+SOFTWARE.
+******************************************************************/
 
 ==============================================================================
 
-helpers/basic_auth/SMB/:
+include/snmp_util.h:
 
- *  Copyright (C) 1998  Richard Huveneers <richard@hekkihek.hacom.nl>
- *
- *  This program is free software; you can redistribute it and/or modify
- *  it under the terms of the GNU General Public License as published by
- *  the Free Software Foundation; either version 2 of the License, or
- *  (at your option) any later version.
- *
- *  This program is distributed in the hope that it will be useful,
- *  but WITHOUT ANY WARRANTY; without even the implied warranty of
- *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- *  GNU General Public License for more details.
- *
- *  You should have received a copy of the GNU General Public License
- *  along with this program; if not, write to the Free Software
+ * Copyright (c) 1997 FT/CNET/DES/GRL Olivier Montanuy
 
 ==============================================================================
 
-helpers/basic_auth/SMB_LM/:
+lib/rfcnb/,
+lib/smblib/:
 
- * (C) 2000 Antonino Iannella, Stellar-X Pty Ltd
- * Released under GPL, see COPYING-2.0 for details.
+  Copyright holders: Richard Sharpe, Andrew Tridgell, and Merik Karman
+  with updates by Squid contributors
 
- * Released under GNU Public License
- *
  * This program is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
  * the Free Software Foundation; either version 2 of the License, or
@@ -995,43 +931,49 @@ helpers/basic_auth/SMB_LM/:
 
 ==============================================================================
 
-helpers/basic_auth/SSPI/:
+lib/base64.c::base64_encode():
 
-  Guido Serassio, Torino - Italy
+Adopted from http://ftp.sunet.se/pub2/gnu/vm/base64-encode.c.
+Modified to work with strings instead of files.
 
-  Uses code from -
-    Antonino Iannella 2000
-    Andrew Tridgell 1997
-    Richard Sharpe 1996
-    Bill Welliver 1999
+==============================================================================
 
- * Distributed freely under the terms of the GNU General Public License,
- * version 2 or later. See the file COPYING for licensing details
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
+lib/dirent.c:
 
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111, USA.
+/*
+ * Implement dirent-style opendir(), readdir(), closedir(), rewinddir(),
+ * seekdir() and telldir on Windows - Based on mingw-runtime package sources.
+ * AUTHOR: Guido Serassio <serassio@squid-cache.org>
+ */
+
+/*
+ * Original file info follow:
+ *
+ * dirent.c
+ * This file has no copyright assigned and is placed in the Public Domain.
+ * This file is a part of the mingw-runtime package.
+ * No warranty is given; refer to the file DISCLAIMER within the package.
+ *
+ * Derived from DIRLIB.C by Matt J. Weinstein
+ * This note appears in the DIRLIB.H
+ * DIRLIB.H by M. J. Weinstein   Released to public domain 1-Jan-89
+ *
+ * Updated by Jeremy Bettis <jeremy@hksys.com>
+ * Significantly revised and rewinddir, seekdir and telldir added by Colin
+ * Peters <colin@fu.is.saga-u.ac.jp>
+ *
+ */
 
 ==============================================================================
 
-helpers/digest_auth/eDirectory/digest_ldap.c:
+lib/encrypt.c:
 
- * Copied From Samba-3.0.24 pdb_nds.c and trimmed down to the
- * limited functionality needed to access the plain text password only
- *
- * Original copyright & license follows:
- *
- * Copyright (C) Vince Brimhall                 2004-2005
+ * Copyright (C) 1991 Jochen Obalek
  *
  * This program is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
+ * the Free Software Foundation; either version 2, or (at your option)
+ * any later version.
  *
  * This program is distributed in the hope that it will be useful,
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
@@ -1044,26 +986,90 @@ helpers/digest_auth/eDirectory/digest_ldap.c:
 
 ==============================================================================
 
-helpers/digest_auth/file/,
-helpers/digest_auth/LDAP/:
-
+lib/getopt.c:
 
- * AUTHOR: Robert Collins.
- *
- * Based on ncsa_auth.c by Arjan de Vet <Arjan.deVet@adv.iae.nl>
+/*
+ * Copyright (c) 1987, 1993, 1994
+ *	The Regents of the University of California.  All rights reserved.
  *
- * LDAP backend extension by Flavio Pescuma,
- * MARA Systems AB <flavio@marasystems.com>
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ * 1. Redistributions of source code must retain the above copyright
+ *    notice, this list of conditions and the following disclaimer.
+ * 2. Redistributions in binary form must reproduce the above copyright
+ *    notice, this list of conditions and the following disclaimer in the
+ *    documentation and/or other materials provided with the distribution.
+ * 3. Neither the name of the University nor the names of its contributors
+ *    may be used to endorse or promote products derived from this software
+ *    without specific prior written permission.
  *
- * Example digest authentication program for Squid, based on the original
- * proxy_auth code from client_side.c, written by
- * Jon Thackray <jrmt@uk.gdscorp.com>.
+ * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
+ * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
+ * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
+ * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
+ * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
+ * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
+ * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
+ * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
+ * SUCH DAMAGE.
+ */
 
- * Copyright (c) 2003  Robert Collins  <robertc@squid-cache.org>
+==============================================================================
+
+lib/radix.c:
+
+ *  Adapted from HTSUtils.c in CERN httpd 3.0 (http://info.cern.ch/httpd/)
+ *  by Darren Hardy <hardy@cs.colorado.edu>, November 1994.
 
 ==============================================================================
 
-helpers/external_acl/AD_group/:
+lib/Splay.cc:
+
+ * based on ftp://ftp.cs.cmu.edu/user/sleator/splaying/top-down-splay.c
+ * http://bobo.link.cs.cmu.edu/cgi-bin/splay/splay-cgi.pl
+
+==============================================================================
+
+libltdl/:
+
+   Copyright (C) Free Software Foundation, Inc.
+
+GNU Libltdl is free software; you can redistribute it and/or
+modify it under the terms of the GNU Lesser General Public
+License as published by the Free Software Foundation; either
+version 2 of the License, or (at your option) any later version.
+
+As a special exception to the GNU Lesser General Public License,
+if you distribute this file as part of a program or library that
+is built using GNU Libtool, you may include this file under the
+same distribution terms that you use for the rest of that program.
+
+GNU Libltdl is distributed in the hope that it will be useful,
+but WITHOUT ANY WARRANTY; without even the implied warranty of
+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+GNU Lesser General Public License for more details.
+
+You should have received a copy of the GNU Lesser General Public
+License along with GNU Libltdl; see the file COPYING.LIB.  If not, a
+copy can be downloaded from  http://www.gnu.org/licenses/lgpl.html,
+or obtained by writing to the Free Software Foundation, Inc.,
+51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
+
+
+==============================================================================
+
+src/access_log.cc:
+
+mcast_encode() in src/access_log.c is derived from Mark Atkinson's
+(mark_a@cix.compulink.co.uk) "Tiny Encryption Algorithm".
+http://www.io.com/~paulhart/game/algorithms/tea.html
+
+==============================================================================
+
+src/acl/external/AD_group/:
 
  * (C)2008-2009 Guido Serassio - Acme Consulting S.r.l.
  *
@@ -1094,7 +1100,7 @@ helpers/external_acl/AD_group/:
 
 ==============================================================================
 
-helpers/external_acl/delayer/:
+src/acl/external/delayer/:
 
 (C) 2014 Francesco Chemolli <kinkie@squid-cache.org>
 
@@ -1104,7 +1110,7 @@ later version.
 
 ==============================================================================
 
-helpers/external_acl/eDirectory_userip/ext_edirectory_userip_acl.cc:
+src/acl/external/eDirectory_userip/ext_edirectory_userip_acl.cc:
 
  * Copyright (C) 2009-2011 Chad E. Naugle
  *
@@ -1129,7 +1135,7 @@ helpers/external_acl/eDirectory_userip/ext_edirectory_userip_acl.cc:
 
 ==============================================================================
 
-helpers/external_acl/file_userip/:
+src/acl/external/file_userip/:
 
  * Copyright (C) 2002 Rodrigo Campos
  *
@@ -1151,9 +1157,9 @@ helpers/external_acl/file_userip/:
 
 ==============================================================================
 
-helpers/external_acl/kerberos_ldap_group/,
-helpers/negotiate_auth/kerberos/,
-helpers/negotiate_auth/wrapper/:
+src/acl/external/kerberos_ldap_group/,
+src/auth/negotiate/kerberos/,
+src/auth/negotiate/wrapper/:
 
  * Author: Markus Moeller (markus_moeller at compuserve.com)
  *
@@ -1180,7 +1186,7 @@ helpers/negotiate_auth/wrapper/:
 
 ==============================================================================
 
-helpers/external_acl/kerberos_ldap_group/support_ldap.cc:
+src/acl/external/kerberos_ldap_group/support_ldap.cc:
 
 /* get_attributes is partly from OpenLDAP Software <http://www.openldap.org/>.
  *
@@ -1198,7 +1204,7 @@ helpers/external_acl/kerberos_ldap_group/support_ldap.cc:
 
 ==============================================================================
 
-helpers/external_acl/LDAP_group/:
+src/acl/external/LDAP_group/:
 
  * Version 2.17
  *
@@ -1221,7 +1227,7 @@ helpers/external_acl/LDAP_group/:
 
 ==============================================================================
 
-helpers/external_acl/LM_group/:
+src/acl/external/LM_group/:
 
  * (C)2002,2005 Guido Serassio - Acme Consulting S.r.l.
  *
@@ -1249,7 +1255,7 @@ helpers/external_acl/LM_group/:
 
 ==============================================================================
 
-helpers/external_acl/SQL_session/:
+src/acl/external/SQL_session/:
 
 Copyright (C) 2012 Amos Jeffries <amosjeffries@squid-cache.org>
 Based on original work in DB_auth by Henrik Nordstrom <henrik@henriknordstrom.net>
@@ -1260,7 +1266,7 @@ later version.
 
 ==============================================================================
 
-helpers/external_acl/time_quota/:
+src/acl/external/time_quota/:
 
  * Copyright (C) 2011 Dr. Tilmann Bubeck <t.bubeck@reinform.de>
  *
@@ -1280,7 +1286,7 @@ helpers/external_acl/time_quota/:
 
 ==============================================================================
 
-helpers/external_acl/unix_group/:
+src/acl/external/unix_group/:
 
  * This is a helper for the external ACL interface for Squid Cache
  * Copyright (C) 2002 Rodrigo Albani de Campos (rodrigo@geekbunker.org)
@@ -1304,7 +1310,7 @@ helpers/external_acl/unix_group/:
 
 ==============================================================================
 
-helpers/external_acl/wbinfo_group/wbinfo_group.pl:
+src/acl/external/wbinfo_group/wbinfo_group.pl:
 
  This program is put in the public domain by Jerry Murdock 
  <jmurdock@itraktech.com>. It is distributed in the hope that it will
@@ -1313,376 +1319,320 @@ helpers/external_acl/wbinfo_group/wbinfo_group.pl:
 
 ==============================================================================
 
-helpers/log_daemon/DB/:
-
-  Copyright (C) 2008 by Marcello Romani
+src/auth/basic/DB/:
 
-  This library is free software; you can redistribute it and/or modify
-  it under the same terms as Perl itself, either Perl version 5.8.8 or,
-  at your option, any later version of Perl 5 you may have available.
+Copyright (C) 2007 Henrik Nordstrom <henrik@henriknordstrom.net>
+Copyright (C) 2010 Luis Daniel Lucio Quiroz <dlucio@okay.com.mx> (Joomla support)
+This program is free software. You may redistribute copies of it under the
+terms of the GNU General Public License version 2, or (at youropinion) any
+later version.
 
 ==============================================================================
 
-helpers/negotiate_auth/SSPI/,
-helpers/ntlm/SSPI/:
+src/auth/basic/fake/fake.cc,
+src/helper/protocol_defines.h,
+src/http/url_rewriters/fake/:
 
- * (C)2005 Guido Serassio - Acme Consulting S.r.l.
- *
- * Authors:
- *  Guido Serassio <guido.serassio@acmeconsulting.it>
- *  Acme Consulting S.r.l., Italy <http://www.acmeconsulting.it>
- *
- * With contributions from others mentioned in the change history section
- * below.
- *
- * Based on previous work of Francesco Chemolli and Robert Collins.
+/*
+ * Copyright (c) 2009-2014, Treehouse Networks Ltd. New Zealand
+ * All rights reserved.
  *
- * Dependencies: Windows 2000 and later.
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
  *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
+ * 1. Redistributions of source code must retain the above copyright
+ * notice, this list of conditions and the following disclaimer.
  *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
+ * 2. Redistributions in binary form must reproduce the above copyright
+ * notice, this list of conditions and the following disclaimer in the
+ * documentation and/or other materials provided with the distribution.
  *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111, USA.
-
-==============================================================================
-
-helpers/ntlm_auth/fake/ntlm_fake_auth.cc:
-
- * AUTHOR: Andrew Doran <ad@interlude.eu.org>
- * AUTHOR: Robert Collins <rbtcollins@hotmail.com>
- * AUTHOR: Guido Serassio <guido.serassio@acmeconsulting.it>
-
- * Example ntlm authentication program for Squid, based on the
- * original proxy_auth code from client_side.c, written by
- * Jon Thackray <jrmt@uk.gdscorp.com>. Initial ntlm code by
- * Andrew Doran <ad@interlude.eu.org>.
-
-
-==============================================================================
-
-helpers/ntlm_auth/fake/ntlm_fake_auth.pl.in:
-
-# (C) 2000 Francesco Chemolli <kinkie@kame.usr.dsi.unimi.it>
-# Distributed freely under the terms of the GNU General Public License,
-# version 2 or later. For the licensing terms, see the file COPYING that
-# came with Squid.
+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
+ * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
+ * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
+ * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
+ * COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
+ * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
+ * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
+ * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
+ * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
+ * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+ * POSSIBILITY OF SUCH DAMAGE.
+ */
 
 ==============================================================================
 
-helpers/ntlm_auth/smb_lm/:
+src/auth/basic/getpwnam/:
 
- * (C) 2000 Francesco Chemolli <kinkie@kame.usr.dsi.unimi.it>
- * Distributed freely under the terms of the GNU General Public License,
- * version 2 or later. See the file COPYING for licensing details
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
-
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111, USA.
+ * AUTHOR: Erik Hofman <erik.hofman@a1.nl>
+ *         Robin Elfrink <robin@a1.nl>
 
 ==============================================================================
 
-helpers/ssl/cert_valid.pl:
-
-(C) 2012 The Measurement Factory, Author: Tsantilas Christos
+src/auth/basic/LDAP/:
 
-This program is free software. You may redistribute copies of it under the
-terms of the GNU General Public License version 2, or (at your opinion) any
-later version.
+ * License: squid_ldap_auth is free software; you can redistribute it
+ * and/or modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation; either version 2,
+ * or (at your option) any later version.
 
 ==============================================================================
 
-helpers/storeid_rewrite/file/:
-
-Copyright (C) 2013 Alan Mizrahi <alan@mizrahi.com.ve>
-Based on code from Eliezer Croitoru <eliezer@ngtech.co.il>
+src/auth/basic/NCSA/basic_ncsa_auth.8:
 
-This program is free software; you can redistribute it and/or modify
-it under the terms of the GNU General Public License as published by
-the Free Software Foundation; either version 2 of the License, or
-(at your option) any later version.
-
-This program is distributed in the hope that it will be useful,
+This file is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU General Public License for more details.
+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See
+the GNU General Public License for more details.
 
 You should have received a copy of the GNU General Public License
-along with this program; if not, write to the Free Software
-Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307, USA.
-
-==============================================================================
-
-helpers/url_rewrite/LFS/rredir.cc:
-
- * version 0.1, 7 sep 1996
- * - initial version (Richard Huveneers <Richard.Huveneers@hekkihek.hacom.nl>)
+along with this file; if not, write to the Free Software
+Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+MA 02111\-1307 USA
 
 ==============================================================================
 
-icons/silk/:
+src/auth/basic/NCSA/crypt_md5.cc:
 
-  Silk icon set 1.3
-  _________________________________________
-  Mark James
-  http://www.famfamfam.com/lab/icons/silk/
-  _________________________________________
-
-  This work is licensed under a
-  Creative Commons Attribution 2.5 License.
-  [ http://creativecommons.org/licenses/by/2.5/ ]
-
-  This means you may use it for any purpose,
-  and make any changes you like.
-  All I ask is that you include a link back
-  to this page in your credits.
-
-  Are you using this icon set? Send me an email
-  (including a link or picture if available) to
-  mjames@gmail.com
-
-  Any other questions about this icon set please
-  contact mjames@gmail.com
-
-
-  The icons can also be used under Creative Commons Attribution 3.0 License
-  (Hi Debian folks!) with the following requirements:
-
-    As an author, I would appreciate a reference to my authorship of
-    the Silk icon set contents within a readme file or equivalent
-    documentation for the software which includes the set or a subset
-    of the icons contained within. 
+ * Shamelessly stolen from linux-pam, and adopted to work with
+ * OpenSSL md5 implementation and any magic string
+ *
+ * Origin2: md5_crypt.c,v 1.1.1.1 2000/01/03 17:34:46 gafton Exp
+ *
+ * ----------------------------------------------------------------------------
+ * "THE BEER-WARE LICENSE" (Revision 42):
+ * <phk@login.dknet.dk> wrote this file.  As long as you retain this notice you
+ * can do whatever you want with this stuff. If we meet some day, and you think
+ * this stuff is worth it, you can buy me a beer in return.   Poul-Henning Kamp
+ * ----------------------------------------------------------------------------
+ *
+ * Origin: Id: crypt.c,v 1.3 1995/05/30 05:42:22 rgrimes Exp
 
 ==============================================================================
 
-icons/SN.png:
+src/auth/basic/NIS/:
 
-  Squid NOW icon - copyright Squid Project
+ * Adapted By Rabellino Sergio (rabellino@di.unito.it) For Solaris 2.x
+ * From NCSA Authentication module
 
-  This work is licensed under the
-  Creative Commons Attribution-ShareAlike 3.0 Unported Liscence (CC BY-SA 3.0)
-  [ http://creativecommons.org/licenses/by-sa/3.0/ ]
+ * Written By Rabellino Sergio (rabellino@di.unito.it) For Solaris 2.x
 
 ==============================================================================
 
-include/asn1.h,
-include/snmp_api_error.h,
-include/snmp_api_util.h,
-include/snmp_coexist.h,
-include/snmp_error.h,
-include/snmp-internal.h,
-include/snmp-mib.h,
-include/snmp_msg.h,
-include/snmp_pdu.h,
-include/snmp_session.h,
-include/snmp_vars.h,
-include/snmp.h,
-lib/snmplib/asn1.c,
-lib/snmplib/coexistence.c,
-lib/snmplib/snmp_api.c,
-lib/snmplib/snmp_api_error.c,
-lib/snmplib/snmp_error.c,
-lib/snmplib/snmp_msg.c,
-lib/snmplib/snmp_pdu.c,
-lib/snmplib/snmp_vars.c:
+src/auth/basic/PAM/:
 
- *           Copyright 1997 by Carnegie Mellon University
+ * Copyright (C) 1999,2002,2003 Henrik Nordstrom <hno@squid-cache.org>
  *
- *                       All Rights Reserved
+ *  This program is free software; you can redistribute it and/or modify
+ *  it under the terms of the GNU General Public License as published by
+ *  the Free Software Foundation; either version 2 of the License, or
+ *  (at your option) any later version.
  *
- * Permission to use, copy, modify, and distribute this software and its
- * documentation for any purpose and without fee is hereby granted,
- * provided that the above copyright notice appear in all copies and that
- * both that copyright notice and this permission notice appear in
- * supporting documentation, and that the name of CMU not be
- * used in advertising or publicity pertaining to distribution of the
- * software without specific, written prior permission.
+ *  This program is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ *  GNU General Public License for more details.
  *
- * CMU DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING
- * ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT SHALL
- * CMU BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR
- * ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
- * WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
- * ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
- * SOFTWARE.
+ *  You should have received a copy of the GNU General Public License
+ *  along with this program; if not, write to the Free Software
+ *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111, USA.
 
 ==============================================================================
 
-include/base64.h:
-lib/base64.c:
+src/auth/basic/POP3/,
+src/acl/external/session/:
 
-/*
-   Copyright (C) 2002 Niels MÃ¶ller, Dan Egnor
-
-   This file is part of GNU Nettle.
+# Copyright (C) 2006 Henrik Nordstrom <henrik@henriknordstrom.net>
+#
+# This program is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111, USA.
 
-   GNU Nettle is free software: you can redistribute it and/or
-   modify it under the terms of either:
+==============================================================================
 
-     * the GNU Lesser General Public License as published by the Free
-       Software Foundation; either version 3 of the License, or (at your
-       option) any later version.
+src/auth/basic/RADIUS/:
 
-   or
+This program is based on code from Livingston Enterprises, Inc. and parts are
 
-     * the GNU General Public License as published by the Free
-       Software Foundation; either version 2 of the License, or (at your
-       option) any later version.
+		COPYRIGHT NOTICE SQUID_RAD_AUTH
 
-   or both in parallel, as here.
+Copyright (C) 1992-1995 Livingston Enterprises, Inc and Cistron Internet Services
+B.V. who both have given permission to modify and distribute those parts. The new
+parts of the code is Copyright (C) 1998 R.M. van Selm <selm@cistron.nl> with
+modifications Copyright (C) 2004 Henrik Nordstrom <hno@squid-cache.org>
 
-   GNU Nettle is distributed in the hope that it will be useful,
-   but WITHOUT ANY WARRANTY; without even the implied warranty of
-   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-   General Public License for more details.
+Permission to use, copy, modify, and distribute this software for any purpose
+and without fee is hereby granted, provided that this copyright and permission
+notice appear on all copies and supporting documentation, the name of
+Livingston Enterprises, Inc. not be used in advertising or publicity pertaining
+to distribution of the program without specific prior permission, and notice be
+given in supporting documentation that copying and distribution is by
+permission of Livingston Enterprises, Inc. and Cistron Internet Services B.V.
 
-   You should have received copies of the GNU General Public License and
-   the GNU Lesser General Public License along with this program.  If
-   not, see http://www.gnu.org/licenses/.
-*/
+Neither Livingston Enterprises, Inc. nor Cistron Internet Services B.V. nor I
+(R.M. van Selm) make representations about the suitability of this software for
+any purpose. It isprovided "as is" without express or implied warranty.
 
-==============================================================================
+Marc van Selm <selm@cistron.nl>
 
-include/heap.h,
-lib/heap.cc:
 
- * AUTHOR: John Dilley, Hewlett Packard
+		COPYRIGHT NOTICE SQUID_RAD_AUTH Documentation
 
- * Copyright (C) 1999 by Hewlett Packard
+Copyright (C) 2004 Henrik Nordstrom
 
-==============================================================================
+Permission to use, copy, modify, and distribute this software for any purpose
+and without fee is hereby granted, provided that this copyright and permission
+notice appear on all copies and supporting documentation, the name of Henrik
+Nordstrom. not be used in advertising or publicity pertaining to distribution
+of the program without specific prior permission.
 
-include/md5.h,
-lib/md5.c:
+The author makes no representations about the suitability of this documentation
+for any purpose. It isprovided "as is" without express or implied warranty.
 
- * The algorithm is due to Ron Rivest.  This code was
- * written by Colin Plumb in 1993, no copyright is claimed.
- * This code is in the public domain; do with it what you wish.
+Henrik Nordstrom <hno@squid-cache.org>
 
-==============================================================================
+		COPYRIGHT NOTICE CISTRON RADIUS
 
-include/parse.h,
-include/snmp_api.h,
-lib/snmplib/parse.c:
+/* This program is based on code from Livingston Enterprises, Inc. and parts are
+ * Copyright (C) 1992-1995 Livingston Enterprises, Inc who has given permission
+ * to modify and distribute those parts. The new code is Copyright (C) 1996-1997
+ * Cistron Internet Services B.V.
+ *
+ * Permission to use, copy, modify, and distribute this software for any purpose
+ * and without fee is hereby granted, provided that this copyright and permission
+ * notice appear on all copies and supporting documentation, the name of
+ * Livingston Enterprises, Inc. not be used in advertising or publicity pertaining
+ * to distribution of the program without specific prior permission, and notice be
+ * given in supporting documentation that copying and distribution is by
+ * permission of Livingston Enterprises, Inc. and Cistron Internet Services B.V.
 
-/***********************************************************
-        Copyright 1989 by Carnegie Mellon University
+ * Neither Livingston Enterprises, Inc. nor Cistron Internet Services B.V. make
+ * representations about the suitability of this software for any purpose. It is
+ * provided "as is" without express or implied warranty.
+*/
 
-                      All Rights Reserved
+		COPYRIGHT NOTICE LIVINGSTON RADIUS 1.16
 
-Permission to use, copy, modify, and distribute this software and its
-documentation for any purpose and without fee is hereby granted,
-provided that the above copyright notice appear in all copies and that
-both that copyright notice and this permission notice appear in
-supporting documentation, and that the name of CMU not be
-used in advertising or publicity pertaining to distribution of the
-software without specific, written prior permission.
+/*
+ *
+ *	RADIUS
+ *	Remote Authentication Dial In User Service
+ *
+ *
+ *	Livingston Enterprises, Inc.
+ *	6920 Koll Center Parkway
+ *	Pleasanton, CA   94566
+ *
+ *	Copyright 1992 Livingston Enterprises, Inc.
+ *
+ *	Permission to use, copy, modify, and distribute this software for any
+ *	purpose and without fee is hereby granted, provided that this
+ *	copyright and permission notice appear on all copies and supporting
+ *	documentation, the name of Livingston Enterprises, Inc. not be used
+ *	in advertising or publicity pertaining to distribution of the
+ *	program without specific prior permission, and notice be given
+ *	in supporting documentation that copying and distribution is by
+ *	permission of Livingston Enterprises, Inc.   
+ *
+ *	Livingston Enterprises, Inc. makes no representations about
+ *	the suitability of this software for any purpose.  It is
+ *	provided "as is" without express or implied warranty.
+ *
 
-CMU DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING
-ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT SHALL
-CMU BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR
-ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
-WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
-ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
-SOFTWARE.
-******************************************************************/
 
-==============================================================================
+		COPYRIGHT NOTICE RSA Data Security MD5 (md5.c)
 
-include/radix.h,
-lib/radix.c:
+MD5C.C - RSA Data Security, Inc., MD5 message-digest algorithm
 
- * Copyright (c) 1988, 1989, 1993
- *      The Regents of the University of California.  All rights reserved.
- *
- * Redistribution and use in source and binary forms, with or without
- * modification, are permitted provided that the following conditions
- * are met:
- * 1. Redistributions of source code must retain the above copyright
- *    notice, this list of conditions and the following disclaimer.
- * 2. Redistributions in binary form must reproduce the above copyright
- *    notice, this list of conditions and the following disclaimer in the
- *    documentation and/or other materials provided with the distribution.
- * 3. Neither the name of the University nor the names of its contributors
- *    may be used to endorse or promote products derived from this software
- *    without specific prior written permission.
- *
- * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
- * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
- * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
- * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
- * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
- * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
- * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
- * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
- * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
- * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
- * SUCH DAMAGE.
+Copyright (C) 1991-2, RSA Data Security, Inc. Created 1991. All
+rights reserved.
 
-==============================================================================
+License to copy and use this software is granted provided that it
+is identified as the "RSA Data Security, Inc. MD5 Message-Digest
+Algorithm" in all material mentioning or referencing this software
+or this function.
 
-include/rfc2617.h,
-lib/rfc2617.c:
+License is also granted to make and use derivative works provided
+that such works are identified as "derived from the RSA Data
+Security, Inc. MD5 Message-Digest Algorithm" in all material
+mentioning or referencing the derived work.
 
- * The source in this file is derived from the reference implementation
- * in RFC 2617.
- * RFC 2617 is Copyright (C) The Internet Society (1999).  All Rights Reserved.
+RSA Data Security, Inc. makes no representations concerning either
+the merchantability of this software or the suitability of this
+software for any particular purpose. It is provided "as is"
+without express or implied warranty of any kind.
 
-==============================================================================
+These notices must be retained in any copies of any part of this
+documentation and/or software.
 
-include/snmp_client.h,
-include/snmp_impl.h,
-lib/snmplib/mib.c:
 
-/***********************************************************
-        Copyright 1988, 1989 by Carnegie Mellon University
+/*
+ * The new parts of the code is Copyright (C) 1998 R.M. van Selm <selm@cistron.nl>
+ * with modifications
+ *      Copyright (C) 2004 Henrik Nordstrom <hno@squid-cache.org>
+ *      Copyright (C) 2006 Henrik Nordstrom <hno@squid-cache.org>
+ */
 
-                      All Rights Reserved
+==============================================================================
 
-Permission to use, copy, modify, and distribute this software and its
-documentation for any purpose and without fee is hereby granted,
-provided that the above copyright notice appear in all copies and that
-both that copyright notice and this permission notice appear in
-supporting documentation, and that the name of CMU not be
-used in advertising or publicity pertaining to distribution of the
-software without specific, written prior permission.
+src/auth/basic/SASL/:
 
-CMU DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING
-ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT SHALL
-CMU BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR
-ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
-WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
-ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
-SOFTWARE.
-******************************************************************/
+ * Copyright (C) 2002 Ian Castle <ian.castle@coldcomfortfarm.net>
+ *
+ *  This program is free software; you can redistribute it and/or modify
+ *  it under the terms of the GNU General Public License as published by
+ *  the Free Software Foundation; either version 2 of the License, or
+ *  (at your option) any later version.
+ *
+ *  This program is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ *  GNU General Public License for more details.
+ *
+ *  You should have received a copy of the GNU General Public License
+ *  along with this program; if not, write to the Free Software
+ *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111, USA.
 
 ==============================================================================
 
-include/snmp_util.h:
+src/auth/basic/SMB/:
 
- * Copyright (c) 1997 FT/CNET/DES/GRL Olivier Montanuy
+ *  Copyright (C) 1998  Richard Huveneers <richard@hekkihek.hacom.nl>
+ *
+ *  This program is free software; you can redistribute it and/or modify
+ *  it under the terms of the GNU General Public License as published by
+ *  the Free Software Foundation; either version 2 of the License, or
+ *  (at your option) any later version.
+ *
+ *  This program is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ *  GNU General Public License for more details.
+ *
+ *  You should have received a copy of the GNU General Public License
+ *  along with this program; if not, write to the Free Software
 
 ==============================================================================
 
-lib/rfcnb/,
-lib/smblib/:
+src/auth/basic/SMB_LM/:
 
-  Copyright holders: Richard Sharpe, Andrew Tridgell, and Merik Karman
-  with updates by Squid contributors
+ * (C) 2000 Antonino Iannella, Stellar-X Pty Ltd
+ * Released under GPL, see COPYING-2.0 for details.
 
+ * Released under GNU Public License
+ *
  * This program is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
  * the Free Software Foundation; either version 2 of the License, or
@@ -1699,49 +1649,43 @@ lib/smblib/:
 
 ==============================================================================
 
-lib/base64.c::base64_encode():
-
-Adopted from http://ftp.sunet.se/pub2/gnu/vm/base64-encode.c.
-Modified to work with strings instead of files.
-
-==============================================================================
+src/auth/basic/SSPI/:
 
-lib/dirent.c:
+  Guido Serassio, Torino - Italy
 
-/*
- * Implement dirent-style opendir(), readdir(), closedir(), rewinddir(),
- * seekdir() and telldir on Windows - Based on mingw-runtime package sources.
- * AUTHOR: Guido Serassio <serassio@squid-cache.org>
- */
+  Uses code from -
+    Antonino Iannella 2000
+    Andrew Tridgell 1997
+    Richard Sharpe 1996
+    Bill Welliver 1999
 
-/*
- * Original file info follow:
- *
- * dirent.c
- * This file has no copyright assigned and is placed in the Public Domain.
- * This file is a part of the mingw-runtime package.
- * No warranty is given; refer to the file DISCLAIMER within the package.
- *
- * Derived from DIRLIB.C by Matt J. Weinstein
- * This note appears in the DIRLIB.H
- * DIRLIB.H by M. J. Weinstein   Released to public domain 1-Jan-89
- *
- * Updated by Jeremy Bettis <jeremy@hksys.com>
- * Significantly revised and rewinddir, seekdir and telldir added by Colin
- * Peters <colin@fu.is.saga-u.ac.jp>
+ * Distributed freely under the terms of the GNU General Public License,
+ * version 2 or later. See the file COPYING for licensing details
  *
- */
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111, USA.
 
 ==============================================================================
 
-lib/encrypt.c:
+src/auth/digest/eDirectory/digest_ldap.c:
 
- * Copyright (C) 1991 Jochen Obalek
+ * Copied From Samba-3.0.24 pdb_nds.c and trimmed down to the
+ * limited functionality needed to access the plain text password only
+ *
+ * Original copyright & license follows:
+ *
+ * Copyright (C) Vince Brimhall                 2004-2005
  *
  * This program is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2, or (at your option)
- * any later version.
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
  *
  * This program is distributed in the hope that it will be useful,
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
@@ -1754,86 +1698,94 @@ lib/encrypt.c:
 
 ==============================================================================
 
-lib/getopt.c:
+src/auth/digest/file/,
+src/auth/digest/LDAP/:
 
-/*
- * Copyright (c) 1987, 1993, 1994
- *	The Regents of the University of California.  All rights reserved.
+
+ * AUTHOR: Robert Collins.
  *
- * Redistribution and use in source and binary forms, with or without
- * modification, are permitted provided that the following conditions
- * are met:
- * 1. Redistributions of source code must retain the above copyright
- *    notice, this list of conditions and the following disclaimer.
- * 2. Redistributions in binary form must reproduce the above copyright
- *    notice, this list of conditions and the following disclaimer in the
- *    documentation and/or other materials provided with the distribution.
- * 3. Neither the name of the University nor the names of its contributors
- *    may be used to endorse or promote products derived from this software
- *    without specific prior written permission.
+ * Based on ncsa_auth.c by Arjan de Vet <Arjan.deVet@adv.iae.nl>
  *
- * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
- * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
- * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
- * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
- * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
- * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
- * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
- * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
- * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
- * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
- * SUCH DAMAGE.
- */
-
-==============================================================================
-
-lib/radix.c:
+ * LDAP backend extension by Flavio Pescuma,
+ * MARA Systems AB <flavio@marasystems.com>
+ *
+ * Example digest authentication program for Squid, based on the original
+ * proxy_auth code from client_side.c, written by
+ * Jon Thackray <jrmt@uk.gdscorp.com>.
 
- *  Adapted from HTSUtils.c in CERN httpd 3.0 (http://info.cern.ch/httpd/)
- *  by Darren Hardy <hardy@cs.colorado.edu>, November 1994.
+ * Copyright (c) 2003  Robert Collins  <robertc@squid-cache.org>
 
 ==============================================================================
 
-lib/Splay.cc:
+src/auth/negotiate/SSPI/,
+src/auth/ntlm/SSPI/:
 
- * based on ftp://ftp.cs.cmu.edu/user/sleator/splaying/top-down-splay.c
- * http://bobo.link.cs.cmu.edu/cgi-bin/splay/splay-cgi.pl
+ * (C)2005 Guido Serassio - Acme Consulting S.r.l.
+ *
+ * Authors:
+ *  Guido Serassio <guido.serassio@acmeconsulting.it>
+ *  Acme Consulting S.r.l., Italy <http://www.acmeconsulting.it>
+ *
+ * With contributions from others mentioned in the change history section
+ * below.
+ *
+ * Based on previous work of Francesco Chemolli and Robert Collins.
+ *
+ * Dependencies: Windows 2000 and later.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111, USA.
 
 ==============================================================================
 
-libltdl/:
+src/auth/ntlm/fake/ntlm_fake_auth.cc:
 
-   Copyright (C) Free Software Foundation, Inc.
+ * AUTHOR: Andrew Doran <ad@interlude.eu.org>
+ * AUTHOR: Robert Collins <rbtcollins@hotmail.com>
+ * AUTHOR: Guido Serassio <guido.serassio@acmeconsulting.it>
 
-GNU Libltdl is free software; you can redistribute it and/or
-modify it under the terms of the GNU Lesser General Public
-License as published by the Free Software Foundation; either
-version 2 of the License, or (at your option) any later version.
+ * Example ntlm authentication program for Squid, based on the
+ * original proxy_auth code from client_side.c, written by
+ * Jon Thackray <jrmt@uk.gdscorp.com>. Initial ntlm code by
+ * Andrew Doran <ad@interlude.eu.org>.
 
-As a special exception to the GNU Lesser General Public License,
-if you distribute this file as part of a program or library that
-is built using GNU Libtool, you may include this file under the
-same distribution terms that you use for the rest of that program.
 
-GNU Libltdl is distributed in the hope that it will be useful,
-but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU Lesser General Public License for more details.
+==============================================================================
 
-You should have received a copy of the GNU Lesser General Public
-License along with GNU Libltdl; see the file COPYING.LIB.  If not, a
-copy can be downloaded from  http://www.gnu.org/licenses/lgpl.html,
-or obtained by writing to the Free Software Foundation, Inc.,
-51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
+src/auth/ntlm/fake/ntlm_fake_auth.pl.in:
 
+# (C) 2000 Francesco Chemolli <kinkie@kame.usr.dsi.unimi.it>
+# Distributed freely under the terms of the GNU General Public License,
+# version 2 or later. For the licensing terms, see the file COPYING that
+# came with Squid.
 
 ==============================================================================
 
-src/access_log.cc:
+src/auth/ntlm/smb_lm/:
 
-mcast_encode() in src/access_log.c is derived from Mark Atkinson's
-(mark_a@cix.compulink.co.uk) "Tiny Encryption Algorithm".
-http://www.io.com/~paulhart/game/algorithms/tea.html
+ * (C) 2000 Francesco Chemolli <kinkie@kame.usr.dsi.unimi.it>
+ * Distributed freely under the terms of the GNU General Public License,
+ * version 2 or later. See the file COPYING for licensing details
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111, USA.
 
 ==============================================================================
 
@@ -1857,6 +1809,23 @@ src/external_acl.c:
 
 ==============================================================================
 
+src/http/url_rewriters/LFS/rredir.cc:
+
+ * version 0.1, 7 sep 1996
+ * - initial version (Richard Huveneers <Richard.Huveneers@hekkihek.hacom.nl>)
+
+==============================================================================
+
+src/log/DB/:
+
+  Copyright (C) 2008 by Marcello Romani
+
+  This library is free software; you can redistribute it and/or modify
+  it under the same terms as Perl itself, either Perl version 5.8.8 or,
+  at your option, any later version of Perl 5 you may have available.
+
+==============================================================================
+
 src/repl/heap/store_heap_replacement.cc:
 
  * AUTHOR: John Dilley
@@ -1869,6 +1838,37 @@ src/repl/heap/store_heap_replacement.cc:
 
 ==============================================================================
 
+src/security/cert_validators/fake/security_fake_certv.pl.in:
+
+(C) 2012 The Measurement Factory, Author: Tsantilas Christos
+
+This program is free software. You may redistribute copies of it under the
+terms of the GNU General Public License version 2, or (at your opinion) any
+later version.
+
+==============================================================================
+
+src/store/id_rewriters/file/:
+
+Copyright (C) 2013 Alan Mizrahi <alan@mizrahi.com.ve>
+Based on code from Eliezer Croitoru <eliezer@ngtech.co.il>
+
+This program is free software; you can redistribute it and/or modify
+it under the terms of the GNU General Public License as published by
+the Free Software Foundation; either version 2 of the License, or
+(at your option) any later version.
+
+This program is distributed in the hope that it will be useful,
+but WITHOUT ANY WARRANTY; without even the implied warranty of
+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+GNU General Public License for more details.
+
+You should have received a copy of the GNU General Public License
+along with this program; if not, write to the Free Software
+Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307, USA.
+
+==============================================================================
+
 tools/helper-mux.pl:
 
 # AUTHOR: Francesco Chemolli <kinkie@squid-cache.org>
@@ -1,3 +1,61 @@
+Changes to squid-4.0.8 (02 Apr 2016):
+
+	- Bug 4459: FHS compliance: move netdb.state and ssl_db to /var/cache/squid
+	- Bug 4458: Behaviour change with external ACL arguments
+	- Bug 4450: wait() related cleanup
+	- Bug 4438: SIGSEGV in memFreeString() destructing SBuf globals on shutdown/restart
+	- Bug 4312: Support disabling collapsed forwarding SMP cooperation
+	- Bug 3826: SMP compatibility with systemd and --foreground option
+	- Bug 1979: Add ACL-driven server_pconn_for_nonretriable squid.conf directive
+	- Bug 7 (partial): Update cached entries on 304 responses
+	- Add reply_header_add directive
+	- HTTP/1.1: Do not prohibit updating Last-Modified on 304 responses
+	- Fix memory leaks of lastAclData and AccessLogentry::url
+	- Fix clang -Winconsistent-missing-override warning
+	- Tests: update test suite for GnuTLS
+	- ... and some documentation updates
+	- ... and some code cleanup and polishing
+	- ... and all fixes from squid 3.5.16
+
+Changes to squid-4.0.7 (23 Feb 2016):
+
+	- Regression Fix: external_acl parameters separated by %20 instead of space
+	- Bug 4432: assertion failed: store.cc:1919: "isEmpty()"
+	- Bug 4111: leave_suid() does not properly handle error codes returned by setuid
+	- Fix propagation of response status line parsing error details
+	- Fix memory leak when the cache of sslcrtvalidator_program is disabled via ttl=0
+	- ... and some code SourceLayout project cleaning
+	- ... and all fixes from squid 3.5.15
+
+Changes to squid-4.0.6 (16 Feb 2016):
+
+	- Regression Bug 4436: Fix DEFAULT_SSL_CRTD
+	- Fix "dial: Ssl::PeerConnector::sslCrtvdHandleReply threw exception: callback != NULL"
+	- ... and some documentation updates
+	- ... and all fixes from squid 3.5.14
+
+Changes to squid-4.0.5 (09 Feb 2016):
+
+	- Regression Bug 4429: http(s)_port options= error message missing characters
+	- Regression Bug 4410: 4.0.4 compile error in basic_ncsa_auth
+	- Regression Bug 4403: helper compile errors after 4.0.4 rev.14454
+	- Regression Bug 4401: compile error on Solaris
+	- Regression Fix: TLS/SSL flags parsing
+	- Regression Fix: cert validadator always disabled in 4.x
+	- Regression Fix: Name-only note ACL stopped matching after 4.0.4 rev.14465 (note -m)
+	- Regression Fix: external_acl problems after 4.0.1 rev.14351
+	- Bug 4409 (partial): compile error when two Heimdal libraries are installed
+	- Bug 4005: Dynamic certificate cache exceeds dynamic_cert_mem_cache_size
+	- SMP: Fix cleanup of a shared memory segment in an unusual configuration
+	- SSL-Bump: Fix step3 splicing.
+	- Add connections_encrypted ACL
+	- Make %<a and %<p details available to [eCAP] RESPMOD services
+	- Rename cert_valid.pl to security_fake_certverify
+	- Rename ssl_crtd helper to security_file_certgen
+	- ... and a lot of code SourceLayout project cleaning
+	- ... and some documentation updates
+	- ... and all fixes from squid 3.5.13 up to rev.13979
+
 Changes to squid-4.0.4 (06 Jan 2016):
 
 	- Regression Bug 4393: compile fails on OS X
@@ -81,6 +139,47 @@ Changes to squid-4.0.1 (14 Oct 2015):
 	- ... and many documentation changes
 	- ... and much code cleanup and polishing
 
+Changes to squid-3.5.16 (02 Apr 2016):
+
+	- Bug 4476: Removed duplicated #include lines
+	- Bug 4452: squid -z segfaults with ufs
+	- Bug 4447:FwdState.cc:447 "serverConnection() == conn" assertion
+	- Bug 4423: adding stdio: prefix to cache_log directive produces FATAL error
+	- Bug 4409: compile error when two Heimdal libraries are installed
+	- Bug 2831: Cache-control: max-age not sent on TCP_IMS_HIT/304
+	- pinger: Fix buffer overflow in Icmp6::Recv
+	- pinger: Fix select(2) to actually use max_fd
+	- pinger: drop capabilities on Linux
+	- Fix memory leak of HttpRequest objects
+	- Fix memory leak when the cache of sslcrtvalidator_program is disabled via ttl=0
+	- Fix assertion failed: Write.cc:41: "!ccb->active()"
+	- Fix crash on shutdown while cleaning up idle ICAP connections
+	- RFC 7725: Add registry entry for 451 status text
+	- ... and some build issues
+
+Changes to squid-3.5.15 (23 Feb 2016):
+
+	- Bug 3870: assertion failed: String.cc: 'len_ + len <65536' in ESI::CustomParser
+	- Fix multiple assertion on String overflows
+	- Fix unit test errors on MacOS
+	- Better handling of huge response headers. Fewer incorrect "Bug #3279" messages.
+	- Log noise reduction for eCAP
+
+Changes to squid-3.5.14 (16 Feb 2016):
+
+	- Bug 4437: Fix Segfault on Certain SSL Handshake Errors
+	- Bug 4431: C code is not compiled with CFLAGS
+	- Bug 4418: FlexibleArray compile error with GCC 6
+	- Bug 4378: assertion failed: DestinationIp.cc:60:
+		'checklist->conn() && checklist->conn()->clientConnection != NULL'
+	- Fix invalid FTP connection handling on blocked content
+	- Fix handling of shared memory left over by Squid crashes or bugs
+	- Fix mgr:config report 'qos_flows mark' output
+	- Fix compile error in CPU affinity
+	- Fix %un logging external ACL username
+	- Avoid more certificate validation memory leaks
+	- ... and some documentation updates
+
 Changes to squid-3.5.13 (06 Jan 2016):
 
 	- Bug 4397: DragonFly BSD, POSIX shared memory is implemented as filepath
@@ -6,12 +6,12 @@
 ##
 
 AUTOMAKE_OPTIONS = dist-bzip2 1.5 foreign
-DIST_SUBDIRS	= compat lib libltdl scripts icons errors contrib doc helpers src test-suite tools
+DIST_SUBDIRS	= compat lib libltdl scripts icons errors contrib doc src test-suite tools
 SUBDIRS		= compat lib
 if ENABLE_LOADABLE_MODULES
 SUBDIRS += libltdl
 endif
-SUBDIRS += scripts icons errors doc helpers src tools test-suite
+SUBDIRS += scripts icons errors doc src tools test-suite
 
 DISTCLEANFILES = include/stamp-h include/stamp-h[0-9]*
 DEFAULT_PINGER = $(libexecdir)/`echo pinger | sed '$(transform);s/$$/$(EXEEXT)/'`
@@ -7,6 +7,11 @@ Augur TBBS Pty Limited
 	Augur TBBS has funded development work towards HTTP/2 support in
 	Squid-4.
 
+Bloomberg L.P.
+
+	Bloomberg L.P. has funded development work towards stabilizing
+	Squid-4.
+
 LaunchPad - http://launchpad.net/
 
 	Provide Bazaar mirroring services and host the Squid-3+ developer
@@ -14,7 +14,7 @@ AC_DEFUN([SQUID_CC_CHECK_ARGUMENT],[
   AC_CACHE_CHECK([whether compiler accepts $2],[$1],
   [{
     AC_REQUIRE([AC_PROG_CC])
-    SAVED_FLAGS="$CFLAGS"
+    SAVED_CFLAGS="$CFLAGS"
     SAVED_CXXFLAGS="$CXXFLAGS"
     CFLAGS="$CFLAGS $2"
     CXXFLAGS="$CXXFLAGS $2"
@@ -38,7 +38,7 @@ AC_DEFUN([SQUID_CC_REQUIRE_ARGUMENT],[
   AC_CACHE_CHECK([whether compiler requires $2],[$1],
   [{
     AC_REQUIRE([AC_PROG_CC])
-    SAVED_FLAGS="$CFLAGS"
+    SAVED_CFLAGS="$CFLAGS"
     SAVED_CXXFLAGS="$CXXFLAGS"
     AC_COMPILE_IFELSE([AC_LANG_PROGRAM($3,$4)],[$1=no],[],[$1=no])
     if test "x$1" != "xno" ; then
@@ -14,8 +14,8 @@ include $(top_srcdir)/src/Common.am
 
 # Port Specific Configurations
 
-noinst_LTLIBRARIES = libcompat-squid.la
-libcompat_squid_la_SOURCES = \
+noinst_LTLIBRARIES = libcompatsquid.la
+libcompatsquid_la_SOURCES = \
 	assert.cc \
 	assert.h \
 	cmsg.h \
@@ -86,7 +86,7 @@ libcompat_squid_la_SOURCES = \
 	os/solaris.h \
 	os/sunos.h
 
-libcompat_squid_la_LIBADD= $(LTLIBOBJS)
+libcompatsquid_la_LIBADD= $(LTLIBOBJS)
 
 check_PROGRAMS += testPreCompiler
 TESTS += testPreCompiler
@@ -22,7 +22,7 @@ some older hacks, and some cases of obsolete algorithms sitting side by side wit
 current equivalent.
 
 \par
-The Portability library libcompat-squid.la has been created to correct the three issues of
+The Portability library libcompatsquid.la has been created to correct the three issues of
 stable build portability, code cleanliness, and clearer licensing.
 
 
@@ -38,7 +38,7 @@ But they are required to meet several other criteria:
       available to be included with the Squid sources and used when required.
 
 \par
-To be built into the libcompat-squid.la as a layer below all Squid-bundled binaries. The
+To be built into the libcompatsquid.la as a layer below all Squid-bundled binaries. The
 code must also qualify by being provided natively by some OS where Squid builds. \br
 Code and Algorithms which do not meet this final criteria are relegated to the slightly
 higher level of basic component, rather than portability.
@@ -71,7 +71,7 @@ handling and memory allocation.
 
 
 \section sec4 Layout
-The internal code structure of libcompat-squid.la files has a hierarchy. The API has a flat
+The internal code structure of libcompatsquid.la files has a hierarchy. The API has a flat
 global scope separate from the file layout. The API is pulled in by including compat/compat.h.
 The strict dependency requirements which exist within the compat API make including an
 individual part separately a risky operation.
@@ -18,9 +18,11 @@
 
 #if !HAVE_CPU_AFFINITY
 /* failing replacements to minimize the number of if-HAVE_CPU_AFFINITYs */
+#if !defined(__cpu_set_t_defined)
 typedef struct {
     int bits;
 } cpu_set_t;
+#endif
 inline int sched_setaffinity(int, size_t, cpu_set_t *) { return ENOTSUP; }
 inline int sched_getaffinity(int, size_t, cpu_set_t *) { return ENOTSUP; }
 #endif /* HAVE_CPU_AFFINITY */
@@ -27,7 +27,7 @@ SQUIDCEXTERN int debug_enabled;
 
 #define debug(X...) \
                      if (debug_enabled) { \
-                         fprintf(stderr, "%s(%d): pid=%ld :", __FILE__, __LINE__, (long)getpid() ); \
+                         fprintf(stderr, "%s(%d): pid=%ld :", __FILE__, __LINE__, static_cast<long>(getpid())); \
                          fprintf(stderr,X); \
                      } else (void)0
 
@@ -86,7 +86,7 @@ xcalloc(size_t n, size_t sz)
     if (p == NULL) {
         if (failure_notify) {
             static char msg[128];
-            snprintf(msg, 128, "xcalloc: Unable to allocate %lu blocks of %lu bytes!\n", (unsigned long)n, (unsigned long)sz);
+            snprintf(msg, 128, "xcalloc: Unable to allocate %" PRIuSIZE " blocks of %" PRIuSIZE " bytes!\n", n, sz);
             failure_notify(msg);
         } else {
             perror("xcalloc");
@@ -117,7 +117,7 @@ xmalloc(size_t sz)
     if (p == NULL) {
         if (failure_notify) {
             static char msg[128];
-            snprintf(msg, 128, "xmalloc: Unable to allocate %lu bytes!\n", (unsigned long)sz);
+            snprintf(msg, 128, "xmalloc: Unable to allocate %" PRIuSIZE " bytes!\n", sz);
             failure_notify(msg);
         } else {
             perror("malloc");
@@ -148,7 +148,7 @@ xrealloc(void *s, size_t sz)
     if (p == NULL) {
         if (failure_notify) {
             static char msg[128];
-            snprintf(msg, 128, "xrealloc: Unable to reallocate %lu bytes!\n", (unsigned long)sz);
+            snprintf(msg, 128, "xrealloc: Unable to reallocate %" PRIuSIZE " bytes!\n", sz);
             failure_notify(msg);
         } else {
             perror("realloc");
@@ -12,6 +12,24 @@
 #if HAVE_CTYPE_H
 #include <ctype.h>
 #endif
+
+#if __cplusplus
+#define xisspace(x) isspace(static_cast<unsigned char>(x))
+#define xtoupper(x) toupper(static_cast<unsigned char>(x))
+#define xtolower(x) tolower(static_cast<unsigned char>(x))
+#define xisdigit(x) isdigit(static_cast<unsigned char>(x))
+#define xisascii(x) isascii(static_cast<unsigned char>(x))
+#define xislower(x) islower(static_cast<unsigned char>(x))
+#define xisalpha(x) isalpha(static_cast<unsigned char>(x))
+#define xisprint(x) isprint(static_cast<unsigned char>(x))
+#define xisalnum(x) isalnum(static_cast<unsigned char>(x))
+#define xiscntrl(x) iscntrl(static_cast<unsigned char>(x))
+#define xispunct(x) ispunct(static_cast<unsigned char>(x))
+#define xisupper(x) isupper(static_cast<unsigned char>(x))
+#define xisxdigit(x) isxdigit(static_cast<unsigned char>(x))
+#define xisgraph(x) isgraph(static_cast<unsigned char>(x))
+
+#else /* ! __cplusplus */
 #define xisspace(x) isspace((unsigned char)x)
 #define xtoupper(x) toupper((unsigned char)x)
 #define xtolower(x) tolower((unsigned char)x)
@@ -26,6 +44,7 @@
 #define xisupper(x) isupper((unsigned char)x)
 #define xisxdigit(x) isxdigit((unsigned char)x)
 #define xisgraph(x) isgraph((unsigned char)x)
+#endif
 
 #endif /* _SQUID_COMPAT_XIS_H */
 
@@ -13,15 +13,9 @@
 #include <errno.h>
 #endif
 
-/** strerror() wrapper replacement.
- *
- * Provides the guarantee that a string is always returned.
- * Where strerror() would have provided NULL this will report the error as unknown.
- */
-#define xstrerror() xstrerr(errno)
-
 /** Provide the textual display of a system error number.
  * A string is always returned.
+ * Where strerror() would have provided NULL this will report the error as unknown.
  * On MS Windows the native Win32 errors are also translated.
  */
 extern const char * xstrerr(int error);
@@ -15,10 +15,7 @@
 char *
 xstrdup(const char *s)
 {
-    size_t sz;
-    char *p;
-
-    if (s == NULL) {
+    if (!s) {
         if (failure_notify) {
             (*failure_notify) ("xstrdup: tried to dup a NULL pointer!\n");
         } else {
@@ -29,8 +26,8 @@ xstrdup(const char *s)
     }
 
     /* copy string, including terminating character */
-    sz = strlen(s) + 1;
-    p = (char *)xmalloc(sz);
+    size_t sz = strlen(s) + 1;
+    char *p = static_cast<char *>(xmalloc(sz));
     memcpy(p, s, sz);
 
     return p;
@@ -58,10 +55,7 @@ xstrncpy(char *dst, const char *src, size_t n)
 char *
 xstrndup(const char *s, size_t n)
 {
-    size_t sz;
-    char *p;
-
-    if (s == NULL) {
+    if (!s) {
         errno = EINVAL;
         if (failure_notify) {
             (*failure_notify) ("xstrndup: tried to dup a NULL pointer!\n");
@@ -71,12 +65,12 @@ xstrndup(const char *s, size_t n)
         exit(1);
     }
 
-    sz = strlen(s) + 1;
+    size_t sz = strlen(s) + 1;
     // size_t is unsigned, as mandated by c99 and c++ standards.
     if (sz > n)
         sz = n;
 
-    p = xstrncpy((char *)xmalloc(sz), s, sz);
+    char *p = xstrncpy(static_cast<char *>(xmalloc(sz)), s, sz);
     return p;
 }
 
@@ -5,7 +5,7 @@
 ## Please see the COPYING and CONTRIBUTORS files for details.
 ##
 
-AC_INIT([Squid Web Proxy],[4.0.4-BZR],[http://bugs.squid-cache.org/],[squid])
+AC_INIT([Squid Web Proxy],[4.0.8-BZR],[http://bugs.squid-cache.org/],[squid])
 AC_PREREQ(2.61)
 AC_CONFIG_HEADERS([include/autoconf.h])
 AC_CONFIG_AUX_DIR(cfgaux)
@@ -345,7 +345,7 @@ dnl TODO: check if the problem will be present in any other newer MinGW release.
     SQUID_CFLAGS="$squid_cv_cc_option_wall -Wpointer-arith -Wwrite-strings -Wmissing-prototypes -Wmissing-declarations -Wcomments -Wshadow"
     ;;
   esac
-  SQUID_CXXFLAGS="$squid_cv_cc_option_wall -Wpointer-arith -Wwrite-strings -Wcomments -Wshadow"
+  SQUID_CXXFLAGS="$squid_cv_cc_option_wall -Wpointer-arith -Wwrite-strings -Wcomments -Wshadow -Woverloaded-virtual"
 else
   SQUID_CFLAGS=
   SQUID_CXXFLAGS=
@@ -788,15 +788,18 @@ for fs in $squid_storeio_module_candidates none; do
       fi
       ;;
     rock)
-	if test "x$squid_disk_module_candidates_IpcIo" != "xyes" -a \
-	  "x$squid_disk_module_candidates_Blocking" != "xyes"; then
-	  AC_MSG_ERROR([Storage module Rock requires IpcIo or Blocking DiskIO module])
-	fi
-	squid_do_build_rock=true
-	;;
+      if test "x$squid_disk_module_candidates_IpcIo" != "xyes" -a \
+        "x$squid_disk_module_candidates_Blocking" != "xyes"; then
+         AC_MSG_ERROR([Storage module Rock requires DiskIO module: Blocking or IpcIo])
+      fi
+      squid_do_build_rock=true
+      ;;
     ufs)
-	squid_do_build_ufs=true
-	;;
+      if test "x$squid_disk_module_candidates_Blocking" != "xyes"; then
+        AC_MSG_ERROR([Storage module ufs requires DiskIO module: Blocking])
+      fi
+      squid_do_build_ufs=true
+      ;;
     esac
 done
 
@@ -1011,7 +1014,7 @@ AM_CONDITIONAL(USE_ECAP, test "x$squid_opt_use_ecap" = "xyes")
 if test "x$squid_opt_use_ecap" = "xyes";
 then
     AC_DEFINE(USE_ECAP,1,[Enable eCAP support])
-    ECAP_LIBS="ecap/libsquid-ecap.la"
+    ECAP_LIBS="ecap/libecapsquid.la"
     squid_opt_use_adaptation=yes
 else
     AC_DEFINE(USE_ECAP,0,[Disable eCAP support])
@@ -1620,13 +1623,13 @@ if test "x$with_heimdal_krb5" != "xno" -a "x$KRB5LIBS" = "x"; then
   if test "x$squid_pc_krb5_name" = "x"; then
     PKG_CHECK_EXISTS(heimdal-gssapi, [squid_pc_krb5_name="heimdal-gssapi"])
   fi
-  if test "x$squid_pc_krb5_name" != "x" -a "$cross_compiling" = "no"; then
+  if test "x$squid_pc_krb5_name" = "x" -a "$cross_compiling" = "no"; then
     # Look for krb5-config (unless cross-compiling)
     AC_PATH_PROG(krb5_config,krb5-config,no)
     if test "x$ac_cv_path_krb5_config" != "xno" ; then
       krb5confpath="`dirname $ac_cv_path_krb5_config`"
       ac_heimdal="`$ac_cv_path_krb5_config --version 2>/dev/null | grep -c -i heimdal`"
-      if test "x$with_heimdal_krb5" = "xyes"; then
+      if test "x$with_heimdal_krb5" = "xyes" -a $ac_heimdal = 0; then
         AC_MSG_ERROR([Could not find pkg-config or krb5-config for Heimdal Kerberos])
       fi
     else
@@ -2446,21 +2449,6 @@ AC_ARG_ENABLE(ident-lookups,
 AC_MSG_NOTICE([Support for Ident lookups enabled: ${enable_ident_lookups:=yes}])
 SQUID_DEFINE_BOOL(USE_IDENT,$enable_ident_lookups,[Support for Ident (RFC 931) lookups])
 
-AM_CONDITIONAL(USE_SSL_CRTD, false)
-AC_ARG_ENABLE(ssl-crtd,
-  AC_HELP_STRING([--enable-ssl-crtd],
-                 [Prevent Squid from directly generation of SSL private key and 
-                  certificate request and instead enables the ssl_crtd processes.]), [
-  SQUID_YESNO([$enableval],
-  [unrecogized argument to --enable-ssl-crtd: $enableval])
-])
-
-if test "x$enable_ssl_crtd" = "xyes" -a "x$with_openssl" = "xno" ; then
-   AC_MSG_ERROR([You need to enable ssl gatewaying support to use ssl_crtd feature. Try to use --with-openssl. ])
-fi
-SQUID_DEFINE_BOOL(USE_SSL_CRTD, ${enable_ssl_crtd:=no},[Use ssl_crtd daemon])
-AM_CONDITIONAL(USE_SSL_CRTD, [test "x$enable_ssl_crtd" = "xyes"])
-
 dnl Select Default hosts file location
 AC_ARG_ENABLE(default-hostsfile,
   AS_HELP_STRING([--enable-default-hostsfile=path],
@@ -2499,10 +2487,10 @@ AC_ARG_ENABLE(auth-basic,
       all possible helpers. Default is to do so.
       To disable the basic authentication scheme, use --disable-auth-basic.
       To enable but build no helpers, specify "none".
-      To see available helpers, see the helpers/basic_auth directory. ]),[
+      To see available helpers, see the src/auth/basic/ directory. ]),[
 #nothing to do really
 ])
-m4_include([helpers/basic_auth/modules.m4])
+m4_include([src/auth/basic/helpers.m4])
 
 AC_ARG_ENABLE(auth-digest,
   AS_HELP_STRING([--enable-auth-digest="list of helpers"],
@@ -2511,24 +2499,24 @@ AC_ARG_ENABLE(auth-digest,
       all possible helpers. Default is to do so.
       To disable the Digest authentication scheme, use --disable-auth-digest.
       To enable but build no helpers, specify "none".
-      To see available helpers, see the helpers/digest_auth directory. ]),[
+      To see available helpers, see the src/auth/digest/ directory. ]),[
 #nothing to do, really
 ])
-m4_include([helpers/digest_auth/modules.m4])
+m4_include([src/auth/digest/helpers.m4])
 
 AC_ARG_ENABLE(auth-negotiate,
   AS_HELP_STRING([--enable-auth-negotiate="list of helpers"],
-     [Enable the Negotiate authentication scheme, and build the specified 
+     [Enable the Negotiate authentication scheme, and build the specified
       helpers.
       Not providing an explicit list of helpers will attempt build of
       all possible helpers. Default is to do so.
-      To disable the Negotiate authentication scheme, 
+      To disable the Negotiate authentication scheme,
       use --disable-auth-negotiate.
       To enable but build no helpers, specify "none".
-      To see available helpers, see the helpers/negotiate_auth directory. ]),[
+      To see available helpers, see the src/auth/negotiate/ directory. ]),[
 #nothing to do, really
 ])
-m4_include([helpers/negotiate_auth/modules.m4])
+m4_include([src/auth/negotiate/helpers.m4])
 
 AC_ARG_ENABLE(auth-ntlm,
   AS_HELP_STRING([--enable-auth-ntlm="list of helpers"],
@@ -2537,9 +2525,9 @@ AC_ARG_ENABLE(auth-ntlm,
       all possible helpers. Default is to do so.
       To disable the NTLM authentication scheme, use --disable-auth-ntlm.
       To enable but build no helpers, specify "none".
-      To see available helpers, see the helpers/ntlm_auth directory. ]),[
+      To see available helpers, see the src/auth/ntlm/ directory. ]),[
 ])
-m4_include([helpers/ntlm_auth/modules.m4])
+m4_include([src/auth/ntlm/helpers.m4])
 
 dnl Authentication libraries to build
 dnl This list will not be needed when each auth library has its own Makefile
@@ -2554,25 +2542,25 @@ AC_SUBST(AUTH_LIBS_TO_BUILD)
 dnl Select logging daemon helpers to build
 AC_ARG_ENABLE(log-daemon-helpers,
   AS_HELP_STRING([--enable-log-daemon-helpers="list of helpers"],
-                 [This option selects which logging daemon helpers to 
+                 [This option selects which logging daemon helpers to
                   build and install as part of the normal build process
-                  For a list of available helpers see the helpers/log_daemon
+                  For a list of available helpers see the src/log/
                   directory.]),[
 #nothing to do, really
 ])
-m4_include([helpers/log_daemon/modules.m4])
+m4_include([src/log/helpers.m4])
 
 AC_ARG_ENABLE(external-acl-helpers,
   AS_HELP_STRING([--enable-external-acl-helpers="list of helpers"],
-                 [Enable external_acl helpers support and thelpers themselves.
+                 [Enable external_acl helpers support and the helpers themselves.
                   Default is to build all buildable helpers and enable support.
                   To disable support, use --disable-external-acl-helpers.
                   To build no helpers, specify "none".
-                  To see available helpers, see the helpers/external_acl
+                  To see available helpers, see the src/acl/external/
                   directory]), [
 #nothing to do, really
 ])
-m4_include([helpers/external_acl/modules.m4])
+m4_include([src/acl/external/helpers.m4])
 
 dnl Select url_rewrite helpers to build
 AC_ARG_ENABLE(url-rewrite-helpers,
@@ -2582,9 +2570,32 @@ AC_ARG_ENABLE(url-rewrite-helpers,
                   process. The default is to attempt the build of all possible
                   helpers. Use --disable-url-rewrite-helpers to build none.
                   For a list of available helpers see the
-                  helpers/url_rewrite directory.]),[
+                  src/http/url_rewriters/ directory.]),[
+])
+m4_include([src/http/url_rewriters/helpers.m4])
+
+dnl Select security helpers to build
+AC_ARG_ENABLE(security-cert-validators,
+  AS_HELP_STRING([--enable-security-cert-validators="list of helpers"],
+                 [This option selects which security certificate validator
+                  helpers to build and install as part of the normal build
+                  process. The default is to attempt the build of all possible
+                  helpers. Use --disable-security-cert-validators to
+                  build none. For a list of available helpers see the
+                  src/security/cert_validators/ directory.]),[
+])
+m4_include([src/security/cert_validators/helpers.m4])
+
+AC_ARG_ENABLE(security-cert-generators,
+  AS_HELP_STRING([--enable-security-cert-generators="list of helpers"],
+                 [This option selects which security certificate validator
+                  helpers to build and install as part of the normal build
+                  process. The default is to attempt the build of all possible
+                  helpers. Use --disable-security-cert-genrators to
+                  build none. For a list of available helpers see the
+                  src/security/cert_generators/ directory.]),[
 ])
-m4_include([helpers/url_rewrite/modules.m4])
+m4_include([src/security/cert_generators/helpers.m4])
 
 dnl Select storeid_rewrite helpers to build
 AC_ARG_ENABLE(storeid-rewrite-helpers,
@@ -2594,9 +2605,9 @@ AC_ARG_ENABLE(storeid-rewrite-helpers,
                   process. The default is to attempt the build of all possible
                   helpers. Use --disable-storeid-rewrite-helpers to build none.
                   For a list of available helpers see the
-                  helpers/storeid_rewrite directory.]),[
+                  src/store/id_rewriters/ directory.]),[
 ])
-m4_include([helpers/storeid_rewrite/modules.m4])
+m4_include([src/store/id_rewriters/helpers.m4])
 
 AC_ARG_WITH(valgrind-debug,
   AS_HELP_STRING([--with-valgrind-debug],
@@ -3784,55 +3795,6 @@ AC_CONFIG_FILES([
 	doc/manuals/Makefile
 	doc/release-notes/Makefile
 	errors/Makefile
-	helpers/Makefile
-	helpers/basic_auth/Makefile
-	helpers/basic_auth/DB/Makefile
-	helpers/basic_auth/fake/Makefile
-	helpers/basic_auth/getpwnam/Makefile
-	helpers/basic_auth/LDAP/Makefile
-	helpers/basic_auth/NCSA/Makefile
-	helpers/basic_auth/NIS/Makefile
-	helpers/basic_auth/PAM/Makefile
-	helpers/basic_auth/POP3/Makefile
-	helpers/basic_auth/RADIUS/Makefile
-	helpers/basic_auth/SASL/Makefile
-	helpers/basic_auth/SMB/Makefile
-	helpers/basic_auth/SMB_LM/Makefile
-	helpers/basic_auth/SSPI/Makefile
-	helpers/digest_auth/Makefile
-	helpers/digest_auth/eDirectory/Makefile
-	helpers/digest_auth/file/Makefile
-	helpers/digest_auth/LDAP/Makefile
-	helpers/external_acl/Makefile
-	helpers/external_acl/AD_group/Makefile
-	helpers/external_acl/delayer/Makefile
-	helpers/external_acl/eDirectory_userip/Makefile
-	helpers/external_acl/file_userip/Makefile
-	helpers/external_acl/kerberos_ldap_group/Makefile
-	helpers/external_acl/LDAP_group/Makefile
-	helpers/external_acl/LM_group/Makefile
-	helpers/external_acl/session/Makefile
-	helpers/external_acl/SQL_session/Makefile
-	helpers/external_acl/unix_group/Makefile
-	helpers/external_acl/wbinfo_group/Makefile
-	helpers/external_acl/time_quota/Makefile
-	helpers/log_daemon/Makefile
-	helpers/log_daemon/DB/Makefile
-	helpers/log_daemon/file/Makefile
-	helpers/negotiate_auth/Makefile
-	helpers/negotiate_auth/kerberos/Makefile
-	helpers/negotiate_auth/SSPI/Makefile
-	helpers/negotiate_auth/wrapper/Makefile
-	helpers/ntlm_auth/Makefile
-	helpers/ntlm_auth/fake/Makefile
-	helpers/ntlm_auth/smb_lm/Makefile
-	helpers/ntlm_auth/SSPI/Makefile
-	helpers/ssl/Makefile
-	helpers/storeid_rewrite/Makefile
-	helpers/storeid_rewrite/file/Makefile
-	helpers/url_rewrite/Makefile
-	helpers/url_rewrite/fake/Makefile
-	helpers/url_rewrite/LFS/Makefile
 	icons/Makefile
 	lib/Makefile
 	lib/libTrie/Makefile
@@ -3845,15 +3807,50 @@ AC_CONFIG_FILES([
 	scripts/Makefile
 	src/Makefile
 	src/acl/Makefile
+	src/acl/external/Makefile
+	src/acl/external/AD_group/Makefile
+	src/acl/external/delayer/Makefile
+	src/acl/external/eDirectory_userip/Makefile
+	src/acl/external/file_userip/Makefile
+	src/acl/external/kerberos_ldap_group/Makefile
+	src/acl/external/LDAP_group/Makefile
+	src/acl/external/LM_group/Makefile
+	src/acl/external/session/Makefile
+	src/acl/external/SQL_session/Makefile
+	src/acl/external/unix_group/Makefile
+	src/acl/external/wbinfo_group/Makefile
+	src/acl/external/time_quota/Makefile
 	src/adaptation/Makefile
 	src/adaptation/icap/Makefile
 	src/adaptation/ecap/Makefile
 	src/anyp/Makefile
 	src/auth/Makefile
 	src/auth/basic/Makefile
+	src/auth/basic/DB/Makefile
+	src/auth/basic/fake/Makefile
+	src/auth/basic/getpwnam/Makefile
+	src/auth/basic/LDAP/Makefile
+	src/auth/basic/NCSA/Makefile
+	src/auth/basic/NIS/Makefile
+	src/auth/basic/PAM/Makefile
+	src/auth/basic/POP3/Makefile
+	src/auth/basic/RADIUS/Makefile
+	src/auth/basic/SASL/Makefile
+	src/auth/basic/SMB/Makefile
+	src/auth/basic/SMB_LM/Makefile
+	src/auth/basic/SSPI/Makefile
 	src/auth/digest/Makefile
+	src/auth/digest/eDirectory/Makefile
+	src/auth/digest/file/Makefile
+	src/auth/digest/LDAP/Makefile
 	src/auth/negotiate/Makefile
+	src/auth/negotiate/kerberos/Makefile
+	src/auth/negotiate/SSPI/Makefile
+	src/auth/negotiate/wrapper/Makefile
 	src/auth/ntlm/Makefile
+	src/auth/ntlm/fake/Makefile
+	src/auth/ntlm/SMB_LM/Makefile
+	src/auth/ntlm/SSPI/Makefile
 	src/base/Makefile
 	src/clients/Makefile
 	src/comm/Makefile
@@ -3873,20 +3870,32 @@ AC_CONFIG_FILES([
 	src/helper/Makefile
 	src/http/Makefile
 	src/http/one/Makefile
+	src/http/url_rewriters/Makefile
+	src/http/url_rewriters/fake/Makefile
+	src/http/url_rewriters/LFS/Makefile
 	src/icmp/Makefile
 	src/ident/Makefile
 	src/ip/Makefile
 	src/ipc/Makefile
 	src/log/Makefile
+	src/log/DB/Makefile
+	src/log/file/Makefile
 	src/mem/Makefile
 	src/mgr/Makefile
 	src/parser/Makefile
 	src/repl/Makefile
+	src/sbuf/Makefile
 	src/security/Makefile
+	src/security/cert_generators/Makefile
+	src/security/cert_generators/file/Makefile
+	src/security/cert_validators/Makefile
+	src/security/cert_validators/fake/Makefile
 	src/servers/Makefile
 	src/snmp/Makefile
 	src/ssl/Makefile
 	src/store/Makefile
+	src/store/id_rewriters/Makefile
+	src/store/id_rewriters/file/Makefile
 	test-suite/Makefile
 	tools/Makefile
 	tools/helper-mux/Makefile
@@ -138,6 +138,8 @@ section 81    CPU Profiling Routines
 section 81    Store HEAP Removal Policies
 section 82    External ACL
 section 83    SSL accelerator support
+section 83    SSL-Bump Server/Peer negotiation
+section 83    TLS Server/Peer negotiation
 section 84    Helper process maintenance
 section 85    Client-side Request Routines
 section 86    ESI Expressions
@@ -11,6 +11,8 @@
 SUBSTITUTE=sed "\
 	s%@DEFAULT_ERROR_DIR@%$(DEFAULT_ERROR_DIR)%g;\
 	s%@DEFAULT_MIME_TABLE@%$(DEFAULT_MIME_TABLE)%g;\
+	s%@DEFAULT_SSL_CRTD@%$(DEFAULT_SSL_CRTD)%g;\
+	s%@DEFAULT_SSL_DB_DIR@%$(DEFAULT_SSL_DB_DIR)%g;\
 	s%@""PACKAGE_STRING""@%$(PACKAGE_STRING)%g;\
 	s%@SYSCONFDIR@%$(sysconfdir)%g;\
 	"
@@ -1,6 +1,6 @@
 <!doctype linuxdoc system>
 <article>
-<title>Squid 3.5.13 release notes</title>
+<title>Squid 3.5.16 release notes</title>
 <author>Squid Developers</author>
 
 <abstract>
@@ -13,7 +13,7 @@ for Applied Network Research and members of the Web Caching community.
 
 <sect>Notice
 <p>
-The Squid Team are pleased to announce the release of Squid-3.5.13.
+The Squid Team are pleased to announce the release of Squid-3.5.16.
 
 This new release is available for download from <url url="http://www.squid-cache.org/Versions/v3/3.5/"> or the
  <url url="http://www.squid-cache.org/Download/http-mirrors.html" name="mirrors">.
@@ -1,6 +1,6 @@
 <!doctype linuxdoc system>
 <article>
-<title>Squid 4.0.4 release notes</title>
+<title>Squid 4.0.8 release notes</title>
 <author>Squid Developers</author>
 
 <abstract>
@@ -12,7 +12,7 @@ for Applied Network Research and members of the Web Caching community.
 <toc>
 
 <sect>Notice
-<p>The Squid Team are pleased to announce the release of Squid-4.0.4 for testing.
+<p>The Squid Team are pleased to announce the release of Squid-4.0.8 for testing.
 
 This new release is available for download from <url url="http://www.squid-cache.org/Versions/v4/"> or the
  <url url="http://www.squid-cache.org/Download/http-mirrors.html" name="mirrors">.
@@ -44,9 +44,10 @@ The Squid-4 change history can be <url url="http://www.squid-cache.org/Versions/
 	<item>Configurable helper queue size
 	<item>Helper concurrency channels changes
 	<item>SSL support removal
-	<item>MSNT-multi-domain helper removal
+	<item>Helper Binary Changes
 	<item>Secure ICAP
 	<item>Improved SMP support
+	<item>Improved process management
 </itemize>
 
 Most user-facing changes are reflected in squid.conf (see below).
@@ -99,11 +100,31 @@ Most user-facing changes are reflected in squid.conf (see below).
    behaviour explicitly if needed.
 
 
-<sect1>MSNT-multi-domain helper removal
+<sect1>Helper Binary Changes
 <p>The <em>basic_msnt_multi_domain_auth</em> helper has been removed. The
    <em>basic_smb_lm_auth</em> helper performs the same actions without extra
    Perl and Samba dependencies.
 
+<p>The <em>cert_valid.pl</em> testing helper has been renamed to
+   <em>security_fake_certverify</em>, reflecting the Squid helper naming schema
+   and that it does not actually perform any certificate checks.
+
+<p>The <em>security_fake_certverify</em> helper is also now built and installed
+   by default. It is written in Perl so does not require OpenSSL dependencies
+   for installation. But does use the Perl Crypt::OpenSSL::X509 module for execution.
+   Building the helper can be controlled using the <em>--enable-security-cert-validators="fake"</em>
+   option.
+
+<p>The <em>ssl_crtd</em> helper has been renamed to <em>security_file_certgen</em>
+   and is now built and installed by default whenever OpenSSL support is enabled.
+   Building the helper can be controlled using the <em>--enable-security-cert-generators="file"</em>
+   option.
+   NOTE: The <em>--enable-ssl-crtd</em> option is still required to enable the
+   <em>sslcrtd_program</em> helper interface within Squid that uses the helper.
+
+<p>The <em>ntlm_smb_lm_auth</em> helper is now built using <em>--enable-auth-ntlm="SMB_LM"</em>.
+   Notice the upper case where it was previously a (wrongly) lower cased acronym.
+
 
 <sect1>Secure ICAP
 <p>ICAP services can now be used over TLS connections.
@@ -127,6 +148,27 @@ Most user-facing changes are reflected in squid.conf (see below).
    enables Rock storage on more systems by default than previously.
 
 
+<sect1>Improved process management
+<p>Squid is traditionally refered to as a daemon. But is actually a combination
+   of daemon and daemon manager processes. This has caused significant problems
+   integrating it with other third-party daemon managers.
+
+<p>The Squid process which places its PID into the squid.pid file has always
+   been the process to which control signals are sent. The manager process is
+   now taking on signal handling instead of the main daemon process. Enabling
+   integration with daemon managers such as Upstart or systemd which assume the
+   process they initiated is the daemon with a PID to control.
+
+<p>The squid binary now has a new <em>--foreground</em> command line option
+   which prevents the process from exiting early while background workers
+   continue their processing. When run with this option Squid will now wait
+   for the worker(s) to finish before exiting. Unlike the old <em>-N</em> option
+   <em>--foreground</em> supports SMP workers and multi-process features.
+   <em>--foreground</em> is particularly useful for use with <em>-z</em> (disk
+   cache structures creation), as it allows the caller to wait until Squid has
+   finished.
+
+
 <sect>Changes to squid.conf since Squid-3.5
 <p>
 There have been changes to Squid's configuration file since Squid-3.5.
@@ -143,6 +185,25 @@ This section gives a thorough account of those changes in three categories:
 <sect1>New tags<label id="newtags">
 <p>
 <descrip>
+	<tag>collapsed_forwarding_shared_entries_limit</tag>
+	<p>New directive to limit the size of a table used for sharing information
+	   about collapsible entries among SMP workers.
+
+	<tag>reply_header_add</tag>
+	<p>New directive to add header fields to outgoing HTTP responses to
+	   the client.
+
+	<tag>server_pconn_for_nonretriable</tag>
+	<p>New directive to provide fine-grained control over persistent connection
+	   reuse when forwarding HTTP requests that Squid cannot retry. It is useful
+	   in environments where opening new connections is very expensive
+	   and race conditions associated with persistent connections are very rare
+	   and/or only cause minor problems.
+
+	<tag>shared_memory_locking</tag>
+	<p>New directive to ensure shared memory is all available immediately
+	   on startup. Protects against SIGBUS errors, but delays startup.
+
 	<tag>tls_outgoing_options</tag>
 	<p>New directive to define TLS security context options for outgoing
 	   connections. For example to HTTPS servers.
@@ -322,6 +383,18 @@ This section gives an account of those changes in three categories:
 <sect1>New options<label id="newoptions">
 <p>
 <descrip>
+	<tag>--enable-security-cert-generators</tag>
+	<p>New option to control which TLS/SSL dynamic certificate generator
+	   helpers are built and installed.
+	<p>Helper <em>ssl_crtd<em> has been renamed to <em>security_file_certgen</em>
+	   and built with module name <em>file</em>. Requires <em>--with-openssl</em>.
+
+	<tag>--enable-security-cert-validators</tag>
+	<p>New option to control which TLS/SSL certificate validation
+	   helpers are built and installed.
+	<p>One <em>fake</em> helper that does not actually perform any
+	   certificate checks is provided for testing and as an example
+	   for writing custom helpers.
 
 </descrip>
 
@@ -331,6 +404,10 @@ This section gives an account of those changes in three categories:
 	<tag>--enable-auth-basic</tag>
 	<p>The <em>MSNT-multi-domain</em> helper has been removed.
 
+	<tag>--enable-auth-ntlm</tag>
+	<p>The SMB LanMan helper is now built using <em>SMB_LM</em>
+	   (was lower case <em>smb_lm</em>).
+
 	<tag>--enable-diskio</tag>
 	<p>Auto-detection of SMP related modules has been fixed to
 	   actually auto-detect them without configuring the module
@@ -1,37 +0,0 @@
-## Copyright (C) 1996-2016 The Squid Software Foundation and contributors
-##
-## Squid software is distributed under GPLv2+ license and includes
-## contributions from numerous individuals and organizations.
-## Please see the COPYING and CONTRIBUTORS files for details.
-##
-
-EXTRA_DIST = defines.h
-
-DIST_SUBDIRS = \
-	basic_auth \
-	digest_auth \
-	external_acl \
-	log_daemon \
-	negotiate_auth \
-	ntlm_auth \
-	url_rewrite \
-	ssl \
-	storeid_rewrite
-
-SUBDIRS = \
-	basic_auth \
-	digest_auth \
-	external_acl \
-	log_daemon \
-	negotiate_auth \
-	url_rewrite \
-	storeid_rewrite
-
-if ENABLE_AUTH_NTLM
-SUBDIRS += ntlm_auth
-endif
-
-if ENABLE_SSL
-SUBDIRS += ssl
-endif
-
@@ -1,26 +0,0 @@
-## Copyright (C) 1996-2016 The Squid Software Foundation and contributors
-##
-## Squid software is distributed under GPLv2+ license and includes
-## contributions from numerous individuals and organizations.
-## Please see the COPYING and CONTRIBUTORS files for details.
-##
-
-## Alphabetical list of sub-directories to distribute with Squid:
-DIST_SUBDIRS = \
-	DB \
-	fake \
-	getpwnam \
-	LDAP \
-	NCSA \
-	NIS \
-	PAM \
-	POP3 \
-	RADIUS \
-	SASL \
-	SMB \
-	SMB_LM \
-	SSPI
-
-SUBDIRS	= $(BASIC_AUTH_HELPERS)
-
-EXTRA_DIST = modules.m4
@@ -1,16 +0,0 @@
-## Copyright (C) 1996-2016 The Squid Software Foundation and contributors
-##
-## Squid software is distributed under GPLv2+ license and includes
-## contributions from numerous individuals and organizations.
-## Please see the COPYING and CONTRIBUTORS files for details.
-##
-
-## Alphabetical list of sub-directories to distribute with Squid:
-DIST_SUBDIRS= \
-	eDirectory \
-	file \
-	LDAP
-
-SUBDIRS= $(DIGEST_AUTH_HELPERS)
-
-EXTRA_DIST = modules.m4
@@ -1,14 +0,0 @@
-## Copyright (C) 1996-2016 The Squid Software Foundation and contributors
-##
-## Squid software is distributed under GPLv2+ license and includes
-## contributions from numerous individuals and organizations.
-## Please see the COPYING and CONTRIBUTORS files for details.
-##
-
-## Alphabetical list of sub-directories to distribute with Squid:
-DIST_SUBDIRS = \
-	DB \
-	file
-
-SUBDIRS	= $(LOG_DAEMON_HELPERS)
-EXTRA_DIST = modules.m4
@@ -1,10 +0,0 @@
-## Copyright (C) 1996-2016 The Squid Software Foundation and contributors
-##
-## Squid software is distributed under GPLv2+ license and includes
-## contributions from numerous individuals and organizations.
-## Please see the COPYING and CONTRIBUTORS files for details.
-##
-
-DIST_SUBDIRS	= fake smb_lm SSPI
-SUBDIRS		= $(NTLM_AUTH_HELPERS)
-EXTRA_DIST	= modules.m4
@@ -1,12 +0,0 @@
-## Copyright (C) 1996-2016 The Squid Software Foundation and contributors
-##
-## Squid software is distributed under GPLv2+ license and includes
-## contributions from numerous individuals and organizations.
-## Please see the COPYING and CONTRIBUTORS files for details.
-##
-
-include $(top_srcdir)/src/Common.am
-
-libexec_SCRIPTS = cert_valid.pl
-EXTRA_DIST= \
-	cert_valid.pl
@@ -1089,8 +1089,9 @@ read_mib(char *filename) {
     char *p;
 
     fp = fopen(filename, "r");
-    if (fp == NULL) {
-        snmplib_debug(1, "init_mib: %s: %s\n", filename, xstrerror());
+    if (!fp) {
+        int xerrno = errno;
+        snmplib_debug(1, "init_mib: %s: %s\n", filename, xstrerr(xerrno));
         return (NULL);
     }
     mbuf[0] = '\0';
@@ -7,8 +7,6 @@
 ## Please see the COPYING and CONTRIBUTORS files for details.
 ##
 
-# AUTHOR: Francesco Chemolli <kinkie@squid-cache.org>
-#
 # USAGE: sort-includes.pl filename.cc >filename.cc.sorted
 #
 # This tool helps to sort the #include directives in a c or c++ source file
@@ -24,23 +22,34 @@
 
 use strict;
 use warnings;
-my @acc=(); #if empty, we're not accumulating
+
+my %Seen = (); # preprocessor #include lines, indexed by file name
+
 while (<>) {
-  if (m!^#include "!) {
-    if (m!squid.h!) {
-      print;
-    } else {
-      push @acc,$_;
+  if (/^\s*#\s*include\s*"(.+?)"/) {
+    my $fname = $1;
+    # skip repeated file names that have identical #include lines
+    if (defined $Seen{$fname}) {
+      next if $Seen{$fname} eq $_;
+      warn("$ARGV:$.: Warning: inconsistent $fname #include lines:\n");
+      warn("    $Seen{$fname}");
+      warn("    $_");
+      # fall through to preserve every unique #include line
     }
+    $Seen{$fname} = $_;
   } else {
-    &dump_acc;
+    &dumpSeen();
     print;
   }
 }
-&dump_acc;
+&dumpSeen();
 
-sub dump_acc {
-  return unless @acc;
-  print sort {lc($a) cmp lc($b)} @acc;
-  @acc=();
+sub dumpSeen {
+  my $alwaysFirst = 'squid.h';
+  if (defined $Seen{$alwaysFirst}) {
+    print $Seen{$alwaysFirst};
+    delete $Seen{$alwaysFirst};
+  }
+  print sort { lc($a) cmp lc($b) } values %Seen;
+  %Seen = ();
 }
@@ -76,7 +76,6 @@ AccessLogEntry::~AccessLogEntry()
     HTTPMSGUNLOCK(adapted_request);
 
     safe_free(lastAclName);
-    safe_free(lastAclData);
 
     HTTPMSGUNLOCK(reply);
     HTTPMSGUNLOCK(request);
@@ -21,6 +21,7 @@
 #include "LogTags.h"
 #include "MessageSizes.h"
 #include "Notes.h"
+#include "sbuf/SBuf.h"
 #if ICAP_CLIENT
 #include "adaptation/icap/Elements.h"
 #endif
@@ -42,7 +43,6 @@ class AccessLogEntry: public RefCountable
     AccessLogEntry() :
         url(nullptr),
         lastAclName(nullptr),
-        lastAclData(nullptr),
         reply(nullptr),
         request(nullptr),
         adapted_request(nullptr)
@@ -57,7 +57,7 @@ class AccessLogEntry: public RefCountable
     /// Fetch the transaction method string (ICP opcode, HTCP opcode or HTTP method)
     SBuf getLogMethod() const;
 
-    const char *url;
+    SBuf url;
 
     /// TCP/IP level details about the client connection
     Comm::ConnectionPointer tcpClient;
@@ -207,7 +207,7 @@ class AccessLogEntry: public RefCountable
 #endif
 
     const char *lastAclName; ///< string for external_acl_type %ACL format code
-    const char *lastAclData; ///< string for external_acl_type %DATA format code
+    SBuf lastAclData; ///< string for external_acl_type %DATA format code
 
     HierarchyLogEntry hier;
     HttpReply *reply;
@@ -10,6 +10,27 @@
 ## This file should be included first in all src/subdir/Makefile.am
 ## so it must not contain stuff specific to or bad for some subdirectories.
 
+## Default variables
+DEFAULT_HTTP_PORT	= 3128
+DEFAULT_ICP_PORT	= 3130
+DEFAULT_PREFIX		= $(prefix)
+DEFAULT_CONFIG_DIR	= $(sysconfdir)
+DEFAULT_CONFIG_FILE	= $(DEFAULT_CONFIG_DIR)/squid.conf
+DEFAULT_MIME_TABLE	= $(DEFAULT_CONFIG_DIR)/mime.conf
+DEFAULT_SSL_CRTD	= $(libexecdir)/`echo security_file_certgen | sed '$(transform);s/$$/$(EXEEXT)/'`
+DEFAULT_LOG_PREFIX	= $(DEFAULT_LOG_DIR)
+DEFAULT_CACHE_LOG	= $(DEFAULT_LOG_PREFIX)/cache.log
+DEFAULT_ACCESS_LOG	= $(DEFAULT_LOG_PREFIX)/access.log
+DEFAULT_STORE_LOG	= $(DEFAULT_LOG_PREFIX)/store.log
+DEFAULT_NETDB_FILE	= $(DEFAULT_SWAP_DIR)/netdb.state
+DEFAULT_SSL_DB_DIR	= $(DEFAULT_SWAP_DIR)/ssl_db
+DEFAULT_PINGER		= $(libexecdir)/`echo pinger | sed '$(transform);s/$$/$(EXEEXT)/'`
+DEFAULT_UNLINKD		= $(libexecdir)/`echo unlinkd | sed '$(transform);s/$$/$(EXEEXT)/'`
+DEFAULT_LOGFILED	= $(libexecdir)/`echo log_file_daemon | sed '$(transform);s/$$/$(EXEEXT)/'`
+DEFAULT_DISKD		= $(libexecdir)/`echo diskd | sed '$(transform);s/$$/$(EXEEXT)/'`
+DEFAULT_ICON_DIR	= $(datadir)/icons
+DEFAULT_ERROR_DIR	= $(datadir)/errors
+
 ## TODO: make this set by configure?
 AM_CFLAGS = $(SQUID_CFLAGS)
 AM_CXXFLAGS = $(SQUID_CXXFLAGS)
@@ -50,7 +71,7 @@ LIBPROFILER=
 endif
 
 ## Because compatibility is almost universal. And the link order is important.
-COMPAT_LIB = $(top_builddir)/compat/libcompat-squid.la $(LIBPROFILER)
+COMPAT_LIB = $(top_builddir)/compat/libcompatsquid.la $(LIBPROFILER)
 
 ## Some helpers are written in Perl and need the local shell defined properly
 subst_perlshell = sed -e 's,[@]PERL[@],$(PERL),g' <$(srcdir)/$@.pl.in >$@ || ($(RM) -f $@ ; exit 1)
@@ -31,9 +31,10 @@ CpuAffinitySet::apply()
 
     bool success = false;
     if (sched_getaffinity(0, sizeof(theOrigCpuSet), &theOrigCpuSet)) {
+        int xerrno = errno;
         debugs(54, DBG_IMPORTANT, "ERROR: failed to get CPU affinity for "
                "process PID " << getpid() << ", ignoring CPU affinity for "
-               "this process: " << xstrerror());
+               "this process: " << xstrerr(xerrno));
     } else {
         cpu_set_t cpuSet;
         memcpy(&cpuSet, &theCpuSet, sizeof(cpuSet));
@@ -43,8 +44,9 @@ CpuAffinitySet::apply()
                    "PID " << getpid() << ", may be caused by an invalid core in "
                    "'cpu_affinity_map' or by external affinity restrictions");
         } else if (sched_setaffinity(0, sizeof(cpuSet), &cpuSet)) {
+            int xerrno = errno;
             debugs(54, DBG_IMPORTANT, "ERROR: failed to set CPU affinity for "
-                   "process PID " << getpid() << ": " << xstrerror());
+                   "process PID " << getpid() << ": " << xstrerr(xerrno));
         } else
             success = true;
     }
@@ -57,9 +59,10 @@ CpuAffinitySet::undo()
 {
     if (applied()) {
         if (sched_setaffinity(0, sizeof(theOrigCpuSet), &theOrigCpuSet)) {
+            int xerrno = errno;
             debugs(54, DBG_IMPORTANT, "ERROR: failed to restore original CPU "
                    "affinity for process PID " << getpid() << ": " <<
-                   xstrerror());
+                   xstrerr(xerrno));
         }
         CPU_ZERO(&theOrigCpuSet);
     }
@@ -20,6 +20,7 @@
 #include "DelayId.h"
 #include "DelayPool.h"
 #include "DelayPools.h"
+#include "http/Stream.h"
 #include "HttpRequest.h"
 #include "SquidConfig.h"
 
@@ -132,8 +132,9 @@ AIODiskFile::read(ReadRequest *request)
 
     /* Initiate aio */
     if (aio_read(&qe->aq_e_aiocb) < 0) {
-        fatalf("Aiee! aio_read() returned error (%d)  FIXME and wrap file_read !\n", errno);
-        debugs(79, DBG_IMPORTANT, "WARNING: aio_read() returned error: " << xstrerror());
+        int xerrno = errno;
+        fatalf("Aiee! aio_read() returned error (%d)  FIXME and wrap file_read !\n", xerrno);
+        debugs(79, DBG_IMPORTANT, "WARNING: aio_read() returned error: " << xstrerr(xerrno));
         /* fall back to blocking method */
         //        file_read(fd, request->buf, request->len, request->offset, callback, data);
     }
@@ -190,8 +191,9 @@ AIODiskFile::write(WriteRequest *request)
 
     /* Initiate aio */
     if (aio_write(&qe->aq_e_aiocb) < 0) {
-        fatalf("Aiee! aio_write() returned error (%d) FIXME and wrap file_write !\n", errno);
-        debugs(79, DBG_IMPORTANT, "WARNING: aio_write() returned error: " << xstrerror());
+        int xerrno = errno;
+        fatalf("Aiee! aio_write() returned error (%d) FIXME and wrap file_write !\n", xerrno);
+        debugs(79, DBG_IMPORTANT, "WARNING: aio_write() returned error: " << xstrerr(xerrno));
         /* fall back to blocking method */
         //       file_write(fd, offset, buf, len, callback, data, freefunc);
     }
@@ -101,10 +101,11 @@ DiskdFile::create(int flags, mode_t, RefCount<IORequestor> callback)
                      NULL);
 
     if (x < 0) {
+        int xerrno = errno;
         ioCompleted();
         errorOccured = true;
         //        IO->shm.put (shm_offset);
-        debugs(79, DBG_IMPORTANT, "storeDiskdSend CREATE: " << xstrerror());
+        debugs(79, DBG_IMPORTANT, "storeDiskdSend CREATE: " << xstrerr(xerrno));
         notifyClient();
         ioRequestor = NULL;
         return;
@@ -130,10 +131,11 @@ DiskdFile::read(ReadRequest *aRead)
                      aRead);
 
     if (x < 0) {
+        int xerrno = errno;
         ioCompleted();
         errorOccured = true;
         //        IO->shm.put (shm_offset);
-        debugs(79, DBG_IMPORTANT, "storeDiskdSend READ: " << xstrerror());
+        debugs(79, DBG_IMPORTANT, "storeDiskdSend READ: " << xstrerr(xerrno));
         notifyClient();
         ioRequestor = NULL;
         return;
@@ -157,9 +159,10 @@ DiskdFile::close()
                      NULL);
 
     if (x < 0) {
+        int xerrno = errno;
         ioCompleted();
         errorOccured = true;
-        debugs(79, DBG_IMPORTANT, "storeDiskdSend CLOSE: " << xstrerror());
+        debugs(79, DBG_IMPORTANT, "storeDiskdSend CLOSE: " << xstrerr(xerrno));
         notifyClient();
         ioRequestor = NULL;
         return;
@@ -294,9 +297,10 @@ DiskdFile::write(WriteRequest *aRequest)
                      aRequest);
 
     if (x < 0) {
+        int xerrno = errno;
         ioCompleted();
         errorOccured = true;
-        debugs(79, DBG_IMPORTANT, "storeDiskdSend WRITE: " << xstrerror());
+        debugs(79, DBG_IMPORTANT, "storeDiskdSend WRITE: " << xstrerr(xerrno));
         //        IO->shm.put (shm_offset);
         notifyClient();
         ioRequestor = NULL;
@@ -124,7 +124,8 @@ DiskdIOStrategy::unlinkFile(char const *path)
              shm_offset);
 
     if (x < 0) {
-        debugs(79, DBG_IMPORTANT, "storeDiskdSend UNLINK: " << xstrerror());
+        int xerrno = errno;
+        debugs(79, DBG_IMPORTANT, "storeDiskdSend UNLINK: " << xstrerr(xerrno));
         ::unlink(buf);      /* XXX EWW! */
         //        shm.put (shm_offset);
     }
@@ -150,14 +151,16 @@ DiskdIOStrategy::init()
     smsgid = msgget((key_t) ikey, 0700 | IPC_CREAT);
 
     if (smsgid < 0) {
-        debugs(50, DBG_CRITICAL, "storeDiskdInit: msgget: " << xstrerror());
+        int xerrno = errno;
+        debugs(50, DBG_CRITICAL, MYNAME << "msgget: " << xstrerr(xerrno));
         fatal("msgget failed");
     }
 
     rmsgid = msgget((key_t) (ikey + 1), 0700 | IPC_CREAT);
 
     if (rmsgid < 0) {
-        debugs(50, DBG_CRITICAL, "storeDiskdInit: msgget: " << xstrerror());
+        int xerrno = errno;
+        debugs(50, DBG_CRITICAL, MYNAME << "msgget: " << xstrerr(xerrno));
         fatal("msgget failed");
     }
 
@@ -248,14 +251,16 @@ SharedMemory::init(int ikey, int magic2)
                 nbufs * SHMBUF_BLKSZ, 0600 | IPC_CREAT);
 
     if (id < 0) {
-        debugs(50, DBG_CRITICAL, "storeDiskdInit: shmget: " << xstrerror());
+        int xerrno = errno;
+        debugs(50, DBG_CRITICAL, MYNAME << "shmget: " << xstrerr(xerrno));
         fatal("shmget failed");
     }
 
     buf = (char *)shmat(id, NULL, 0);
 
     if (buf == (void *) -1) {
-        debugs(50, DBG_CRITICAL, "storeDiskdInit: shmat: " << xstrerror());
+        int xerrno = errno;
+        debugs(50, DBG_CRITICAL, MYNAME << "shmat: " << xstrerr(xerrno));
         fatal("shmat failed");
     }
 
@@ -380,7 +385,8 @@ DiskdIOStrategy::SEND(diomsg *M, int mtype, int id, size_t size, off_t offset, s
         ++diskd_stats.sent_count;
         ++away;
     } else {
-        debugs(79, DBG_IMPORTANT, "storeDiskdSend: msgsnd: " << xstrerror());
+        int xerrno = errno;
+        debugs(79, DBG_IMPORTANT, MYNAME << "msgsnd: " << xstrerr(xerrno));
         cbdataReferenceDone(M->callback_data);
         ++send_errors;
         assert(send_errors < 100);
@@ -350,7 +350,7 @@ main(int argc, char *argv[])
     hash = hash_create(fsCmp, 1 << 4, fsHash);
     assert(hash);
     if (fcntl(0, F_SETFL, SQUID_NONBLOCK) < 0) {
-        perror(xstrerror());
+        perror(xstrerr(errno));
         return 1;
     }
     memset(&sa, '\0', sizeof(sa));
@@ -143,8 +143,7 @@ DiskThreadsDiskFile::openDone(int, const char *, int anFD, int errflag)
     fd = anFD;
 
     if (errflag || fd < 0) {
-        errno = errflag;
-        debugs(79, DBG_CRITICAL, "DiskThreadsDiskFile::openDone: " << xstrerror());
+        debugs(79, DBG_CRITICAL, MYNAME << xstrerr(errflag));
         debugs(79, DBG_IMPORTANT, "\t" << path_);
         errorOccured = true;
     } else {
@@ -24,7 +24,7 @@
 #include "ipc/Queue.h"
 #include "ipc/StrandSearch.h"
 #include "ipc/UdsOp.h"
-#include "SBuf.h"
+#include "sbuf/SBuf.h"
 #include "SquidConfig.h"
 #include "SquidTime.h"
 #include "StatCounters.h"
@@ -78,11 +78,12 @@ MmappedFile::open(int flags, mode_t, RefCount<IORequestor> callback)
     ioRequestor = callback;
 
     if (fd < 0) {
-        debugs(79,3, HERE << "open error: " << xstrerror());
+        int xerrno = errno;
+        debugs(79,3, "open error: " << xstrerr(xerrno));
         error_ = true;
     } else {
         ++store_open_disk_fd;
-        debugs(79,3, HERE << "FD " << fd);
+        debugs(79,3, "FD " << fd);
 
         // setup mapping boundaries
         struct stat sb;
@@ -31,6 +31,7 @@
 #include "gopher.h"
 #include "hier_code.h"
 #include "http.h"
+#include "http/Stream.h"
 #include "HttpReply.h"
 #include "HttpRequest.h"
 #include "icmp/net_db.h"
@@ -46,6 +47,8 @@
 #include "PeerSelectState.h"
 #include "SquidConfig.h"
 #include "SquidTime.h"
+#include "ssl/BlindPeerConnector.h"
+#include "ssl/PeekingPeerConnector.h"
 #include "Store.h"
 #include "StoreClient.h"
 #include "urn.h"
@@ -55,7 +58,6 @@
 #include "ssl/Config.h"
 #include "ssl/ErrorDetail.h"
 #include "ssl/helper.h"
-#include "ssl/PeerConnector.h"
 #include "ssl/ServerBump.h"
 #include "ssl/support.h"
 #else
@@ -121,7 +123,8 @@ void
 FwdState::closeServerConnection(const char *reason)
 {
     debugs(17, 3, "because " << reason << "; " << serverConn);
-    comm_remove_close_handler(serverConn->fd, fwdServerClosedWrapper, this);
+    comm_remove_close_handler(serverConn->fd, closeHandler);
+    closeHandler = NULL;
     fwdPconnPool->noteUses(fd_table[serverConn->fd].pconn.uses);
     serverConn->close();
 }
@@ -161,7 +164,10 @@ void FwdState::start(Pointer aSelf)
     // We hope that either the store entry aborts or peer is selected.
     // Otherwise we are going to leak our object.
 
-    entry->registerAbort(FwdState::abort, this);
+    // Ftp::Relay needs to preserve control connection on data aborts
+    // so it registers its own abort handler that calls ours when needed.
+    if (!request->flags.ftpNative)
+        entry->registerAbort(FwdState::abort, this);
 
 #if STRICT_ORIGINAL_DST
     // Bug 3243: CVE 2009-0801
@@ -400,7 +406,7 @@ FwdState::startConnectionOrFail()
         // Done here before anything else so the errors get logged for
         // this server link regardless of what happens when connecting to it.
         // IF sucessfuly connected this top destination will become the serverConnection().
-        request->hier.note(serverDestinations[0], request->url.host());
+        syncHierNote(serverDestinations[0], request->url.host());
         request->clearError();
 
         connectStart();
@@ -451,7 +457,8 @@ FwdState::unregister(Comm::ConnectionPointer &conn)
     debugs(17, 3, HERE << entry->url() );
     assert(serverConnection() == conn);
     assert(Comm::IsConnOpen(conn));
-    comm_remove_close_handler(conn->fd, fwdServerClosedWrapper, this);
+    comm_remove_close_handler(conn->fd, closeHandler);
+    closeHandler = NULL;
     serverConn = NULL;
 }
 
@@ -582,14 +589,7 @@ FwdState::checkRetry()
     return true;
 }
 
-/*
- * FwdState::checkRetriable
- *
- * Return TRUE if this is the kind of request that can be retried
- * after a failure.  If the request is not retriable then we don't
- * want to risk sending it on a persistent connection.  Instead we'll
- * force it to go on a new HTTP connection.
- */
+/// Whether we may try sending this request again after a failure.
 bool
 FwdState::checkRetriable()
 {
@@ -682,7 +682,7 @@ FwdState::connectDone(const Comm::ConnectionPointer &conn, Comm::Flag status, in
     serverConn = conn;
     debugs(17, 3, HERE << serverConnection() << ": '" << entry->url() << "'" );
 
-    comm_add_close_handler(serverConnection()->fd, fwdServerClosedWrapper, this);
+    closeHandler = comm_add_close_handler(serverConnection()->fd, fwdServerClosedWrapper, this);
 
 #if USE_OPENSSL
     if (!request->flags.pinned) {
@@ -702,9 +702,9 @@ FwdState::connectDone(const Comm::ConnectionPointer &conn, Comm::Flag status, in
             const time_t sslNegotiationTimeout = max(static_cast<time_t>(1), timeLeft());
             Ssl::PeerConnector *connector = NULL;
             if (request->flags.sslPeek)
-                connector = new Ssl::PeekingPeerConnector(requestPointer, serverConnection(), clientConn, callback, sslNegotiationTimeout);
+                connector = new Ssl::PeekingPeerConnector(requestPointer, serverConnection(), clientConn, callback, al, sslNegotiationTimeout);
             else
-                connector = new Ssl::BlindPeerConnector(requestPointer, serverConnection(), callback, sslNegotiationTimeout);
+                connector = new Ssl::BlindPeerConnector(requestPointer, serverConnection(), callback, al, sslNegotiationTimeout);
             AsyncJob::Start(connector); // will call our callback
             return;
         }
@@ -724,7 +724,17 @@ FwdState::connectedToPeer(Security::EncryptorAnswer &answer)
         answer.error.clear(); // preserve error for errorSendComplete()
         if (CachePeer *p = serverConnection()->getPeer())
             peerConnectFailed(p);
-        retryOrBail();
+        serverConnection()->close();
+        return;
+    }
+
+    if (answer.tunneled) {
+        // TODO: When ConnStateData establishes tunnels, its state changes
+        // [in ways that may affect logging?]. Consider informing
+        // ConnStateData about our tunnel or otherwise unifying tunnel
+        // establishment [side effects].
+        unregister(serverConn); // async call owns it now
+        complete(); // destroys us
         return;
     }
 
@@ -796,7 +806,16 @@ FwdState::syncWithServerConn(const char *host)
         Ip::Qos::setSockNfmark(serverConn, GetNfmarkToServer(request));
 #endif
 
-    request->hier.note(serverConn, host);
+    syncHierNote(serverConn, host);
+}
+
+void
+FwdState::syncHierNote(const Comm::ConnectionPointer &server, const char *host)
+{
+    if (request)
+        request->hier.note(server, host);
+    if (al)
+        al->hier.note(server, host);
 }
 
 /**
@@ -841,7 +860,8 @@ FwdState::connectStart()
             request->flags.pinned = true;
             if (pinned_connection->pinnedAuth())
                 request->flags.auth = true;
-            comm_add_close_handler(serverConn->fd, fwdServerClosedWrapper, this);
+
+            closeHandler = comm_add_close_handler(serverConn->fd,  fwdServerClosedWrapper, this);
 
             syncWithServerConn(pinned_connection->pinning.host);
 
@@ -880,7 +900,7 @@ FwdState::connectStart()
         debugs(17, 3, HERE << "reusing pconn " << serverConnection());
         ++n_tries;
 
-        comm_add_close_handler(serverConnection()->fd, fwdServerClosedWrapper, this);
+        closeHandler = comm_add_close_handler(serverConnection()->fd,  fwdServerClosedWrapper, this);
 
         syncWithServerConn(request->url.host());
 
@@ -1161,9 +1181,14 @@ FwdState::pconnPush(Comm::ConnectionPointer &conn, const char *domain)
 Comm::ConnectionPointer
 FwdState::pconnPop(const Comm::ConnectionPointer &dest, const char *domain)
 {
+    bool retriable = checkRetriable();
+    if (!retriable && Config.accessList.serverPconnForNonretriable) {
+        ACLFilledChecklist ch(Config.accessList.serverPconnForNonretriable, request, NULL);
+        retriable = (ch.fastCheck() == ACCESS_ALLOWED);
+    }
     // always call shared pool first because we need to close an idle
     // connection there if we have to use a standby connection.
-    Comm::ConnectionPointer conn = fwdPconnPool->pop(dest, domain, checkRetriable());
+    Comm::ConnectionPointer conn = fwdPconnPool->pop(dest, domain, retriable);
     if (!Comm::IsConnOpen(conn)) {
         // either there was no pconn to pop or this is not a retriable xaction
         if (CachePeer *peer = dest->getPeer()) {
@@ -121,6 +121,7 @@ class FwdState : public RefCountable
     void closeServerConnection(const char *reason);
 
     void syncWithServerConn(const char *host);
+    void syncHierNote(const Comm::ConnectionPointer &server, const char *host);
 
 public:
     StoreEntry *entry;
@@ -152,6 +153,8 @@ class FwdState : public RefCountable
 
     Comm::ConnectionPointer serverConn; ///< a successfully opened connection to a server.
 
+    AsyncCall::Pointer closeHandler; ///< The serverConn close handler
+
     /// possible pconn race states
     typedef enum { raceImpossible, racePossible, raceHappened } PconnRace;
     PconnRace pconnRace; ///< current pconn race state
@@ -15,7 +15,7 @@
 #include "HttpHeaderFieldStat.h"
 #include "HttpHeaderStat.h"
 #include "HttpHeaderTools.h"
-#include "SBuf.h"
+#include "sbuf/SBuf.h"
 #include "StatHist.h"
 #include "Store.h"
 #include "StrList.h"
@@ -10,6 +10,7 @@
 
 #include "squid.h"
 #include "client_side_request.h"
+#include "http/Stream.h"
 #include "HttpHeaderRange.h"
 #include "HttpHeaderTools.h"
 #include "HttpReply.h"
@@ -14,6 +14,7 @@
 /* because we pass a spec by value */
 #include "HttpHeaderMask.h"
 #include "mem/forward.h"
+#include "sbuf/forward.h"
 #include "SquidString.h"
 
 #include <vector>
@@ -24,7 +25,6 @@ class HttpHdrContRange;
 class HttpHdrRange;
 class HttpHdrSc;
 class Packable;
-class SBuf;
 
 /** Possible owners of http header */
 typedef enum {
@@ -20,6 +20,7 @@
 #include "fde.h"
 #include "globals.h"
 #include "http/RegisteredHeaders.h"
+#include "http/Stream.h"
 #include "HttpHdrContRange.h"
 #include "HttpHeader.h"
 #include "HttpHeaderFieldInfo.h"
@@ -39,6 +40,7 @@
 #include <string>
 
 static void httpHeaderPutStrvf(HttpHeader * hdr, Http::HdrType id, const char *fmt, va_list vargs);
+static void httpHdrAdd(HttpHeader *heads, HttpRequest *request, const AccessLogEntryPointer &al, HeaderWithAclList &headersAdd);
 
 void
 httpHeaderMaskInit(HttpHeaderMask * mask, int value)
@@ -266,29 +268,12 @@ httpHeaderQuoteString(const char *raw)
  * \retval 1    Header has no access controls to test
  */
 static int
-httpHdrMangle(HttpHeaderEntry * e, HttpRequest * request, int req_or_rep)
+httpHdrMangle(HttpHeaderEntry * e, HttpRequest * request, HeaderManglers *hms)
 {
     int retval;
 
-    /* check with anonymizer tables */
-    HeaderManglers *hms = NULL;
     assert(e);
 
-    if (ROR_REQUEST == req_or_rep) {
-        hms = Config.request_header_access;
-    } else if (ROR_REPLY == req_or_rep) {
-        hms = Config.reply_header_access;
-    } else {
-        /* error. But let's call it "request". */
-        hms = Config.request_header_access;
-    }
-
-    /* manglers are not configured for this message kind */
-    if (!hms) {
-        debugs(66, 7, "no manglers configured for message kind " << req_or_rep);
-        return 1;
-    }
-
     const headerMangler *hm = hms->find(*e);
 
     /* mangler or checklist went away. default allow */
@@ -322,18 +307,40 @@ httpHdrMangle(HttpHeaderEntry * e, HttpRequest * request, int req_or_rep)
 
 /** Mangles headers for a list of headers. */
 void
-httpHdrMangleList(HttpHeader * l, HttpRequest * request, int req_or_rep)
+httpHdrMangleList(HttpHeader *l, HttpRequest *request, const AccessLogEntryPointer &al, req_or_rep_t req_or_rep)
 {
     HttpHeaderEntry *e;
     HttpHeaderPos p = HttpHeaderInitPos;
 
-    int headers_deleted = 0;
-    while ((e = l->getEntry(&p)))
-        if (0 == httpHdrMangle(e, request, req_or_rep))
-            l->delAt(p, headers_deleted);
+    /* check with anonymizer tables */
+    HeaderManglers *hms = nullptr;
+    HeaderWithAclList *headersAdd = nullptr;
+
+    switch (req_or_rep) {
+    case ROR_REQUEST:
+        hms = Config.request_header_access;
+        headersAdd = Config.request_header_add;
+        break;
+    case ROR_REPLY:
+        hms = Config.reply_header_access;
+        headersAdd = Config.reply_header_add;
+        break;
+    }
 
-    if (headers_deleted)
-        l->refreshMask();
+    if (hms) {
+        int headers_deleted = 0;
+        while ((e = l->getEntry(&p))) {
+            if (0 == httpHdrMangle(e, request, hms))
+                l->delAt(p, headers_deleted);
+        }
+
+        if (headers_deleted)
+            l->refreshMask();
+    }
+
+    if (headersAdd && !headersAdd->empty()) {
+        httpHdrAdd(l, request, al, *headersAdd);
+    }
 }
 
 static
@@ -29,6 +29,12 @@ class String;
 
 typedef std::list<HeaderWithAcl> HeaderWithAclList;
 
+/* Distinguish between Request and Reply (for header mangling) */
+typedef enum {
+    ROR_REQUEST,
+    ROR_REPLY
+} req_or_rep_t;
+
 // Currently a POD
 class headerMangler
 {
@@ -119,7 +125,7 @@ void httpHeaderPutStrf(HttpHeader * hdr, Http::HdrType id, const char *fmt,...)
 
 const char *getStringPrefix(const char *str, size_t len);
 
-void httpHdrMangleList(HttpHeader *, HttpRequest *, int req_or_rep);
+void httpHdrMangleList(HttpHeader *, HttpRequest *, const AccessLogEntryPointer &al, req_or_rep_t req_or_rep);
 
 #endif
 
@@ -11,6 +11,7 @@
 #include "squid.h"
 #include "Debug.h"
 #include "http/one/Parser.h"
+#include "HttpHdrCc.h"
 #include "HttpHeaderTools.h"
 #include "HttpMsg.h"
 #include "MemBuf.h"
@@ -33,6 +34,25 @@ HttpMsg::~HttpMsg()
     assert(!body_pipe);
 }
 
+void
+HttpMsg::putCc(const HttpHdrCc *otherCc)
+{
+    // get rid of the old CC, if any
+    if (cache_control) {
+        delete cache_control;
+        cache_control = nullptr;
+        if (!otherCc)
+            header.delById(Http::HdrType::CACHE_CONTROL);
+        // else it will be deleted inside putCc() below
+    }
+
+    // add new CC, if any
+    if (otherCc) {
+        cache_control = new HttpHdrCc(*otherCc);
+        header.putCc(cache_control);
+    }
+}
+
 HttpMsgParseState &operator++ (HttpMsgParseState &aState)
 {
     int tmp = (int)aState;
@@ -87,6 +87,9 @@ class HttpMsg : public RefCountable
 
     uint32_t sources; ///< The message sources
 
+    /// copies Cache-Control header to this message
+    void putCc(const HttpHdrCc *otherCc);
+
     // returns true and sets hdr_sz on success
     // returns false and sets *error to zero when needs more data
     // returns false and sets *error to a positive Http::StatusCode on error
@@ -116,15 +116,15 @@ HttpReply::packHeadersInto(Packable * p) const
 }
 
 void
-HttpReply::packInto(Packable * p)
+HttpReply::packInto(Packable * p) const
 {
     packHeadersInto(p);
     body.packInto(p);
 }
 
 /* create memBuf, create mem-based packer, pack, destroy packer, return MemBuf */
 MemBuf *
-HttpReply::pack()
+HttpReply::pack() const
 {
     MemBuf *mb = new MemBuf;
     mb->init();
@@ -146,7 +146,6 @@ HttpReply::make304() const
     rv->last_modified = last_modified;
     rv->expires = expires;
     rv->content_type = content_type;
-    /* rv->cache_control */
     /* rv->content_range */
     /* rv->keep_alive */
     rv->sline.set(Http::ProtocolVersion(), Http::scNotModified, NULL);
@@ -156,12 +155,14 @@ HttpReply::make304() const
             rv->header.addEntry(e->clone());
     }
 
+    rv->putCc(cache_control);
+
     /* rv->body */
     return rv;
 }
 
 MemBuf *
-HttpReply::packed304Reply()
+HttpReply::packed304Reply() const
 {
     /* Not as efficient as skipping the header duplication,
      * but easier to maintain
@@ -79,7 +79,7 @@ class HttpReply: public HttpMsg
                     const char *reason, const char *ctype, int64_t clen, time_t lmt, time_t expires);
 
     /** \return a ready to use mem buffer with a packed reply */
-    MemBuf *pack();
+    MemBuf *pack() const;
 
     /** construct a 304 reply and return it */
     HttpReply *make304() const;
@@ -120,11 +120,11 @@ class HttpReply: public HttpMsg
 
     void hdrCacheClean();
 
-    void packInto(Packable * p);
+    void packInto(Packable * p) const;
 
     /* ez-routines */
     /** \return construct 304 reply and pack it into a MemBuf */
-    MemBuf *packed304Reply();
+    MemBuf *packed304Reply() const;
 
     /* header manipulation */
     time_t hdrExpirationTime();
@@ -19,11 +19,13 @@
 #include "gopher.h"
 #include "http.h"
 #include "http/one/RequestParser.h"
+#include "http/Stream.h"
 #include "HttpHdrCc.h"
 #include "HttpHeaderRange.h"
 #include "HttpRequest.h"
 #include "log/Config.h"
 #include "MemBuf.h"
+#include "sbuf/StringConvert.h"
 #include "SquidConfig.h"
 #include "Store.h"
 #include "URL.h"
@@ -87,7 +89,7 @@ HttpRequest::init()
     peer_login = NULL;      // not allocated/deallocated by this class
     peer_domain = NULL;     // not allocated/deallocated by this class
     peer_host = NULL;
-    vary_headers = NULL;
+    vary_headers = SBuf();
     myportname = null_string;
     tag = null_string;
 #if USE_AUTH
@@ -119,8 +121,7 @@ HttpRequest::clean()
 #if USE_AUTH
     auth_user_request = NULL;
 #endif
-    safe_free(vary_headers);
-
+    vary_headers.clear();
     url.clear();
 
     header.clean();
@@ -195,7 +196,7 @@ HttpRequest::clone() const
 
     copy->lastmod = lastmod;
     copy->etag = etag;
-    copy->vary_headers = vary_headers ? xstrdup(vary_headers) : NULL;
+    copy->vary_headers = vary_headers;
     // XXX: what to do with copy->peer_domain?
 
     copy->tag = tag;
@@ -349,7 +350,7 @@ HttpRequest::swapOut(StoreEntry * e)
 
 /* packs request-line and headers, appends <crlf> terminator */
 void
-HttpRequest::pack(Packable * p)
+HttpRequest::pack(Packable * p) const
 {
     assert(p);
     /* pack request-line */
@@ -518,22 +519,11 @@ HttpRequest::expectingBody(const HttpRequestMethod &, int64_t &theSize) const
  * If the request cannot be created cleanly, NULL is returned
  */
 HttpRequest *
-HttpRequest::CreateFromUrlAndMethod(char * url, const HttpRequestMethod& method)
+HttpRequest::CreateFromUrl(char * url, const HttpRequestMethod& method)
 {
     return urlParse(method, url, NULL);
 }
 
-/*
- * Create a Request from a URL.
- *
- * If the request cannot be created cleanly, NULL is returned
- */
-HttpRequest *
-HttpRequest::CreateFromUrl(char * url)
-{
-    return urlParse(Http::METHOD_GET, url, NULL);
-}
-
 /**
  * Are responses to this request possible cacheable ?
  * If false then no matter what the response must not be cached.
@@ -659,7 +649,7 @@ HttpRequest::storeId()
 {
     if (store_id.size() != 0) {
         debugs(73, 3, "sent back store_id: " << store_id);
-        return SBuf(store_id);
+        return StringToSBuf(store_id);
     }
     debugs(73, 3, "sent back effectiveRequestUrl: " << effectiveRequestUri());
     return effectiveRequestUri();
@@ -148,7 +148,8 @@ class HttpRequest: public HttpMsg
 
     time_t lastmod;     /* Used on refreshes */
 
-    const char *vary_headers;   /* Used when varying entities are detected. Changes how the store key is calculated */
+    /// The variant second-stage cache key. Generated from Vary header pattern for this request.
+    SBuf vary_headers;
 
     char *peer_domain;      /* Configured peer forceddomain */
 
@@ -189,13 +190,11 @@ class HttpRequest: public HttpMsg
 
     void swapOut(StoreEntry * e);
 
-    void pack(Packable * p);
+    void pack(Packable * p) const;
 
     static void httpRequestPack(void *obj, Packable *p);
 
-    static HttpRequest * CreateFromUrlAndMethod(char * url, const HttpRequestMethod& method);
-
-    static HttpRequest * CreateFromUrl(char * url);
+    static HttpRequest * CreateFromUrl(char * url, const HttpRequestMethod &method = Http::METHOD_GET);
 
     ConnStateData *pinnedConnection();
 
@@ -10,17 +10,6 @@ include $(top_srcdir)/src/Common.am
 DNSSOURCE = \
 	dns_internal.cc
 
-SBUF_SOURCE= \
-	base/CharacterSet.h \
-	base/InstanceId.h \
-	MemBlob.h \
-	MemBlob.cc \
-	OutOfBoundsException.h \
-	SBuf.h \
-	SBuf.cc \
-	SBufExceptions.h \
-	SBufExceptions.cc
-
 STOREMETA_SOURCE = \
 	StoreMeta.cc \
 	StoreMeta.h \
@@ -42,8 +31,8 @@ LOADABLE_MODULES_SOURCES = \
 	LoadableModules.h \
 	LoadableModules.cc
 
-SUBDIRS	= mem base anyp helper dns ftp parser comm eui acl format clients servers fs repl store DiskIO
-DIST_SUBDIRS = mem base anyp helper dns ftp parser comm eui acl format clients servers fs repl store DiskIO
+SUBDIRS	= mem base anyp helper dns ftp parser comm eui acl format clients sbuf servers fs repl store DiskIO
+DIST_SUBDIRS = mem base anyp helper dns ftp parser comm eui acl format clients sbuf servers fs repl store DiskIO
 
 if ENABLE_AUTH
 SUBDIRS += auth
@@ -53,8 +42,8 @@ check_PROGRAMS+= tests/testACLMaxUserIP
 endif
 DIST_SUBDIRS += auth
 
-SUBDIRS	+= http ip icmp ident log ipc mgr security
-DIST_SUBDIRS += http ip icmp ident log ipc mgr security
+SUBDIRS	+= http ip icmp ident log ipc mgr
+DIST_SUBDIRS += http ip icmp ident log ipc mgr
 
 SSL_LIBS=
 if ENABLE_SSL
@@ -63,7 +52,8 @@ SSL_LIBS += \
 	ssl/libsslsquid.la \
 	ssl/libsslutil.la
 endif
-DIST_SUBDIRS += ssl
+DIST_SUBDIRS += ssl security
+SUBDIRS += security
 
 SNMP_ALL_SOURCE = \
 	SnmpRequest.h \
@@ -420,13 +410,9 @@ squid_SOURCES = \
 	RemovalPolicy.h \
 	send-announce.h \
 	send-announce.cc \
-	$(SBUF_SOURCE) \
-	SBufAlgos.h \
-	SBufAlgos.cc \
-	SBufDetailedStats.h \
-	SBufDetailedStats.cc \
 	SBufStatsAction.h \
 	SBufStatsAction.cc \
+	sbuf/StringConvert.h \
 	$(SNMP_SOURCE) \
 	SquidMath.h \
 	SquidMath.cc \
@@ -552,8 +538,8 @@ squid_LDADD = \
 	servers/libservers.la \
 	ftp/libftp.la \
 	helper/libhelper.la \
-	http/libsquid-http.la \
-	parser/libsquid-parser.la \
+	http/libhttp.la \
+	parser/libparser.la \
 	dns/libdns.la \
 	base/libbase.la \
 	libsquid.la \
@@ -567,9 +553,10 @@ squid_LDADD = \
 	comm/libcomm.la \
 	security/libsecurity.la \
 	eui/libeui.la \
-	icmp/libicmp.la icmp/libicmp-core.la \
+	icmp/libicmp.la \
 	log/liblog.la \
 	format/libformat.la \
+	sbuf/libsbuf.la \
 	$(XTRA_OBJS) \
 	$(REPL_OBJS) \
 	$(NETTLELIB) \
@@ -738,26 +725,6 @@ EXTRA_DIST = \
 	mib.txt \
 	mime.conf.default
 
-DEFAULT_HTTP_PORT	= 3128
-DEFAULT_ICP_PORT	= 3130
-DEFAULT_PREFIX		= $(prefix)
-DEFAULT_CONFIG_DIR	= $(sysconfdir)
-DEFAULT_CONFIG_FILE	= $(DEFAULT_CONFIG_DIR)/squid.conf
-DEFAULT_MIME_TABLE	= $(DEFAULT_CONFIG_DIR)/mime.conf
-DEFAULT_SSL_CRTD	= $(libexecdir)/`echo ssl_crtd  | sed '$(transform);s/$$/$(EXEEXT)/'`
-DEFAULT_LOG_PREFIX	= $(DEFAULT_LOG_DIR)
-DEFAULT_CACHE_LOG	= $(DEFAULT_LOG_PREFIX)/cache.log
-DEFAULT_ACCESS_LOG	= $(DEFAULT_LOG_PREFIX)/access.log
-DEFAULT_STORE_LOG	= $(DEFAULT_LOG_PREFIX)/store.log
-DEFAULT_NETDB_FILE	= $(DEFAULT_LOG_PREFIX)/netdb.state
-DEFAULT_SSL_DB_DIR	= $(localstatedir)/lib/ssl_db
-DEFAULT_PINGER		= $(libexecdir)/`echo pinger | sed '$(transform);s/$$/$(EXEEXT)/'`
-DEFAULT_UNLINKD		= $(libexecdir)/`echo unlinkd | sed '$(transform);s/$$/$(EXEEXT)/'`
-DEFAULT_LOGFILED	= $(libexecdir)/`echo log_file_daemon | sed '$(transform);s/$$/$(EXEEXT)/'`
-DEFAULT_DISKD		= $(libexecdir)/`echo diskd | sed '$(transform);s/$$/$(EXEEXT)/'`
-DEFAULT_ICON_DIR	= $(datadir)/icons
-DEFAULT_ERROR_DIR	= $(datadir)/errors
-
 # Make location configure settings available to the code
 DEFS += -DDEFAULT_CONFIG_FILE=\"$(DEFAULT_CONFIG_FILE)\" -DDEFAULT_SQUID_DATA_DIR=\"$(datadir)\" -DDEFAULT_SQUID_CONFIG_DIR=\"$(sysconfdir)\"
 
@@ -950,9 +917,7 @@ TESTS += $(check_PROGRAMS)
 #tests_testX_LDADD=\
 #	$(SQUID_CPPUNIT_LIBS) \
 #	$(SQUID_CPPUNIT_LA) \
-#	$(COMPAT_LIB) \
-#tests_testX_DEPENDENCIES= $(SQUID_CPPUNIT_LA)
-
+#	$(COMPAT_LIB) 
 
 # - add other component .(h|cc) files needed to link and run tests
 tests_testHttpReply_SOURCES=\
@@ -997,10 +962,6 @@ tests_testHttpReply_SOURCES=\
 	Notes.cc \
 	SquidString.h \
 	SquidTime.h \
-	$(SBUF_SOURCE) \
-	SBufAlgos.h \
-	SBufAlgos.cc \
-	SBufDetailedStats.h \
 	tests/stub_SBufDetailedStats.cc \
 	String.cc \
 	StrList.h \
@@ -1043,8 +1004,8 @@ nodist_tests_testHttpReply_SOURCES=\
 tests_testHttpReply_LDFLAGS = $(LIBADD_DL)
 tests_testHttpReply_LDADD=\
 	CommCalls.o \
-	http/libsquid-http.la \
-	parser/libsquid-parser.la \
+	http/libhttp.la \
+	parser/libparser.la \
 	acl/libacls.la \
 	acl/libapi.la \
 	acl/libstate.la \
@@ -1053,6 +1014,7 @@ tests_testHttpReply_LDADD=\
 	base/libbase.la \
 	ipc/libipc.la \
 	mem/libmem.la \
+	sbuf/libsbuf.la \
 	$(top_builddir)/lib/libmisccontainers.la \
 	$(top_builddir)/lib/libmiscencoding.la \
 	$(top_builddir)/lib/libmiscutil.la \
@@ -1062,7 +1024,6 @@ tests_testHttpReply_LDADD=\
 	$(SSLLIB) \
 	$(COMPAT_LIB) \
 	$(XTRA_LIBS)
-tests_testHttpReply_DEPENDENCIES= $(SQUID_CPPUNIT_LA)
 
 tests_testACLMaxUserIP_SOURCES= \
 	cbdata.cc \
@@ -1110,10 +1071,6 @@ tests_testACLMaxUserIP_SOURCES= \
 	StrList.cc \
 	tests/stub_StatHist.cc \
 	stmem.cc \
-	$(SBUF_SOURCE) \
-	SBufAlgos.h \
-	SBufAlgos.cc \
-	SBufDetailedStats.h \
 	tests/stub_SBufDetailedStats.cc \
 	String.cc \
 	StoreIOState.cc \
@@ -1175,8 +1132,8 @@ nodist_tests_testACLMaxUserIP_SOURCES= \
 tests_testACLMaxUserIP_LDADD= \
 	libsquid.la \
 	helper/libhelper.la \
-	http/libsquid-http.la \
-	parser/libsquid-parser.la \
+	http/libhttp.la \
+	parser/libparser.la \
 	$(AUTH_ACL_LIBS) \
 	ident/libident.la \
 	acl/libacls.la \
@@ -1188,6 +1145,7 @@ tests_testACLMaxUserIP_LDADD= \
 	ip/libip.la \
 	ipc/libipc.la \
 	mgr/libmgr.la \
+	sbuf/libsbuf.la \
 	$(top_builddir)/lib/libmisccontainers.la \
 	$(top_builddir)/lib/libmiscencoding.la \
 	$(top_builddir)/lib/libmiscutil.la \
@@ -1198,8 +1156,6 @@ tests_testACLMaxUserIP_LDADD= \
 	$(COMPAT_LIB) \
 	$(XTRA_LIBS)
 tests_testACLMaxUserIP_LDFLAGS = $(LIBADD_DL)
-##tests_testACLMaxUserIP_DEPENDENCIES = \
-##	$(SQUID_CPPUNIT_LA)
 
 ## a demonstration test that does nothing but shows the salient points
 ## involved in writing tests.
@@ -1215,13 +1171,12 @@ nodist_tests_testBoilerplate_SOURCES = \
 	$(TESTSOURCES)
 tests_testBoilerplate_LDADD= \
 	$(SQUID_CPPUNIT_LIBS) \
+	$(SQUID_CPPUNIT_LA) \
 	$(SSLLIB) \
 	base/libbase.la \
 	$(COMPAT_LIB) \
 	$(XTRA_LIBS)
 tests_testBoilerplate_LDFLAGS = $(LIBADD_DL)
-tests_testBoilerplate_DEPENDENCIES = \
-	$(SQUID_CPPUNIT_LA)
 
 ## Tests of base/libbase.la objects
 tests_testCharacterSet_SOURCES = \
@@ -1378,10 +1333,6 @@ tests_testCacheManager_SOURCES = \
 	refresh.h \
 	refresh.cc \
 	RemovalPolicy.cc \
-	$(SBUF_SOURCE) \
-	SBufAlgos.h \
-	SBufAlgos.cc \
-	SBufDetailedStats.h \
 	tests/stub_SBufDetailedStats.cc \
 	$(SNMP_SOURCE) \
 	SquidMath.h \
@@ -1447,8 +1398,8 @@ tests_testCacheManager_LDADD = \
 	servers/libservers.la \
 	ftp/libftp.la \
 	helper/libhelper.la \
-	http/libsquid-http.la \
-	parser/libsquid-parser.la \
+	http/libhttp.la \
+	parser/libparser.la \
 	ident/libident.la \
 	acl/libacls.la \
 	acl/libstate.la \
@@ -1459,7 +1410,7 @@ tests_testCacheManager_LDADD = \
 	fs/libfs.la \
 	comm/libcomm.la \
 	eui/libeui.la \
-	icmp/libicmp.la icmp/libicmp-core.la \
+	icmp/libicmp.la \
 	log/liblog.la \
 	format/libformat.la \
 	$(REPL_OBJS) \
@@ -1472,6 +1423,7 @@ tests_testCacheManager_LDADD = \
 	$(SNMP_LIBS) \
 	mem/libmem.la \
 	store/libstore.la \
+	sbuf/libsbuf.la \
 	$(top_builddir)/lib/libmisccontainers.la \
 	$(top_builddir)/lib/libmiscencoding.la \
 	$(top_builddir)/lib/libmiscutil.la \
@@ -1484,9 +1436,6 @@ tests_testCacheManager_LDADD = \
 	$(COMPAT_LIB) \
 	$(XTRA_LIBS)
 tests_testCacheManager_LDFLAGS = $(LIBADD_DL)
-tests_testCacheManager_DEPENDENCIES = \
-	$(REPL_OBJS) \
-	$(SQUID_CPPUNIT_LA)
 
 tests_testDiskIO_SOURCES = \
 	CacheDigest.h \
@@ -1551,10 +1500,6 @@ tests_testDiskIO_SOURCES = \
 	StatHist.h \
 	tests/stub_StatHist.cc \
 	stmem.cc \
-	$(SBUF_SOURCE) \
-	SBufAlgos.h \
-	SBufAlgos.cc \
-	SBufDetailedStats.h \
 	tests/stub_SBufDetailedStats.cc \
 	StoreFileSystem.cc \
 	StoreIOState.cc \
@@ -1629,8 +1574,8 @@ nodist_tests_testDiskIO_SOURCES= \
 	swap_log_op.cc
 tests_testDiskIO_LDADD = \
 	libsquid.la \
-	http/libsquid-http.la \
-	parser/libsquid-parser.la \
+	http/libhttp.la \
+	parser/libparser.la \
 	SquidConfig.o \
 	CommCalls.o \
 	ident/libident.la \
@@ -1651,6 +1596,7 @@ tests_testDiskIO_LDADD = \
 	base/libbase.la \
 	mem/libmem.la \
 	store/libstore.la \
+	sbuf/libsbuf.la \
 	$(top_builddir)/lib/libmisccontainers.la \
 	$(top_builddir)/lib/libmiscencoding.la \
 	$(top_builddir)/lib/libmiscutil.la \
@@ -1660,7 +1606,6 @@ tests_testDiskIO_LDADD = \
 	$(SSLLIB) \
 	$(COMPAT_LIB) \
 	$(XTRA_LIBS)
-
 tests_testDiskIO_LDFLAGS = $(LIBADD_DL)
 tests_testDiskIO_DEPENDENCIES = \
 	DiskIO/libdiskio.la \
@@ -1817,10 +1762,6 @@ tests_testEvent_SOURCES = \
 	RemovalPolicy.cc \
 	StrList.h \
 	StrList.cc \
-	$(SBUF_SOURCE) \
-	SBufAlgos.h \
-	SBufAlgos.cc \
-	SBufDetailedStats.h \
 	tests/stub_SBufDetailedStats.cc \
 	$(SNMP_SOURCE) \
 	SquidMath.cc \
@@ -1891,8 +1832,8 @@ tests_testEvent_LDADD = \
 	servers/libservers.la \
 	ftp/libftp.la \
 	helper/libhelper.la \
-	http/libsquid-http.la \
-	parser/libsquid-parser.la \
+	http/libhttp.la \
+	parser/libparser.la \
 	ident/libident.la \
 	acl/libacls.la \
 	acl/libstate.la \
@@ -1902,7 +1843,7 @@ tests_testEvent_LDADD = \
 	ip/libip.la \
 	fs/libfs.la \
 	anyp/libanyp.la \
-	icmp/libicmp.la icmp/libicmp-core.la \
+	icmp/libicmp.la \
 	comm/libcomm.la \
 	log/liblog.la \
 	format/libformat.la \
@@ -1916,6 +1857,7 @@ tests_testEvent_LDADD = \
 	ipc/libipc.la \
 	mgr/libmgr.la \
 	store/libstore.la \
+	sbuf/libsbuf.la \
 	$(SNMP_LIBS) \
 	$(NETTLELIB) \
 	$(REGEXLIB) \
@@ -1926,9 +1868,6 @@ tests_testEvent_LDADD = \
 	$(COMPAT_LIB) \
 	$(XTRA_LIBS)
 tests_testEvent_LDFLAGS = $(LIBADD_DL)
-tests_testEvent_DEPENDENCIES = \
-	$(REPL_OBJS) \
-	$(SQUID_CPPUNIT_LA)
 
 ## Tests of the EventLoop module.
 tests_testEventLoop_SOURCES = \
@@ -2060,10 +1999,6 @@ tests_testEventLoop_SOURCES = \
 	tests/stub_redirect.cc \
 	refresh.h \
 	refresh.cc \
-	$(SBUF_SOURCE) \
-	SBufAlgos.h \
-	SBufAlgos.cc \
-	SBufDetailedStats.h \
 	tests/stub_SBufDetailedStats.cc \
 	$(SNMP_SOURCE) \
 	SquidMath.h \
@@ -2136,8 +2071,8 @@ tests_testEventLoop_LDADD = \
 	servers/libservers.la \
 	ftp/libftp.la \
 	helper/libhelper.la \
-	http/libsquid-http.la \
-	parser/libsquid-parser.la \
+	http/libhttp.la \
+	parser/libparser.la \
 	ident/libident.la \
 	acl/libacls.la \
 	acl/libstate.la \
@@ -2147,7 +2082,7 @@ tests_testEventLoop_LDADD = \
 	ip/libip.la \
 	fs/libfs.la \
 	anyp/libanyp.la \
-	icmp/libicmp.la icmp/libicmp-core.la \
+	icmp/libicmp.la \
 	comm/libcomm.la \
 	log/liblog.la \
 	format/libformat.la \
@@ -2160,6 +2095,7 @@ tests_testEventLoop_LDADD = \
 	$(top_builddir)/lib/libmiscutil.la \
 	ipc/libipc.la \
 	mgr/libmgr.la \
+	sbuf/libsbuf.la \
 	store/libstore.la \
 	$(SNMP_LIBS) \
 	$(NETTLELIB) \
@@ -2171,9 +2107,6 @@ tests_testEventLoop_LDADD = \
 	$(COMPAT_LIB) \
 	$(XTRA_LIBS)
 tests_testEventLoop_LDFLAGS = $(LIBADD_DL)
-tests_testEventLoop_DEPENDENCIES = \
-	$(REPL_OBJS) \
-	$(SQUID_CPPUNIT_LA)
 
 tests_test_http_range_SOURCES = \
 	AccessLogEntry.cc \
@@ -2301,10 +2234,6 @@ tests_test_http_range_SOURCES = \
 	refresh.h \
 	refresh.cc \
 	RemovalPolicy.cc \
-	$(SBUF_SOURCE) \
-	SBufAlgos.h \
-	SBufAlgos.cc \
-	SBufDetailedStats.h \
 	tests/stub_SBufDetailedStats.cc \
 	$(SNMP_SOURCE) \
 	SquidMath.h \
@@ -2376,17 +2305,17 @@ tests_test_http_range_LDADD = \
 	servers/libservers.la \
 	ftp/libftp.la \
 	helper/libhelper.la \
-	http/libsquid-http.la \
-	parser/libsquid-parser.la \
+	http/libhttp.la \
+	parser/libparser.la \
 	ident/libident.la \
 	acl/libacls.la \
 	acl/libstate.la \
 	acl/libapi.la \
-	parser/libsquid-parser.la \
+	parser/libparser.la \
 	ip/libip.la \
 	fs/libfs.la \
 	anyp/libanyp.la \
-	icmp/libicmp.la icmp/libicmp-core.la \
+	icmp/libicmp.la \
 	comm/libcomm.la \
 	log/liblog.la \
 	format/libformat.la \
@@ -2398,6 +2327,7 @@ tests_test_http_range_LDADD = \
 	dns/libdns.la \
 	base/libbase.la \
 	mgr/libmgr.la \
+	sbuf/libsbuf.la \
 	store/libstore.la \
 	$(SNMP_LIBS) \
 	$(top_builddir)/lib/libmisccontainers.la \
@@ -2412,16 +2342,13 @@ tests_test_http_range_LDADD = \
 	$(COMPAT_LIB) \
 	$(XTRA_LIBS)
 tests_test_http_range_LDFLAGS = $(LIBADD_DL)
-tests_test_http_range_DEPENDENCIES = \
-	$(SQUID_CPPUNIT_LA)
 
 ## Tests of parser/* objects
 tests_testTokenizer_SOURCES = \
 	tests/testTokenizer.h \
 	tests/testTokenizer.cc
 nodist_tests_testTokenizer_SOURCES = \
 	parser/Tokenizer.h \
-	$(SBUF_SOURCE) \
 	SquidString.h \
 	String.cc \
 	$(TESTSOURCES) \
@@ -2431,8 +2358,9 @@ nodist_tests_testTokenizer_SOURCES = \
 	tests/stub_SBufDetailedStats.cc
 tests_testTokenizer_LDFLAGS = $(LIBADD_DL)
 tests_testTokenizer_LDADD = \
-	parser/libsquid-parser.la \
+	parser/libparser.la \
 	base/libbase.la \
+	sbuf/libsbuf.la \
 	$(top_builddir)/lib/libmiscutil.la \
 	$(COMPAT_LIB) \
 	$(SQUID_CPPUNIT_LA) \
@@ -2448,9 +2376,6 @@ tests_testHttp1Parser_SOURCES = \
 	mime_header.h \
 	String.cc \
 	cache_cf.h \
-	$(SBUF_SOURCE) \
-	SBufAlgos.h \
-	SBufAlgos.cc \
 	tests/stub_SBufDetailedStats.cc \
 	tests/stub_cache_cf.cc \
 	tests/stub_cache_manager.cc \
@@ -2474,20 +2399,20 @@ tests_testHttp1Parser_SOURCES = \
 nodist_tests_testHttp1Parser_SOURCES = \
 	$(TESTSOURCES)
 tests_testHttp1Parser_LDADD= \
-	http/libsquid-http.la \
-	parser/libsquid-parser.la \
+	http/libhttp.la \
+	parser/libparser.la \
 	anyp/libanyp.la \
 	SquidConfig.o \
 	base/libbase.la \
 	ip/libip.la \
+	sbuf/libsbuf.la \
 	$(top_builddir)/lib/libmiscutil.la \
 	$(SQUID_CPPUNIT_LIBS) \
+	$(SQUID_CPPUNIT_LA) \
 	$(SSLLIB) \
 	$(COMPAT_LIB) \
 	$(XTRA_LIBS)
 tests_testHttp1Parser_LDFLAGS = $(LIBADD_DL)
-tests_testHttp1Parser_DEPENDENCIES = \
-	$(SQUID_CPPUNIT_LA)
 
 ## Tests of the HttpRequest module.
 tests_testHttpRequest_SOURCES = \
@@ -2628,10 +2553,6 @@ tests_testHttpRequest_SOURCES = \
 	refresh.h \
 	refresh.cc \
 	RemovalPolicy.cc \
-	$(SBUF_SOURCE) \
-	SBufAlgos.h \
-	SBufAlgos.cc \
-	SBufDetailedStats.h \
 	tests/stub_SBufDetailedStats.cc \
 	$(SNMP_SOURCE) \
 	SquidMath.h \
@@ -2693,27 +2614,28 @@ tests_testHttpRequest_LDADD = \
 	servers/libservers.la \
 	helper/libhelper.la \
 	ftp/libftp.la \
-	http/libsquid-http.la \
+	http/libhttp.la \
 	ident/libident.la \
 	acl/libacls.la \
 	acl/libstate.la \
 	acl/libapi.la \
-	parser/libsquid-parser.la \
+	parser/libparser.la \
 	ip/libip.la \
 	fs/libfs.la \
 	$(SSL_LIBS) \
 	ipc/libipc.la \
-	parser/libsquid-parser.la \
+	parser/libparser.la \
 	dns/libdns.la \
 	base/libbase.la \
 	mgr/libmgr.la \
 	anyp/libanyp.la \
 	$(SNMP_LIBS) \
-	icmp/libicmp.la icmp/libicmp-core.la \
+	icmp/libicmp.la \
 	comm/libcomm.la \
 	log/liblog.la \
 	format/libformat.la \
 	store/libstore.la \
+	sbuf/libsbuf.la \
 	$(REPL_OBJS) \
 	$(ADAPTATION_LIBS) \
 	$(ESI_LIBS) \
@@ -2729,12 +2651,9 @@ tests_testHttpRequest_LDADD = \
 	$(COMPAT_LIB) \
 	$(XTRA_LIBS)
 tests_testHttpRequest_LDFLAGS = $(LIBADD_DL)
-tests_testHttpRequest_DEPENDENCIES = \
-	$(REPL_OBJS) \
-	$(SQUID_CPPUNIT_LA)
 
 ## Tests for icmp/* objects
-# icmp/libicmp-core.la is used by pinger so SHOULD NOT require more dependancies! :-(
+# icmp/libicmpcore.la is used by pinger so SHOULD NOT require more dependancies! :-(
 tests_testIcmp_SOURCES = \
 	tests/testIcmp.h \
 	tests/testIcmp.cc
@@ -2747,7 +2666,7 @@ nodist_tests_testIcmp_SOURCES = \
 	globals.cc
 tests_testIcmp_LDFLAGS = $(LIBADD_DL)
 tests_testIcmp_LDADD=\
-	icmp/libicmp-core.la \
+	icmp/libicmpcore.la \
 	ip/libip.la \
 	base/libbase.la \
 	$(COMPAT_LIB) \
@@ -2839,10 +2758,6 @@ tests_testStore_SOURCES= \
 	StoreSwapLogData.cc \
 	store_key_md5.h \
 	store_key_md5.cc \
-	$(SBUF_SOURCE) \
-	SBufAlgos.h \
-	SBufAlgos.cc \
-	SBufDetailedStats.h \
 	tests/stub_SBufDetailedStats.cc \
 	String.cc \
 	StrList.h \
@@ -2914,8 +2829,8 @@ nodist_tests_testStore_SOURCES= \
 
 tests_testStore_LDADD= \
 	libsquid.la \
-	http/libsquid-http.la \
-	parser/libsquid-parser.la \
+	http/libhttp.la \
+	parser/libparser.la \
 	ident/libident.la \
 	acl/libacls.la \
 	acl/libstate.la \
@@ -2929,20 +2844,20 @@ tests_testStore_LDADD= \
 	anyp/libanyp.la \
 	mem/libmem.la \
 	store/libstore.la \
+	sbuf/libsbuf.la \
 	DiskIO/libdiskio.la \
 	$(top_builddir)/lib/libmisccontainers.la \
 	$(top_builddir)/lib/libmiscencoding.la \
 	$(top_builddir)/lib/libmiscutil.la \
 	$(NETTLELIB) \
 	$(REGEXLIB) \
 	$(SQUID_CPPUNIT_LIBS) \
+	$(SQUID_CPPUNIT_LA) \
 	$(SSLLIB) \
 	CommCalls.o \
 	$(COMPAT_LIB) \
 	$(XTRA_LIBS)
 tests_testStore_LDFLAGS = $(LIBADD_DL)
-tests_testStore_DEPENDENCIES = \
-	$(SQUID_CPPUNIT_LA)
 
 ## string needs mem.cc.
 ## mem.cc needs ClientInfo.h
@@ -2951,8 +2866,6 @@ tests_testString_SOURCES = \
 	ClientInfo.h \
 	MemBuf.cc \
 	String.cc \
-	$(SBUF_SOURCE) \
-	SBufDetailedStats.h \
 	tests/stub_SBufDetailedStats.cc \
 	tests/testString.cc \
 	tests/testString.h \
@@ -2974,15 +2887,15 @@ tests_testString_LDADD = \
 	base/libbase.la \
 	libsquid.la \
 	ip/libip.la \
+	sbuf/libsbuf.la \
 	$(top_builddir)/lib/libmiscutil.la \
 	$(REGEXLIB) \
 	$(SQUID_CPPUNIT_LIBS) \
+	$(SQUID_CPPUNIT_LA) \
 	$(SSLLIB) \
 	$(COMPAT_LIB) \
 	$(XTRA_LIBS)
 tests_testString_LDFLAGS = $(LIBADD_DL)
-tests_testString_DEPENDENCIES = \
-	$(SQUID_CPPUNIT_LA)
 
 SWAP_TEST_DS =\
 	repl_modules.o \
@@ -3080,10 +2993,6 @@ tests_testUfs_SOURCES = \
 	tests/stub_cache_cf.cc \
 	tests/stub_helper.cc \
 	cbdata.cc \
-	$(SBUF_SOURCE) \
-	SBufAlgos.h \
-	SBufAlgos.cc \
-	SBufDetailedStats.h \
 	tests/stub_SBufDetailedStats.cc \
 	String.cc \
 	tests/stub_debug.cc \
@@ -3138,8 +3047,8 @@ nodist_tests_testUfs_SOURCES = \
 	SquidMath.h \
 	swap_log_op.cc
 tests_testUfs_LDADD = \
-	http/libsquid-http.la \
-	parser/libsquid-parser.la \
+	http/libhttp.la \
+	parser/libparser.la \
 	CommCalls.o \
 	ident/libident.la \
 	acl/libacls.la \
@@ -3162,6 +3071,7 @@ tests_testUfs_LDADD = \
 	ip/libip.la \
 	mem/libmem.la \
 	store/libstore.la \
+	sbuf/libsbuf.la \
 	$(top_builddir)/lib/libmisccontainers.la \
 	$(top_builddir)/lib/libmiscencoding.la \
 	$(top_builddir)/lib/libmiscutil.la \
@@ -3259,10 +3169,6 @@ tests_testRock_SOURCES = \
 	store_key_md5.cc \
 	store_swapmeta.cc \
 	store_swapout.cc \
-	$(SBUF_SOURCE) \
-	SBufAlgos.h \
-	SBufAlgos.cc \
-	SBufDetailedStats.h \
 	tests/stub_SBufDetailedStats.cc \
 	String.cc \
 	StrList.h \
@@ -3319,8 +3225,8 @@ nodist_tests_testRock_SOURCES = \
 	SquidMath.h \
 	$(TESTSOURCES)
 tests_testRock_LDADD = \
-	http/libsquid-http.la \
-	parser/libsquid-parser.la \
+	http/libhttp.la \
+	parser/libparser.la \
 	libsquid.la \
 	comm/libcomm.la \
 	ip/libip.la \
@@ -3338,6 +3244,7 @@ tests_testRock_LDADD = \
 	base/libbase.la \
 	mem/libmem.la \
 	store/libstore.la \
+	sbuf/libsbuf.la \
 	$(top_builddir)/lib/libmisccontainers.la \
 	$(top_builddir)/lib/libmiscencoding.la \
 	$(top_builddir)/lib/libmiscutil.la \
@@ -3478,10 +3385,6 @@ tests_testURL_SOURCES = \
 	refresh.h \
 	refresh.cc \
 	RemovalPolicy.cc \
-	$(SBUF_SOURCE) \
-	SBufAlgos.h \
-	SBufAlgos.cc \
-	SBufDetailedStats.h \
 	tests/stub_SBufDetailedStats.cc \
 	$(SNMP_SOURCE) \
 	SquidMath.h \
@@ -3557,9 +3460,9 @@ tests_testURL_LDADD = \
 	clients/libclients.la \
 	servers/libservers.la \
 	helper/libhelper.la \
-	http/libsquid-http.la \
+	http/libhttp.la \
 	ftp/libftp.la \
-	parser/libsquid-parser.la \
+	parser/libparser.la \
 	anyp/libanyp.la \
 	ident/libident.la \
 	acl/libacls.la \
@@ -3574,11 +3477,12 @@ tests_testURL_LDADD = \
 	ipc/libipc.la \
 	mgr/libmgr.la \
 	$(SNMP_LIBS) \
-	icmp/libicmp.la icmp/libicmp-core.la \
+	icmp/libicmp.la \
 	comm/libcomm.la \
 	log/liblog.la \
 	format/libformat.la \
 	store/libstore.la \
+	sbuf/libsbuf.la \
 	$(REGEXLIB) \
 	$(REPL_OBJS) \
 	$(ADAPTATION_LIBS) \
@@ -3595,101 +3499,49 @@ tests_testURL_LDADD = \
 	$(COMPAT_LIB) \
 	$(XTRA_LIBS)
 tests_testURL_LDFLAGS = $(LIBADD_DL)
-tests_testURL_DEPENDENCIES = \
-	$(REPL_OBJS) \
-	$(SQUID_CPPUNIT_LA)
 
 tests_testSBuf_SOURCES= \
 	tests/testSBuf.h \
 	tests/testSBuf.cc \
 	tests/SBufFindTest.h \
 	tests/SBufFindTest.cc \
-	$(SBUF_SOURCE) \
-	SBufDetailedStats.h \
 	tests/stub_SBufDetailedStats.cc \
-	SBufAlgos.h \
-	SBufAlgos.cc \
-	SBufStream.h \
 	tests/stub_time.cc \
 	tests/stub_debug.cc \
 	tests/stub_fatal.cc \
-	tests/stub_HelperChildConfig.cc \
-	tests/stub_libmem.cc \
-	tests/stub_cache_cf.cc \
-	tests/stub_cache_manager.cc \
-	tests/stub_cbdata.cc \
-	tests/stub_store.cc \
-	tests/stub_store_stats.cc \
-	tests/stub_tools.cc \
-	SquidString.h \
-	String.cc \
-	tests/stub_wordlist.cc \
-	tests/stub_MemBuf.cc
+	tests/stub_libmem.cc
 nodist_tests_testSBuf_SOURCES=$(TESTSOURCES)
 tests_testSBuf_LDFLAGS = $(LIBADD_DL)
-tests_testSBuf_LDADD=\
+tests_testSBuf_LDADD= \
+	sbuf/libsbuf.la \
 	base/libbase.la \
-	libsquid.la \
-	ip/libip.la \
-	mgr/libmgr.la \
-	$(top_builddir)/lib/libmiscutil.la \
-	$(REGEXLIB) \
 	$(SQUID_CPPUNIT_LIBS) \
 	$(COMPAT_LIB) \
-	$(XTRA_LIBS)
-tests_testSBuf_DEPENDENCIES= $(SQUID_CPPUNIT_LA)
+	$(XTRA_LIBS) \
+	$(SQUID_CPPUNIT_LA)
 
 tests_testSBufList_SOURCES= \
 	tests/testSBufList.h \
 	tests/testSBufList.cc \
-	$(SBUF_SOURCE) \
-	SBufList.h \
-	SBufList.cc \
-	SBufAlgos.h \
-	SBufAlgos.cc \
-	SBufDetailedStats.h \
 	tests/stub_SBufDetailedStats.cc \
-	SBufStream.h \
 	tests/stub_time.cc \
-	tests/stub_MemObject.cc \
-	tests/stub_cbdata.cc \
-	tests/stub_comm.cc \
 	tests/stub_debug.cc \
-	tests/stub_event.cc \
 	tests/stub_fatal.cc \
-	tests/stub_fd.cc \
-	tests/stub_HelperChildConfig.cc \
-	tests/stub_libmem.cc \
-	tests/stub_cache_cf.cc \
-	tests/stub_cache_manager.cc \
-	tests/stub_store.cc \
-	tests/stub_stmem.cc \
-	tests/stub_store_stats.cc \
-	tests/stub_tools.cc \
-	SquidString.h \
-	StatCounters.cc \
-	String.cc \
-	tests/stub_wordlist.cc \
-	tests/stub_MemBuf.cc
+	tests/stub_libmem.cc
 nodist_tests_testSBufList_SOURCES=$(TESTSOURCES)
 tests_testSBufList_LDFLAGS = $(LIBADD_DL)
 tests_testSBufList_LDADD=\
+	sbuf/libsbuf.la \
 	base/libbase.la \
-	libsquid.la \
-	ip/libip.la \
-	mgr/libmgr.la \
-	$(top_builddir)/lib/libmiscutil.la \
 	$(SQUID_CPPUNIT_LIBS) \
 	$(COMPAT_LIB) \
-	$(XTRA_LIBS)
-tests_testSBufList_DEPENDENCIES= $(SQUID_CPPUNIT_LA)
+	$(XTRA_LIBS) \
+	$(SQUID_CPPUNIT_LA)
 
 tests_testConfigParser_SOURCES = \
 	ClientInfo.h \
 	tests/stub_MemBuf.cc \
 	tests/stub_time.cc \
-	$(SBUF_SOURCE) \
-	SBufDetailedStats.h \
 	tests/stub_SBufDetailedStats.cc \
 	String.cc \
 	ConfigParser.cc \
@@ -3699,7 +3551,6 @@ tests_testConfigParser_SOURCES = \
 	tests/testConfigParser.h \
 	cache_cf.h \
 	tests/stub_cache_cf.cc \
-	tests/stub_cache_manager.cc \
 	tests/stub_cbdata.cc \
 	tests/stub_debug.cc \
 	tests/stub_libmem.cc \
@@ -3711,26 +3562,24 @@ tests_testConfigParser_SOURCES = \
 nodist_tests_testConfigParser_SOURCES = \
 	$(TESTSOURCES)
 tests_testConfigParser_LDADD = \
-	base/libbase.la \
 	libsquid.la \
 	ip/libip.la \
+	sbuf/libsbuf.la \
+	base/libbase.la \
 	$(top_builddir)/lib/libmiscutil.la \
 	$(REGEXLIB) \
 	$(SQUID_CPPUNIT_LIBS) \
+	$(SQUID_CPPUNIT_LA) \
 	$(SSLLIB) \
 	$(COMPAT_LIB) \
 	$(XTRA_LIBS)
 tests_testConfigParser_LDFLAGS = $(LIBADD_DL)
-tests_testConfigParser_DEPENDENCIES = \
-	$(SQUID_CPPUNIT_LA)
 	
 tests_testStatHist_SOURCES = \
 	tests/stub_cbdata.cc \
 	fatal.h \
 	tests/stub_fatal.cc \
 	tests/stub_MemBuf.cc \
-	$(SBUF_SOURCE) \
-	SBufDetailedStats.h \
 	tests/stub_SBufDetailedStats.cc \
 	StatHist.cc \
 	StatHist.h \
@@ -3758,33 +3607,30 @@ nodist_tests_testStatHist_SOURCES = \
 	$(TESTSOURCES)
 tests_testStatHist_LDFLAGS = $(LIBADD_DL)
 tests_testStatHist_LDADD = \
+	sbuf/libsbuf.la \
 	base/libbase.la \
 	$(top_builddir)/lib/libmiscutil.la \
 	$(top_builddir)/lib/libmisccontainers.la \
 	$(SQUID_CPPUNIT_LIBS) \
 	$(SQUID_CPPUNIT_LA) \
 	$(COMPAT_LIB)
-tests_testStatHist_DEPENDENCIES = $(SQUID_CPPUNIT_LA)
 
 tests_testLookupTable_SOURCES = \
 	tests/testLookupTable.h \
 	tests/testLookupTable.cc \
 	tests/stub_debug.cc \
 	tests/stub_libmem.cc \
 	tests/stub_SBufDetailedStats.cc \
-	base/LookupTable.h \
-	String.cc \
-	$(SBUF_SOURCE) \
-	SBufAlgos.h \
-	SBufAlgos.cc
+	base/LookupTable.h
 nodist_tests_testLookupTable_SOURCES = $(TESTSOURCES)
 tests_testLookupTable_LDFLAGS = $(LIBADD_DL)
 tests_testLookupTable_LDADD = \
+	sbuf/libsbuf.la \
 	base/libbase.la \
 	$(SQUID_CPPUNIT_LIBS) \
 	$(COMPAT_LIB) \
-	$(XTRA_LIBS)
-tests_testLookupTable_DEPENDENCIES = $(SQUID_CPPUNIT_LA)
+	$(XTRA_LIBS) \
+	$(SQUID_CPPUNIT_LA)
 
 tests_testEnumIterator_SOURCES = \
 	base/EnumIterator.h \
@@ -3801,7 +3647,6 @@ tests_testEnumIterator_LDADD = \
 	$(COMPAT_LIB) \
 	$(SQUID_CPPUNIT_LA) \
 	$(XTRA_LIBS)
-tests_testEnumIterator_DEPENDENCIES =
 
 tests_testYesNoNone_SOURCES = \
 	tests/testYesNoNone.cc \
@@ -145,8 +145,6 @@ MemObject::~MemObject()
     HTTPMSGUNLOCK(request);
 
     ctx_exit(ctx);              /* must exit before we free mem->url */
-
-    safe_free(vary_headers);
 }
 
 void
@@ -230,8 +228,8 @@ void
 MemObject::stat(MemBuf * mb) const
 {
     mb->appendf("\t" SQUIDSBUFPH " %s\n", SQUIDSBUFPRINT(method.image()), logUri());
-    if (vary_headers)
-        mb->appendf("\tvary_headers: %s\n", vary_headers);
+    if (!vary_headers.isEmpty())
+        mb->appendf("\tvary_headers: " SQUIDSBUFPH "\n", SQUIDSBUFPRINT(vary_headers));
     mb->appendf("\tinmem_lo: %" PRId64 "\n", inmem_lo);
     mb->appendf("\tinmem_hi: %" PRId64 "\n", data_hdr.endOffset());
     mb->appendf("\tswapout: %" PRId64 " bytes queued\n", swapout.queue_offset);
@@ -13,6 +13,8 @@
 #include "dlink.h"
 #include "http/RequestMethod.h"
 #include "RemovalPolicy.h"
+#include "sbuf/SBuf.h"
+#include "SquidString.h"
 #include "stmem.h"
 #include "StoreIOBuffer.h"
 #include "StoreIOState.h"
@@ -169,7 +171,7 @@ class MemObject
     unsigned int chksum;
 #endif
 
-    const char *vary_headers;
+    SBuf vary_headers;
 
     void delayRead(DeferredRead const &);
     void kickReads();
@@ -35,6 +35,138 @@ static const char *ExtrasLabel = "cache_mem_ex";
 // used except for a positivity test. A unique value is handy for debugging.
 static const uint32_t SpacePoolId = 510716;
 
+/// Packs to shared memory, allocating new slots/pages as needed.
+/// Requires an Ipc::StoreMapAnchor locked for writing.
+class ShmWriter: public Packable
+{
+public:
+    ShmWriter(MemStore &aStore, StoreEntry *anEntry, const sfileno aFileNo, Ipc::StoreMapSliceId aFirstSlice = -1);
+
+    /* Packable API */
+    virtual void append(const char *aBuf, int aSize) override;
+    virtual void vappendf(const char *fmt, va_list ap) override;
+
+public:
+    StoreEntry *entry; ///< the entry being updated
+
+    /// the slot keeping the first byte of the appended content (at least)
+    /// either set via constructor parameter or allocated by the first append
+    Ipc::StoreMapSliceId firstSlice;
+
+    /// the slot keeping the last byte of the appended content (at least)
+    Ipc::StoreMapSliceId lastSlice;
+
+    uint64_t totalWritten; ///< cumulative number of bytes appended so far
+
+protected:
+    void copyToShm();
+    void copyToShmSlice(Ipc::StoreMap::Slice &slice);
+
+private:
+    MemStore &store;
+    const sfileno fileNo;
+
+    /* set by (and only valid during) append calls */
+    const char *buf; ///< content being appended now
+    int bufSize; ///< buf size
+    int bufWritten; ///< buf bytes appended so far
+};
+
+/* ShmWriter */
+
+ShmWriter::ShmWriter(MemStore &aStore, StoreEntry *anEntry, const sfileno aFileNo, Ipc::StoreMapSliceId aFirstSlice):
+    entry(anEntry),
+    firstSlice(aFirstSlice),
+    lastSlice(firstSlice),
+    totalWritten(0),
+    store(aStore),
+    fileNo(aFileNo),
+    buf(nullptr),
+    bufSize(0),
+    bufWritten(0)
+{
+    Must(entry);
+}
+
+void
+ShmWriter::append(const char *aBuf, int aBufSize)
+{
+    Must(!buf);
+    buf = aBuf;
+    bufSize = aBufSize;
+    if (bufSize) {
+        Must(buf);
+        bufWritten = 0;
+        copyToShm();
+    }
+    buf = nullptr;
+    bufSize = 0;
+    bufWritten = 0;
+}
+
+void
+ShmWriter::vappendf(const char *fmt, va_list ap)
+{
+    SBuf vaBuf;
+#if defined(VA_COPY)
+    va_list apCopy;
+    VA_COPY(apCopy, ap);
+    vaBuf.vappendf(fmt, apCopy);
+    va_end(apCopy);
+#else
+    vaBuf.vappendf(fmt, ap);
+#endif
+    append(vaBuf.rawContent(), vaBuf.length());
+}
+
+/// copies the entire buffer to shared memory
+void
+ShmWriter::copyToShm()
+{
+    Must(bufSize > 0); // do not use up shared memory pages for nothing
+    Must(firstSlice < 0 || lastSlice >= 0);
+
+    // fill, skip slices that are already full
+    while (bufWritten < bufSize) {
+        Ipc::StoreMap::Slice &slice = store.nextAppendableSlice(fileNo, lastSlice);
+        if (firstSlice < 0)
+            firstSlice = lastSlice;
+        copyToShmSlice(slice);
+    }
+
+    debugs(20, 7, "stored " << bufWritten << '/' << totalWritten << " header bytes of " << *entry);
+}
+
+/// copies at most one slice worth of buffer to shared memory
+void
+ShmWriter::copyToShmSlice(Ipc::StoreMap::Slice &slice)
+{
+    Ipc::Mem::PageId page = store.pageForSlice(lastSlice);
+    debugs(20, 7, "entry " << *entry << " slice " << lastSlice << " has " <<
+           page);
+
+    Must(bufWritten <= bufSize);
+    const int64_t writingDebt = bufSize - bufWritten;
+    const int64_t pageSize = Ipc::Mem::PageSize();
+    const int64_t sliceOffset = totalWritten % pageSize;
+    const int64_t copySize = std::min(writingDebt, pageSize - sliceOffset);
+    memcpy(static_cast<char*>(PagePointer(page)) + sliceOffset, buf + bufWritten,
+           copySize);
+
+    debugs(20, 7, "copied " << slice.size << '+' << copySize << " bytes of " <<
+           entry << " from " << sliceOffset << " in " << page);
+
+    slice.size += copySize;
+    bufWritten += copySize;
+    totalWritten += copySize;
+    // fresh anchor.basics.swap_file_sz is already set [to the stale value]
+
+    // either we wrote everything or we filled the entire slice
+    Must(bufWritten == bufSize || sliceOffset + copySize == pageSize);
+}
+
+/* MemStore */
+
 MemStore::MemStore(): map(NULL), lastWritingSlice(-1)
 {
 }
@@ -207,6 +339,69 @@ MemStore::get(const cache_key *key)
     return NULL;
 }
 
+void
+MemStore::updateHeaders(StoreEntry *updatedE)
+{
+    if (!map)
+        return;
+
+    Ipc::StoreMapUpdate update(updatedE);
+    assert(updatedE);
+    assert(updatedE->mem_obj);
+    if (!map->openForUpdating(update, updatedE->mem_obj->memCache.index))
+        return;
+
+    try {
+        updateHeadersOrThrow(update);
+    } catch (const std::exception &ex) {
+        debugs(20, 2, "error starting to update entry " << *updatedE << ": " << ex.what());
+        map->abortUpdating(update);
+    }
+}
+
+void
+MemStore::updateHeadersOrThrow(Ipc::StoreMapUpdate &update)
+{
+    // our +/- hdr_sz math below does not work if the chains differ [in size]
+    Must(update.stale.anchor->basics.swap_file_sz == update.fresh.anchor->basics.swap_file_sz);
+
+    const HttpReply *rawReply = update.entry->getReply();
+    Must(rawReply);
+    const HttpReply &reply = *rawReply;
+    const uint64_t staleHdrSz = reply.hdr_sz;
+    debugs(20, 7, "stale hdr_sz: " << staleHdrSz);
+
+    /* we will need to copy same-slice payload after the stored headers later */
+    Must(staleHdrSz > 0);
+    update.stale.splicingPoint = map->sliceContaining(update.stale.fileNo, staleHdrSz);
+    Must(update.stale.splicingPoint >= 0);
+    Must(update.stale.anchor->basics.swap_file_sz >= staleHdrSz);
+
+    Must(update.stale.anchor);
+    ShmWriter writer(*this, update.entry, update.fresh.fileNo);
+    reply.packHeadersInto(&writer);
+    const uint64_t freshHdrSz = writer.totalWritten;
+    debugs(20, 7, "fresh hdr_sz: " << freshHdrSz << " diff: " << (freshHdrSz - staleHdrSz));
+
+    /* copy same-slice payload remaining after the stored headers */
+    const Ipc::StoreMapSlice &slice = map->readableSlice(update.stale.fileNo, update.stale.splicingPoint);
+    const Ipc::StoreMapSlice::Size sliceCapacity = Ipc::Mem::PageSize();
+    const Ipc::StoreMapSlice::Size headersInLastSlice = staleHdrSz % sliceCapacity;
+    Must(headersInLastSlice > 0); // or sliceContaining() would have stopped earlier
+    Must(slice.size >= headersInLastSlice);
+    const Ipc::StoreMapSlice::Size payloadInLastSlice = slice.size - headersInLastSlice;
+    const MemStoreMapExtras::Item &extra = extras->items[update.stale.splicingPoint];
+    char *page = static_cast<char*>(PagePointer(extra.page));
+    debugs(20, 5, "appending same-slice payload: " << payloadInLastSlice);
+    writer.append(page + headersInLastSlice, payloadInLastSlice);
+    update.fresh.splicingPoint = writer.lastSlice;
+
+    update.fresh.anchor->basics.swap_file_sz -= staleHdrSz;
+    update.fresh.anchor->basics.swap_file_sz += freshHdrSz;
+
+    map->closeForUpdating(update);
+}
+
 bool
 MemStore::anchorCollapsed(StoreEntry &collapsed, bool &inSync)
 {
@@ -423,7 +618,7 @@ MemStore::shouldCache(StoreEntry &e) const
 
     assert(e.mem_obj);
 
-    if (e.mem_obj->vary_headers) {
+    if (!e.mem_obj->vary_headers.isEmpty()) {
         // XXX: We must store/load SerialisedMetaData to cache Vary in RAM
         debugs(20, 5, "Vary not yet supported: " << e.mem_obj->vary_headers);
         return false;
@@ -498,59 +693,36 @@ MemStore::copyToShm(StoreEntry &e)
     assert(map);
     assert(e.mem_obj);
 
-    const int32_t index = e.mem_obj->memCache.index;
-    assert(index >= 0);
-    Ipc::StoreMapAnchor &anchor = map->writeableEntry(index);
-
     const int64_t eSize = e.mem_obj->endOffset();
     if (e.mem_obj->memCache.offset >= eSize) {
         debugs(20, 5, "postponing copying " << e << " for lack of news: " <<
                e.mem_obj->memCache.offset << " >= " << eSize);
         return; // nothing to do (yet)
     }
 
-    if (anchor.start < 0) { // must allocate the very first slot for e
-        Ipc::Mem::PageId page;
-        anchor.start = reserveSapForWriting(page); // throws
-        extras->items[anchor.start].page = page;
-    }
-
+    const int32_t index = e.mem_obj->memCache.index;
+    assert(index >= 0);
+    Ipc::StoreMapAnchor &anchor = map->writeableEntry(index);
     lastWritingSlice = anchor.start;
-    const size_t sliceCapacity = Ipc::Mem::PageSize();
 
     // fill, skip slices that are already full
     // Optimize: remember lastWritingSlice in e.mem_obj
     while (e.mem_obj->memCache.offset < eSize) {
-        Ipc::StoreMap::Slice &slice =
-            map->writeableSlice(e.mem_obj->memCache.index, lastWritingSlice);
-
-        if (slice.size >= sliceCapacity) {
-            if (slice.next >= 0) {
-                lastWritingSlice = slice.next;
-                continue;
-            }
-
-            Ipc::Mem::PageId page;
-            slice.next = lastWritingSlice = reserveSapForWriting(page);
-            extras->items[lastWritingSlice].page = page;
-            debugs(20, 7, "entry " << index << " new slice: " << lastWritingSlice);
-        }
-
-        copyToShmSlice(e, anchor);
+        Ipc::StoreMap::Slice &slice = nextAppendableSlice(
+                                          e.mem_obj->memCache.index, lastWritingSlice);
+        if (anchor.start < 0)
+            anchor.start = lastWritingSlice;
+        copyToShmSlice(e, anchor, slice);
     }
 
     debugs(20, 7, "mem-cached available " << eSize << " bytes of " << e);
 }
 
 /// copies at most one slice worth of local memory to shared memory
 void
-MemStore::copyToShmSlice(StoreEntry &e, Ipc::StoreMapAnchor &anchor)
+MemStore::copyToShmSlice(StoreEntry &e, Ipc::StoreMapAnchor &anchor, Ipc::StoreMap::Slice &slice)
 {
-    Ipc::StoreMap::Slice &slice =
-        map->writeableSlice(e.mem_obj->memCache.index, lastWritingSlice);
-
-    Ipc::Mem::PageId page = extras->items[lastWritingSlice].page;
-    assert(lastWritingSlice >= 0 && page);
+    Ipc::Mem::PageId page = pageForSlice(lastWritingSlice);
     debugs(20, 7, "entry " << e << " slice " << lastWritingSlice << " has " <<
            page);
 
@@ -576,6 +748,53 @@ MemStore::copyToShmSlice(StoreEntry &e, Ipc::StoreMapAnchor &anchor)
     anchor.basics.swap_file_sz = e.mem_obj->memCache.offset;
 }
 
+/// starts checking with the entry chain slice at a given offset and
+/// returns a not-full (but not necessarily empty) slice, updating sliceOffset
+Ipc::StoreMap::Slice &
+MemStore::nextAppendableSlice(const sfileno fileNo, sfileno &sliceOffset)
+{
+    // allocate the very first slot for the entry if needed
+    if (sliceOffset < 0) {
+        Ipc::StoreMapAnchor &anchor = map->writeableEntry(fileNo);
+        Must(anchor.start < 0);
+        Ipc::Mem::PageId page;
+        sliceOffset = reserveSapForWriting(page); // throws
+        extras->items[sliceOffset].page = page;
+        anchor.start = sliceOffset;
+    }
+
+    const size_t sliceCapacity = Ipc::Mem::PageSize();
+    do {
+        Ipc::StoreMap::Slice &slice = map->writeableSlice(fileNo, sliceOffset);
+
+        if (slice.size >= sliceCapacity) {
+            if (slice.next >= 0) {
+                sliceOffset = slice.next;
+                continue;
+            }
+
+            Ipc::Mem::PageId page;
+            slice.next = sliceOffset = reserveSapForWriting(page);
+            extras->items[sliceOffset].page = page;
+            debugs(20, 7, "entry " << fileNo << " new slice: " << sliceOffset);
+        }
+
+        return slice;
+    } while (true);
+    /* not reached */
+}
+
+/// safely returns a previously allocated memory page for the given entry slice
+Ipc::Mem::PageId
+MemStore::pageForSlice(Ipc::StoreMapSliceId sliceId)
+{
+    Must(extras);
+    Must(sliceId >= 0);
+    Ipc::Mem::PageId page = extras->items[sliceId].page;
+    Must(page);
+    return page;
+}
+
 /// finds a slot and a free page to fill or throws
 sfileno
 MemStore::reserveSapForWriting(Ipc::Mem::PageId &page)
@@ -22,6 +22,8 @@ struct MemStoreMapExtraItem {
 typedef Ipc::StoreMapItems<MemStoreMapExtraItem> MemStoreMapExtras;
 typedef Ipc::StoreMap MemStoreMap;
 
+class ShmWriter;
+
 /// Stores HTTP entities in RAM. Current implementation uses shared memory.
 /// Unlike a disk store (SwapDir), operations are synchronous (and fast).
 class MemStore: public Store::Controlled, public Ipc::StoreMapCleaner
@@ -55,6 +57,7 @@ class MemStore: public Store::Controlled, public Ipc::StoreMapCleaner
     virtual void stat(StoreEntry &e) const override;
     virtual void reference(StoreEntry &e) override;
     virtual bool dereference(StoreEntry &e) override;
+    virtual void updateHeaders(StoreEntry *e) override;
     virtual void maintain() override;
     virtual bool anchorCollapsed(StoreEntry &e, bool &inSync) override;
     virtual bool updateCollapsed(StoreEntry &e) override;
@@ -64,17 +67,23 @@ class MemStore: public Store::Controlled, public Ipc::StoreMapCleaner
     static int64_t EntryLimit();
 
 protected:
+    friend ShmWriter;
+
     bool shouldCache(StoreEntry &e) const;
     bool startCaching(StoreEntry &e);
 
     void copyToShm(StoreEntry &e);
-    void copyToShmSlice(StoreEntry &e, Ipc::StoreMapAnchor &anchor);
+    void copyToShmSlice(StoreEntry &e, Ipc::StoreMapAnchor &anchor, Ipc::StoreMap::Slice &slice);
     bool copyFromShm(StoreEntry &e, const sfileno index, const Ipc::StoreMapAnchor &anchor);
     bool copyFromShmSlice(StoreEntry &e, const StoreIOBuffer &buf, bool eof);
 
+    void updateHeadersOrThrow(Ipc::StoreMapUpdate &update);
+
     void anchorEntry(StoreEntry &e, const sfileno index, const Ipc::StoreMapAnchor &anchor);
     bool updateCollapsedWith(StoreEntry &collapsed, const sfileno index, const Ipc::StoreMapAnchor &anchor);
 
+    Ipc::Mem::PageId pageForSlice(Ipc::StoreMapSliceId sliceId);
+    Ipc::StoreMap::Slice &nextAppendableSlice(const sfileno entryIndex, sfileno &sliceOffset);
     sfileno reserveSapForWriting(Ipc::Mem::PageId &page);
 
     // Ipc::StoreMapCleaner API
@@ -13,6 +13,7 @@
 #include "client_side.h"
 #include "ConfigParser.h"
 #include "globals.h"
+#include "http/Stream.h"
 #include "HttpReply.h"
 #include "HttpRequest.h"
 #include "SquidConfig.h"
@@ -22,11 +22,7 @@
 #include "PeerPoolMgr.h"
 #include "SquidConfig.h"
 #include "SquidTime.h"
-#if USE_OPENSSL
-#include "ssl/PeerConnector.h"
-#else
-#include "security/EncryptorAnswer.h"
-#endif
+#include "ssl/BlindPeerConnector.h"
 
 CBDATA_CLASS_INIT(PeerPoolMgr);
 
@@ -130,7 +126,7 @@ PeerPoolMgr::handleOpenedConnection(const CommConnectCbParams &params)
         // Use positive timeout when less than one second is left for conn.
         const int timeLeft = max(1, (peerTimeout - timeUsed));
         Ssl::BlindPeerConnector *connector =
-            new Ssl::BlindPeerConnector(request, params.conn, securer, timeLeft);
+            new Ssl::BlindPeerConnector(request, params.conn, securer, NULL, timeLeft);
         AsyncJob::Start(connector); // will call our callback
         return;
     }
@@ -13,22 +13,23 @@
 #include "anyp/PortCfg.h"
 #include "client_side.h"
 #include "Debug.h"
+#include "http/Stream.h"
 #include "Pipeline.h"
 
 void
-Pipeline::add(const ClientSocketContextPointer &c)
+Pipeline::add(const Http::StreamPointer &c)
 {
     requests.push_back(c);
     ++nrequests;
     debugs(33, 3, "Pipeline " << (void*)this << " add request " << nrequests << ' ' << c);
 }
 
-ClientSocketContextPointer
+Http::StreamPointer
 Pipeline::front() const
 {
     if (requests.empty()) {
         debugs(33, 3, "Pipeline " << (void*)this << " empty");
-        return ClientSocketContextPointer();
+        return Http::StreamPointer();
     }
 
     debugs(33, 3, "Pipeline " << (void*)this << " front " << requests.front());
@@ -39,7 +40,7 @@ void
 Pipeline::terminateAll(int xerrno)
 {
     while (!requests.empty()) {
-        ClientSocketContextPointer context = requests.front();
+        Http::StreamPointer context = requests.front();
         debugs(33, 3, "Pipeline " << (void*)this << " notify(" << xerrno << ") " << context);
         context->noteIoError(xerrno);
         context->finished();  // cleanup and self-deregister
@@ -48,7 +49,7 @@ Pipeline::terminateAll(int xerrno)
 }
 
 void
-Pipeline::popMe(const ClientSocketContextPointer &which)
+Pipeline::popMe(const Http::StreamPointer &which)
 {
     if (requests.empty())
         return;
@@ -10,12 +10,10 @@
 #define SQUID_SRC_PIPELINE_H
 
 #include "base/RefCount.h"
+#include "http/forward.h"
 
 #include <list>
 
-class ClientSocketContext;
-typedef RefCount<ClientSocketContext> ClientSocketContextPointer;
-
 /**
  * A queue of transactions awaiting completion.
  *
@@ -43,10 +41,10 @@ class Pipeline
     ~Pipeline() = default;
 
     /// register a new request context to the pipeline
-    void add(const ClientSocketContextPointer &);
+    void add(const Http::StreamPointer &);
 
     /// get the first request context in the pipeline
-    ClientSocketContextPointer front() const;
+    Http::StreamPointer front() const;
 
     /// how many requests are currently pipelined
     size_t count() const {return requests.size();}
@@ -58,15 +56,15 @@ class Pipeline
     void terminateAll(const int xerrno);
 
     /// deregister the front request from the pipeline
-    void popMe(const ClientSocketContextPointer &);
+    void popMe(const Http::StreamPointer &);
 
     /// Number of requests seen in this pipeline (so far).
     /// Includes incomplete transactions.
     uint32_t nrequests;
 
 private:
     /// requests parsed from the connection but not yet completed.
-    std::list<ClientSocketContextPointer> requests;
+    std::list<Http::StreamPointer> requests;
 };
 
 #endif /* SQUID_SRC_PIPELINE_H */
@@ -11,7 +11,7 @@
 #include "ipc/Messages.h"
 #include "ipc/TypedMsgHdr.h"
 #include "mgr/Registration.h"
-#include "SBufDetailedStats.h"
+#include "sbuf/DetailedStats.h"
 #include "SBufStatsAction.h"
 
 SBufStatsAction::SBufStatsAction(const Mgr::CommandPointer &cmd_):
@@ -10,7 +10,7 @@
 #define SQUID_SBUFEXTRAS_H
 
 #include "mgr/Action.h"
-#include "SBuf.h"
+#include "sbuf/SBuf.h"
 #include "StatHist.h"
 
 class StoreEntry;
@@ -72,6 +72,7 @@ class SquidConfig
     } Swap;
 
     YesNoNone memShared; ///< whether the memory cache is shared among workers
+    YesNoNone shmLocking; ///< shared_memory_locking
     size_t memMaxSize;
 
     struct {
@@ -340,6 +341,8 @@ class SquidConfig
 #endif
     } onoff;
 
+    int64_t collapsed_forwarding_shared_entries_limit;
+
     int pipeline_max_prefetch;
 
     int forward_max_tries;
@@ -394,6 +397,7 @@ class SquidConfig
         acl_access *ftp_epsv;
 
         acl_access *forceRequestBodyContinuation;
+        acl_access *serverPconnForNonretriable;
     } accessList;
     AclDenyInfoList *denyInfoList;
 
@@ -462,6 +466,8 @@ class SquidConfig
     HeaderManglers *reply_header_access;
     ///request_header_add access list
     HeaderWithAclList *request_header_add;
+    ///reply_header_add access list
+    HeaderWithAclList *reply_header_add;
     ///note
     Notes notes;
     char *coredump_dir;
@@ -544,7 +550,6 @@ class SquidConfig2
 public:
     struct {
         int enable_purge;
-        int mangle_request_headers;
     } onoff;
     uid_t effectiveUserID;
     gid_t effectiveGroupID;
@@ -80,6 +80,13 @@ class String
     _SQUID_INLINE_ int caseCmp(char const *, size_type count) const;
     _SQUID_INLINE_ int caseCmp(String const &) const;
 
+    /// Whether creating a totalLen-character string is safe (i.e., unlikely to assert).
+    /// Optional extras can be used for overflow-safe length addition.
+    /// Implementation has to add 1 because many String allocation methods do.
+    static bool CanGrowTo(size_type totalLen, const size_type extras = 0) { return SafeAdd(totalLen, extras) && SafeAdd(totalLen, 1); }
+    /// whether appending growthLen characters is safe (i.e., unlikely to assert)
+    bool canGrowBy(const size_type growthLen) const { return CanGrowTo(size(), growthLen); }
+
     String substr(size_type from, size_type to) const;
 
     _SQUID_INLINE_ void cut(size_type newLength);
@@ -95,10 +102,14 @@ class String
     _SQUID_INLINE_ bool nilCmp(bool, bool, int &) const;
 
     /* never reference these directly! */
-    size_type size_; /* buffer size; 64K limit */
+    size_type size_; /* buffer size; limited by SizeMax_ */
 
     size_type len_;  /* current length  */
 
+    static const size_type SizeMax_ = 65535; ///< 64K limit protects some fixed-size buffers
+    /// returns true after increasing the first argument by extra if the sum does not exceed SizeMax_
+    static bool SafeAdd(size_type &base, size_type extra) { if (extra <= SizeMax_ && base <= SizeMax_ - extra) { base += extra; return true; } return false; }
+
     char *buf_;
 
     _SQUID_INLINE_ void set(char const *loc, char const ch);
@@ -40,7 +40,6 @@ extern StoreIoStats store_io_stats;
 
 class StoreEntry : public hash_link, public Packable
 {
-    MEMPROXY_CLASS(StoreEntry);
 
 public:
     static DeferredRead::DeferrableRead DeferReader;
@@ -174,6 +173,8 @@ class StoreEntry : public hash_link, public Packable
         return false;
     };
 
+    void *operator new(size_t byteCount);
+    void operator delete(void *address);
     void setReleaseFlag();
 #if USE_SQUID_ESI
 
@@ -11,6 +11,7 @@
 #include "squid.h"
 #include "Debug.h"
 #include "defines.h"
+#include "Store.h"
 #include "StoreIOState.h"
 
 void *
@@ -52,3 +53,8 @@ StoreIOState::~StoreIOState()
         cbdataReferenceDone(callback_data);
 }
 
+bool StoreIOState::touchingStoreEntry() const
+{
+    return e && e->swap_filen == swap_filen;
+}
+
@@ -73,12 +73,19 @@ class StoreIOState : public RefCountable
     } CloseHow;
     virtual void close(int how) = 0; ///< finish or abort swapping per CloseHow
 
+    // Tests whether we are working with the primary/public StoreEntry chain.
+    // Reads start reading the primary chain, but it may become secondary.
+    // There are two store write kinds:
+    // * regular writes that change (usually append) the entry visible to all and
+    // * header updates that create a fresh chain (while keeping the stale one usable).
+    bool touchingStoreEntry() const;
+
     sdirno swap_dirn;
     sfileno swap_filen;
     StoreEntry *e;      /* Need this so the FS layers can play god */
     mode_t mode;
     off_t offset_; ///< number of bytes written or read for this entry so far
-    STFNCB *file_callback;  /* called on delayed sfileno assignments */
+    STFNCB *file_callback;  // XXX: Unused. TODO: Remove.
     STIOCB *callback;
     void *callback_data;
 
@@ -18,14 +18,14 @@ StoreMetaVary::checkConsistency(StoreEntry *e) const
 {
     assert (getType() == STORE_META_VARY_HEADERS);
 
-    if (!e->mem_obj->vary_headers) {
+    if (e->mem_obj->vary_headers.isEmpty()) {
         /* XXX separate this mutator from the query */
         /* Assume the object is OK.. remember the vary request headers */
-        e->mem_obj->vary_headers = xstrdup((char *)value);
+        e->mem_obj->vary_headers.assign(static_cast<const char *>(value), length);
         return true;
     }
 
-    if (strcmp(e->mem_obj->vary_headers, (char *)value) != 0)
+    if (e->mem_obj->vary_headers.cmp(static_cast<const char *>(value), length) != 0)
         return false;
 
     return true;
@@ -9,6 +9,7 @@
 /* DEBUG: section 66    HTTP Header Tools */
 
 #include "squid.h"
+#include "base/TextException.h"
 #include "SquidString.h"
 #include "StrList.h"
 
@@ -17,14 +18,17 @@ void
 strListAdd(String * str, const char *item, char del)
 {
     assert(str && item);
+    const auto itemSize = strlen(item);
     if (str->size()) {
         char buf[3];
         buf[0] = del;
         buf[1] = ' ';
         buf[2] = '\0';
+        Must(str->canGrowBy(2));
         str->append(buf, 2);
     }
-    str->append(item, strlen(item));
+    Must(str->canGrowBy(itemSize));
+    str->append(item, itemSize);
 }
 
 /** returns true iff "m" is a member of the list */
@@ -41,7 +41,7 @@ void
 String::setBuffer(char *aBuf, String::size_type aSize)
 {
     assert(undefined());
-    assert(aSize < 65536);
+    assert(aSize <= SizeMax_);
     buf_ = aBuf;
     size_ = aSize;
 }
@@ -170,7 +170,7 @@ String::append( char const *str, int len)
     } else {
         // Create a temporary string and absorb it later.
         String snew;
-        assert(len_ + len < 65536); // otherwise snew.len_ overflows below
+        assert(canGrowBy(len)); // otherwise snew.len_ may overflow below
         snew.len_ = len_ + len;
         snew.allocBuffer(snew.len_ + 1);
 
@@ -370,7 +370,7 @@ Transients::EntryLimit()
     if (!UsingSmp() || !Config.onoff.collapsed_forwarding)
         return 0; // no SMP collapsed forwarding possible or needed
 
-    return 16*1024; // TODO: make configurable?
+    return Config.collapsed_forwarding_shared_entries_limit;
 }
 
 /// initializes shared memory segment used by Transients
@@ -12,7 +12,7 @@
 #include "anyp/UriScheme.h"
 #include "ip/Address.h"
 #include "rfc2181.h"
-#include "SBuf.h"
+#include "sbuf/SBuf.h"
 
 #include <iosfwd>
 
@@ -14,7 +14,7 @@
 #include "cbdata.h"
 #include "defines.h"
 #include "dlink.h"
-#include "SBufList.h"
+#include "sbuf/List.h"
 
 #include <map>
 #include <ostream>
@@ -14,6 +14,7 @@
 #include "acl/AtStepData.h"
 #include "acl/Checklist.h"
 #include "client_side.h"
+#include "http/Stream.h"
 #include "ssl/ServerBump.h"
 
 int
@@ -21,14 +21,15 @@
 #include "client_side.h"
 #include "fde.h"
 #include "globals.h"
+#include "http/Stream.h"
 #include "HttpRequest.h"
 
 int
 ACLCertificateStrategy::match (ACLData<MatchType> * &data, ACLFilledChecklist *checklist, ACLFlags &)
 {
     const int fd = checklist->fd();
     const bool goodDescriptor = 0 <= fd && fd <= Biggest_FD;
-    auto ssl = goodDescriptor ? fd_table[fd].ssl : nullptr;
+    auto ssl = goodDescriptor ? fd_table[fd].ssl.get() : nullptr;
     X509 *cert = SSL_get_peer_certificate(ssl);
     const bool res = data->match (cert);
     X509_free(cert);
@@ -9,7 +9,7 @@
 #ifndef SQUID_ACLDATA_H
 #define SQUID_ACLDATA_H
 
-#include "SBufList.h"
+#include "sbuf/List.h"
 
 /// \ingroup ACLAPI
 template <class M>
@@ -13,6 +13,7 @@
 #include "acl/FilledChecklist.h"
 #include "client_side.h"
 #include "comm/Connection.h"
+#include "http/Stream.h"
 #include "HttpRequest.h"
 #include "SquidConfig.h"
 
@@ -17,6 +17,7 @@
 #include "acl/RegexData.h"
 #include "acl/UserData.h"
 #include "client_side.h"
+#include "http/Stream.h"
 
 ACLExtUser::~ACLExtUser()
 {
@@ -12,6 +12,7 @@
 #include "comm/Connection.h"
 #include "comm/forward.h"
 #include "ExternalACLEntry.h"
+#include "http/Stream.h"
 #include "HttpReply.h"
 #include "HttpRequest.h"
 #include "SquidConfig.h"
@@ -102,9 +103,9 @@ ACLFilledChecklist::syncAle() const
             HTTPMSGLOCK(al->adapted_request);
         }
 
-        if (!al->url) {
+        if (al->url.isEmpty()) {
             showDebugWarning("URL");
-            al->url = xstrdup(request->url.absolute().c_str());
+            al->url = request->url.absolute();
         }
     }
 
@@ -85,7 +85,7 @@ class ACLFilledChecklist: public ACLChecklist
 
 #if USE_OPENSSL
     /// SSL [certificate validation] errors, in undefined order
-    Ssl::CertErrors *sslErrors;
+    const Ssl::CertErrors *sslErrors;
     /// The peer certificate
     Security::CertPointer serverCert;
 #endif
@@ -17,7 +17,8 @@
 #include "ConfigParser.h"
 #include "Debug.h"
 #include "HttpHeaderTools.h"
-#include "SBuf.h"
+#include "sbuf/SBuf.h"
+#include "sbuf/StringConvert.h"
 
 /* Construct an ACLHTTPHeaderData that uses an ACLRegex rule with the value of the
  * selected header from a given request.
@@ -51,7 +52,7 @@ ACLHTTPHeaderData::match(HttpHeader* hdr)
             return false;
     }
 
-    SBuf cvalue(value);
+    auto cvalue = StringToSBuf(value);
     return regex_rule->match(cvalue.c_str());
 }
 
@@ -11,7 +11,7 @@
 
 #include "acl/Data.h"
 #include "HttpHeader.h"
-#include "SBuf.h"
+#include "sbuf/SBuf.h"
 #include "SquidString.h"
 
 class ACLHTTPHeaderData : public ACLData<HttpHeader*>
@@ -8,6 +8,8 @@
 include $(top_srcdir)/src/Common.am
 include $(top_srcdir)/src/TestHeaders.am
 
+SUBDIRS= external
+
 noinst_LTLIBRARIES = libapi.la libstate.la libacls.la
 
 ## General data-independent ACL API
@@ -142,7 +144,7 @@ libacls_la_SOURCES = \
 	AclSizeLimit.h
 
 ## Add conditional sources
-## TODO: move these to their respectful dirs when those dirs are created
+## TODO: move these to their respective dirs when those dirs are created
 
 EXTRA_libacls_la_SOURCES =
 
@@ -167,22 +169,22 @@ SSL_ACLS = \
 if ENABLE_SSL
 libacls_la_SOURCES += $(SSL_ACLS)
 endif
+EXTRA_libacls_la_SOURCES += $(SSL_ACLS)
 
-if USE_ADAPTATION
-libacls_la_SOURCES += AdaptationService.h \
+ADAPT_ACLS= \
+	AdaptationService.h \
 	AdaptationService.cc \
 	AdaptationServiceData.h \
 	AdaptationServiceData.cc
-endif
-
-
-EXTRA_libacls_la_SOURCES += $(SSL_ACLS)
 
+if USE_ADAPTATION
+libacls_la_SOURCES += $(ADAPT_ACLS)
+endif
+EXTRA_libacls_la_SOURCES += $(ADAPT_ACLS)
 
 ARP_ACLS = Arp.cc Arp.h Eui64.cc Eui64.h
 
 if USE_SQUID_EUI
 libacls_la_SOURCES += $(ARP_ACLS)
 endif
-
 EXTRA_libacls_la_SOURCES += $(ARP_ACLS)
@@ -11,10 +11,9 @@
 #include "acl/MyPortName.h"
 #include "acl/StringData.h"
 #include "anyp/PortCfg.h"
-#include "HttpRequest.h"
-
-/* for ConnStateData */
 #include "client_side.h"
+#include "http/Stream.h"
+#include "HttpRequest.h"
 
 int
 ACLMyPortNameStrategy::match(ACLData<MatchType> * &data, ACLFilledChecklist *checklist, ACLFlags &)
@@ -14,6 +14,7 @@
 #include "HttpRequest.h"
 #include "Notes.h"
 #include "parser/Tokenizer.h"
+#include "sbuf/StringConvert.h"
 
 int
 ACLNoteStrategy::match(ACLData<MatchType> * &data, ACLFilledChecklist *checklist, ACLFlags &flags)
@@ -36,7 +37,7 @@ ACLNoteStrategy::matchNotes(ACLData<MatchType> *noteData, const NotePairs *note,
     for (auto &entry: note->entries) {
         if (delimiters) {
             NotePairs::Entry e(entry->name.termedBuf(), "");
-            Parser::Tokenizer t(SBuf(entry->value));
+            Parser::Tokenizer t(StringToSBuf(entry->value));
             SBuf s;
             while (t.token(s, *delimiters)) {
                 e.value = s.c_str();
@@ -13,6 +13,7 @@
 #include "acl/StringData.h"
 #include "ConfigParser.h"
 #include "Debug.h"
+#include "sbuf/StringConvert.h"
 #include "wordlist.h"
 
 ACLNoteData::ACLNoteData() : values(new ACLStringData)
@@ -26,14 +27,19 @@ ACLNoteData::~ACLNoteData()
 bool
 ACLNoteData::match(NotePairs::Entry *entry)
 {
-    return !entry->name.cmp(name.termedBuf()) && values->match(entry->value.termedBuf());
+    if (entry->name.cmp(name.termedBuf()) != 0)
+        return false; // name mismatch
+
+    // a name-only note ACL matches any value; others require a values match
+    return values->empty() ||
+           values->match(entry->value.termedBuf());
 }
 
 SBufList
 ACLNoteData::dump() const
 {
     SBufList sl;
-    sl.push_back(SBuf(name));
+    sl.push_back(StringToSBuf(name));
 #if __cplusplus >= 201103L
     sl.splice(sl.end(), values->dump());
 #else
@@ -15,6 +15,7 @@
 #include "acl/ServerCertificate.h"
 #include "client_side.h"
 #include "fde.h"
+#include "http/Stream.h"
 #include "ssl/ServerBump.h"
 
 int
@@ -15,6 +15,7 @@
 #include "acl/ServerName.h"
 #include "client_side.h"
 #include "fde.h"
+#include "http/Stream.h"
 #include "HttpRequest.h"
 #include "ipcache.h"
 #include "SquidString.h"
@@ -11,7 +11,7 @@
 
 #include "acl/Acl.h"
 #include "acl/Data.h"
-#include "SBuf.h"
+#include "sbuf/SBuf.h"
 
 #include <set>
 
@@ -10,7 +10,7 @@
 #define SQUID_ACL_TREE_H
 
 #include "acl/BoolOps.h"
-#include "SBufList.h"
+#include "sbuf/List.h"
 
 namespace Acl
 {
@@ -14,7 +14,7 @@
 #include "ConfigParser.h"
 #include "Debug.h"
 #include "globals.h"
-#include "SBufAlgos.h"
+#include "sbuf/Algorithms.h"
 #include "util.h"
 
 bool
@@ -11,7 +11,7 @@
 
 #include "acl/Acl.h"
 #include "acl/Data.h"
-#include "SBuf.h"
+#include "sbuf/SBuf.h"
 
 #include <set>
 
@@ -8,16 +8,17 @@
 include $(top_srcdir)/src/Common.am
 
 libexec_PROGRAMS = ext_ad_group_acl
-ext_ad_group_acl_SOURCES = ext_ad_group_acl.cc
 man_MANS = ext_ad_group_acl.8
 
+ext_ad_group_acl_SOURCES = ext_ad_group_acl.cc
+
 #
 # Currently activeds and adsiid libraries are not available on MinGW or Cygwin,
 # so the following library list is just a placeholder for future MinGW/Cygwin releases.
 # This helper can be compiled only using Microsoft Visual Studio.
 # TODO: test for these libraries in required.m4
 #
-LDADD = \
+ext_ad_group_acl_LDADD = \
 	$(COMPAT_LIB) \
 	-lnetapi32 \
 	-ladvapi32 \
@@ -66,7 +66,7 @@
  */
 
 #include "squid.h"
-#include "helpers/defines.h"
+#include "helper/protocol_defines.h"
 #include "include/util.h"
 
 #if _SQUID_CYGWIN_
@@ -7,15 +7,18 @@
 
 include $(top_srcdir)/src/Common.am
 
-libexec_PROGRAMS 		= ext_ldap_group_acl
-ext_ldap_group_acl_SOURCES	= ext_ldap_group_acl.cc
+libexec_PROGRAMS= ext_ldap_group_acl
+man_MANS= ext_ldap_group_acl.8
 
-man_MANS 			= ext_ldap_group_acl.8
-EXTRA_DIST			= ext_ldap_group_acl.8 required.m4
-
-LDADD = \
+ext_ldap_group_acl_SOURCES= \
+	ext_ldap_group_acl.cc
+ext_ldap_group_acl_LDADD= \
 	$(top_builddir)/lib/libmiscencoding.la \
 	$(COMPAT_LIB) \
 	$(LDAPLIB) \
 	$(LBERLIB) \
 	$(XTRA_LIBS)
+
+EXTRA_DIST= \
+	ext_ldap_group_acl.8 \
+	required.m4
@@ -38,7 +38,7 @@
  * OpenSSL libraries linked into openldap. See http://www.openssl.org/
  */
 #include "squid.h"
-#include "helpers/defines.h"
+#include "helper/protocol_defines.h"
 #include "rfc1738.h"
 #include "util.h"
 
@@ -7,17 +7,18 @@
 
 include $(top_srcdir)/src/Common.am
 
-libexec_PROGRAMS = ext_lm_group_acl
-ext_lm_group_acl_SOURCES = ext_lm_group_acl.cc
+libexec_PROGRAMS= ext_lm_group_acl
+man_MANS= ext_lm_group_acl.8
 
-LDADD = \
+ext_lm_group_acl_SOURCES= ext_lm_group_acl.cc
+ext_lm_group_acl_LDADD= \
 	$(top_builddir)/lib/libmiscencoding.la \
 	$(COMPAT_LIB) \
 	-lnetapi32 \
 	-ladvapi32 \
 	-lntdll \
 	$(XTRA_LIBS)
 
-man_MANS = ext_lm_group_acl.8
-
-EXTRA_DIST = required.m4 ext_lm_group_acl.8
+EXTRA_DIST= \
+	required.m4 \
+	ext_lm_group_acl.8
@@ -76,7 +76,7 @@
  */
 
 #include "squid.h"
-#include "helpers/defines.h"
+#include "helper/protocol_defines.h"
 #include "rfc1738.h"
 #include "util.h"
 
@@ -36,7 +36,7 @@
 
 /* Squid-3.X includes */
 #include "squid.h"
-#include "helpers/defines.h"
+#include "helper/protocol_defines.h"
 #include "rfc1738.h"
 #include "util.h"
 
@@ -8,16 +8,17 @@
 include $(top_srcdir)/src/Common.am
 
 libexec_PROGRAMS = ext_file_userip_acl
-ext_file_userip_acl_SOURCES = ext_file_userip_acl.cc
 man_MANS = ext_file_userip_acl.8
 
+ext_file_userip_acl_SOURCES= \
+	ext_file_userip_acl.cc
+ext_file_userip_acl_LDADD= \
+	$(top_builddir)/lib/libmiscencoding.la \
+	$(COMPAT_LIB) \
+	$(XTRA_LIBS)
+
 EXTRA_DIST = \
 	example.conf \
 	example-deny_all_but.conf \
 	ext_file_userip_acl.8 \
 	required.m4
-
-LDADD = \
-	$(top_builddir)/lib/libmiscencoding.la \
-	$(COMPAT_LIB) \
-	$(XTRA_LIBS)
@@ -27,7 +27,7 @@
  *
  */
 #include "squid.h"
-#include "helpers/defines.h"
+#include "helper/protocol_defines.h"
 #include "rfc1738.h"
 #include "util.h"
 
@@ -251,7 +251,8 @@ main (int argc, char *argv[])
     }
     FILE *FH = fopen(filename, "r");
     if (!FH) {
-        fprintf(stderr, "%s: FATAL: Unable to open file '%s': %s", program_name, filename, xstrerror());
+        int xerrno = errno;
+        fprintf(stderr, "%s: FATAL: Unable to open file '%s': %s", program_name, filename, xstrerr(xerrno));
         exit(1);
     }
     current_entry = load_dict(FH);
@@ -13,7 +13,7 @@
 #define list of modules to build
 auto_ext_acl_modules=no
 if test "x${enable_external_acl_helpers:=yes}" = "xyes" ;then
-  SQUID_LOOK_FOR_MODULES([$srcdir/helpers/external_acl],[enable_external_acl_helpers])
+  SQUID_LOOK_FOR_MODULES([$srcdir/src/acl/external],[enable_external_acl_helpers])
   auto_ext_acl_modules=yes
 fi
 if test "x$enable_external_acl_helpers" = "xnone" ; then
@@ -23,52 +23,52 @@ EXTERNAL_ACL_HELPERS=""
 enable_external_acl_helpers="`echo $enable_external_acl_helpers| sed -e 's/,/ /g;s/  */ /g'`"
 if test "x$enable_external_acl_helpers" != "xno" ; then
   for helper in $enable_external_acl_helpers ; do
-    dir="$srcdir/helpers/external_acl/$helper"
+    dir="$srcdir/src/acl/external/$helper"
 
       # modules converted to autoconf macros already
       # NP: we only need this list because m4_include() does not accept variables
       if test "x$helper" = "xAD_group" ; then
-        m4_include([helpers/external_acl/AD_group/required.m4])
+        m4_include([src/acl/external/AD_group/required.m4])
 
       elif test "x$helper" = "xLDAP_group" ; then
-        m4_include([helpers/external_acl/LDAP_group/required.m4])
+        m4_include([src/acl/external/LDAP_group/required.m4])
 
       elif test "x$helper" = "xLM_group" ; then
-        m4_include([helpers/external_acl/LM_group/required.m4])
+        m4_include([src/acl/external/LM_group/required.m4])
 
       elif test "x$helper" = "xdelayer" ; then
-        m4_include([helpers/external_acl/delayer/required.m4])
+        m4_include([src/acl/external/delayer/required.m4])
 
       elif test "x$helper" = "xSQL_session" ; then
-        m4_include([helpers/external_acl/SQL_session/required.m4])
+        m4_include([src/acl/external/SQL_session/required.m4])
 
       elif test "x$helper" = "xeDirectory_userip" ; then
-        m4_include([helpers/external_acl/eDirectory_userip/required.m4])
+        m4_include([src/acl/external/eDirectory_userip/required.m4])
 
       elif test "x$helper" = "xfile_userip" ; then
-        m4_include([helpers/external_acl/file_userip/required.m4])
+        m4_include([src/acl/external/file_userip/required.m4])
 
       elif test "x$helper" = "xkerberos_ldap_group" ; then
-        m4_include([helpers/external_acl/kerberos_ldap_group/required.m4])
+        m4_include([src/acl/external/kerberos_ldap_group/required.m4])
 
       elif test "x$helper" = "xsession" ; then
-        m4_include([helpers/external_acl/session/required.m4])
+        m4_include([src/acl/external/session/required.m4])
 
       elif test "x$helper" = "xtime_quota" ; then
-        m4_include([helpers/external_acl/time_quota/required.m4])
+        m4_include([src/acl/external/time_quota/required.m4])
 
       elif test "x$helper" = "xunix_group" ; then
-        m4_include([helpers/external_acl/unix_group/required.m4])
+        m4_include([src/acl/external/unix_group/required.m4])
 
       elif test "x$helper" = "xwbinfo_group" ; then
-        m4_include([helpers/external_acl/wbinfo_group/required.m4])
+        m4_include([src/acl/external/wbinfo_group/required.m4])
 
       # modules not yet converted to autoconf macros (or third party drop-in's)
       elif test -f "$dir/config.test" && sh "$dir/config.test" "$squid_host_os"; then
         BUILD_HELPER="$helper"
       fi
 
-      if test -d "$srcdir/helpers/external_acl/$helper"; then
+      if test -d "$srcdir/src/acl/external/$helper"; then
         if test "$BUILD_HELPER" != "$helper"; then
           if test "x$auto_ext_acl_modules" = "xyes"; then
             AC_MSG_NOTICE([external acl helper $helper ... found but cannot be built])
@@ -7,8 +7,11 @@
 
 include $(top_srcdir)/src/Common.am
 
-EXTRA_DIST = README required.m4 cert_tool ext_kerberos_ldap_group_acl.8
-SUBDIRS = 
+EXTRA_DIST= \
+	cert_tool \
+	ext_kerberos_ldap_group_acl.8 \
+	README \
+	required.m4
 
 AM_CPPFLAGS += -I$(srcdir)
 
@@ -36,7 +36,7 @@
  */
 
 #include "squid.h"
-#include "helpers/defines.h"
+#include "helper/protocol_defines.h"
 #include "rfc1738.h"
 #include "util.h"
 
@@ -7,11 +7,13 @@
 
 include $(top_srcdir)/src/Common.am
 
-libexec_PROGRAMS 		= ext_session_acl
-man_MANS 			= ext_session_acl.8
-EXTRA_DIST			= ext_session_acl.8 required.m4
-ext_session_acl_SOURCES		= ext_session_acl.cc
+libexec_PROGRAMS= ext_session_acl
+man_MANS= ext_session_acl.8
 
-LDADD = \
+ext_session_acl_SOURCES= \
+	ext_session_acl.cc
+ext_session_acl_LDADD = \
 	$(COMPAT_LIB) \
 	$(LIB_DB)
+
+EXTRA_DIST= ext_session_acl.8 required.m4
@@ -29,7 +29,7 @@
 #if HAVE_CONFIG_H
 #include "squid.h"
 #endif
-#include "helpers/defines.h"
+#include "helper/protocol_defines.h"
 
 #include <cstdlib>
 #include <cstring>
@@ -7,13 +7,15 @@
 
 include $(top_srcdir)/src/Common.am
 
-libexec_PROGRAMS 		= ext_time_quota_acl
-man_MANS 			= ext_time_quota_acl.8
-EXTRA_DIST			= ext_time_quota_acl.8 required.m4
-ext_time_quota_acl_SOURCES	= ext_time_quota_acl.cc
+libexec_PROGRAMS= ext_time_quota_acl
+man_MANS= ext_time_quota_acl.8
 
-DEFS += -DDEFAULT_QUOTA_DB=\"$(localstatedir)/ext_time_quota.db\" 
+DEFS += -DDEFAULT_QUOTA_DB=\"$(localstatedir)/ext_time_quota.db\"
 
-LDADD = \
+ext_time_quota_acl_SOURCES= \
+	ext_time_quota_acl.cc
+ext_time_quota_acl_LDADD = \
 	$(COMPAT_LIB) \
 	$(LIB_DB)
+
+EXTRA_DIST= ext_time_quota_acl.8 required.m4
@@ -27,7 +27,7 @@
  */
 
 #include "squid.h"
-#include "helpers/defines.h"
+#include "helper/protocol_defines.h"
 
 #include <cstdarg>
 #include <cstdlib>
@@ -10,9 +10,10 @@ include $(top_srcdir)/src/Common.am
 libexec_PROGRAMS 		= ext_unix_group_acl
 man_MANS 			= ext_unix_group_acl.8
 EXTRA_DIST			= ext_unix_group_acl.8 required.m4
-ext_unix_group_acl_SOURCES	= check_group.cc
 
-LDADD = \
+ext_unix_group_acl_SOURCES= \
+	check_group.cc
+ext_unix_group_acl_LDADD= \
 	$(top_builddir)/lib/libmiscencoding.la \
 	$(COMPAT_LIB) \
 	$(XTRA_LIBS)
@@ -62,7 +62,7 @@
  *
  */
 #include "squid.h"
-#include "helpers/defines.h"
+#include "helper/protocol_defines.h"
 #include "rfc1738.h"
 #include "util.h"
 
@@ -13,7 +13,7 @@
 #include "base/RefCount.h"
 #include "HttpHeader.h"
 #include "Notes.h"
-#include "SBuf.h"
+#include "sbuf/SBuf.h"
 #include "SquidString.h"
 
 namespace Adaptation
@@ -19,6 +19,7 @@
 #include "HttpMsg.h"
 #include "HttpReply.h"
 #include "HttpRequest.h"
+#include "sbuf/StringConvert.h"
 
 Adaptation::Iterator::Iterator(
     HttpMsg *aMsg, HttpRequest *aCause,
@@ -62,7 +63,7 @@ void Adaptation::Iterator::start()
             request = theCause;
         Must(request);
         Adaptation::History::Pointer ah = request->adaptHistory(true);
-        SBuf gid(theGroup->id);
+        auto gid = StringToSBuf(theGroup->id);
         ah->recordAdaptationService(gid);
     }
 
@@ -102,7 +103,7 @@ void Adaptation::Iterator::step()
 
     if (Adaptation::Config::needHistory) {
         Adaptation::History::Pointer ah = request->adaptHistory(true);
-        SBuf uid(thePlan.current()->cfg().key);
+        auto uid = StringToSBuf(thePlan.current()->cfg().key);
         ah->recordAdaptationService(uid);
     }
 
@@ -137,7 +137,7 @@ SquidLogLevel(libecap::LogVerbosity lv)
         return DBG_DATA; // is it a good idea to ignore other flags?
 
     if (lv.application())
-        return DBG_IMPORTANT; // is it a good idea to ignore other flags?
+        return lv.normal() ? DBG_IMPORTANT : 2;
 
     return 2 + 2*lv.debugging() + 3*lv.operation() + 2*lv.xaction();
 }
@@ -8,9 +8,9 @@
 include $(top_srcdir)/src/Common.am
 include $(top_srcdir)/src/TestHeaders.am
 
-noinst_LTLIBRARIES = libsquid-ecap.la
+noinst_LTLIBRARIES = libecapsquid.la
 
-libsquid_ecap_la_SOURCES = \
+libecapsquid_la_SOURCES = \
 	Config.h \
 	Config.cc \
 	Host.h \
@@ -25,5 +25,5 @@ libsquid_ecap_la_SOURCES = \
 	Registry.h
 
 # add libecap using its pkg-config-produced configuration variables
-libsquid_ecap_la_CXXFLAGS = $(EXT_LIBECAP_CFLAGS)
-libsquid_ecap_la_LIBADD = $(EXT_LIBECAP_LIBS) 
+libecapsquid_la_CXXFLAGS = $(EXT_LIBECAP_CFLAGS)
+libecapsquid_la_LIBADD = $(EXT_LIBECAP_LIBS)
@@ -144,6 +144,8 @@ class ModXact: public Xaction, public BodyProducer, public BodyConsumer
     virtual void detailError(int errDetail);
     // Icap::Xaction API
     virtual void clearError();
+    /// The master transaction log entry
+    virtual AccessLogEntry::Pointer masterLogEntry() { return alMaster; }
 
 private:
     virtual void start();
@@ -55,12 +55,14 @@ class IcapPeerConnector: public PeerConnector {
     IcapPeerConnector(
         Adaptation::Icap::ServiceRep::Pointer &service,
         const Comm::ConnectionPointer &aServerConn,
-        AsyncCall::Pointer &aCallback, const time_t timeout = 0):
+        AsyncCall::Pointer &aCallback,
+        AccessLogEntry::Pointer const &alp,
+        const time_t timeout = 0):
         AsyncJob("Ssl::IcapPeerConnector"),
-        PeerConnector(aServerConn, aCallback, timeout), icapService(service) {}
+        PeerConnector(aServerConn, aCallback, alp, timeout), icapService(service) {}
 
     /* PeerConnector API */
-    virtual Security::SessionPointer initializeSsl();
+    virtual Security::SessionPtr initializeSsl();
     virtual void noteNegotiationDone(ErrorState *error);
     virtual Security::ContextPtr getSslContext() {return icapService->sslContext;}
 
@@ -110,6 +112,13 @@ Adaptation::Icap::Xaction::~Xaction()
     HTTPMSGUNLOCK(icapRequest);
 }
 
+AccessLogEntry::Pointer
+Adaptation::Icap::Xaction::masterLogEntry()
+{
+    AccessLogEntry::Pointer nil;
+    return nil;
+}
+
 Adaptation::Icap::ServiceRep &
 Adaptation::Icap::Xaction::service()
 {
@@ -296,15 +305,15 @@ void Adaptation::Icap::Xaction::noteCommConnected(const CommConnectCbParams &io)
 #if USE_OPENSSL
     // If it is a reused connection and the SSL object is build
     // we should not negotiate new SSL session
-    auto ssl = fd_table[io.conn->fd].ssl;
+    const auto &ssl = fd_table[io.conn->fd].ssl;
     if (!ssl && service().cfg().secure.encryptTransport) {
         CbcPointer<Adaptation::Icap::Xaction> me(this);
         securer = asyncCall(93, 4, "Adaptation::Icap::Xaction::handleSecuredPeer",
                             MyIcapAnswerDialer(me, &Adaptation::Icap::Xaction::handleSecuredPeer));
 
         Ssl::PeerConnector::HttpRequestPointer tmpReq(NULL);
         Ssl::IcapPeerConnector *sslConnector =
-            new Ssl::IcapPeerConnector(theService, io.conn, securer, TheConfig.connect_timeout(service().cfg().bypass));
+            new Ssl::IcapPeerConnector(theService, io.conn, securer, masterLogEntry(), TheConfig.connect_timeout(service().cfg().bypass));
         AsyncJob::Start(sslConnector); // will call our callback
         return;
     }
@@ -701,7 +710,7 @@ bool Adaptation::Icap::Xaction::fillVirginHttpHeader(MemBuf &) const
 }
 
 #if USE_OPENSSL
-Security::SessionPointer
+Security::SessionPtr
 Ssl::IcapPeerConnector::initializeSsl()
 {
     auto ssl = Ssl::PeerConnector::initializeSsl();
@@ -729,7 +738,7 @@ Ssl::IcapPeerConnector::noteNegotiationDone(ErrorState *error)
         return;
 
     const int fd = serverConnection()->fd;
-    auto ssl = fd_table[fd].ssl;
+    auto ssl = fd_table[fd].ssl.get();
     assert(ssl);
     if (!SSL_session_reused(ssl)) {
         if (icapService->sslSession)
@@ -15,7 +15,7 @@
 #include "comm/ConnOpener.h"
 #include "HttpReply.h"
 #include "ipcache.h"
-#include "SBuf.h"
+#include "sbuf/SBuf.h"
 #if USE_OPENSSL
 #include "ssl/PeerConnector.h"
 #endif
@@ -114,6 +114,7 @@ class Xaction: public Adaptation::Initiate
     virtual void callEnd();
     /// clear stored error details, if any; used for retries/repeats
     virtual void clearError() {}
+    virtual AccessLogEntry::Pointer masterLogEntry();
     void dnsLookupDone(const ipcache_addrs *ia);
 
 protected:
@@ -13,7 +13,7 @@
 #include "anyp/ProtocolVersion.h"
 #include "anyp/TrafficMode.h"
 #include "comm/Connection.h"
-#include "SBuf.h"
+#include "sbuf/SBuf.h"
 #include "security/ServerOptions.h"
 
 #if USE_OPENSSL
@@ -14,6 +14,7 @@
 #include "auth/UserRequest.h"
 #include "client_side.h"
 #include "fatal.h"
+#include "http/Stream.h"
 #include "HttpRequest.h"
 
 /**
@@ -18,6 +18,7 @@
 #include "auth/User.h"
 #include "auth/UserRequest.h"
 #include "client_side.h"
+#include "http/Stream.h"
 #include "HttpRequest.h"
 
 ACLProxyAuth::~ACLProxyAuth()
@@ -11,7 +11,7 @@
 
 #include "auth/User.h"
 #include "cbdata.h"
-#include "SBufAlgos.h"
+#include "sbuf/Algorithms.h"
 
 #include <unordered_map>
 
@@ -20,12 +20,8 @@ namespace Auth {
 /// Cache of Auth::User credentials, keyed by Auth::User::userKey
 class CredentialsCache
 {
-private:
     CBDATA_CLASS(CredentialsCache);
 
-    /// key is User::userKey(), mapped value is User::Pointer
-    typedef std::unordered_map<SBuf, Auth::User::Pointer> StoreType;
-
 public:
     explicit CredentialsCache(const char *name, const char * const eventName);
 
@@ -70,6 +66,8 @@ class CredentialsCache
     /// whether a cleanup (garbage collection) event has been scheduled
     bool gcScheduled_;
 
+    /// key is User::userKey(), mapped value is User::Pointer
+    typedef std::unordered_map<SBuf, Auth::User::Pointer> StoreType;
     StoreType store_;
 
     // c-string raw pointer used as event name
@@ -28,6 +28,7 @@
 #include "auth/UserRequest.h"
 #include "client_side.h"
 #include "globals.h"
+#include "http/Stream.h"
 #include "HttpReply.h"
 #include "HttpRequest.h"
 
@@ -18,7 +18,7 @@
 #include "dlink.h"
 #include "ip/Address.h"
 #include "Notes.h"
-#include "SBuf.h"
+#include "sbuf/SBuf.h"
 
 class StoreEntry;
 
@@ -21,6 +21,7 @@
 #include "comm/Connection.h"
 #include "fatal.h"
 #include "format/Format.h"
+#include "http/Stream.h"
 #include "HttpReply.h"
 #include "HttpRequest.h"
 #include "MemBuf.h"
@@ -12,7 +12,7 @@ man_MANS 		= basic_ldap_auth.8
 EXTRA_DIST		= basic_ldap_auth.8 required.m4
 basic_ldap_auth_SOURCES	= basic_ldap_auth.cc
 
-LDADD = \
+basic_ldap_auth_LDADD = \
 	$(top_builddir)/lib/libmiscencoding.la \
 	$(COMPAT_LIB) \
 	$(LDAPLIB) \
@@ -8,6 +8,24 @@
 include $(top_srcdir)/src/Common.am
 include $(top_srcdir)/src/TestHeaders.am
 
+DIST_SUBDIRS = \
+        DB \
+        fake \
+        getpwnam \
+        LDAP \
+        NCSA \
+        NIS \
+        PAM \
+        POP3 \
+        RADIUS \
+        SASL \
+        SMB \
+        SMB_LM \
+        SSPI
+
+SUBDIRS = $(BASIC_AUTH_HELPERS)
+EXTRA_DIST= helpers.m4
+
 noinst_LTLIBRARIES = libbasic.la
 
 libbasic_la_SOURCES = \
@@ -8,17 +8,18 @@
 include $(top_srcdir)/src/Common.am
 
 libexec_PROGRAMS	= basic_ncsa_auth
-basic_ncsa_auth_SOURCES	= basic_ncsa_auth.cc crypt_md5.cc crypt_md5.h
 man_MANS 		= basic_ncsa_auth.8
 EXTRA_DIST		= basic_ncsa_auth.8 required.m4
-LDADD = \
+
+basic_ncsa_auth_SOURCES= \
+	basic_ncsa_auth.cc \
+	crypt_md5.cc \
+	crypt_md5.h
+basic_ncsa_auth_LDADD= \
 	$(top_builddir)/lib/libmisccontainers.la \
 	$(top_builddir)/lib/libmiscencoding.la \
 	$(COMPAT_LIB) \
 	$(NETTLELIB) \
 	$(CRYPTLIB) \
 	$(SSLLIB) \
 	$(XTRA_LIBS)
-
-## we need our local files too (but avoid -I. at all costs)
-AM_CPPFLAGS += -I$(srcdir)
@@ -25,10 +25,11 @@
  */
 
 #include "squid.h"
-#include "crypt_md5.h"
-#include "helpers/defines.h"
+#include "auth/basic/NCSA/crypt_md5.h"
+#include "helper/protocol_defines.h"
 #include "rfc1738.h"
 
+#include <string>
 #include <unordered_map>
 #if HAVE_SYS_STAT_H
 #include <sys/stat.h>
@@ -51,8 +52,9 @@ read_passwd_file(const char *passwdfile)
     usermap.clear();
     //TODO: change to c++ streams
     f = fopen(passwdfile, "r");
-    if (NULL == f) {
-        fprintf(stderr, "FATAL: %s: %s\n", passwdfile, xstrerror());
+    if (!f) {
+        int xerrno = errno;
+        fprintf(stderr, "FATAL: %s: %s\n", passwdfile, xstrerr(xerrno));
         exit(1);
     }
     unsigned int lineCount = 0;
@@ -24,7 +24,7 @@
  */
 
 #include "squid.h"
-#include "crypt_md5.h"
+#include "auth/basic/NCSA/crypt_md5.h"
 #include "md5.h"
 
 #include <cstring>
@@ -7,17 +7,14 @@
 
 include $(top_srcdir)/src/Common.am
 
-## we need our local files too (but avoid -I. at all costs)
-AM_CPPFLAGS += -I$(srcdir)
-
 libexec_PROGRAMS = basic_nis_auth
 
-basic_nis_auth_SOURCES = \
+basic_nis_auth_SOURCES= \
 	basic_nis_auth.cc \
 	nis_support.h \
 	nis_support.cc
 
-basic_nis_auth_LDADD = \
+basic_nis_auth_LDADD= \
 	$(top_builddir)/lib/libmiscencoding.la \
 	$(COMPAT_LIB) \
 	$(CRYPTLIB) \
@@ -12,8 +12,8 @@
  */
 
 #include "squid.h"
+#include "auth/basic/NIS/nis_support.h"
 #include "hash.h"
-#include "nis_support.h"
 #include "rfc1738.h"
 #include "util.h"
 
@@ -44,9 +44,9 @@ main(int argc, char **argv)
     setbuf(stdout, NULL);
 
     if (argc != 3) {
-        fprintf(stderr, "Usage: basic_yp_auth <domainname> <nis map for password>\n");
+        fprintf(stderr, "Usage: basic_nis_auth <domainname> <nis map for password>\n");
         fprintf(stderr, "\n");
-        fprintf(stderr, "Example basic_yp_auth mydomain.com passwd.byname\n");
+        fprintf(stderr, "Example basic_nis_auth mydomain.com passwd.byname\n");
         exit(1);
     }
     nisdomain = argv[1];
@@ -35,7 +35,7 @@
 #include <rpcsvc/yp_prot.h>
 #endif
 
-#include "nis_support.h"
+#include "auth/basic/NIS/nis_support.h"
 
 #define NO_YPERR 0      /* There is no error */
 
@@ -10,8 +10,8 @@ include $(top_srcdir)/src/Common.am
 man_MANS		= basic_pam_auth.8
 EXTRA_DIST		= basic_pam_auth.8 required.m4
 libexec_PROGRAMS	= basic_pam_auth
-basic_pam_auth_SOURCES	= basic_pam_auth.cc
 
+basic_pam_auth_SOURCES	= basic_pam_auth.cc
 basic_pam_auth_LDADD = \
 	$(top_builddir)/lib/libmiscencoding.la \
 	$(COMPAT_LIB) \
@@ -71,7 +71,7 @@
  *  Initial version
  */
 #include "squid.h"
-#include "helpers/defines.h"
+#include "helper/protocol_defines.h"
 #include "rfc1738.h"
 #include "util.h"
 
@@ -7,19 +7,17 @@
 
 include $(top_srcdir)/src/Common.am
 
-## we need our local files too (but avoid -I. at all costs)
-AM_CPPFLAGS += -I$(srcdir)
-
 libexec_PROGRAMS 	= basic_radius_auth
 man_MANS 		= basic_radius_auth.8
 EXTRA_DIST		= basic_radius_auth.8 required.m4
-basic_radius_auth_SOURCES = \
-			basic_radius_auth.cc \
-			radius.h \
-			radius-util.cc \
-			radius-util.h
 
-basic_radius_auth_LDADD = \
+basic_radius_auth_SOURCES= \
+	basic_radius_auth.cc \
+	radius.h \
+	radius-util.cc \
+	radius-util.h
+
+basic_radius_auth_LDADD= \
 	$(top_builddir)/lib/libmiscencoding.la \
 	$(COMPAT_LIB) \
 	$(NETTLELIB) \
@@ -54,10 +54,10 @@
  */
 
 #include "squid.h"
-#include "helpers/defines.h"
+#include "auth/basic/RADIUS/radius-util.h"
+#include "auth/basic/RADIUS/radius.h"
+#include "helper/protocol_defines.h"
 #include "md5.h"
-#include "radius-util.h"
-#include "radius.h"
 
 #include <cctype>
 #include <cerrno>
@@ -418,10 +418,11 @@ authenticate(int socket_fd, const char *username, const char *passwd)
          */
         gettimeofday(&sent, NULL);
         if (send(socket_fd, (char *) auth, total_length, 0) < 0) {
+            int xerrno = errno;
             // EAGAIN is expected at high traffic, just retry
             // TODO: block/sleep a few ms to let the apparently full buffer drain ?
-            if (errno != EAGAIN && errno != EWOULDBLOCK)
-                fprintf(stderr,"ERROR: RADIUS send() failure: %s\n", xstrerror());
+            if (xerrno != EAGAIN && xerrno != EWOULDBLOCK)
+                fprintf(stderr,"ERROR: RADIUS send() failure: %s\n", xstrerr(xerrno));
             continue;
         }
         while ((time_spent = time_since(&sent)) < 1000000) {
@@ -569,7 +570,8 @@ main(int argc, char **argv)
     }
 #ifdef O_NONBLOCK
     if (fcntl(sockfd, F_SETFL, fcntl(sockfd, F_GETFL, 0) | O_NONBLOCK) < 0) {
-        fprintf(stderr,"%s| ERROR: fcntl() failure: %s\n", argv[0], xstrerror());
+        int xerrno = errno;
+        fprintf(stderr,"%s| ERROR: fcntl() failure: %s\n", argv[0], xstrerr(xerrno));
         exit(1);
     }
 #endif
@@ -45,8 +45,8 @@ char util_sccsid[] =
     "		2.1 Copyright 1997 Cistron Internet Services B.V.";
 
 #include "squid.h"
+#include "auth/basic/RADIUS/radius-util.h"
 #include "md5.h"
-#include "radius-util.h"
 
 #include <cctype>
 #include <csignal>
@@ -7,16 +7,18 @@
 
 include $(top_srcdir)/src/Common.am
 
-man_MANS = basic_sasl_auth.8
-libexec_PROGRAMS = basic_sasl_auth
-basic_sasl_auth_SOURCES = basic_sasl_auth.cc
-basic_sasl_auth_LDADD = \
+man_MANS= basic_sasl_auth.8
+libexec_PROGRAMS= basic_sasl_auth
+
+basic_sasl_auth_SOURCES= \
+	basic_sasl_auth.cc
+basic_sasl_auth_LDADD= \
 	$(top_builddir)/lib/libmiscencoding.la \
 	$(COMPAT_LIB) \
 	$(LIBSASL) \
 	$(XTRA_LIBS)
 
-EXTRA_DIST = \
+EXTRA_DIST= \
 	basic_sasl_auth.8 \
 	basic_sasl_auth.conf \
 	basic_sasl_auth.pam \
@@ -33,7 +33,7 @@
  *
  */
 #include "squid.h"
-#include "helpers/defines.h"
+#include "helper/protocol_defines.h"
 #include "rfc1738.h"
 #include "util.h"
 
@@ -10,12 +10,15 @@ include $(top_srcdir)/src/Common.am
 if !ENABLE_WIN32SPECIFIC
 libexec_SCRIPTS	= basic_smb_auth.sh
 libexec_PROGRAMS = basic_smb_auth
-endif 
+endif
+
 basic_smb_auth_SOURCES= basic_smb_auth.cc
 basic_smb_auth_CXXFLAGS = -DHELPERSCRIPT=\"$(libexecdir)/basic_smb_auth.sh\"
 basic_smb_auth_LDADD = \
-		$(top_builddir)/lib/libmiscencoding.la \
-		$(COMPAT_LIB) \
-		$(XTRA_LIBS)
+	$(top_builddir)/lib/libmiscencoding.la \
+	$(COMPAT_LIB) \
+	$(XTRA_LIBS)
 
-EXTRA_DIST = basic_smb_auth.sh required.m4
+EXTRA_DIST= \
+	basic_smb_auth.sh \
+	required.m4
@@ -25,7 +25,7 @@
  */
 
 #include "squid.h"
-#include "helpers/defines.h"
+#include "helper/protocol_defines.h"
 #include "rfc1738.h"
 #include "util.h"
 
@@ -7,25 +7,21 @@
 
 include $(top_srcdir)/src/Common.am
 
-libexec_PROGRAMS = basic_smb_lm_auth
+libexec_PROGRAMS= basic_smb_lm_auth
 
-basic_smb_lm_auth_SOURCES = \
+basic_smb_lm_auth_SOURCES= \
 	msntauth.cc \
 	msntauth.h \
 	valid.cc \
 	valid.h
-
-EXTRA_DIST = \
-	msntauth-v2.0.lsm \
-	README.html \
-	required.m4
-
-LDADD = \
+basic_smb_lm_auth_LDADD= \
 	$(top_builddir)/lib/smblib/libsmblib.la \
 	$(top_builddir)/lib/rfcnb/librfcnb.la \
 	$(top_builddir)/lib/libmiscencoding.la \
 	$(COMPAT_LIB) \
 	$(XTRA_LIBS)
 
-## we need our local files too (but avoid -I. at all costs)
-AM_CPPFLAGS += -I$(srcdir) -I$(top_srcdir)/lib
+EXTRA_DIST= \
+	msntauth-v2.0.lsm \
+	README.html \
+	required.m4
@@ -48,8 +48,8 @@
 #include <vector> //todo: turn into multimap
 #include <syslog.h>
 
-#include "msntauth.h"
-#include "valid.h"
+#include "auth/basic/SMB_LM/msntauth.h"
+#include "auth/basic/SMB_LM/valid.h"
 
 static char msntauth_version[] = "Msntauth v3.0.0 (C) 2 Sep 2001 Stellar-X Antonino Iannella.\nModified by the Squid HTTP Proxy team 2002-2014";
 
@@ -7,6 +7,9 @@
  */
 
 #include "squid.h"
+#include "auth/basic/SMB_LM/valid.h"
+#include "smblib/smblib.h"
+
 #if HAVE_SYS_TYPES_H
 #include <sys/types.h>
 #endif
@@ -16,8 +19,6 @@
 #if HAVE_SYSLOG_H
 #include <syslog.h>
 #endif
-#include "smblib/smblib.h"
-#include "valid.h"
 
 // BACKUP is unused
 int
@@ -7,9 +7,6 @@
 
 include $(top_srcdir)/src/Common.am
 
-## we need our local files too (but avoid -I. at all costs)
-AM_CPPFLAGS += -I$(srcdir)
-
 if ENABLE_WIN32SPECIFIC
 libexec_PROGRAMS = basic_sspi_auth
 endif
@@ -33,10 +33,10 @@
 */
 
 #include "squid.h"
-#include "helpers/defines.h"
+#include "auth/basic/SSPI/valid.h"
+#include "helper/protocol_defines.h"
 #include "rfc1738.h"
 #include "util.h"
-#include "valid.h"
 
 #if GETOPT_H
 #include <getopt.h>
@@ -46,7 +46,7 @@
 #if _SQUID_CYGWIN_
 #include <wchar.h>
 #endif
-#include "valid.h"
+#include "auth/basic/SSPI/valid.h"
 
 char Default_NTDomain[DNLEN+1] = NTV_DEFAULT_DOMAIN;
 const char * errormsg;
@@ -8,8 +8,8 @@
 include $(top_srcdir)/src/Common.am
 
 libexec_PROGRAMS = basic_fake_auth
-basic_fake_auth_SOURCES = fake.cc
 
-LDADD = $(COMPAT_LIB)
+basic_fake_auth_SOURCES = fake.cc
+basic_fake_auth_LDADD = $(COMPAT_LIB)
 
 EXTRA_DIST = required.m4
@@ -43,7 +43,7 @@
  */
 
 #include "squid.h"
-#include "helpers/defines.h"
+#include "helper/protocol_defines.h"
 
 #include <iostream>
 #include <string>
@@ -33,7 +33,7 @@
  */
 
 #include "squid.h"
-#include "helpers/defines.h"
+#include "helper/protocol_defines.h"
 #include "rfc1738.h"
 
 #include <cstdlib>
@@ -21,7 +21,7 @@ fi
 #define list of modules to build
 auto_auth_basic_modules=no
 if test "x$enable_auth_basic" = "xyes" ; then
-    SQUID_LOOK_FOR_MODULES([$srcdir/helpers/basic_auth],[enable_auth_basic])
+    SQUID_LOOK_FOR_MODULES([$srcdir/src/auth/basic],[enable_auth_basic])
   auto_auth_basic_modules=yes
 fi
 #handle the "none" special case
@@ -36,55 +36,55 @@ if test "x$enable_auth_basic" != "xno" ; then
     AUTH_MODULES="$AUTH_MODULES basic"
     AC_DEFINE([HAVE_AUTH_MODULE_BASIC],1,[Basic auth module is built])
     for helper in $enable_auth_basic; do
-      dir="$srcdir/helpers/basic_auth/$helper"
+      dir="$srcdir/src/auth/basic/$helper"
 
       # modules converted to autoconf macros already
       # NP: we only need this list because m4_include() does not accept variables
       if test "x$helper" = "xDB" ; then
-        m4_include([helpers/basic_auth/DB/required.m4])
+        m4_include([src/auth/basic/DB/required.m4])
 
       elif test "x$helper" = "xLDAP" ; then
-        m4_include([helpers/basic_auth/LDAP/required.m4])
+        m4_include([src/auth/basic/LDAP/required.m4])
 
       elif test "x$helper" = "xNCSA" ; then
-        m4_include([helpers/basic_auth/NCSA/required.m4])
+        m4_include([src/auth/basic/NCSA/required.m4])
 
       elif test "x$helper" = "xNIS" ; then
-        m4_include([helpers/basic_auth/NIS/required.m4])
+        m4_include([src/auth/basic/NIS/required.m4])
 
       elif test "x$helper" = "xPAM" ; then
-        m4_include([helpers/basic_auth/PAM/required.m4])
+        m4_include([src/auth/basic/PAM/required.m4])
 
       elif test "x$helper" = "xPOP3" ; then
-        m4_include([helpers/basic_auth/POP3/required.m4])
+        m4_include([src/auth/basic/POP3/required.m4])
 
       elif test "x$helper" = "xRADIUS" ; then
-        m4_include([helpers/basic_auth/RADIUS/required.m4])
+        m4_include([src/auth/basic/RADIUS/required.m4])
 
       elif test "x$helper" = "xSASL" ; then
-        m4_include([helpers/basic_auth/SASL/required.m4])
+        m4_include([src/auth/basic/SASL/required.m4])
 
       elif test "x$helper" = "xSMB" ; then
-        m4_include([helpers/basic_auth/SMB/required.m4])
+        m4_include([src/auth/basic/SMB/required.m4])
 
       elif test "x$helper" = "xSMB_LM" ; then
-        m4_include([helpers/basic_auth/SMB_LM/required.m4])
+        m4_include([src/auth/basic/SMB_LM/required.m4])
 
       elif test "x$helper" = "xSSPI" ; then
-        m4_include([helpers/basic_auth/SSPI/required.m4])
+        m4_include([src/auth/basic/SSPI/required.m4])
 
       elif test "x$helper" = "xfake" ; then
-        m4_include([helpers/basic_auth/fake/required.m4])
+        m4_include([src/auth/basic/fake/required.m4])
 
       elif test "x$helper" = "xgetpwnam" ; then
-        m4_include([helpers/basic_auth/getpwnam/required.m4])
+        m4_include([src/auth/basic/getpwnam/required.m4])
 
       # modules not yet converted to autoconf macros (or third party drop-in's)
       elif test -f "$dir/config.test" && sh "$dir/config.test" "$squid_host_os"; then
         BUILD_HELPER="$helper"
       fi
 
-      if test -d "$srcdir/helpers/basic_auth/$helper"; then
+      if test -d "$srcdir/src/auth/basic/$helper"; then
         if test "$BUILD_HELPER" != "$helper"; then
           if test "x$auto_auth_basic_modules" = "xyes"; then
             AC_MSG_NOTICE([Basic auth helper $helper ... found but cannot be built])
@@ -30,7 +30,7 @@
 #include "HttpRequest.h"
 #include "mgr/Registration.h"
 #include "rfc2617.h"
-#include "SBuf.h"
+#include "sbuf/SBuf.h"
 #include "SquidTime.h"
 #include "Store.h"
 #include "StrList.h"
@@ -7,16 +7,15 @@
 
 include $(top_srcdir)/src/Common.am
 
-## we need our local files too (but avoid -I. at all costs)
-AM_CPPFLAGS += -I$(srcdir)
+libexec_PROGRAMS= digest_ldap_auth
 
-libexec_PROGRAMS = digest_ldap_auth
-digest_ldap_auth_SOURCES = digest_pw_auth.cc \
+digest_ldap_auth_SOURCES= \
 	digest_common.h \
+	digest_pw_auth.cc \
 	ldap_backend.cc \
 	ldap_backend.h
 
-digest_ldap_auth_LDADD = \
+digest_ldap_auth_LDADD= \
 	$(top_builddir)/lib/libmiscencoding.la \
 	$(COMPAT_LIB) \
 	$(LDAPLIB) \
@@ -26,4 +25,4 @@ digest_ldap_auth_LDADD = \
 	$(SSLLIB) \
 	$(XTRA_LIBS)
 
-EXTRA_DIST = required.m4
+EXTRA_DIST= required.m4
@@ -13,6 +13,10 @@
 #ifndef SQUID_DIGEST_COMMON_H_
 #define SQUID_DIGEST_COMMON_H_
 
+#include "hash.h"
+#include "rfc2617.h"
+#include "util.h"
+
 #include <cctype>
 #include <cstdlib>
 #include <cstring>
@@ -29,10 +33,6 @@
 #include <crypt.h>
 #endif
 
-#include "hash.h"
-#include "rfc2617.h"
-#include "util.h"
-
 typedef struct _request_data {
     int channelId;
     char *user;
@@ -37,9 +37,9 @@
  */
 
 #include "squid.h"
-#include "digest_common.h"
-#include "helpers/defines.h"
-#include "ldap_backend.h"
+#include "auth/digest/LDAP/digest_common.h"
+#include "auth/digest/LDAP/ldap_backend.h"
+#include "helper/protocol_defines.h"
 
 #define PROGRAM_NAME "digest_ldap_auth"
 
@@ -15,7 +15,7 @@
 
 #define LDAP_DEPRECATED 1
 
-#include "ldap_backend.h"
+#include "auth/digest/LDAP/ldap_backend.h"
 
 #if _SQUID_WINDOWS_ && !_SQUID_CYGWIN_
 
@@ -10,7 +10,7 @@
  * AUTHOR: Flavio Pescuma. <flavio@marasystems.com>
  */
 
-#include "digest_common.h"
+#include "auth/digest/LDAP/digest_common.h"
 
 extern int LDAPArguments(int argc, char **argv);
 extern void LDAPHHA1(RequestData * requestData);
@@ -8,9 +8,13 @@
 include $(top_srcdir)/src/Common.am
 include $(top_srcdir)/src/TestHeaders.am
 
-noinst_LTLIBRARIES = libdigest.la
+DIST_SUBDIRS= eDirectory file LDAP
+SUBDIRS= $(DIGEST_AUTH_HELPERS)
+EXTRA_DIST= helpers.m4
 
-libdigest_la_SOURCES = \
+noinst_LTLIBRARIES= libdigest.la
+
+libdigest_la_SOURCES= \
 	Config.cc \
 	Config.h \
 	Scheme.cc \
@@ -7,11 +7,10 @@
 
 include $(top_srcdir)/src/Common.am
 
-## we need our local files too (but avoid -I. at all costs)
-AM_CPPFLAGS += -I$(srcdir)
+libexec_PROGRAMS= digest_edirectory_auth
 
-libexec_PROGRAMS = digest_edirectory_auth
-digest_edirectory_auth_SOURCES = digest_pw_auth.cc \
+digest_edirectory_auth_SOURCES= \
+	digest_pw_auth.cc \
 	digest_common.h \
 	ldap_backend.cc \
 	ldap_backend.h \
@@ -28,4 +27,4 @@ digest_edirectory_auth_LDADD = \
 	$(SSLLIB) \
 	$(XTRA_LIBS)
 
-EXTRA_DIST = required.m4
+EXTRA_DIST= required.m4
@@ -13,6 +13,10 @@
 #ifndef SQUID_DIGEST_COMMON_H_
 #define SQUID_DIGEST_COMMON_H_
 
+#include "hash.h"
+#include "rfc2617.h"
+#include "util.h"
+
 #include <cctype>
 #include <cstdlib>
 #include <cstring>
@@ -32,10 +36,6 @@
 #include <crypt.h>
 #endif
 
-#include "hash.h"
-#include "rfc2617.h"
-#include "util.h"
-
 typedef struct _request_data {
     int channelId;
     char *user;
@@ -36,9 +36,9 @@
  * Copyright (c) 2003  Robert Collins  <robertc@squid-cache.org>
  */
 #include "squid.h"
-#include "digest_common.h"
-#include "helpers/defines.h"
-#include "ldap_backend.h"
+#include "auth/digest/eDirectory/digest_common.h"
+#include "auth/digest/eDirectory/ldap_backend.h"
+#include "helper/protocol_defines.h"
 
 #define PROGRAM_NAME "digest_edirectory_auth"
 
@@ -31,7 +31,7 @@
  */
 
 #include "squid.h"
-#include "digest_common.h"
+#include "auth/digest/eDirectory/digest_common.h"
 
 #if _SQUID_WINDOWS_ && !_SQUID_CYGWIN_
 
@@ -13,7 +13,7 @@
 
 #define LDAP_DEPRECATED 1
 
-#include "ldap_backend.h"
+#include "auth/digest/eDirectory/ldap_backend.h"
 
 #if _SQUID_WINDOWS_ && !_SQUID_CYGWIN_
 
@@ -48,7 +48,7 @@ PFldap_start_tls_s Win32_ldap_start_tls_s;
 #include <ldap.h>
 
 #endif
-#include "edir_ldapext.h"
+#include "auth/digest/eDirectory/edir_ldapext.h"
 #define PROGRAM_NAME "digest_pw_auth(LDAP_backend)"
 
 /* Globals */
@@ -8,10 +8,9 @@
 
 /*
  * AUTHOR: Flavio Pescuma. <flavio@marasystems.com>
- *
  */
 
-#include "digest_common.h"
+#include "auth/digest/eDirectory/digest_common.h"
 extern int LDAPArguments(int argc, char **argv);
 extern void LDAPHHA1(RequestData * requestData);
 
@@ -7,17 +7,16 @@
 
 include $(top_srcdir)/src/Common.am
 
-## we need our local files too (but avoid -I. at all costs)
-AM_CPPFLAGS += -I$(srcdir)
+man_MANS= digest_file_auth.8
+libexec_PROGRAMS= digest_file_auth
 
-man_MANS = digest_file_auth.8
-libexec_PROGRAMS = digest_file_auth
-digest_file_auth_SOURCES = digest_file_auth.cc \
+digest_file_auth_SOURCES= \
 	digest_common.h \
+	digest_file_auth.cc \
 	text_backend.cc \
 	text_backend.h
 
-LDADD = \
+digest_file_auth_LDADD = \
 	$(top_builddir)/lib/libmisccontainers.la \
 	$(top_builddir)/lib/libmiscencoding.la \
 	$(COMPAT_LIB) \
@@ -26,4 +25,6 @@ LDADD = \
 	$(SSLLIB) \
 	$(XTRA_LIBS)
 
-EXTRA_DIST = digest_file_auth.8 required.m4
+EXTRA_DIST= \
+	digest_file_auth.8 \
+	required.m4
@@ -40,9 +40,9 @@
  */
 
 #include "squid.h"
-#include "digest_common.h"
-#include "helpers/defines.h"
-#include "text_backend.h"
+#include "auth/digest/file/digest_common.h"
+#include "auth/digest/file/text_backend.h"
+#include "helper/protocol_defines.h"
 
 static void
 GetHHA1(RequestData * requestData)
@@ -36,7 +36,7 @@
  */
 
 #include "squid.h"
-#include "text_backend.h"
+#include "auth/digest/file/text_backend.h"
 
 static hash_table *hash = NULL;
 static HASHFREE my_free;
@@ -80,7 +80,8 @@ read_passwd_file(const char *passwordFile, int isHa1Mode)
     }
     FILE *f = fopen(passwordFile, "r");
     if (!f) {
-        fprintf(stderr, "digest_file_auth: cannot open password file: %s\n", xstrerror());
+        int xerrno = errno;
+        fprintf(stderr, "digest_file_auth: cannot open password file: %s\n", xstrerr(xerrno));
         exit(1);
     }
     unsigned int lineCount = 0;
@@ -6,7 +6,7 @@
  * Please see the COPYING and CONTRIBUTORS files for details.
  */
 
-#include "digest_common.h"
+#include "auth/digest/file/digest_common.h"
 
 extern void TextArguments(int argc, char **argv);
 extern void TextHHA1(RequestData * requestData);
@@ -21,7 +21,7 @@ fi
 #define list of modules to build
 auto_auth_digest_modules=no
 if test "x$enable_auth_digest" = "xyes" ; then
-    SQUID_LOOK_FOR_MODULES([$srcdir/helpers/digest_auth],[enable_auth_digest])
+    SQUID_LOOK_FOR_MODULES([$srcdir/src/auth/digest],[enable_auth_digest])
   auto_auth_digest_modules=yes
 fi
 #handle the "none" special case
@@ -35,25 +35,25 @@ if test "x$enable_auth_digest" != "xno" ; then
     AUTH_MODULES="$AUTH_MODULES digest"
     AC_DEFINE([HAVE_AUTH_MODULE_DIGEST],1,[Digest auth module is built])
     for helper in $enable_auth_digest; do
-      dir="$srcdir/helpers/digest_auth/$helper"
+      dir="$srcdir/src/auth/digest/$helper"
 
       # modules converted to autoconf macros already
       # NP: we only need this list because m4_include() does not accept variables
-      if test "x$helper" = "xLDAP" ; then
-        m4_include([helpers/digest_auth/LDAP/required.m4])
-
-      elif test "x$helper" = "xeDirectory" ; then
-        m4_include([helpers/digest_auth/eDirectory/required.m4])
+      if test "x$helper" = "xeDirectory" ; then
+        m4_include([src/auth/digest/eDirectory/required.m4])
 
       elif test "x$helper" = "xfile" ; then
-        m4_include([helpers/digest_auth/file/required.m4])
+        m4_include([src/auth/digest/file/required.m4])
+
+      elif test "x$helper" = "xLDAP" ; then
+        m4_include([src/auth/digest/LDAP/required.m4])
 
       # modules not yet converted to autoconf macros (or third party drop-in's)
       elif test -f "$dir/config.test" && sh "$dir/config.test" "$squid_host_os"; then
         BUILD_HELPER="$helper"
       fi
 
-      if test -d "$srcdir/helpers/digest_auth/$helper"; then
+      if test -d "$srcdir/src/auth/digest/$helper"; then
         if test "$BUILD_HELPER" != "$helper"; then
           if test "x$auto_auth_digest_modules" = "xyes"; then
             AC_MSG_NOTICE([Digest auth helper $helper ... found but cannot be built])
@@ -22,6 +22,7 @@
 #include "cache_cf.h"
 #include "client_side.h"
 #include "helper.h"
+#include "http/Stream.h"
 #include "HttpHeaderTools.h"
 #include "HttpReply.h"
 #include "HttpRequest.h"
@@ -8,6 +8,10 @@
 include $(top_srcdir)/src/Common.am
 include $(top_srcdir)/src/TestHeaders.am
 
+DIST_SUBDIRS= kerberos SSPI wrapper
+SUBDIRS= $(NEGOTIATE_AUTH_HELPERS)
+EXTRA_DIST= helpers.m4
+
 noinst_LTLIBRARIES = libnegotiate.la
 
 libnegotiate_la_SOURCES = \
@@ -9,13 +9,15 @@ include $(top_srcdir)/src/Common.am
 
 libexec_PROGRAMS = negotiate_sspi_auth
 
-negotiate_sspi_auth_SOURCES = negotiate_sspi_auth.cc
-
-LDADD = \
+negotiate_sspi_auth_SOURCES = \
+	negotiate_sspi_auth.cc
+negotiate_sspi_auth_LDADD = \
 	$(top_builddir)/lib/libsspwin32.la \
 	$(top_builddir)/lib/libmiscencoding.la \
 	$(COMPAT_LIB) \
 	-ladvapi32 \
 	$(XTRA_LIBS)
 
-EXTRA_DIST = readme.txt required.m4
+EXTRA_DIST= \
+	readme.txt \
+	required.m4
@@ -45,7 +45,7 @@
 
 #include "squid.h"
 #include "base64.h"
-#include "helpers/defines.h"
+#include "helper/protocol_defines.h"
 #include "ntlmauth/ntlmauth.h"
 #include "ntlmauth/support_bits.cci"
 #include "sspwin32.h"
@@ -20,6 +20,7 @@
 #include "globals.h"
 #include "helper.h"
 #include "helper/Reply.h"
+#include "http/Stream.h"
 #include "HttpHeaderTools.h"
 #include "HttpReply.h"
 #include "HttpRequest.h"
@@ -16,12 +16,12 @@ if test "x$enable_auth_negotiate" = "x"; then
 fi
 #conflicts with global
 if test "x$enable_auth_negotiate" != "xno" -a "x$enable_auth" = "xno" ; then
-    AC_MSG_ERROR([Negotiate auth requested but auth disabled])
+  AC_MSG_ERROR([Negotiate auth requested but auth disabled])
 fi
 #define list of modules to build
 auto_auth_negotiate_modules=no
 if test "x$enable_auth_negotiate" = "xyes" ; then
-    SQUID_LOOK_FOR_MODULES([$srcdir/helpers/negotiate_auth],[enable_auth_negotiate])
+  SQUID_LOOK_FOR_MODULES([$srcdir/src/auth/negotiate],[enable_auth_negotiate])
   auto_auth_negotiate_modules=yes
 fi
 #handle the "none" special case
@@ -35,25 +35,25 @@ if test "x$enable_auth_negotiate" != "xno" ; then
     AUTH_MODULES="$AUTH_MODULES negotiate"
     AC_DEFINE([HAVE_AUTH_MODULE_NEGOTIATE],1,[Negotiate auth module is built])
     for helper in $enable_auth_negotiate; do
-      dir="$srcdir/helpers/negotiate_auth/$helper"
+      dir="$srcdir/src/auth/negotiate/$helper"
 
       # modules converted to autoconf macros already
       # NP: we only need this list because m4_include() does not accept variables
       if test "x$helper" = "xSSPI" ; then
-        m4_include([helpers/negotiate_auth/SSPI/required.m4])
+        m4_include([src/auth/negotiate/SSPI/required.m4])
 
       elif test "x$helper" = "xkerberos" ; then
-        m4_include([helpers/negotiate_auth/kerberos/required.m4])
+        m4_include([src/auth/negotiate/kerberos/required.m4])
 
       elif test "x$helper" = "xwrapper" ; then
-        m4_include([helpers/negotiate_auth/wrapper/required.m4])
+        m4_include([src/auth/negotiate/wrapper/required.m4])
 
       # modules not yet converted to autoconf macros (or third party drop-in's)
       elif test -f "$dir/config.test" && sh "$dir/config.test" "$squid_host_os"; then
         BUILD_HELPER="$helper"
       fi
 
-      if test -d "$srcdir/helpers/negotiate_auth/$helper"; then
+      if test -d "$srcdir/src/auth/negotiate/$helper"; then
         if test "$BUILD_HELPER" != "$helper"; then
           if test "x$auto_auth_negotiate_modules" = "xyes"; then
             AC_MSG_NOTICE([Negotiate auth helper $helper ... found but cannot be built])
@@ -7,29 +7,37 @@
 
 include $(top_srcdir)/src/Common.am
 
-EXTRA_DIST = README required.m4 negotiate_kerberos_auth.8
-SUBDIRS = 
+EXTRA_DIST= \
+	README \
+	required.m4 \
+	negotiate_kerberos_auth.8
 
-libexec_PROGRAMS = negotiate_kerberos_auth negotiate_kerberos_auth_test
+libexec_PROGRAMS = \
+	negotiate_kerberos_auth \
+	negotiate_kerberos_auth_test
 
 AM_CPPFLAGS += -I$(srcdir)
 
-negotiate_kerberos_auth_SOURCES = negotiate_kerberos_auth.cc negotiate_kerberos_pac.cc negotiate_kerberos.h
-negotiate_kerberos_auth_LDFLAGS = 
-negotiate_kerberos_auth_LDADD = \
+negotiate_kerberos_auth_SOURCES= \
+	negotiate_kerberos_auth.cc \
+	negotiate_kerberos_pac.cc \
+	negotiate_kerberos.h
+negotiate_kerberos_auth_LDFLAGS=
+negotiate_kerberos_auth_LDADD= \
 	$(top_builddir)/lib/libmiscencoding.la \
 	$(COMPAT_LIB) \
 	$(NETTLELIB) \
 	$(KRB5LIBS) \
 	$(XTRA_LIBS)
 
-negotiate_kerberos_auth_test_SOURCES = negotiate_kerberos_auth_test.cc
-negotiate_kerberos_auth_test_LDFLAGS = 
-negotiate_kerberos_auth_test_LDADD = \
+negotiate_kerberos_auth_test_SOURCES= \
+	negotiate_kerberos_auth_test.cc
+negotiate_kerberos_auth_test_LDFLAGS=
+negotiate_kerberos_auth_test_LDADD= \
 	$(top_builddir)/lib/libmiscencoding.la \
 	$(COMPAT_LIB) \
 	$(NETTLELIB) \
 	$(KRB5LIBS) \
 	$(XTRA_LIBS)
 
-man_MANS = negotiate_kerberos_auth.8
+man_MANS= negotiate_kerberos_auth.8
@@ -7,12 +7,13 @@
 
 include $(top_srcdir)/src/Common.am
 
-EXTRA_DIST = required.m4
+EXTRA_DIST= required.m4
 
-libexec_PROGRAMS = negotiate_wrapper_auth
+libexec_PROGRAMS= negotiate_wrapper_auth
 
-negotiate_wrapper_auth_SOURCES = negotiate_wrapper.cc
-negotiate_wrapper_auth_LDADD = \
+negotiate_wrapper_auth_SOURCES= \
+	negotiate_wrapper.cc
+negotiate_wrapper_auth_LDADD= \
 	$(top_builddir)/lib/libmiscencoding.la \
 	$(COMPAT_LIB) \
 	$(NETTLELIB) \
@@ -22,6 +22,7 @@
 #include "cache_cf.h"
 #include "client_side.h"
 #include "helper.h"
+#include "http/Stream.h"
 #include "HttpHeaderTools.h"
 #include "HttpReply.h"
 #include "HttpRequest.h"
@@ -8,6 +8,10 @@
 include $(top_srcdir)/src/Common.am
 include $(top_srcdir)/src/TestHeaders.am
 
+DIST_SUBDIRS= fake SMB_LM SSPI
+SUBDIRS= $(NTLM_AUTH_HELPERS)
+EXTRA_DIST= helpers.m4
+
 noinst_LTLIBRARIES = libntlm.la
 
 libntlm_la_SOURCES = \
@@ -8,8 +8,8 @@
 include $(top_srcdir)/src/Common.am
 
 libexec_PROGRAMS = ntlm_smb_lm_auth
-ntlm_smb_lm_auth_SOURCES = ntlm_smb_lm_auth.cc
 
+ntlm_smb_lm_auth_SOURCES = ntlm_smb_lm_auth.cc
 ntlm_smb_lm_auth_LDADD = \
 	$(top_builddir)/lib/smblib/libsmblib.la \
 	$(top_builddir)/lib/rfcnb/librfcnb.la \
@@ -20,6 +20,4 @@ ntlm_smb_lm_auth_LDADD = \
 	$(CRYPTLIB) \
 	$(XTRA_LIBS)
 
-AM_CPPFLAGS += -I$(top_srcdir)/lib
-
 EXTRA_DIST = required.m4
@@ -24,7 +24,7 @@
 #include "squid.h"
 #include "base64.h"
 #include "compat/debug.h"
-#include "helpers/defines.h"
+#include "helper/protocol_defines.h"
 #include "ntlmauth/ntlmauth.h"
 #include "ntlmauth/support_bits.cci"
 #include "rfcnb/rfcnb.h"
@@ -10,6 +10,6 @@
 #
 # XXX: do we really need the mingw check?
 if test "$squid_host_os" != "mingw"; then
-  BUILD_HELPER="smb_lm"
+  BUILD_HELPER="SMB_LM"
   AC_CHECK_HEADERS([w32api/windows.h windows.h],[BUILD_HELPER=""])
 fi
@@ -7,13 +7,11 @@
 
 include $(top_srcdir)/src/Common.am
 
-man_MANS = ntlm_sspi_auth.8
+man_MANS= ntlm_sspi_auth.8
+libexec_PROGRAMS= ntlm_sspi_auth
 
-libexec_PROGRAMS = ntlm_sspi_auth
-
-ntlm_sspi_auth_SOURCES = ntlm_sspi_auth.cc
-
-LDADD = \
+ntlm_sspi_auth_SOURCES= ntlm_sspi_auth.cc
+ntlm_sspi_auth_LDADD= \
 	$(top_builddir)/lib/ntlmauth/libntlmauth.la \
 	$(top_builddir)/lib/libsspwin32.la \
 	$(top_builddir)/lib/libmiscencoding.la \
@@ -22,4 +20,6 @@ LDADD = \
 	-ladvapi32 \
 	$(XTRA_LIBS)
 
-EXTRA_DIST = ntlm_sspi_auth.8 required.m4
+EXTRA_DIST= \
+	ntlm_sspi_auth.8 \
+	required.m4
@@ -73,7 +73,7 @@
 
 #include "squid.h"
 #include "base64.h"
-#include "helpers/defines.h"
+#include "helper/protocol_defines.h"
 #include "ntlmauth/ntlmauth.h"
 #include "ntlmauth/support_bits.cci"
 #include "sspwin32.h"
@@ -20,6 +20,7 @@
 #include "globals.h"
 #include "helper.h"
 #include "helper/Reply.h"
+#include "http/Stream.h"
 #include "HttpMsg.h"
 #include "HttpRequest.h"
 #include "MemBuf.h"
@@ -7,22 +7,21 @@
 
 include $(top_srcdir)/src/Common.am
 
-libexec_PROGRAMS = ntlm_fake_auth
-ntlm_fake_auth_SOURCES	= ntlm_fake_auth.cc
+libexec_PROGRAMS= ntlm_fake_auth
 
-ntlm_fake_auth_LDADD = \
+ntlm_fake_auth_SOURCES= ntlm_fake_auth.cc
+ntlm_fake_auth_LDADD= \
 	$(top_builddir)/lib/ntlmauth/libntlmauth.la \
 	$(top_builddir)/lib/libmiscencoding.la \
 	$(COMPAT_LIB) \
 	$(NETTLELIB) \
 	$(CRYPTLIB) \
 	$(XTRA_LIBS)
 
-AM_CPPFLAGS += -I$(top_srcdir)/lib
-
 ## Demo using perl.
 ## ntlm_fake_auth.pl: ntlm_fake_auth.pl.in
 ##	$(subst_perlshell)
 
-EXTRA_DIST = required.m4 \
-	ntlm_fake_auth.pl.in
+EXTRA_DIST= \
+	ntlm_fake_auth.pl.in \
+	required.m4
@@ -35,7 +35,7 @@
 
 #include "squid.h"
 #include "base64.h"
-#include "helpers/defines.h"
+#include "helper/protocol_defines.h"
 #include "ntlmauth/ntlmauth.h"
 #include "ntlmauth/support_bits.cci"
 
@@ -21,7 +21,7 @@ fi
 #define list of modules to build
 auto_auth_ntlm_modules=no
 if test "x$enable_auth_ntlm" = "xyes" ; then
-    SQUID_LOOK_FOR_MODULES([$srcdir/helpers/ntlm_auth],[enable_auth_ntlm])
+    SQUID_LOOK_FOR_MODULES([$srcdir/src/auth/ntlm],[enable_auth_ntlm])
   auto_auth_ntlm_modules=yes
 fi
 #handle the "none" special case
@@ -36,25 +36,25 @@ if test "x$enable_auth_ntlm" != "xno" ; then
     AUTH_MODULES="$AUTH_MODULES ntlm"
     AC_DEFINE([HAVE_AUTH_MODULE_NTLM],1,[NTLM auth module is built])
     for helper in $enable_auth_ntlm; do
-      dir="$srcdir/helpers/ntlm_auth/$helper"
+      dir="$srcdir/src/auth/ntlm/$helper"
 
       # modules converted to autoconf macros already
       # NP: we only need this list because m4_include() does not accept variables
       if test "x$helper" = "xfake" ; then
-        m4_include([helpers/ntlm_auth/fake/required.m4])
+        m4_include([src/auth/ntlm/fake/required.m4])
 
-      elif test "x$helper" = "xSSPI" ; then
-        m4_include([helpers/ntlm_auth/SSPI/required.m4])
+      elif test "x$helper" = "xSMB_LM" ; then
+        m4_include([src/auth/ntlm/SMB_LM/required.m4])
 
-      elif test "x$helper" = "xsmb_lm" ; then
-        m4_include([helpers/ntlm_auth/smb_lm/required.m4])
+      elif test "x$helper" = "xSSPI" ; then
+        m4_include([src/auth/ntlm/SSPI/required.m4])
 
       # modules not yet converted to autoconf macros (or third party drop-in's)
       elif test -f "$dir/config.test" && sh "$dir/config.test" "$squid_host_os"; then
         BUILD_HELPER="$helper"
       fi
 
-      if test -d "$srcdir/helpers/ntlm_auth/$helper"; then
+      if test -d "$srcdir/src/auth/ntlm/$helper"; then
         if test "$BUILD_HELPER" != "$helper"; then
           if test "x$auto_auth_ntlm_modules" = "xyes"; then
             AC_MSG_NOTICE([NTLM auth helper $helper ... found but cannot be built])
@@ -11,6 +11,7 @@
 
 #include "base/AsyncCall.h"
 #include "base/InstanceId.h"
+#include "cbdata.h"
 
 template <class Cbc>
 class CbcPointer;
@@ -27,7 +28,7 @@ class CbcPointer;
 
 /// \ingroup AsyncJobAPI
 /// Base class for all asynchronous jobs
-class AsyncJob
+class AsyncJob: public CbdataParent
 {
 public:
     typedef CbcPointer<AsyncJob> Pointer;
@@ -36,8 +37,6 @@ class AsyncJob
     AsyncJob(const char *aTypeName);
     virtual ~AsyncJob();
 
-    virtual void *toCbdata() = 0;
-
     /// starts a freshly created job (i.e., makes the job asynchronous)
     static Pointer Start(AsyncJob *job);
 
@@ -9,8 +9,8 @@
 #ifndef SQUID_LOOKUPTABLE_H_
 #define SQUID_LOOKUPTABLE_H_
 
-#include "SBuf.h"
-#include "SBufAlgos.h"
+#include "sbuf/Algorithms.h"
+#include "sbuf/SBuf.h"
 
 #include <unordered_map>
 