@@ -174,10 +174,6 @@ AC_CHECK_HEADERS(IOKit/ps/IOPowerSources.h, [], [],
 ])
 AC_CHECK_HEADERS(IOKit/ps/IOPSKeys.h)
 
-# For the `disk' plugin
-AC_CHECK_HEADERS(IOKit/IOBSD.h)
-AC_CHECK_HEADERS(IOKit/storage/IOBlockStorageDriver.h)
-
 # For load module
 AC_CHECK_HEADERS(sys/loadavg.h)
 
@@ -270,6 +266,10 @@ AC_CHECK_FUNCS(strchr memcpy strstr strcmp strncmp strncpy strlen)
 AC_CHECK_FUNCS(strncasecmp strcasecmp)
 AC_CHECK_FUNCS(openlog syslog closelog)
 
+nanosleep_needs_rt="no"
+AC_CHECK_FUNCS(nanosleep, [], AC_CHECK_LIB(rt, nanosleep, [nanosleep_needs_rt="yes"], AC_MSG_ERROR(cannot find nanosleep)))
+AM_CONDITIONAL(BUILD_WITH_LIBRT, test "x$nanosleep_needs_rt" = "xyes")
+
 # For cpu module
 AC_CHECK_FUNCS(sysctlbyname, [have_sysctlbyname="yes"], [have_sysctlbyname="no"])
 
@@ -32,6 +32,9 @@ collectd_LDFLAGS = -export-dynamic
 if BUILD_WITH_RRDTOOL
 collectd_LDFLAGS += -lm -lrrd
 endif
+if BUILD_WITH_LIBRT
+collectd_LDFLAGS += -lrt
+endif
 if BUILD_WITH_LIBSOCKET
 collectd_LDFLAGS += -lsocket
 endif
@@ -105,9 +108,6 @@ if BUILD_MODULE_DISK
 pkglib_LTLIBRARIES += disk.la
 disk_la_SOURCES = disk.c
 disk_la_LDFLAGS = -module -avoid-version
-if BUILD_WITH_LIBIOKIT
-disk_la_LDFLAGS += -lIOKit
-endif
 collectd_LDADD += "-dlopen" disk.la
 collectd_DEPENDENCIES += disk.la
 endif
@@ -256,7 +256,7 @@ static int pidfile_create (const char *file)
 		return (1);
 	}
 
-	fprintf (fh, "%d\n", getpid());
+	fprintf (fh, "%i\n", (int) getpid ());
 	fclose(fh);
 
 	return (0);
@@ -488,7 +488,7 @@ static int log_create_file (char *filename, char **ds_def, int ds_num)
 
 		/* The `%.*s' is needed because there is no null-byte behind
 		 * the name. */
-		fprintf(log, ",%.*s", (tmp - name), name);
+		fprintf(log, ",%.*s", (int) (tmp - name), name);
 	}
 	fprintf(log, "\n");
 	fclose(log);
@@ -346,7 +346,8 @@ static void hddtemp_init (void)
 
 			if ((entry = (hddname_t *) malloc (sizeof (hddname_t))) == NULL)
 			{
-				syslog (LOG_ERR, "hddtemp: malloc (%u) == NULL", sizeof (hddname_t));
+				syslog (LOG_ERR, "hddtemp: malloc (%u) == NULL",
+						(unsigned int) sizeof (hddname_t));
 				free (name);
 				continue;
 			}
@@ -27,7 +27,8 @@
 
 #define MODULE_NAME "nfs"
 
-#if defined(KERNEL_LINUX) || defined(HAVE_LIBKSTAT)
+/* #if defined(KERNEL_LINUX) || defined(HAVE_LIBKSTAT) */
+#if KERNEL_LINUX
 # define NFS_HAVE_READ 1
 #else
 # define NFS_HAVE_READ 0
@@ -133,7 +134,7 @@ static char *nfs3_procedures_ds_def[] =
 };
 static int nfs3_procedures_ds_num = 22;
 
-#ifdef HAVE_LIBKSTAT
+#if HAVE_LIBKSTAT && 0
 extern kstat_ctl_t *kc;
 static kstat_t *nfs2_ksp_client;
 static kstat_t *nfs2_ksp_server;
@@ -147,7 +148,7 @@ static kstat_t *nfs4_ksp_server;
 
 static void nfs_init (void)
 {
-#ifdef HAVE_LIBKSTAT
+#if HAVE_LIBKSTAT && 0
 	kstat_t *ksp_chain;
 
 	nfs2_ksp_client = NULL;
@@ -258,7 +259,7 @@ static void nfs3_procedures_submit (unsigned long long *val, char *inst)
 }
 #endif /* NFS_HAVE_READ */
 
-#if defined(KERNEL_LINUX)
+#if KERNEL_LINUX
 static void nfs_read_stats_file (FILE *fh, char *inst)
 {
 	char buffer[BUFSIZE];
@@ -329,7 +330,7 @@ static void nfs_read_stats_file (FILE *fh, char *inst)
 #endif /* defined(KERNEL_LINUX) */
 #undef BUFSIZE
 
-#ifdef HAVE_LIBKSTAT
+#if HAVE_LIBKSTAT && 0
 static void nfs2_read_kstat (kstat_t *ksp, char *inst)
 {
 	unsigned long long values[18];
@@ -360,7 +361,7 @@ static void nfs2_read_kstat (kstat_t *ksp, char *inst)
 #if NFS_HAVE_READ
 static void nfs_read (void)
 {
-#if defined(KERNEL_LINUX)
+#if KERNEL_LINUX
 	FILE *fh;
 
 	if ((fh = fopen ("/proc/net/rpc/nfs", "r")) != NULL)
@@ -377,7 +378,7 @@ static void nfs_read (void)
 
 /* #endif defined(KERNEL_LINUX) */
 
-#elif defined(HAVE_LIBKSTAT)
+#elif HAVE_LIBKSTAT && 0
 	if (nfs2_ksp_client != NULL)
 		nfs2_read_kstat (nfs2_ksp_client, "client");
 	if (nfs2_ksp_server != NULL)