@@ -114,7 +114,7 @@ httpHeaderPutStrvf(HttpHeader * hdr, http_hdr_type id, const char *fmt, va_list
 {
     MemBuf mb;
     mb.init();
-    mb.vPrintf(fmt, vargs);
+    mb.vappendf(fmt, vargs);
     hdr->putStr(id, mb.buf);
     mb.clean();
 }
@@ -268,15 +268,15 @@ MemBuf::Printf(const char *fmt,...)
 {
     va_list args;
     va_start(args, fmt);
-    vPrintf(fmt, args);
+    vappendf(fmt, args);
     va_end(args);
 }
 
 /**
- * vPrintf for other printf()'s to use; calls vsnprintf, extends buf if needed
+ * vappendf for other printf()'s to use; calls vsnprintf, extends buf if needed
  */
 void
-MemBuf::vPrintf(const char *fmt, va_list vargs)
+MemBuf::vappendf(const char *fmt, va_list vargs)
 {
 #ifdef VA_COPY
     va_list ap;
@@ -105,8 +105,8 @@ class MemBuf
      */
     void Printf(const char *fmt,...) PRINTF_FORMAT_ARG2;
 
-    /** vPrintf for other printf()'s to use */
-    void vPrintf(const char *fmt, va_list ap);
+    /** vappendf for other printf()'s to use */
+    void vappendf(const char *fmt, va_list ap);
 
     /**
      * freezes the object! and returns function to clear it up.
@@ -33,7 +33,7 @@ memBufAppend(MemBuf *mb, const char *buf, mb_size_t len)
 static void
 memBufVPrintf(MemBuf * mb, const char *fmt, va_list vargs)
 {
-    mb->vPrintf(fmt, vargs);
+    mb->vappendf(fmt, vargs);
 }
 
 static void
@@ -25,7 +25,7 @@ void MemBuf::clean() STUB
 void MemBuf::reset() STUB
 int MemBuf::isNull() STUB_RETVAL(1)
 void MemBuf::Printf(const char *fmt,...) STUB
-void MemBuf::vPrintf(const char *fmt, va_list ap) STUB
+void MemBuf::vappendf(const char *fmt, va_list ap) STUB
 FREE *MemBuf::freeFunc() STUB_RETVAL(NULL)
 
 void memBufReport(MemBuf * mb) STUB