@@ -1,6 +1,6 @@
 
 /*
- * $Id: cachemgr.cc,v 1.98 2002/08/27 02:08:59 robertc Exp $
+ * $Id: cachemgr.cc,v 1.99 2002/09/01 12:37:46 hno Exp $
  *
  * DEBUG: section 0     CGI Cache Manager
  * AUTHOR: Duane Wessels
@@ -237,7 +237,7 @@ auth_html(const char *host, int port, const char *user_name)
     printf("Content-Type: text/html\r\n\r\n");
     printf("<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n");
     printf("<HTML><HEAD><TITLE>Cache Manager Interface</TITLE>\n");
-    printf("<STYLE type=\"text/css\"><!--BODY{background-color:#ffffff;font-family:verdana,sans-serif}PRE{font-family:sans-serif}--></STYLE></HEAD>\n");
+    printf("<STYLE type=\"text/css\"><!--BODY{background-color:#ffffff;font-family:verdana,sans-serif}--></STYLE></HEAD>\n");
     printf("<BODY><H1>Cache Manager Interface</H1>\n");
     printf("<P>This is a WWW interface to the instrumentation interface\n");
     printf("for the Squid object cache.</P>\n");
@@ -264,7 +264,7 @@ error_html(const char *msg)
     printf("Content-Type: text/html\r\n\r\n");
     printf("<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n");
     printf("<HTML><HEAD><TITLE>Cache Manager Error</TITLE>\n");
-    printf("<STYLE type=\"text/css\"><!--BODY{background-color:#ffffff;font-family:verdana,sans-serif}PRE{font-family:sans-serif}--></STYLE></HEAD>\n");
+    printf("<STYLE type=\"text/css\"><!--BODY{background-color:#ffffff;font-family:verdana,sans-serif}--></STYLE></HEAD>\n");
     printf("<BODY><H1>Cache Manager Error</H1>\n");
     printf("<P>\n%s</P>\n", msg);
     print_trailer();
@@ -456,7 +456,7 @@ read_reply(int s, cachemgr_request * req)
 	    printf("<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n");
 	    printf("<HTML><HEAD><TITLE>CacheMgr@%s: %s</TITLE>\n",
 		req->hostname, action);
-	    printf("<STYLE type=\"text/css\"><!--BODY{background-color:#ffffff;font-family:verdana,sans-serif}PRE{font-family:sans-serif}TABLE{background-color:#333333;border:0pt;padding:0pt}TH,TD{background-color:#ffffff}--></STYLE>\n");
+	    printf("<STYLE type=\"text/css\"><!--BODY{background-color:#ffffff;font-family:verdana,sans-serif}TABLE{background-color:#333333;border:0pt;padding:0pt}TH,TD{background-color:#ffffff}--></STYLE>\n");
 	    printf("</HEAD><BODY>\n");
 	    if (parse_menu) {
 		printf("<H2><a href=\"%s\">Cache Manager</a> menu for %s:</H2>",
@@ -1,6 +1,6 @@
 
 /*
- * $Id: gopher.cc,v 1.170 2002/08/27 02:08:59 robertc Exp $
+ * $Id: gopher.cc,v 1.171 2002/09/01 12:37:46 hno Exp $
  *
  * DEBUG: section 10    Gopher
  * AUTHOR: Harvest Derived
@@ -243,7 +243,7 @@ gopherHTMLHeader(StoreEntry * e, const char *title, const char *substring)
     storeAppendPrintf(e, "<HTML><HEAD><TITLE>");
     storeAppendPrintf(e, title, substring);
     storeAppendPrintf(e, "</TITLE>");
-    storeAppendPrintf(e, "<STYLE type=\"text/css\"><!--BODY{background-color:#ffffff;font-family:verdana,sans-serif}PRE{font-family:sans-serif}--></STYLE>\n");
+    storeAppendPrintf(e, "<STYLE type=\"text/css\"><!--BODY{background-color:#ffffff;font-family:verdana,sans-serif}--></STYLE>\n");
     storeAppendPrintf(e, "</HEAD>\n<BODY><H1>");
     storeAppendPrintf(e, title, substring);
     storeAppendPrintf(e, "</H1>\n");
@@ -1,6 +1,6 @@
 
 /*
- * $Id: urn.cc,v 1.73 2002/08/27 02:08:59 robertc Exp $
+ * $Id: urn.cc,v 1.74 2002/09/01 12:37:46 hno Exp $
  *
  * DEBUG: section 52    URN Parsing
  * AUTHOR: Kostas Anagnostakis
@@ -260,7 +260,7 @@ urnHandleReply(void *data, char *unused_buf, ssize_t size)
     memBufDefInit(&mb);
     memBufPrintf(&mb,
 	"<TITLE>Select URL for %s</TITLE>\n"
-	"<STYLE type=\"text/css\"><!--BODY{background-color:#ffffff;font-family:verdana,sans-serif}PRE{font-family:sans-serif}--></STYLE>\n"
+	"<STYLE type=\"text/css\"><!--BODY{background-color:#ffffff;font-family:verdana,sans-serif}--></STYLE>\n"
 	"<H2>Select URL for %s</H2>\n"
 	"<TABLE BORDER=\"0\" WIDTH=\"100%%\">\n", storeUrl(e), storeUrl(e));
     for (i = 0; i < urlcnt; i++) {