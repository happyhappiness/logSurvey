@@ -314,6 +314,16 @@ Changes to squid-1.1.alpha2:
 
 ==============================================================================
 
+Changes to squid-1.0.17 (September 24, 1996):
+
+	- Fixed cachemgr.cgi to handle an arbitrary IP address (Ron
+	  Gomes)
+	- Fixed syslog() calls to use syslog(X, "%s", buf) (Yoichi
+	  Shinoda).
+	- Copied ipcache locking stuff from v1.1.
+	- Copied httpConnect() from v1.1 for non-blocking DNS lookups.
+	- Fixed "\r\n\0" bug in gopherSendRequest();
+
 Changes to squid-1.0.16 (September 16, 1996):
 
 	- Fixed shadow passwd support (John Saunders).
@@ -1,6 +1,6 @@
 
 /*
- * $Id: cachemgr.cc,v 1.29 1996/09/24 18:44:29 wessels Exp $
+ * $Id: cachemgr.cc,v 1.30 1996/09/24 20:16:39 wessels Exp $
  *
  * DEBUG: Section 0     CGI Cache Manager
  * AUTHOR: Harvest Derived
@@ -929,14 +929,19 @@ client_comm_connect(int sock, char *dest_host, u_short dest_port)
 {
     struct hostent *hp;
     static struct sockaddr_in to_addr;
+    unsigned long haddr;
 
     /* Set up the destination socket address for message to send to. */
+    memset(&to_addr, '\0', sizeof(struct sockaddr_in));
     to_addr.sin_family = AF_INET;
 
-    if ((hp = gethostbyname(dest_host)) == 0) {
+    if ((hp = gethostbyname(dest_host)) != NULL)
+	xmemcpy(&to_addr.sin_addr, hp->h_addr, hp->h_length);
+    else if ((haddr = inet_addr(dest_host)) != INADDR_NONE)
+	xmemcpy(&to_addr.sin_addr, &haddr, sizeof(haddr));
+    else
 	return (-1);
-    }
-    xmemcpy(&to_addr.sin_addr, hp->h_addr, hp->h_length);
+
     to_addr.sin_port = htons(dest_port);
     return connect(sock, (struct sockaddr *) &to_addr, sizeof(struct sockaddr_in));
 }
@@ -1,5 +1,5 @@
 /*
- * $Id: debug.cc,v 1.28 1996/09/20 23:26:55 wessels Exp $
+ * $Id: debug.cc,v 1.29 1996/09/24 20:16:39 wessels Exp $
  *
  * DEBUG: section 0     Debug Routines
  * AUTHOR: Harvest Derived
@@ -130,7 +130,9 @@ _db_print(va_alist)
     char *format = NULL;
 #endif
     LOCAL_ARRAY(char, f, BUFSIZ);
+#if HAVE_SYSLOG
     LOCAL_ARRAY(char, tmpbuf, BUFSIZ);
+#endif
 
     if (debug_log == NULL)
 	return;
@@ -165,7 +167,8 @@ _db_print(va_alist)
     if ((level == 0) && opt_syslog_enable) {
 	tmpbuf[0] = '\0';
 	vsprintf(tmpbuf, f, args);
-	syslog(LOG_ERR, tmpbuf);
+	tmpbuf[1023] = '\0';
+	syslog(LOG_ERR, "%s", tmpbuf);
     }
 #endif /* HAVE_SYSLOG */
 
@@ -1,5 +1,5 @@
 /*
- * $Id: ipcache.cc,v 1.64 1996/09/20 06:28:55 wessels Exp $
+ * $Id: ipcache.cc,v 1.65 1996/09/24 20:16:40 wessels Exp $
  *
  * DEBUG: section 14    IP Cache
  * AUTHOR: Harvest Derived
@@ -350,6 +350,8 @@ ipcache_purgelru(void)
 	    continue;
 	if (i->status == IP_DISPATCHED)
 	    continue;
+	if (i->locks != 0)
+	    continue;
 	local_ip_notpending_count++;
 	LRU_list[LRU_list_count++] = i;
     }
@@ -874,9 +876,10 @@ static void
 ipcacheStatPrint(ipcache_entry * i, StoreEntry * sentry)
 {
     int k;
-    storeAppendPrintf(sentry, " {%-32.32s  %c %6d %6d %d",
+    storeAppendPrintf(sentry, " {%-32.32s  %c%c %6d %6d %d",
 	i->name,
 	ipcache_status_char[i->status],
+	i->locks ? 'L' : ' ',
 	(int) (squid_curtime - i->lastref),
 	(int) (i->expires - squid_curtime),
 	i->addr_count);
@@ -1,6 +1,6 @@
 
 /*
- * $Id: tools.cc,v 1.64 1996/09/24 19:50:10 wessels Exp $
+ * $Id: tools.cc,v 1.65 1996/09/24 20:16:42 wessels Exp $
  *
  * DEBUG: section 21    Misc Functions
  * AUTHOR: Harvest Derived
@@ -305,7 +305,7 @@ fatal_common(char *message)
 {
 #if HAVE_SYSLOG
     if (opt_syslog_enable)
-	syslog(LOG_ALERT, message);
+	syslog(LOG_ALERT, "%s", message);
 #endif
     fprintf(debug_log, "FATAL: %s\n", message);
     fprintf(debug_log, "Squid Cache (Version %s): Terminated abnormally.\n",