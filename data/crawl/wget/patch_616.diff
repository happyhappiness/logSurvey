diff --git a/src/ChangeLog b/src/ChangeLog
index 09d4bc7..f54dd7f 100644
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,5 +1,9 @@
 2002-04-14  Hrvoje Niksic  <hniksic@arsdigita.com>
 
+	* utils.c (number_to_string): Handle the case when n < -INT_MAX.
+
+2002-04-14  Hrvoje Niksic  <hniksic@arsdigita.com>
+
 	* init.c (comind): Use a marginally faster implementation of
 	binary search.  To quote Martin Buchholz, "a nanosecond saved is a
 	nanosecond earned."
diff --git a/src/utils.c b/src/utils.c
index 3351449..a84237e 100644
--- a/src/utils.c
+++ b/src/utils.c
@@ -1347,6 +1347,12 @@ numdigit (long number)
   return cnt;
 }
 
+/* A half-assed implementation of INT_MAX on machines that don't
+   bother to define one. */
+#ifndef INT_MAX
+# define INT_MAX ((int) ~((unsigned)1 << 8 * sizeof (int) - 1))
+#endif
+
 #define ONE_DIGIT(figure) *p++ = n / (figure) + '0'
 #define ONE_DIGIT_ADVANCE(figure) (ONE_DIGIT (figure), n %= (figure))
 
@@ -1406,6 +1412,15 @@ number_to_string (char *buffer, long number)
 
   if (n < 0)
     {
+      if (n < -INT_MAX)
+	{
+	  /* We cannot print a '-' and assign -n to n because -n would
+	     overflow.  Let sprintf deal with this border case.  */
+	  sprintf (buffer, "%ld", n);
+	  p += strlen (buffer);
+	  return p;
+	}
+
       *p++ = '-';
       n = -n;
     }
-- 
cgit v1.0-41-gc330

