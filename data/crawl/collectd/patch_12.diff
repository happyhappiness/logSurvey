----++++configure.ac
@@ -4367,20 +4367,21 @@ fi
 # --with-libjevents {{{
 with_libjevents_cppflags=&quot;&quot;
 with_libjevents_ldflags=&quot;&quot;
-AC_ARG_WITH(libjevents, [AS_HELP_STRING([--with-libjevents@&lt;:@=PREFIX@:&gt;@], [Path to libjevents.])],
-[
-  if test &quot;x$withval&quot; != &quot;xno&quot; &amp;&amp; test &quot;x$withval&quot; != &quot;xyes&quot;
-  then
-    with_libjevents_cppflags=&quot;-I$withval/include&quot;
-    with_libjevents_ldflags=&quot;-L$withval/lib&quot;
-    with_libjevents=&quot;yes&quot;
-  else
-    with_libjevents=&quot;$withval&quot;
-  fi
-],
-[
-  with_libjevents=&quot;yes&quot;
-])
+AC_ARG_WITH([libjevents],
+  [AS_HELP_STRING([--with-libjevents@&lt;:@=PREFIX@:&gt;@], [Path to libjevents.])],
+  [
+    if test &quot;x$withval&quot; != &quot;xno&quot; &amp;&amp; test &quot;x$withval&quot; != &quot;xyes&quot;
+    then
+      with_libjevents_cppflags=&quot;-I$withval/include&quot;
+      with_libjevents_ldflags=&quot;-L$withval/lib&quot;
+      with_libjevents=&quot;yes&quot;
+    else
+      with_libjevents=&quot;$withval&quot;
+    fi
+  ],
+  [with_libjevents=&quot;yes&quot;]
+)
+
 if test &quot;x$with_libjevents&quot; = &quot;xyes&quot;
 then
   SAVE_CPPFLAGS=&quot;$CPPFLAGS&quot;
@@ -4392,47 +4393,22 @@ then
 fi
 if test &quot;x$with_libjevents&quot; = &quot;xyes&quot;
 then
-  SAVE_CPPFLAGS=&quot;$CPPFLAGS&quot;
   SAVE_LDFLAGS=&quot;$LDFLAGS&quot;
-  CPPFLAGS=&quot;$CPPFLAGS $with_libjevents_cppflags&quot;
   LDFLAGS=&quot;$LDFLAGS $with_libjevents_ldflags&quot;
 
   AC_CHECK_LIB(jevents, json_events, [with_libjevents=&quot;yes&quot;], [with_libjevents=&quot;no (Can&#39;t find libjevents)&quot;])
 
-  CPPFLAGS=&quot;$SAVE_CPPFLAGS&quot;
-  LDFLAGS=&quot;$SAVE_LDFLAGS&quot;
-fi
-if test &quot;x$with_libjevents&quot; = &quot;xyes&quot;
-then
-  SAVE_CPPFLAGS=&quot;$CPPFLAGS&quot;
-  SAVE_LDFLAGS=&quot;$LDFLAGS&quot;
-  SAVE_LIBS=&quot;$LIBS&quot;
-  CPPFLAGS=&quot;$CPPFLAGS -fPIC&quot;
-  LDFLAGS=&quot;$LDFLAGS -shared&quot;
-  LIBS=&quot;-ljevents&quot;
-  AC_LINK_IFELSE([AC_LANG_SOURCE(
-    [[
-      #include &lt;stdio.h&gt;
-      #include &quot;jevents.h&quot;
-      void print_cpu(void){
-        printf(&quot;%s&quot;, get_cpu_str());
-      }
-    ]]
-  )],
-  [with_libjevents=&quot;yes&quot;], [with_libjevents=&quot;no (could not link to libjevents. Check jevents is compiled with -fPIC.)&quot;])
-  CPPFLAGS=&quot;$SAVE_CPPFLAGS&quot;
   LDFLAGS=&quot;$SAVE_LDFLAGS&quot;
-  LIBS=&quot;$SAVE_LIBS&quot;
 fi
 if test &quot;x$with_libjevents&quot; = &quot;xyes&quot;
 then
   BUILD_WITH_LIBJEVENTS_CPPFLAGS=&quot;$with_libjevents_cppflags&quot;
   BUILD_WITH_LIBJEVENTS_LDFLAGS=&quot;$with_libjevents_ldflags&quot;
   BUILD_WITH_LIBJEVENTS_LIBS=&quot;-ljevents&quot;
-  AC_SUBST(BUILD_WITH_LIBJEVENTS_CPPFLAGS)
-  AC_SUBST(BUILD_WITH_LIBJEVENTS_LDFLAGS)
-  AC_SUBST(BUILD_WITH_LIBJEVENTS_LIBS)
 fi
+AC_SUBST(BUILD_WITH_LIBJEVENTS_CPPFLAGS)
+AC_SUBST(BUILD_WITH_LIBJEVENTS_LDFLAGS)
+AC_SUBST(BUILD_WITH_LIBJEVENTS_LIBS)
 # }}}
 
 # --with-libprotobuf {{{
----++++contrib/systemd.collectd.service
@@ -11,20 +11,6 @@ EnvironmentFile=-/etc/default/collectd
 ProtectSystem=full
 ProtectHome=true
 
-# Some plugins require access to data located in a specified folder, to access
-# this data you&#39;ll have to specify the path by using the Environment directive
-# below.
-#
-# Here&#39;s a (incomplete) list of the plugins known environment requirements:
-#   intel_pmu       XDG_CACHE_HOME
-#
-# Example, if you use the intel_pmu plugin and cache is located in the /opt
-# directory:
-# Environment=XDG_CACHE_HOME=/opt
-#
-# By default, the HOME directory is chosen:
-Environment=
-
 # A few plugins won&#39;t work without some privileges, which you&#39;ll have to
 # specify using the CapabilityBoundingSet directive below.
 #
----++++src/collectd.conf.in
@@ -651,6 +651,7 @@
 #    ReportHardwareCacheEvents true
 #    ReportKernelPMUEvents true
 #    ReportSoftwareEvents true
+#    EventList &quot;/var/cache/pmu/GenuineIntel-6-2D-core.json&quot;
 #    HardwareEvents &quot;L2_RQSTS.CODE_RD_HIT,L2_RQSTS.CODE_RD_MISS&quot; &quot;L2_RQSTS.ALL_CODE_RD&quot;
 #&lt;/Plugin&gt;
 
----++++src/collectd.conf.pod
@@ -3093,6 +3093,7 @@ B&lt;Synopsis:&gt;
     ReportHardwareCacheEvents true
     ReportKernelPMUEvents true
     ReportSoftwareEvents true
+    EventList &quot;/var/cache/pmu/GenuineIntel-6-2D-core.json&quot;
     HardwareEvents &quot;L2_RQSTS.CODE_RD_HIT,L2_RQSTS.CODE_RD_MISS&quot; &quot;L2_RQSTS.ALL_CODE_RD&quot;
   &lt;/Plugin&gt;
 
@@ -3154,11 +3155,16 @@ Enable or disable measuring of software events provided by kernel:
   - alignment-faults
   - emulation-faults
 
+=item B&lt;EventList&gt; I&lt;filename&gt;
+
+JSON performance counter event list file name. To be able to monitor all Intel
+CPU specific events JSON event list file should be downloaded. Use the pmu-tools
+event_download.py script to download event list for current CPU.
+
 =item B&lt;HardwareEvents&gt; I&lt;events&gt;
 
 This field is a list of event names or groups of comma separated event names.
-To be able to monitor all Intel CPU specific events JSON event list file should
-be downloaded. Use the pmu-tools event_download.py script for this.
+This option requires B&lt;EventList&gt; option to be configured.
 
 =back
 
----++++src/intel_pmu.c
@@ -67,6 +67,7 @@ struct intel_pmu_ctx_s {
   _Bool hw_cache_events;
   _Bool kernel_pmu_events;
   _Bool sw_events;
+  char  event_list_fn[PATH_MAX];
   char **hw_events;
   size_t hw_events_count;
   struct eventlist *event_list;
@@ -243,6 +244,9 @@ static int pmu_config(oconfig_item_t *ci) {
       ret = cf_util_get_boolean(child, &amp;g_ctx.hw_cache_events);
     } else if (strcasecmp(&quot;ReportKernelPMUEvents&quot;, child-&gt;key) == 0) {
       ret = cf_util_get_boolean(child, &amp;g_ctx.kernel_pmu_events);
+    } else if (strcasecmp(&quot;EventList&quot;, child-&gt;key) == 0) {
+      ret = cf_util_get_string_buffer(child, g_ctx.event_list_fn,
+                                      sizeof(g_ctx.event_list_fn));
     } else if (strcasecmp(&quot;HardwareEvents&quot;, child-&gt;key) == 0) {
       ret = pmu_config_hw_events(child);
     } else if (strcasecmp(&quot;ReportSoftwareEvents&quot;, child-&gt;key) == 0) {
@@ -493,6 +497,14 @@ static int pmu_init(void) {
 
   /* parse events names if config option is present and is not empty */
   if (g_ctx.hw_events_count) {
+
+    ret = read_events(g_ctx.event_list_fn);
+    if (ret != 0) {
+      ERROR(PMU_PLUGIN &quot;: Failed to read event list file &#39;%s&#39;.&quot;,
+            g_ctx.event_list_fn);
+      return ret;
+    }
+
     ret = pmu_add_hw_events(g_ctx.event_list, g_ctx.hw_events,
                             g_ctx.hw_events_count);
     if (ret != 0) {
----++++GitHub