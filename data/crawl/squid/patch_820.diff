@@ -4,12 +4,7 @@
 #include "config.h"
 
 SQUIDCEXTERN void fatal(const char *message);
-#if STDC_HEADERS
-SQUIDCEXTERN void
-fatalf(const char *fmt,...) PRINTF_FORMAT_ARG1;
-#else
-SQUIDCEXTERN void fatalf();
-#endif
+SQUIDCEXTERN void fatalf(const char *fmt,...) PRINTF_FORMAT_ARG1;
 SQUIDCEXTERN void fatal_dump(const char *message);
 
 #endif
@@ -6,10 +6,6 @@
 
 #include "config.h"
 
-#if STDC_HEADERS
 SQUIDCEXTERN void snmplib_debug(int, const char *,...) PRINTF_FORMAT_ARG2;
-#else
-SQUIDCEXTERN void snmplib_debug(va_alist);
-#endif
 
 #endif /* SQUID_SNMP_DEBUG_H */
@@ -5,38 +5,19 @@
 #if HAVE_SYS_TYPES_H
 #include <sys/types.h>
 #endif
-#if STDC_HEADERS
 #include <stdarg.h>
-#else
-#include <varargs.h>
-#endif
 
 #include "snmp_debug.h"
 
-#if STDC_HEADERS
 void (*snmplib_debug_hook) (int, char *,...) = NULL;
-#else
-void (*snmplib_debug_hook) (va_alist) = NULL;
-#endif
 
 extern void
-#if STDC_HEADERS
-    snmplib_debug(int lvl, const char *fmt,...)
+snmplib_debug(int lvl, const char *fmt,...)
 {
     char buf[BUFSIZ];
     va_list args;
     va_start(args, fmt);
-#else
-    snmplib_debug(va_alist)
-    va_dcl {
-    va_list args;
-    int lvl;
-    char char *fmt;
-    char buf[BUFSIZ];
-    va_start(args);
-    lvl = va_arg(args, int);
-    fmt = va_arg(args, char *);
-#endif
+
     if (snmplib_debug_hook != NULL) {
         vsnprintf(buf, BUFSIZ, fmt, args);
         snmplib_debug_hook(lvl, buf);
@@ -103,27 +103,10 @@ httpHeaderCalcMask(HttpHeaderMask * mask, http_hdr_type http_hdr_type_enums[], s
 
 /* same as httpHeaderPutStr, but formats the string using snprintf first */
 void
-#if STDC_HEADERS
 httpHeaderPutStrf(HttpHeader * hdr, http_hdr_type id, const char *fmt,...)
-#else
-httpHeaderPutStrf(va_alist)
-va_dcl
-#endif
 {
-#if STDC_HEADERS
     va_list args;
     va_start(args, fmt);
-#else
-
-    va_list args;
-    HttpHeader *hdr = NULL;
-    http_hdr_type id = HDR_ENUM_END;
-    const char *fmt = NULL;
-    va_start(args);
-    hdr = va_arg(args, HttpHeader *);
-    id = va_arg(args, http_hdr_type);
-    fmt = va_arg(args, char *);
-#endif
 
     httpHeaderPutStrvf(hdr, id, fmt, args);
     va_end(args);
@@ -273,22 +273,11 @@ void MemBuf::terminate()
 }
 
 /* calls memBufVPrintf */
-#if STDC_HEADERS
 void
 MemBuf::Printf(const char *fmt,...)
 {
     va_list args;
     va_start(args, fmt);
-#else
-void
-MemBuf::Printf(va_alist)
-va_dcl {
-    va_list args;
-    mb_size_t sz = 0;
-    va_start(args);
-    const char *fmt = va_arg(args, char *);
-#endif
-
     vPrintf(fmt, args);
     va_end(args);
 }
@@ -105,23 +105,12 @@ class MemBuf
     /** unfirtunate hack to test if the buffer has been Init()ialized */
     int isNull();
 
-#if STDC_HEADERS
-
     /**
      * calls snprintf, extends buffer if needed
      \note  we use Printf instead of printf so the compiler won't
      *      think we're calling the libc printf()
      */
     void Printf(const char *fmt,...) PRINTF_FORMAT_ARG2;
-#else
-
-    /**
-     * calls snprintf, extends buffer if needed
-     \note  we use Printf instead of printf so the compiler won't
-     *      think we're calling the libc printf()
-     */
-    void Printf();
-#endif
 
     /** vPrintf for other printf()'s to use */
     void vPrintf(const char *fmt, va_list ap);
@@ -167,24 +167,11 @@ packerAppend(Packer * p, const char *buf, int sz)
     p->append(p->real_handler, buf, sz);
 }
 
-#if STDC_HEADERS
 void
 packerPrintf(Packer * p, const char *fmt,...)
 {
     va_list args;
     va_start(args, fmt);
-#else
-void
-packerPrintf(va_alist)
-va_dcl {
-    va_list args;
-    Packer *p = NULL;
-    const char *fmt = NULL;
-    int sz = 0;
-    va_start(args);
-    p = va_arg(args, Packer *);
-    fmt = va_arg(args, char *);
-#endif
 
     assert(p);
     assert(p->real_handler && p->packer_vprintf);
@@ -46,11 +46,7 @@ typedef void (*ObjPackMethod) (void *obj, Packer * p);
 #endif
 /* append/vprintf's for Packer */
 typedef void (*append_f) (void *, const char *buf, int size);
-#if STDC_HEADERS
 typedef void (*vprintf_f) (void *, const char *fmt, va_list args);
-#else
-typedef void (*vprintf_f) ();
-#endif
 
 
 class Packer
@@ -65,11 +61,7 @@ class Packer
 
 SQUIDCEXTERN void packerClean(Packer * p);
 SQUIDCEXTERN void packerAppend(Packer * p, const char *buf, int size);
-#if STDC_HEADERS
 SQUIDCEXTERN void
 packerPrintf(Packer * p, const char *fmt,...) PRINTF_FORMAT_ARG2;
-#else
-SQUIDCEXTERN void packerPrintf();
-#endif
 
 #endif /* SQUID_PACKER_H */
@@ -351,13 +351,8 @@ SQUIDCEXTERN void storeFreeMemory(void);
 /// \ingroup StoreAPI
 SQUIDCEXTERN int expiresMoreThan(time_t, time_t);
 
-#if STDC_HEADERS
 /// \ingroup StoreAPI
 SQUIDCEXTERN void storeAppendPrintf(StoreEntry *, const char *,...) PRINTF_FORMAT_ARG2;
-#else
-/// \ingroup StoreAPI
-SQUIDCEXTERN void storeAppendPrintf();
-#endif
 
 /// \ingroup StoreAPI
 SQUIDCEXTERN void storeAppendVPrintf(StoreEntry *, const char *, va_list ap);
@@ -57,29 +57,16 @@ static void _db_print_file(const char *format, va_list args);
 #ifdef _SQUID_MSWIN_
 SQUIDCEXTERN LPCRITICAL_SECTION dbg_mutex;
 typedef BOOL (WINAPI * PFInitializeCriticalSectionAndSpinCount) (LPCRITICAL_SECTION, DWORD);
-
 #endif
 
 void
-#if STDC_HEADERS
 _db_print(const char *format,...)
 {
-#else
-_db_print(va_alist)
-va_dcl {
-    const char *format = NULL;
-#endif
-
     LOCAL_ARRAY(char, f, BUFSIZ);
     va_list args1;
-#if STDC_HEADERS
-
     va_list args2;
     va_list args3;
-#else
-#define args2 args1
-#define args3 args1
-#endif
+
 #ifdef _SQUID_MSWIN_
     /* Multiple WIN32 threads may call this simultaneously */
 
@@ -112,53 +99,33 @@ va_dcl {
 
     EnterCriticalSection(dbg_mutex);
 #endif
-    /* give a chance to context-based debugging to print current context */
 
+    /* give a chance to context-based debugging to print current context */
     if (!Ctx_Lock)
         ctx_print();
 
-#if STDC_HEADERS
-
     va_start(args1, format);
-
     va_start(args2, format);
-
     va_start(args3, format);
 
-#else
-
-    format = va_arg(args1, const char *);
-
-#endif
-
     snprintf(f, BUFSIZ, "%s| %s",
              debugLogTime(),
              format);
 
     _db_print_file(f, args1);
-
     _db_print_stderr(f, args2);
 
 #if HAVE_SYSLOG
-
     _db_print_syslog(format, args3);
-
 #endif
-#ifdef _SQUID_MSWIN_
 
+#ifdef _SQUID_MSWIN_
     LeaveCriticalSection(dbg_mutex);
-
 #endif
 
     va_end(args1);
-
-#if STDC_HEADERS
-
     va_end(args2);
-
     va_end(args3);
-
-#endif
 }
 
 static void
@@ -257,27 +257,13 @@ logfileWrite(Logfile * lf, void *buf, size_t len)
 }
 
 void
-#if STDC_HEADERS
 logfilePrintf(Logfile * lf, const char *fmt,...)
-#else
-logfilePrintf(va_alist)
-va_dcl
-#endif
 {
     va_list args;
     char buf[8192];
     int s;
-#if STDC_HEADERS
 
     va_start(args, fmt);
-#else
-
-    Logfile *lf;
-    const char *fmt;
-    va_start(args);
-    lf = va_arg(args, Logfile *);
-    fmt = va_arg(args, char *);
-#endif
 
     s = vsnprintf(buf, 8192, fmt, args);
 
@@ -101,11 +101,7 @@ SQUIDCEXTERN void _db_set_syslog(const char *facility);
 SQUIDCEXTERN void _db_init(const char *logfile, const char *options);
 SQUIDCEXTERN void _db_rotate_log(void);
 
-#if STDC_HEADERS
 SQUIDCEXTERN void _db_print(const char *,...) PRINTF_FORMAT_ARG1;
-#else
-SQUIDCEXTERN void _db_print();
-#endif
 
 /* packs, then prints an object using debug() */
 SQUIDCEXTERN void debugObj(int section, int level, const char *label, void *obj, ObjPackMethod pm);
@@ -270,12 +266,8 @@ SQUIDCEXTERN int strListGetItem(const String * str, char del, const char **item,
 SQUIDCEXTERN const char *getStringPrefix(const char *str, const char *end);
 SQUIDCEXTERN int httpHeaderParseInt(const char *start, int *val);
 SQUIDCEXTERN int httpHeaderParseOffset(const char *start, int64_t * off);
-#if STDC_HEADERS
 SQUIDCEXTERN void
 httpHeaderPutStrf(HttpHeader * hdr, http_hdr_type id, const char *fmt,...) PRINTF_FORMAT_ARG3;
-#else
-SQUIDCEXTERN void httpHeaderPutStrf();
-#endif
 
 
 /* Http Header */
@@ -566,12 +558,7 @@ SQUIDCEXTERN const char *uniqueHostname(void);
 SQUIDCEXTERN void safeunlink(const char *path, int quiet);
 SQUIDCEXTERN void death(int sig);
 SQUIDCEXTERN void fatal(const char *message);
-#if STDC_HEADERS
-SQUIDCEXTERN void
-fatalf(const char *fmt,...) PRINTF_FORMAT_ARG1;
-#else
-SQUIDCEXTERN void fatalf();
-#endif
+SQUIDCEXTERN void fatalf(const char *fmt,...) PRINTF_FORMAT_ARG1;
 SQUIDCEXTERN void fatal_dump(const char *message);
 SQUIDCEXTERN void sigusr2_handle(int sig);
 SQUIDCEXTERN void sig_child(int sig);
@@ -720,12 +707,7 @@ SQUIDCEXTERN void logfileClose(Logfile * lf);
 SQUIDCEXTERN void logfileRotate(Logfile * lf);
 SQUIDCEXTERN void logfileWrite(Logfile * lf, void *buf, size_t len);
 SQUIDCEXTERN void logfileFlush(Logfile * lf);
-#if STDC_HEADERS
-SQUIDCEXTERN void
-logfilePrintf(Logfile * lf, const char *fmt,...) PRINTF_FORMAT_ARG2;
-#else
-SQUIDCEXTERN void logfilePrintf(va_alist);
-#endif
+SQUIDCEXTERN void logfilePrintf(Logfile * lf, const char *fmt,...) PRINTF_FORMAT_ARG2;
 
 /*
  * prototypes for system functions missing from system includes
@@ -58,13 +58,8 @@ struct _mib_tree_entry {
 mib_tree_entry *mib_tree_head;
 mib_tree_entry *mib_tree_last;
 
-#if STDC_HEADERS
 static mib_tree_entry *snmpAddNode(oid * name, int len, oid_ParseFn * parsefunction, instance_Fn * instancefunction, int children,...);
 static oid *snmpCreateOid(int length,...);
-#else
-static mib_tree_entry *snmpAddNode();
-static oid *snmpCreateOid();
-#endif
 SQUIDCEXTERN void (*snmplib_debug_hook) (int, char *);
 static oid *static_Inst(oid * name, snint * len, mib_tree_entry * current, oid_ParseFn ** Fn);
 static oid *time_Inst(oid * name, snint * len, mib_tree_entry * current, oid_ParseFn ** Fn);
@@ -984,33 +979,12 @@ snmpTreeEntry(oid entry, snint len, mib_tree_entry * current)
  * Adds a node to the MIB tree structure and adds the appropriate children
  */
 static mib_tree_entry *
-#if STDC_HEADERS
 snmpAddNode(oid * name, int len, oid_ParseFn * parsefunction, instance_Fn * instancefunction, int children,...)
-#else
-snmpAddNode(va_alist)
-va_dcl
-#endif
 {
-#if STDC_HEADERS
     va_list args;
     int loop;
     mib_tree_entry *entry = NULL;
     va_start(args, children);
-#else
-
-    va_list args;
-    oid *name = NULL;
-    int len = 0, children = 0, loop;
-    oid_ParseFn *parsefunction = NULL;
-    instance_Fn *instancefunction = NULL;
-    mib_tree_entry *entry = NULL;
-    va_start(args);
-    name = va_arg(args, oid *);
-    len = va_arg(args, int);
-    parsefunction = va_arg(args, oid_ParseFn *);
-    instancefunction = va_arg(args, instance_Fn *);
-    children = va_arg(args, int);
-#endif
 
     debugs(49, 6, "snmpAddNode: Children : " << children << ", Oid : ");
     snmpDebugOid(6, name, len);
@@ -1040,26 +1014,12 @@ va_dcl
  * Returns the list of parameters in an oid
  */
 static oid *
-#if STDC_HEADERS
 snmpCreateOid(int length,...)
-#else
-snmpCreateOid(va_alist)
-va_dcl
-#endif
 {
-#if STDC_HEADERS
     va_list args;
     oid *new_oid;
     int loop;
     va_start(args, length);
-#else
-
-    va_list args;
-    int length = 0, loop;
-    oid *new_oid;
-    va_start(args);
-    length va_arg(args, int);
-#endif
 
     new_oid = (oid *)xmalloc(sizeof(oid) * length);
 
@@ -851,25 +851,10 @@ StoreEntry::append(char const *buf, int len)
 
 
 void
-#if STDC_HEADERS
 storeAppendPrintf(StoreEntry * e, const char *fmt,...)
-#else
-storeAppendPrintf(va_alist)
-va_dcl
-#endif
 {
-#if STDC_HEADERS
     va_list args;
     va_start(args, fmt);
-#else
-
-    va_list args;
-    StoreEntry *e = NULL;
-    const char *fmt = NULL;
-    va_start(args);
-    e = va_arg(args, StoreEntry *);
-    fmt = va_arg(args, char *);
-#endif
 
     storeAppendVPrintf(e, fmt, args);
     va_end(args);
@@ -38,18 +38,13 @@
 StorePointer Store::CurrentRoot = NULL;
 
 extern "C" void
-#if STDC_HEADERS
-    storeAppendPrintf(StoreEntry * e, const char *fmt,...)
-#else
-    storeAppendPrintf(va_alist)
-    va_dcl
-#endif
+storeAppendPrintf(StoreEntry * e, const char *fmt,...)
 {
     fatal("Not implemented");
 }
 
 extern "C" void
-    storeAppendVPrintf(StoreEntry * e, const char *fmt, va_list vargs)
+storeAppendVPrintf(StoreEntry * e, const char *fmt, va_list vargs)
 {
     fatal("Not implemented");
 }
@@ -493,22 +493,11 @@ fatal(const char *message)
 }
 
 /* printf-style interface for fatal */
-#if STDC_HEADERS
 void
 fatalf(const char *fmt,...)
 {
     va_list args;
     va_start(args, fmt);
-#else
-void
-fatalf(va_alist)
-va_dcl {
-    va_list args;
-    const char *fmt = NULL;
-    va_start(args);
-    fmt = va_arg(args, char *);
-#endif
-
     fatalvf(fmt, args);
     va_end(args);
 }
@@ -31,55 +31,26 @@ static void
 _db_print_stderr(const char *format, va_list args);
 
 void
-#if STDC_HEADERS
 _db_print(const char *format,...)
 {
-#else
-_db_print(va_alist)
-va_dcl {
-    const char *format = NULL;
-#endif
-
     LOCAL_ARRAY(char, f, BUFSIZ);
     va_list args1;
-#if STDC_HEADERS
-
     va_list args2;
     va_list args3;
-#else
-#define args2 args1
-#define args3 args1
-#endif
-
-#if STDC_HEADERS
 
     va_start(args1, format);
-
     va_start(args2, format);
-
     va_start(args3, format);
 
-#else
-
-    format = va_arg(args1, const char *);
-
-#endif
-
     snprintf(f, BUFSIZ, "%s| %s",
              "stub time", //debugLogTime(squid_curtime),
              format);
 
     _db_print_stderr(f, args2);
 
     va_end(args1);
-
-#if STDC_HEADERS
-
     va_end(args2);
-
     va_end(args3);
-
-#endif
 }
 
 static void
@@ -114,21 +85,10 @@ fatalvf(const char *fmt, va_list args) {
 }
 
 /* printf-style interface for fatal */
-#if STDC_HEADERS
 void
 fatalf(const char *fmt,...) {
     va_list args;
     va_start(args, fmt);
-#else
-void
-fatalf(va_alist)
-va_dcl {
-    va_list args;
-    const char *fmt = NULL;
-    va_start(args);
-    fmt = va_arg(args, char *);
-#endif
-
     fatalvf(fmt, args);
     va_end(args);
 }