@@ -4,8 +4,7 @@ BEGIN {
 	print " * DO NOT EDIT"
 	print "*/"
 	print "struct { char *name; char *enable; int defined;} defines[] = {"
-	define["DELAY_POOLS"]="--enable-delaypools"
-	define["HEAP_REPLACEMENT"]="--enable-heap-replacement"
+	define["DELAY_POOLS"]="--enable-delay-pools"
 	define["HTTP_VIOLATIONS"]="--enable-http-violations"
 	define["SQUID_SNMP"]="--enable-snmp"
 	define["USE_CACHE_DIGESTS"]="--enable-cache-digests"
@@ -1,6 +1,6 @@
 
 /*
- * $Id: store_dir_aufs.cc,v 1.32 2001/03/03 10:39:37 hno Exp $
+ * $Id: store_dir_aufs.cc,v 1.33 2001/03/14 22:28:37 wessels Exp $
  *
  * DEBUG: section 47    Store Directory Routines
  * AUTHOR: Duane Wessels
@@ -1480,15 +1480,6 @@ storeAufsDirStats(SwapDir * SD, StoreEntry * sentry)
     if (SD->flags.read_only)
 	storeAppendPrintf(sentry, " READ-ONLY");
     storeAppendPrintf(sentry, "\n");
-#if OLD_UNUSED_CODE
-#if !HEAP_REPLACEMENT
-    storeAppendPrintf(sentry, "LRU Expiration Age: %6.2f days\n",
-	(double) storeAufsDirExpiredReferenceAge(SD) / 86400.0);
-#else
-    storeAppendPrintf(sentry, "Storage Replacement Threshold:\t%f\n",
-	heap_peepminkey(sd.repl.heap.heap));
-#endif
-#endif /* OLD_UNUSED_CODE */
 }
 
 static struct cache_dir_option options[] =
@@ -1,6 +1,6 @@
 
 /*
- * $Id: store_dir_diskd.cc,v 1.46 2001/03/04 01:12:13 wessels Exp $
+ * $Id: store_dir_diskd.cc,v 1.47 2001/03/14 22:28:40 wessels Exp $
  *
  * DEBUG: section 47    Store Directory Routines
  * AUTHOR: Duane Wessels
@@ -1700,15 +1700,6 @@ storeDiskdDirStats(SwapDir * SD, StoreEntry * sentry)
     if (SD->flags.read_only)
 	storeAppendPrintf(sentry, " READ-ONLY");
     storeAppendPrintf(sentry, "\n");
-#if OLD_UNUSED_CODE
-#if !HEAP_REPLACEMENT
-    storeAppendPrintf(sentry, "LRU Expiration Age: %6.2f days\n",
-	(double) storeDiskdDirExpiredReferenceAge(SD) / 86400.0);
-#else
-    storeAppendPrintf(sentry, "Storage Replacement Threshold:\t%f\n",
-	heap_peepminkey(sd.repl.heap.heap));
-#endif
-#endif /* OLD_UNUSED_CODE */
     storeAppendPrintf(sentry, "Pending operations: %d\n", diskdinfo->away);
 }
 
@@ -1,6 +1,6 @@
 
 /*
- * $Id: store_dir_ufs.cc,v 1.32 2001/03/04 01:12:16 wessels Exp $
+ * $Id: store_dir_ufs.cc,v 1.33 2001/03/14 22:28:41 wessels Exp $
  *
  * DEBUG: section 47    Store Directory Routines
  * AUTHOR: Duane Wessels
@@ -1354,14 +1354,6 @@ storeUfsDirMaintain(SwapDir * SD)
 int
 storeUfsDirCheckObj(SwapDir * SD, const StoreEntry * e)
 {
-#if OLD_UNUSED_CODE
-    if (storeUfsDirExpiredReferenceAge(SD) < 300) {
-	debug(20, 3) ("storeUfsDirCheckObj: NO: LRU Age = %d\n",
-	    storeUfsDirExpiredReferenceAge(SD));
-	/* store_check_cachable_hist.no.lru_age_too_low++; */
-	return -1;
-    }
-#endif
     /* Return 999 (99.9%) constant load */
     return 999;
 }
@@ -1478,15 +1470,6 @@ storeUfsDirStats(SwapDir * SD, StoreEntry * sentry)
     if (SD->flags.read_only)
 	storeAppendPrintf(sentry, " READ-ONLY");
     storeAppendPrintf(sentry, "\n");
-#if OLD_UNUSED_CODE
-#if !HEAP_REPLACEMENT
-    storeAppendPrintf(sentry, "LRU Expiration Age: %6.2f days\n",
-	(double) storeUfsDirExpiredReferenceAge(SD) / 86400.0);
-#else
-    storeAppendPrintf(sentry, "Storage Replacement Threshold:\t%f\n",
-	heap_peepminkey(sd.repl.heap.heap));
-#endif
-#endif /* OLD_UNUSED_CODE */
 }
 
 static struct cache_dir_option options[] =
@@ -1,6 +1,6 @@
 
 /*
- * $Id: store_repl_heap.cc,v 1.6 2001/03/03 10:39:39 hno Exp $
+ * $Id: store_repl_heap.cc,v 1.7 2001/03/14 22:28:44 wessels Exp $
  *
  * DEBUG: section ?     HEAP based removal policies
  * AUTHOR: Henrik Nordstrom
@@ -233,11 +233,6 @@ heap_purgeInit(RemovalPolicy * policy, int max_scan)
     walker->max_scan = max_scan;
     walker->Next = heap_purgeNext;
     walker->Done = heap_purgeDone;
-#if HEAP_REPLACEMENT_DEBUG
-    if (!verify_heap_property(heap->heap)) {
-	debug(81, 1) ("Heap property violated!\n");
-    }
-#endif
     return walker;
 }
 