url,date,title,changes,file_name,reason_for_consistence,is_trivial,old_hunk_file,new_hunk_file,old_loc,new_loc,old_log,new_log,edit_types,edit_words,edit_feature,cluster
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,283,,"printf("" ("");","[""addLog""]","[[], [""printf""]]",[7237409554864562455],961
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,293,,"printf("")"");","[""addLog""]","[[], [""printf""]]",[7237409554864562455],961
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,408,,"printf("" ("");","[""addLog""]","[[], [""printf""]]",[7237409554864562455],961
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,415,,"printf("", "");","[""addLog""]","[[], [""printf""]]",[7237409554864562455],961
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,421,,"printf("", "");","[""addLog""]","[[], [""printf""]]",[7237409554864562455],961
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,431,,"printf("", "");","[""addLog""]","[[], [""printf""]]",[7237409554864562455],961
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,437,,"printf("", "");","[""addLog""]","[[], [""printf""]]",[7237409554864562455],961
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,443,,"printf("", "");","[""addLog""]","[[], [""printf""]]",[7237409554864562455],961
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,451,,"printf("", "");","[""addLog""]","[[], [""printf""]]",[7237409554864562455],961
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,457,,"printf("", "");","[""addLog""]","[[], [""printf""]]",[7237409554864562455],961
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,466,,"printf("", "");","[""addLog""]","[[], [""printf""]]",[7237409554864562455],961
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,472,,"printf("", "");","[""addLog""]","[[], [""printf""]]",[7237409554864562455],961
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,478,,"printf("", "");","[""addLog""]","[[], [""printf""]]",[7237409554864562455],961
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,487,,"printf("", "");","[""addLog""]","[[], [""printf""]]",[7237409554864562455],961
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,497,,"printf("")"");","[""addLog""]","[[], [""printf""]]",[7237409554864562455],961
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,512,,"printf("" "");","[""addLog""]","[[], [""printf""]]",[7237409554864562455],961
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,518,,"printf("" "");","[""addLog""]","[[], [""printf""]]",[7237409554864562455],961
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,524,,"printf("" "");","[""addLog""]","[[], [""printf""]]",[7237409554864562455],961
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,530,,"printf("" "");","[""addLog""]","[[], [""printf""]]",[7237409554864562455],961
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,536,,"printf("" "");","[""addLog""]","[[], [""printf""]]",[7237409554864562455],961
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,540,,"printf("")"");","[""addLog""]","[[], [""printf""]]",[7237409554864562455],961
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,555,,"printf("" !"");","[""addLog""]","[[], [""printf""]]",[7237409554864562455],961
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,570,,"printf(""?"");","[""addLog""]","[[], [""printf""]]",[7237409554864562455],961
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,595,,"printf("" "");","[""addLog""]","[[], [""printf""]]",[7237409554864562455],961
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,607,,"printf(""@"");","[""addLog""]","[[], [""printf""]]",[7237409554864562455],961
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,676,,"printf("")"");","[""addLog""]","[[], [""printf""]]",[7237409554864562455],961
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,692,,"printf(""?"");","[""addLog""]","[[], [""printf""]]",[7237409554864562455],961
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,696,,"printf("" - ?"");","[""addLog""]","[[], [""printf""]]",[7237409554864562455],961
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,710,,"printf(""?"");","[""addLog""]","[[], [""printf""]]",[7237409554864562455],961
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,725,,"printf(""?"");","[""addLog""]","[[], [""printf""]]",[7237409554864562455],961
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,776,,"printf(""! "");","[""addLog""]","[[], [""printf""]]",[7237409554864562455],961
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,788,,"printf(""! "");","[""addLog""]","[[], [""printf""]]",[7237409554864562455],961
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,284,,"printf("" ("");","[""addLog""]","[[], [""printf""]]",[7237409554864562455],961
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,292,,"printf("")"");","[""addLog""]","[[], [""printf""]]",[7237409554864562455],961
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,313,,"printf("" "");","[""addLog""]","[[], [""printf""]]",[7237409554864562455],961
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,411,,"printf("" ("");","[""addLog""]","[[], [""printf""]]",[7237409554864562455],961
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,418,,"printf("", "");","[""addLog""]","[[], [""printf""]]",[7237409554864562455],961
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,424,,"printf("", "");","[""addLog""]","[[], [""printf""]]",[7237409554864562455],961
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,434,,"printf("", "");","[""addLog""]","[[], [""printf""]]",[7237409554864562455],961
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,440,,"printf("", "");","[""addLog""]","[[], [""printf""]]",[7237409554864562455],961
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,446,,"printf("", "");","[""addLog""]","[[], [""printf""]]",[7237409554864562455],961
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,454,,"printf("", "");","[""addLog""]","[[], [""printf""]]",[7237409554864562455],961
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,460,,"printf("", "");","[""addLog""]","[[], [""printf""]]",[7237409554864562455],961
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,469,,"printf("", "");","[""addLog""]","[[], [""printf""]]",[7237409554864562455],961
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,475,,"printf("", "");","[""addLog""]","[[], [""printf""]]",[7237409554864562455],961
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,481,,"printf("", "");","[""addLog""]","[[], [""printf""]]",[7237409554864562455],961
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,490,,"printf("", "");","[""addLog""]","[[], [""printf""]]",[7237409554864562455],961
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,500,,"printf("")"");","[""addLog""]","[[], [""printf""]]",[7237409554864562455],961
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,537,,"printf("" !"");","[""addLog""]","[[], [""printf""]]",[7237409554864562455],961
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,552,,"printf(""?"");","[""addLog""]","[[], [""printf""]]",[7237409554864562455],961
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,560,,"printf("" -> "");","[""addLog""]","[[], [""printf""]]",[7237409554864562455],961
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,641,,"printf(""{ "");","[""addLog""]","[[], [""printf""]]",[7237409554864562455],961
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,655,,"printf("")"");","[""addLog""]","[[], [""printf""]]",[7237409554864562455],961
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,662,,"printf("", "");","[""addLog""]","[[], [""printf""]]",[7237409554864562455],961
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,664,,"printf("" }"");","[""addLog""]","[[], [""printf""]]",[7237409554864562455],961
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,728,,"printf(""! "");","[""addLog""]","[[], [""printf""]]",[7237409554864562455],961
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,740,,"printf(""! "");","[""addLog""]","[[], [""printf""]]",[7237409554864562455],961
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,793,,"printf("")"");","[""addLog""]","[[], [""printf""]]",[7237409554864562455],961
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,809,,"printf(""?"");","[""addLog""]","[[], [""printf""]]",[7237409554864562455],961
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,813,,"printf("" - ?"");","[""addLog""]","[[], [""printf""]]",[7237409554864562455],961
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,827,,"printf(""?"");","[""addLog""]","[[], [""printf""]]",[7237409554864562455],961
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,842,,"printf(""?"");","[""addLog""]","[[], [""printf""]]",[7237409554864562455],961
https://github.com/collectd/collectd/commit/c5bab65db542b276a776dc0643abcea91da60913,04 Jul 2007,collectd-nagios: Display performance data and generally be more verbose.,60,data/crawl/collectd/hunk_415.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_415.cpp,data/crawl/collectd/new_hunk_415.cpp,-1,7,,"printf ("" |"");","[""addLog""]","[[], [""printf""]]",[7237409554864562455],961
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,284,-1,"printf("" ("");",,"[""removeLog""]","[[""printf""], []]",[-7237409554864562455],960
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,292,-1,"printf("")"");",,"[""removeLog""]","[[""printf""], []]",[-7237409554864562455],960
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,313,-1,"printf("" "");",,"[""removeLog""]","[[""printf""], []]",[-7237409554864562455],960
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,411,-1,"printf("" ("");",,"[""removeLog""]","[[""printf""], []]",[-7237409554864562455],960
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,418,-1,"printf("", "");",,"[""removeLog""]","[[""printf""], []]",[-7237409554864562455],960
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,424,-1,"printf("", "");",,"[""removeLog""]","[[""printf""], []]",[-7237409554864562455],960
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,434,-1,"printf("", "");",,"[""removeLog""]","[[""printf""], []]",[-7237409554864562455],960
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,440,-1,"printf("", "");",,"[""removeLog""]","[[""printf""], []]",[-7237409554864562455],960
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,446,-1,"printf("", "");",,"[""removeLog""]","[[""printf""], []]",[-7237409554864562455],960
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,454,-1,"printf("", "");",,"[""removeLog""]","[[""printf""], []]",[-7237409554864562455],960
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,460,-1,"printf("", "");",,"[""removeLog""]","[[""printf""], []]",[-7237409554864562455],960
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,469,-1,"printf("", "");",,"[""removeLog""]","[[""printf""], []]",[-7237409554864562455],960
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,475,-1,"printf("", "");",,"[""removeLog""]","[[""printf""], []]",[-7237409554864562455],960
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,481,-1,"printf("", "");",,"[""removeLog""]","[[""printf""], []]",[-7237409554864562455],960
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,490,-1,"printf("", "");",,"[""removeLog""]","[[""printf""], []]",[-7237409554864562455],960
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,500,-1,"printf("")"");",,"[""removeLog""]","[[""printf""], []]",[-7237409554864562455],960
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,537,-1,"printf("" !"");",,"[""removeLog""]","[[""printf""], []]",[-7237409554864562455],960
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,552,-1,"printf(""?"");",,"[""removeLog""]","[[""printf""], []]",[-7237409554864562455],960
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,560,-1,"printf("" -> "");",,"[""removeLog""]","[[""printf""], []]",[-7237409554864562455],960
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,641,-1,"printf(""{ "");",,"[""removeLog""]","[[""printf""], []]",[-7237409554864562455],960
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,655,-1,"printf("")"");",,"[""removeLog""]","[[""printf""], []]",[-7237409554864562455],960
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,662,-1,"printf("", "");",,"[""removeLog""]","[[""printf""], []]",[-7237409554864562455],960
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,664,-1,"printf("" }"");",,"[""removeLog""]","[[""printf""], []]",[-7237409554864562455],960
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,728,-1,"printf(""! "");",,"[""removeLog""]","[[""printf""], []]",[-7237409554864562455],960
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,740,-1,"printf(""! "");",,"[""removeLog""]","[[""printf""], []]",[-7237409554864562455],960
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,793,-1,"printf("")"");",,"[""removeLog""]","[[""printf""], []]",[-7237409554864562455],960
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,809,-1,"printf(""?"");",,"[""removeLog""]","[[""printf""], []]",[-7237409554864562455],960
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,813,-1,"printf("" - ?"");",,"[""removeLog""]","[[""printf""], []]",[-7237409554864562455],960
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,827,-1,"printf(""?"");",,"[""removeLog""]","[[""printf""], []]",[-7237409554864562455],960
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,842,-1,"printf(""?"");",,"[""removeLog""]","[[""printf""], []]",[-7237409554864562455],960
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,283,-1,"printf("" ("");",,"[""removeLog""]","[[""printf""], []]",[-7237409554864562455],960
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,293,-1,"printf("")"");",,"[""removeLog""]","[[""printf""], []]",[-7237409554864562455],960
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,408,-1,"printf("" ("");",,"[""removeLog""]","[[""printf""], []]",[-7237409554864562455],960
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,415,-1,"printf("", "");",,"[""removeLog""]","[[""printf""], []]",[-7237409554864562455],960
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,421,-1,"printf("", "");",,"[""removeLog""]","[[""printf""], []]",[-7237409554864562455],960
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,431,-1,"printf("", "");",,"[""removeLog""]","[[""printf""], []]",[-7237409554864562455],960
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,437,-1,"printf("", "");",,"[""removeLog""]","[[""printf""], []]",[-7237409554864562455],960
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,443,-1,"printf("", "");",,"[""removeLog""]","[[""printf""], []]",[-7237409554864562455],960
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,451,-1,"printf("", "");",,"[""removeLog""]","[[""printf""], []]",[-7237409554864562455],960
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,457,-1,"printf("", "");",,"[""removeLog""]","[[""printf""], []]",[-7237409554864562455],960
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,466,-1,"printf("", "");",,"[""removeLog""]","[[""printf""], []]",[-7237409554864562455],960
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,472,-1,"printf("", "");",,"[""removeLog""]","[[""printf""], []]",[-7237409554864562455],960
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,478,-1,"printf("", "");",,"[""removeLog""]","[[""printf""], []]",[-7237409554864562455],960
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,487,-1,"printf("", "");",,"[""removeLog""]","[[""printf""], []]",[-7237409554864562455],960
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,497,-1,"printf("")"");",,"[""removeLog""]","[[""printf""], []]",[-7237409554864562455],960
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,512,-1,"printf("" "");",,"[""removeLog""]","[[""printf""], []]",[-7237409554864562455],960
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,518,-1,"printf("" "");",,"[""removeLog""]","[[""printf""], []]",[-7237409554864562455],960
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,524,-1,"printf("" "");",,"[""removeLog""]","[[""printf""], []]",[-7237409554864562455],960
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,530,-1,"printf("" "");",,"[""removeLog""]","[[""printf""], []]",[-7237409554864562455],960
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,536,-1,"printf("" "");",,"[""removeLog""]","[[""printf""], []]",[-7237409554864562455],960
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,540,-1,"printf("")"");",,"[""removeLog""]","[[""printf""], []]",[-7237409554864562455],960
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,555,-1,"printf("" !"");",,"[""removeLog""]","[[""printf""], []]",[-7237409554864562455],960
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,570,-1,"printf(""?"");",,"[""removeLog""]","[[""printf""], []]",[-7237409554864562455],960
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,595,-1,"printf("" "");",,"[""removeLog""]","[[""printf""], []]",[-7237409554864562455],960
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,607,-1,"printf(""@"");",,"[""removeLog""]","[[""printf""], []]",[-7237409554864562455],960
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,676,-1,"printf("")"");",,"[""removeLog""]","[[""printf""], []]",[-7237409554864562455],960
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,692,-1,"printf(""?"");",,"[""removeLog""]","[[""printf""], []]",[-7237409554864562455],960
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,696,-1,"printf("" - ?"");",,"[""removeLog""]","[[""printf""], []]",[-7237409554864562455],960
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,710,-1,"printf(""?"");",,"[""removeLog""]","[[""printf""], []]",[-7237409554864562455],960
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,725,-1,"printf(""?"");",,"[""removeLog""]","[[""printf""], []]",[-7237409554864562455],960
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,776,-1,"printf(""! "");",,"[""removeLog""]","[[""printf""], []]",[-7237409554864562455],960
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,788,-1,"printf(""! "");",,"[""removeLog""]","[[""printf""], []]",[-7237409554864562455],960
https://github.com/collectd/collectd/commit/1e8a95944f39cf4d552f2afed8e26b93febd50ec,31 Dec 2016,"dpdkstat plugin rework

This patch contains rework of existing dpdkstat plugin. Changes are focused on
extracting common dpdk related features into utils file that could be reused by
other DPDK plugins. Also some related structural changes are introduced.

List of changes:
- introduction of new utils_dpdk.c that handles child process spawning,
  and terminating, messaging between parent and child, DPDK configuration
  and initialization and DPDK commands execution
- DPDK EAL specific options put into separate subsection of
  dpdkstat configuration
- documentation update

Those changes are preparatory steps for upstreaming dpdkevent plugin
that is going to collect DPDK ports and logical cores status info.

Signed-off-by: Krzysztof Matczak <krzysztofx.matczak@intel.com>",2068,data/crawl/collectd/hunk_54.cpp,use same text,non-trivial,data/crawl/collectd/old_hunk_54.cpp,data/crawl/collectd/new_hunk_54.cpp,-1,520,,"printf(""\n"");","[""addLog""]","[[], [""printf"", ""\\n""]]",[7249185625612668815],959
https://github.com/collectd/collectd/commit/7535ee83bf0b12a168cee3c70e5fb97ed6dfc96c,25 Sep 2016,utils_cmds_test: Add various unit tests for the command parser.,298,data/crawl/collectd/hunk_75.cpp,use same text,non-trivial,data/crawl/collectd/old_hunk_75.cpp,data/crawl/collectd/new_hunk_75.cpp,-1,38,,"printf (""\n"");","[""addLog""]","[[], [""printf"", ""\\n""]]",[7249185625612668815],959
https://github.com/collectd/collectd/commit/46a35862cb9ff3caddad1fc01e02141b6e0a9f72,22 Aug 2016,"python plugin: Fixing possible problems with the GIL.

If AfterFork is called after threads have been initialized.
Also handle SIGTERM while reading from an interactive session slightly more gracefully.",55,data/crawl/collectd/hunk_98.cpp,use same text,non-trivial,data/crawl/collectd/old_hunk_98.cpp,data/crawl/collectd/new_hunk_98.cpp,-1,4,,"printf(""================================================================\n"");","[""addLog""]","[[], [""printf"", ""\\n""]]",[7249185625612668815],959
https://github.com/collectd/collectd/commit/46a35862cb9ff3caddad1fc01e02141b6e0a9f72,22 Aug 2016,"python plugin: Fixing possible problems with the GIL.

If AfterFork is called after threads have been initialized.
Also handle SIGTERM while reading from an interactive session slightly more gracefully.",55,data/crawl/collectd/hunk_98.cpp,use same text,non-trivial,data/crawl/collectd/old_hunk_98.cpp,data/crawl/collectd/new_hunk_98.cpp,-1,10,,"printf(""================================================================\n"");","[""addLog""]","[[], [""printf"", ""\\n""]]",[7249185625612668815],959
https://github.com/collectd/collectd/commit/8a7ec0cfb7aaab52e53fbb21cdc887cee4cccd6d,28 Jul 2016,"dpdkstat: enable a plugin for DPDK stats

This patch enables support to retrieve statistics for DPDK
interfaces. An overview of the threading is as follows:
1. collectd init() or read() calls dpdk_helper_spawn() to retrieve
   the required size of xstats to allocate.
   1.1. DPDK counts ports, stats and length, writing them to
        shared-memory (SHM).
   1.2. DPDK helper (secondary) process quits, allowing cleanup of
        the shared memory.
2. collectd resizes shared-memory to size of stats as provided by
   DPDK.
3. collectd respawns the DPDK helper.
   3.1. Helper blocks on a semaphore until told to read the stats
        from DPDK and write them to SHM.
4. collectd dispatches statistics
   4.1. Thread blocks on semaphore until stats are available.
This threading model is required to allow the plugin to detect when
the DPDK primary process/application has been killed/reset, and to avoid
the plugin from stopping another DPDK primary process from starting.
Some extra housekeeping is in place to ensure collectd is never
stalled by using sem_timedwait() with a timeout. If collectd dies, the
helper process will automatically quit after a timeout, as it detects
its ppid has changed.

Signed-off-by: Harry van Haaren <harry.van.haaren@intel.com>
Signed-off-by: Maryam Tahhan <maryam.tahhan@intel.com>",1020,data/crawl/collectd/hunk_108.cpp,use same text,non-trivial,data/crawl/collectd/old_hunk_108.cpp,data/crawl/collectd/new_hunk_108.cpp,-1,422,,"printf(""\n"");","[""addLog""]","[[], [""printf"", ""\\n""]]",[7249185625612668815],959
https://github.com/collectd/collectd/commit/c5f030fa12d743cbcf9d2d53f06e1621faa3a32d,21 Aug 2009,http plugin: POST when a 4K buffer is nearly full,67,data/crawl/collectd/hunk_315.cpp,use same text,non-trivial,data/crawl/collectd/old_hunk_315.cpp,data/crawl/collectd/new_hunk_315.cpp,-1,14,,"printf(""---------------\n"");","[""addLog""]","[[], [""printf"", ""\\n""]]",[7249185625612668815],959
https://github.com/collectd/collectd/commit/c5f030fa12d743cbcf9d2d53f06e1621faa3a32d,21 Aug 2009,http plugin: POST when a 4K buffer is nearly full,67,data/crawl/collectd/hunk_316.cpp,use same text,non-trivial,data/crawl/collectd/old_hunk_316.cpp,data/crawl/collectd/new_hunk_316.cpp,-1,12,,"printf(""----\n"");","[""addLog""]","[[], [""printf"", ""\\n""]]",[7249185625612668815],959
https://github.com/collectd/collectd/commit/d1125cb9d1bbe3bd77f90366bf64b44904f69e54,08 Nov 2008,"collectd-nagios: Use `libcollectdclient' and various improvements.

The improvements include:
- Copyright and license header.
- More consistent output.
- Frees some more memory that was allocated..
- Better standards compliance.
- Make all functions `static' (except `main', of course).
- Use `%g' instead of `%lf' to print floating point values.",416,data/crawl/collectd/hunk_359.cpp,use same text,non-trivial,data/crawl/collectd/old_hunk_359.cpp,data/crawl/collectd/new_hunk_359.cpp,-1,29,,"printf (""\n"");","[""addLog""]","[[], [""printf"", ""\\n""]]",[7249185625612668815],959
https://github.com/collectd/collectd/commit/d1125cb9d1bbe3bd77f90366bf64b44904f69e54,08 Nov 2008,"collectd-nagios: Use `libcollectdclient' and various improvements.

The improvements include:
- Copyright and license header.
- More consistent output.
- Frees some more memory that was allocated..
- Better standards compliance.
- Make all functions `static' (except `main', of course).
- Use `%g' instead of `%lf' to print floating point values.",416,data/crawl/collectd/hunk_360.cpp,use same text,non-trivial,data/crawl/collectd/old_hunk_360.cpp,data/crawl/collectd/new_hunk_360.cpp,-1,20,,"printf (""\n"");","[""addLog""]","[[], [""printf"", ""\\n""]]",[7249185625612668815],959
https://github.com/collectd/collectd/commit/863dfcdf274509e4e1836c2c8f1f10f09e1d13be,03 Mar 2007,"iptables plugin: Adds a plugin to collect iptables'-counters.

My first attempt at a module for this is an iptables modules This will try to
read out the rules from iptables for a specific table and chain.
It will go through the rules looking for ones with ""comment"" matches and will
use the comment as a base for the generated filename.

So basically looking for lines like
 $ iptables -t mangle -A incoming -p tcp -m comment --comment ""tcp""
will generate a iptables-incoming/tcp.rrd file from the byte counters

There used to also be an account iptables module but that seems to have been
neglected, which would generate /proc entries for specific rules, don't know
what would work better. Either way, this seems to work somewhat.",4451,data/crawl/collectd/hunk_454.cpp,use same text,non-trivial,data/crawl/collectd/old_hunk_454.cpp,data/crawl/collectd/new_hunk_454.cpp,-1,153,,"printf(""\n"");","[""addLog""]","[[], [""printf"", ""\\n""]]",[7249185625612668815],959
https://github.com/collectd/collectd/commit/863dfcdf274509e4e1836c2c8f1f10f09e1d13be,03 Mar 2007,"iptables plugin: Adds a plugin to collect iptables'-counters.

My first attempt at a module for this is an iptables modules This will try to
read out the rules from iptables for a specific table and chain.
It will go through the rules looking for ones with ""comment"" matches and will
use the comment as a base for the generated filename.

So basically looking for lines like
 $ iptables -t mangle -A incoming -p tcp -m comment --comment ""tcp""
will generate a iptables-incoming/tcp.rrd file from the byte counters

There used to also be an account iptables module but that seems to have been
neglected, which would generate /proc entries for specific rules, don't know
what would work better. Either way, this seems to work somewhat.",4451,data/crawl/collectd/hunk_454.cpp,use same text,non-trivial,data/crawl/collectd/old_hunk_454.cpp,data/crawl/collectd/new_hunk_454.cpp,-1,173,,"printf(""\n"");","[""addLog""]","[[], [""printf"", ""\\n""]]",[7249185625612668815],959
https://github.com/collectd/collectd/commit/863dfcdf274509e4e1836c2c8f1f10f09e1d13be,03 Mar 2007,"iptables plugin: Adds a plugin to collect iptables'-counters.

My first attempt at a module for this is an iptables modules This will try to
read out the rules from iptables for a specific table and chain.
It will go through the rules looking for ones with ""comment"" matches and will
use the comment as a base for the generated filename.

So basically looking for lines like
 $ iptables -t mangle -A incoming -p tcp -m comment --comment ""tcp""
will generate a iptables-incoming/tcp.rrd file from the byte counters

There used to also be an account iptables module but that seems to have been
neglected, which would generate /proc entries for specific rules, don't know
what would work better. Either way, this seems to work somewhat.",4451,data/crawl/collectd/hunk_455.cpp,use same text,non-trivial,data/crawl/collectd/old_hunk_455.cpp,data/crawl/collectd/new_hunk_455.cpp,-1,184,,"printf(""\n"");","[""addLog""]","[[], [""printf"", ""\\n""]]",[7249185625612668815],959
https://github.com/collectd/collectd/commit/863dfcdf274509e4e1836c2c8f1f10f09e1d13be,03 Mar 2007,"iptables plugin: Adds a plugin to collect iptables'-counters.

My first attempt at a module for this is an iptables modules This will try to
read out the rules from iptables for a specific table and chain.
It will go through the rules looking for ones with ""comment"" matches and will
use the comment as a base for the generated filename.

So basically looking for lines like
 $ iptables -t mangle -A incoming -p tcp -m comment --comment ""tcp""
will generate a iptables-incoming/tcp.rrd file from the byte counters

There used to also be an account iptables module but that seems to have been
neglected, which would generate /proc entries for specific rules, don't know
what would work better. Either way, this seems to work somewhat.",4451,data/crawl/collectd/hunk_455.cpp,use same text,non-trivial,data/crawl/collectd/old_hunk_455.cpp,data/crawl/collectd/new_hunk_455.cpp,-1,203,,"printf(""\n"");","[""addLog""]","[[], [""printf"", ""\\n""]]",[7249185625612668815],959
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,823,,"printf("" = %s"", a1);","[""addLog""]","[[], [""printf"", ""%s"", ""a1""]]",[7254561657910717253],958
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,825,,"printf("" != %s"", a1);","[""addLog""]","[[], [""printf"", ""%s"", ""a1""]]",[7254561657910717253],958
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,827,,"printf("" < %s"", a1);","[""addLog""]","[[], [""printf"", ""%s"", ""a1""]]",[7254561657910717253],958
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,829,,"printf("" <= %s"", a1);","[""addLog""]","[[], [""printf"", ""%s"", ""a1""]]",[7254561657910717253],958
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,831,,"printf("" > %s"", a1);","[""addLog""]","[[], [""printf"", ""%s"", ""a1""]]",[7254561657910717253],958
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,833,,"printf("" >= %s"", a1);","[""addLog""]","[[], [""printf"", ""%s"", ""a1""]]",[7254561657910717253],958
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,865,,"printf("" = %s"", a1);","[""addLog""]","[[], [""printf"", ""%s"", ""a1""]]",[7254561657910717253],958
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,867,,"printf("" != %s"", a1);","[""addLog""]","[[], [""printf"", ""%s"", ""a1""]]",[7254561657910717253],958
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,869,,"printf("" < %s"", a1);","[""addLog""]","[[], [""printf"", ""%s"", ""a1""]]",[7254561657910717253],958
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,871,,"printf("" <= %s"", a1);","[""addLog""]","[[], [""printf"", ""%s"", ""a1""]]",[7254561657910717253],958
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,873,,"printf("" > %s"", a1);","[""addLog""]","[[], [""printf"", ""%s"", ""a1""]]",[7254561657910717253],958
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,875,,"printf("" >= %s"", a1);","[""addLog""]","[[], [""printf"", ""%s"", ""a1""]]",[7254561657910717253],958
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,865,-1,"printf("" = %s"", a1);",,"[""removeLog""]","[[""printf"", ""%s"", ""a1""], []]",[-7254561657910717253],957
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,867,-1,"printf("" != %s"", a1);",,"[""removeLog""]","[[""printf"", ""%s"", ""a1""], []]",[-7254561657910717253],957
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,869,-1,"printf("" < %s"", a1);",,"[""removeLog""]","[[""printf"", ""%s"", ""a1""], []]",[-7254561657910717253],957
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,871,-1,"printf("" <= %s"", a1);",,"[""removeLog""]","[[""printf"", ""%s"", ""a1""], []]",[-7254561657910717253],957
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,873,-1,"printf("" > %s"", a1);",,"[""removeLog""]","[[""printf"", ""%s"", ""a1""], []]",[-7254561657910717253],957
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,875,-1,"printf("" >= %s"", a1);",,"[""removeLog""]","[[""printf"", ""%s"", ""a1""], []]",[-7254561657910717253],957
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,823,-1,"printf("" = %s"", a1);",,"[""removeLog""]","[[""printf"", ""%s"", ""a1""], []]",[-7254561657910717253],957
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,825,-1,"printf("" != %s"", a1);",,"[""removeLog""]","[[""printf"", ""%s"", ""a1""], []]",[-7254561657910717253],957
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,827,-1,"printf("" < %s"", a1);",,"[""removeLog""]","[[""printf"", ""%s"", ""a1""], []]",[-7254561657910717253],957
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,829,-1,"printf("" <= %s"", a1);",,"[""removeLog""]","[[""printf"", ""%s"", ""a1""], []]",[-7254561657910717253],957
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,831,-1,"printf("" > %s"", a1);",,"[""removeLog""]","[[""printf"", ""%s"", ""a1""], []]",[-7254561657910717253],957
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,833,-1,"printf("" >= %s"", a1);",,"[""removeLog""]","[[""printf"", ""%s"", ""a1""], []]",[-7254561657910717253],957
https://github.com/collectd/collectd/commit/a656aa08957763edbb36300688393382c7f7056a,19 Sep 2016,"dpdkstat: Addressed PR comments

1) Added missing option description
2) Replaced strerror with sstrerror
3) Do not return from helper code
4) Use generic collectd Interval implementation
5) Removed ""\n"" from log messages

Signed-off-by: Taras Chornyi <tarasx.chornyi@intel.com>",586,data/crawl/collectd/hunk_97.cpp,use same text,non-trivial,data/crawl/collectd/old_hunk_97.cpp,data/crawl/collectd/new_hunk_97.cpp,8,-1,"printf(""\n"");",,"[""removeLog""]","[[""printf"", ""\\n""], []]",[-7249185625612668815],956
https://github.com/collectd/collectd/commit/99364c70a7039ed496dbe429fb86ee41e464fc76,03 Apr 2011,"iptables plugin: Remove the shipped version of libiptc.

Since libiptc is now publicly available as a shared library, we don't really
have any need to ship it with collectd anymore.",5264,data/crawl/collectd/hunk_200.cpp,use same text,non-trivial,data/crawl/collectd/old_hunk_200.cpp,data/crawl/collectd/new_hunk_200.cpp,189,-1,"printf(""\n"");",,"[""removeLog""]","[[""printf"", ""\\n""], []]",[-7249185625612668815],956
https://github.com/collectd/collectd/commit/99364c70a7039ed496dbe429fb86ee41e464fc76,03 Apr 2011,"iptables plugin: Remove the shipped version of libiptc.

Since libiptc is now publicly available as a shared library, we don't really
have any need to ship it with collectd anymore.",5264,data/crawl/collectd/hunk_201.cpp,use same text,non-trivial,data/crawl/collectd/old_hunk_201.cpp,data/crawl/collectd/new_hunk_201.cpp,219,-1,"printf(""\n"");",,"[""removeLog""]","[[""printf"", ""\\n""], []]",[-7249185625612668815],956
https://github.com/collectd/collectd/commit/6fc85b952084c71e040bec17740b2811c5574f01,21 Aug 2009,http plugin: Remove some debugging info,8,data/crawl/collectd/hunk_313.cpp,use same text,non-trivial,data/crawl/collectd/old_hunk_313.cpp,data/crawl/collectd/new_hunk_313.cpp,5,-1,"printf(""---------------\n"");",,"[""removeLog""]","[[""printf"", ""\\n""], []]",[-7249185625612668815],956
https://github.com/collectd/collectd/commit/6fc85b952084c71e040bec17740b2811c5574f01,21 Aug 2009,http plugin: Remove some debugging info,8,data/crawl/collectd/hunk_314.cpp,use same text,non-trivial,data/crawl/collectd/old_hunk_314.cpp,data/crawl/collectd/new_hunk_314.cpp,5,-1,"printf(""----\n"");",,"[""removeLog""]","[[""printf"", ""\\n""], []]",[-7249185625612668815],956
https://github.com/collectd/collectd/commit/8de91034a0186feba7079b92711b0d140278ce7a,03 Mar 2007,"iptables plugin: Use a global `libiptc' if it exists.

Will likely not build under non-Linux systems yet.",4275,data/crawl/collectd/hunk_451.cpp,use same text,non-trivial,data/crawl/collectd/old_hunk_451.cpp,data/crawl/collectd/new_hunk_451.cpp,153,-1,"printf(""\n"");",,"[""removeLog""]","[[""printf"", ""\\n""], []]",[-7249185625612668815],956
https://github.com/collectd/collectd/commit/8de91034a0186feba7079b92711b0d140278ce7a,03 Mar 2007,"iptables plugin: Use a global `libiptc' if it exists.

Will likely not build under non-Linux systems yet.",4275,data/crawl/collectd/hunk_451.cpp,use same text,non-trivial,data/crawl/collectd/old_hunk_451.cpp,data/crawl/collectd/new_hunk_451.cpp,173,-1,"printf(""\n"");",,"[""removeLog""]","[[""printf"", ""\\n""], []]",[-7249185625612668815],956
https://github.com/collectd/collectd/commit/8de91034a0186feba7079b92711b0d140278ce7a,03 Mar 2007,"iptables plugin: Use a global `libiptc' if it exists.

Will likely not build under non-Linux systems yet.",4275,data/crawl/collectd/hunk_452.cpp,use same text,non-trivial,data/crawl/collectd/old_hunk_452.cpp,data/crawl/collectd/new_hunk_452.cpp,184,-1,"printf(""\n"");",,"[""removeLog""]","[[""printf"", ""\\n""], []]",[-7249185625612668815],956
https://github.com/collectd/collectd/commit/8de91034a0186feba7079b92711b0d140278ce7a,03 Mar 2007,"iptables plugin: Use a global `libiptc' if it exists.

Will likely not build under non-Linux systems yet.",4275,data/crawl/collectd/hunk_452.cpp,use same text,non-trivial,data/crawl/collectd/old_hunk_452.cpp,data/crawl/collectd/new_hunk_452.cpp,203,-1,"printf(""\n"");",,"[""removeLog""]","[[""printf"", ""\\n""], []]",[-7249185625612668815],956
https://github.com/collectd/collectd/commit/276490e1d23db4c7db710075954655583c728e3e,12 Feb 2007,Removed `src/libconfig/*'.,2235,data/crawl/collectd/hunk_468.cpp,use same text,non-trivial,data/crawl/collectd/old_hunk_468.cpp,data/crawl/collectd/new_hunk_468.cpp,5,-1,"printf(""\n"");",,"[""removeLog""]","[[""printf"", ""\\n""], []]",[-7249185625612668815],956
https://github.com/collectd/collectd/commit/148087def9520d4bd4a343761defefa5d06a3215,18 May 2006,Added `apcups.c' by Anthony Gialluca <tonyabg at charter.net>,827,data/crawl/collectd/hunk_523.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_523.cpp,data/crawl/collectd/new_hunk_523.cpp,-1,490,,"fprintf(stdout,""  Value %s.\n"",tokptr);","[""addLog""]","[[], [""fprintf"", ""stdout"", ""Value"", ""%s"", ""\\n"", ""tokptr""]]",[-19795710462084339451],955
https://github.com/collectd/collectd/commit/148087def9520d4bd4a343761defefa5d06a3215,18 May 2006,Added `apcups.c' by Anthony Gialluca <tonyabg at charter.net>,827,data/crawl/collectd/hunk_523.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_523.cpp,data/crawl/collectd/new_hunk_523.cpp,-1,496,,"fprintf(stdout,""  Value %s.\n"",tokptr);","[""addLog""]","[[], [""fprintf"", ""stdout"", ""Value"", ""%s"", ""\\n"", ""tokptr""]]",[-19795710462084339451],955
https://github.com/collectd/collectd/commit/148087def9520d4bd4a343761defefa5d06a3215,18 May 2006,Added `apcups.c' by Anthony Gialluca <tonyabg at charter.net>,827,data/crawl/collectd/hunk_523.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_523.cpp,data/crawl/collectd/new_hunk_523.cpp,-1,502,,"fprintf(stdout,""  Value %s.\n"",tokptr);","[""addLog""]","[[], [""fprintf"", ""stdout"", ""Value"", ""%s"", ""\\n"", ""tokptr""]]",[-19795710462084339451],955
https://github.com/collectd/collectd/commit/148087def9520d4bd4a343761defefa5d06a3215,18 May 2006,Added `apcups.c' by Anthony Gialluca <tonyabg at charter.net>,827,data/crawl/collectd/hunk_523.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_523.cpp,data/crawl/collectd/new_hunk_523.cpp,-1,508,,"fprintf(stdout,""  Value %s.\n"",tokptr);","[""addLog""]","[[], [""fprintf"", ""stdout"", ""Value"", ""%s"", ""\\n"", ""tokptr""]]",[-19795710462084339451],955
https://github.com/collectd/collectd/commit/148087def9520d4bd4a343761defefa5d06a3215,18 May 2006,Added `apcups.c' by Anthony Gialluca <tonyabg at charter.net>,827,data/crawl/collectd/hunk_523.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_523.cpp,data/crawl/collectd/new_hunk_523.cpp,-1,514,,"fprintf(stdout,""  Value %s.\n"",tokptr);","[""addLog""]","[[], [""fprintf"", ""stdout"", ""Value"", ""%s"", ""\\n"", ""tokptr""]]",[-19795710462084339451],955
https://github.com/collectd/collectd/commit/148087def9520d4bd4a343761defefa5d06a3215,18 May 2006,Added `apcups.c' by Anthony Gialluca <tonyabg at charter.net>,827,data/crawl/collectd/hunk_523.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_523.cpp,data/crawl/collectd/new_hunk_523.cpp,-1,520,,"fprintf(stdout,""  Value %s.\n"",tokptr);","[""addLog""]","[[], [""fprintf"", ""stdout"", ""Value"", ""%s"", ""\\n"", ""tokptr""]]",[-19795710462084339451],955
https://github.com/collectd/collectd/commit/148087def9520d4bd4a343761defefa5d06a3215,18 May 2006,Added `apcups.c' by Anthony Gialluca <tonyabg at charter.net>,827,data/crawl/collectd/hunk_523.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_523.cpp,data/crawl/collectd/new_hunk_523.cpp,-1,526,,"fprintf(stdout,""  Value %s.\n"",tokptr);","[""addLog""]","[[], [""fprintf"", ""stdout"", ""Value"", ""%s"", ""\\n"", ""tokptr""]]",[-19795710462084339451],955
https://github.com/collectd/collectd/commit/148087def9520d4bd4a343761defefa5d06a3215,18 May 2006,Added `apcups.c' by Anthony Gialluca <tonyabg at charter.net>,827,data/crawl/collectd/hunk_523.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_523.cpp,data/crawl/collectd/new_hunk_523.cpp,-1,532,,"fprintf(stdout,""  Value %s.\n"",tokptr);","[""addLog""]","[[], [""fprintf"", ""stdout"", ""Value"", ""%s"", ""\\n"", ""tokptr""]]",[-19795710462084339451],955
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,572,,"printf(""%s"", buf);","[""addLog""]","[[], [""printf"", ""%s"", ""buf""]]",[7569169800143846097],954
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,694,,"printf(""%s"", buf);","[""addLog""]","[[], [""printf"", ""%s"", ""buf""]]",[7569169800143846097],954
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,698,,"printf("" - %s"", buf);","[""addLog""]","[[], [""printf"", ""%s"", ""buf""]]",[7569169800143846097],954
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,712,,"printf(""%s"", buf);","[""addLog""]","[[], [""printf"", ""%s"", ""buf""]]",[7569169800143846097],954
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,554,,"printf(""%s"", buf);","[""addLog""]","[[], [""printf"", ""%s"", ""buf""]]",[7569169800143846097],954
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,811,,"printf(""%s"", buf);","[""addLog""]","[[], [""printf"", ""%s"", ""buf""]]",[7569169800143846097],954
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,815,,"printf("" - %s"", buf);","[""addLog""]","[[], [""printf"", ""%s"", ""buf""]]",[7569169800143846097],954
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,829,,"printf(""%s"", buf);","[""addLog""]","[[], [""printf"", ""%s"", ""buf""]]",[7569169800143846097],954
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,554,-1,"printf(""%s"", buf);",,"[""removeLog""]","[[""printf"", ""%s"", ""buf""], []]",[-7569169800143846097],953
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,811,-1,"printf(""%s"", buf);",,"[""removeLog""]","[[""printf"", ""%s"", ""buf""], []]",[-7569169800143846097],953
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,815,-1,"printf("" - %s"", buf);",,"[""removeLog""]","[[""printf"", ""%s"", ""buf""], []]",[-7569169800143846097],953
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,829,-1,"printf(""%s"", buf);",,"[""removeLog""]","[[""printf"", ""%s"", ""buf""], []]",[-7569169800143846097],953
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,572,-1,"printf(""%s"", buf);",,"[""removeLog""]","[[""printf"", ""%s"", ""buf""], []]",[-7569169800143846097],953
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,694,-1,"printf(""%s"", buf);",,"[""removeLog""]","[[""printf"", ""%s"", ""buf""], []]",[-7569169800143846097],953
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,698,-1,"printf("" - %s"", buf);",,"[""removeLog""]","[[""printf"", ""%s"", ""buf""], []]",[-7569169800143846097],953
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,712,-1,"printf(""%s"", buf);",,"[""removeLog""]","[[""printf"", ""%s"", ""buf""], []]",[-7569169800143846097],953
https://github.com/collectd/collectd/commit/1804ab004b8c7e14eac8c3a662747fbae4cf4aad,06 Nov 2017,"Auto-Merge pull request #2519 from octo/ff/strerror

Automatically merged due to ""Automerge"" label",1493,data/crawl/collectd/hunk_9.cpp,invoke same method,non-trivial,data/crawl/collectd/old_hunk_9.cpp,data/crawl/collectd/new_hunk_9.cpp,4,3,"fprintf(stderr, ""fork: %s"", sstrerror(errno, errbuf, sizeof(errbuf)));","fprintf(stderr, ""fork: %s"", STRERRNO);","[""updateVariable"", ""removeVariable""]","[[""sstrerror"", ""errno"", ""errbuf"", ""sizeof"", ""errbuf""], [""STRERRNO""]]",[22819257912299834821],952
https://github.com/collectd/collectd/commit/1804ab004b8c7e14eac8c3a662747fbae4cf4aad,06 Nov 2017,"Auto-Merge pull request #2519 from octo/ff/strerror

Automatically merged due to ""Automerge"" label",1493,data/crawl/collectd/hunk_10.cpp,invoke same method,non-trivial,data/crawl/collectd/old_hunk_10.cpp,data/crawl/collectd/new_hunk_10.cpp,4,3,"fprintf(stderr, ""Failed to open types database `%s': %s.\n"", file,
            sstrerror(errno, errbuf, sizeof(errbuf)));","fprintf(stderr, ""Failed to open types database `%s': %s.\n"", file,
            STRERRNO);","[""updateVariable"", ""removeVariable""]","[[""sstrerror"", ""errno"", ""errbuf"", ""sizeof"", ""errbuf""], [""STRERRNO""]]",[22819257912299834821],952
https://github.com/collectd/collectd/commit/1804ab004b8c7e14eac8c3a662747fbae4cf4aad,06 Nov 2017,"Auto-Merge pull request #2519 from octo/ff/strerror

Automatically merged due to ""Automerge"" label",1493,data/crawl/collectd/hunk_11.cpp,invoke same method,non-trivial,data/crawl/collectd/old_hunk_11.cpp,data/crawl/collectd/new_hunk_11.cpp,4,3,"fprintf(stderr, ""log_logstash plugin: fopen (%s) failed: %s\n"", log_file,
            sstrerror(errno, errbuf, sizeof(errbuf)));","fprintf(stderr, ""log_logstash plugin: fopen (%s) failed: %s\n"", log_file,
            STRERRNO);","[""updateVariable"", ""removeVariable""]","[[""sstrerror"", ""errno"", ""errbuf"", ""sizeof"", ""errbuf""], [""STRERRNO""]]",[22819257912299834821],952
https://github.com/collectd/collectd/commit/1804ab004b8c7e14eac8c3a662747fbae4cf4aad,06 Nov 2017,"Auto-Merge pull request #2519 from octo/ff/strerror

Automatically merged due to ""Automerge"" label",1493,data/crawl/collectd/hunk_12.cpp,invoke same method,non-trivial,data/crawl/collectd/old_hunk_12.cpp,data/crawl/collectd/new_hunk_12.cpp,4,3,"fprintf(stderr, ""logfile plugin: fopen (%s) failed: %s\n"", log_file,
            sstrerror(errno, errbuf, sizeof(errbuf)));","fprintf(stderr, ""logfile plugin: fopen (%s) failed: %s\n"", log_file,
            STRERRNO);","[""updateVariable"", ""removeVariable""]","[[""sstrerror"", ""errno"", ""errbuf"", ""sizeof"", ""errbuf""], [""STRERRNO""]]",[22819257912299834821],952
https://github.com/collectd/collectd/commit/0b7cd83a5e6bac068ea83a88a5ddcfb07c09fbec,04 Nov 2017,Tree wide: Replace sstrerror() with STRERRNO.,1424,data/crawl/collectd/hunk_19.cpp,invoke same method,non-trivial,data/crawl/collectd/old_hunk_19.cpp,data/crawl/collectd/new_hunk_19.cpp,4,3,"fprintf(stderr, ""fork: %s"", sstrerror(errno, errbuf, sizeof(errbuf)));","fprintf(stderr, ""fork: %s"", STRERRNO);","[""updateVariable"", ""removeVariable""]","[[""sstrerror"", ""errno"", ""errbuf"", ""sizeof"", ""errbuf""], [""STRERRNO""]]",[22819257912299834821],952
https://github.com/collectd/collectd/commit/0b7cd83a5e6bac068ea83a88a5ddcfb07c09fbec,04 Nov 2017,Tree wide: Replace sstrerror() with STRERRNO.,1424,data/crawl/collectd/hunk_20.cpp,invoke same method,non-trivial,data/crawl/collectd/old_hunk_20.cpp,data/crawl/collectd/new_hunk_20.cpp,4,3,"fprintf(stderr, ""Failed to open types database `%s': %s.\n"", file,
            sstrerror(errno, errbuf, sizeof(errbuf)));","fprintf(stderr, ""Failed to open types database `%s': %s.\n"", file,
            STRERRNO);","[""updateVariable"", ""removeVariable""]","[[""sstrerror"", ""errno"", ""errbuf"", ""sizeof"", ""errbuf""], [""STRERRNO""]]",[22819257912299834821],952
https://github.com/collectd/collectd/commit/0b7cd83a5e6bac068ea83a88a5ddcfb07c09fbec,04 Nov 2017,Tree wide: Replace sstrerror() with STRERRNO.,1424,data/crawl/collectd/hunk_21.cpp,invoke same method,non-trivial,data/crawl/collectd/old_hunk_21.cpp,data/crawl/collectd/new_hunk_21.cpp,4,3,"fprintf(stderr, ""log_logstash plugin: fopen (%s) failed: %s\n"", log_file,
            sstrerror(errno, errbuf, sizeof(errbuf)));","fprintf(stderr, ""log_logstash plugin: fopen (%s) failed: %s\n"", log_file,
            STRERRNO);","[""updateVariable"", ""removeVariable""]","[[""sstrerror"", ""errno"", ""errbuf"", ""sizeof"", ""errbuf""], [""STRERRNO""]]",[22819257912299834821],952
https://github.com/collectd/collectd/commit/0b7cd83a5e6bac068ea83a88a5ddcfb07c09fbec,04 Nov 2017,Tree wide: Replace sstrerror() with STRERRNO.,1424,data/crawl/collectd/hunk_22.cpp,invoke same method,non-trivial,data/crawl/collectd/old_hunk_22.cpp,data/crawl/collectd/new_hunk_22.cpp,4,3,"fprintf(stderr, ""logfile plugin: fopen (%s) failed: %s\n"", log_file,
            sstrerror(errno, errbuf, sizeof(errbuf)));","fprintf(stderr, ""logfile plugin: fopen (%s) failed: %s\n"", log_file,
            STRERRNO);","[""updateVariable"", ""removeVariable""]","[[""sstrerror"", ""errno"", ""errbuf"", ""sizeof"", ""errbuf""], [""STRERRNO""]]",[22819257912299834821],952
https://github.com/collectd/collectd/commit/45edddd42012056e61fc167b1fcc8fa9455eac94,19 May 2006,"apcups.c:
- Improved the `do_pthreads_status' function to not have the same code 10 times (or so).",135,data/crawl/collectd/hunk_520.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_520.cpp,data/crawl/collectd/new_hunk_520.cpp,30,-1,"fprintf(stdout,""  Value %s.\n"",tokptr);",,"[""removeLog""]","[[""fprintf"", ""stdout"", ""Value"", ""%s"", ""\\n"", ""tokptr""], []]",[19795710462084339451],951
https://github.com/collectd/collectd/commit/45edddd42012056e61fc167b1fcc8fa9455eac94,19 May 2006,"apcups.c:
- Improved the `do_pthreads_status' function to not have the same code 10 times (or so).",135,data/crawl/collectd/hunk_520.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_520.cpp,data/crawl/collectd/new_hunk_520.cpp,36,-1,"fprintf(stdout,""  Value %s.\n"",tokptr);",,"[""removeLog""]","[[""fprintf"", ""stdout"", ""Value"", ""%s"", ""\\n"", ""tokptr""], []]",[19795710462084339451],951
https://github.com/collectd/collectd/commit/45edddd42012056e61fc167b1fcc8fa9455eac94,19 May 2006,"apcups.c:
- Improved the `do_pthreads_status' function to not have the same code 10 times (or so).",135,data/crawl/collectd/hunk_520.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_520.cpp,data/crawl/collectd/new_hunk_520.cpp,42,-1,"fprintf(stdout,""  Value %s.\n"",tokptr);",,"[""removeLog""]","[[""fprintf"", ""stdout"", ""Value"", ""%s"", ""\\n"", ""tokptr""], []]",[19795710462084339451],951
https://github.com/collectd/collectd/commit/45edddd42012056e61fc167b1fcc8fa9455eac94,19 May 2006,"apcups.c:
- Improved the `do_pthreads_status' function to not have the same code 10 times (or so).",135,data/crawl/collectd/hunk_520.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_520.cpp,data/crawl/collectd/new_hunk_520.cpp,48,-1,"fprintf(stdout,""  Value %s.\n"",tokptr);",,"[""removeLog""]","[[""fprintf"", ""stdout"", ""Value"", ""%s"", ""\\n"", ""tokptr""], []]",[19795710462084339451],951
https://github.com/collectd/collectd/commit/45edddd42012056e61fc167b1fcc8fa9455eac94,19 May 2006,"apcups.c:
- Improved the `do_pthreads_status' function to not have the same code 10 times (or so).",135,data/crawl/collectd/hunk_520.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_520.cpp,data/crawl/collectd/new_hunk_520.cpp,54,-1,"fprintf(stdout,""  Value %s.\n"",tokptr);",,"[""removeLog""]","[[""fprintf"", ""stdout"", ""Value"", ""%s"", ""\\n"", ""tokptr""], []]",[19795710462084339451],951
https://github.com/collectd/collectd/commit/45edddd42012056e61fc167b1fcc8fa9455eac94,19 May 2006,"apcups.c:
- Improved the `do_pthreads_status' function to not have the same code 10 times (or so).",135,data/crawl/collectd/hunk_520.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_520.cpp,data/crawl/collectd/new_hunk_520.cpp,60,-1,"fprintf(stdout,""  Value %s.\n"",tokptr);",,"[""removeLog""]","[[""fprintf"", ""stdout"", ""Value"", ""%s"", ""\\n"", ""tokptr""], []]",[19795710462084339451],951
https://github.com/collectd/collectd/commit/45edddd42012056e61fc167b1fcc8fa9455eac94,19 May 2006,"apcups.c:
- Improved the `do_pthreads_status' function to not have the same code 10 times (or so).",135,data/crawl/collectd/hunk_520.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_520.cpp,data/crawl/collectd/new_hunk_520.cpp,66,-1,"fprintf(stdout,""  Value %s.\n"",tokptr);",,"[""removeLog""]","[[""fprintf"", ""stdout"", ""Value"", ""%s"", ""\\n"", ""tokptr""], []]",[19795710462084339451],951
https://github.com/collectd/collectd/commit/f96813067819f4a8d6752af11f741b599b3d1651,11 Nov 2009,Proper exception logging.,110,data/crawl/collectd/hunk_296.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_296.cpp,data/crawl/collectd/new_hunk_296.cpp,-1,3,,"cpy_log_exception(""python initialization"");","[""addLog""]","[[], [""cpy_log_exception"", ""python"", ""initialization""]]",[-14842936999888728224],950
https://github.com/collectd/collectd/commit/f96813067819f4a8d6752af11f741b599b3d1651,11 Nov 2009,Proper exception logging.,110,data/crawl/collectd/hunk_296.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_296.cpp,data/crawl/collectd/new_hunk_296.cpp,-1,9,,"cpy_log_exception(""python initialization"");","[""addLog""]","[[], [""cpy_log_exception"", ""python"", ""initialization""]]",[-14842936999888728224],950
https://github.com/collectd/collectd/commit/f96813067819f4a8d6752af11f741b599b3d1651,11 Nov 2009,Proper exception logging.,110,data/crawl/collectd/hunk_297.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_297.cpp,data/crawl/collectd/new_hunk_297.cpp,-1,18,,"cpy_log_exception(""python initialization"");","[""addLog""]","[[], [""cpy_log_exception"", ""python"", ""initialization""]]",[-14842936999888728224],950
https://github.com/collectd/collectd/commit/f96813067819f4a8d6752af11f741b599b3d1651,11 Nov 2009,Proper exception logging.,110,data/crawl/collectd/hunk_297.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_297.cpp,data/crawl/collectd/new_hunk_297.cpp,-1,24,,"cpy_log_exception(""python initialization"");","[""addLog""]","[[], [""cpy_log_exception"", ""python"", ""initialization""]]",[-14842936999888728224],950
https://github.com/collectd/collectd/commit/f96813067819f4a8d6752af11f741b599b3d1651,11 Nov 2009,Proper exception logging.,110,data/crawl/collectd/hunk_298.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_298.cpp,data/crawl/collectd/new_hunk_298.cpp,-1,3,,"cpy_log_exception(""python initialization"");","[""addLog""]","[[], [""cpy_log_exception"", ""python"", ""initialization""]]",[-14842936999888728224],950
https://github.com/collectd/collectd/commit/f96813067819f4a8d6752af11f741b599b3d1651,11 Nov 2009,Proper exception logging.,110,data/crawl/collectd/hunk_298.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_298.cpp,data/crawl/collectd/new_hunk_298.cpp,-1,9,,"cpy_log_exception(""python initialization"");","[""addLog""]","[[], [""cpy_log_exception"", ""python"", ""initialization""]]",[-14842936999888728224],950
https://github.com/collectd/collectd/commit/f96813067819f4a8d6752af11f741b599b3d1651,11 Nov 2009,Proper exception logging.,110,data/crawl/collectd/hunk_299.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_299.cpp,data/crawl/collectd/new_hunk_299.cpp,-1,3,,"cpy_log_exception(""python initialization"");","[""addLog""]","[[], [""cpy_log_exception"", ""python"", ""initialization""]]",[-14842936999888728224],950
https://github.com/collectd/collectd/commit/112e161c8cfab6e3edb3a4cff25c13379fed5534,05 Jan 2010,python: Made the plugin unicode save.,124,data/crawl/collectd/hunk_262.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_262.cpp,data/crawl/collectd/new_hunk_262.cpp,-1,16,,"PyErr_Format(PyExc_TypeError, ""Dataset %s not found"", type);","[""addLog""]","[[], [""PyErr_Format"", ""PyExc_TypeError"", ""Dataset"", ""%s"", ""not"", ""found"", ""type""]]",[20001828572106125783],949
https://github.com/collectd/collectd/commit/112e161c8cfab6e3edb3a4cff25c13379fed5534,05 Jan 2010,python: Made the plugin unicode save.,124,data/crawl/collectd/hunk_263.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_263.cpp,data/crawl/collectd/new_hunk_263.cpp,-1,16,,"PyErr_Format(PyExc_TypeError, ""Dataset %s not found"", type);","[""addLog""]","[[], [""PyErr_Format"", ""PyExc_TypeError"", ""Dataset"", ""%s"", ""not"", ""found"", ""type""]]",[20001828572106125783],949
https://github.com/collectd/collectd/commit/89eebe98be9968c165800503971782e28a40ce00,05 Dec 2009,Added write method to Values.,116,data/crawl/collectd/hunk_278.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_278.cpp,data/crawl/collectd/new_hunk_278.cpp,-1,32,,"PyErr_Format(PyExc_TypeError, ""Dataset %s not found"", type);","[""addLog""]","[[], [""PyErr_Format"", ""PyExc_TypeError"", ""Dataset"", ""%s"", ""not"", ""found"", ""type""]]",[20001828572106125783],949
https://github.com/collectd/collectd/commit/a6ce5dbab98419162c5430f08261a4bc27bfe3a1,28 Nov 2009,Added notification support.,240,data/crawl/collectd/hunk_283.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_283.cpp,data/crawl/collectd/new_hunk_283.cpp,-1,69,,"PyErr_Format(PyExc_TypeError, ""Dataset %s not found"", type);","[""addLog""]","[[], [""PyErr_Format"", ""PyExc_TypeError"", ""Dataset"", ""%s"", ""not"", ""found"", ""type""]]",[20001828572106125783],949
https://github.com/collectd/collectd/commit/c98b98bfaaeb26894229d7da66ad145c75fb9b69,27 Oct 2009,"Added new python class ""Values"". Only ""dispatch"" is implemented right now.",335,data/crawl/collectd/hunk_304.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_304.cpp,data/crawl/collectd/new_hunk_304.cpp,-1,41,,"PyErr_Format(PyExc_TypeError, ""Dataset %s not found"", type);","[""addLog""]","[[], [""PyErr_Format"", ""PyExc_TypeError"", ""Dataset"", ""%s"", ""not"", ""found"", ""type""]]",[20001828572106125783],949
https://github.com/collectd/collectd/commit/c98b98bfaaeb26894229d7da66ad145c75fb9b69,27 Oct 2009,"Added new python class ""Values"". Only ""dispatch"" is implemented right now.",335,data/crawl/collectd/hunk_304.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_304.cpp,data/crawl/collectd/new_hunk_304.cpp,-1,182,,"PyErr_Format(PyExc_TypeError, ""Dataset %s not found"", type);","[""addLog""]","[[], [""PyErr_Format"", ""PyExc_TypeError"", ""Dataset"", ""%s"", ""not"", ""found"", ""type""]]",[20001828572106125783],949
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,819,,"printf("" %s >< %s"", a1, a2);","[""addLog""]","[[], [""printf"", ""%s"", ""%s"", ""a1"", ""a2""]]",[7271713760956872054],948
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,821,,"printf("" %s <> %s"", a1, a2);","[""addLog""]","[[], [""printf"", ""%s"", ""%s"", ""a1"", ""a2""]]",[7271713760956872054],948
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,835,,"printf("" %s:%s"", a1, a2);","[""addLog""]","[[], [""printf"", ""%s"", ""%s"", ""a1"", ""a2""]]",[7271713760956872054],948
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,861,,"printf("" %s >< %s"", a1, a2);","[""addLog""]","[[], [""printf"", ""%s"", ""%s"", ""a1"", ""a2""]]",[7271713760956872054],948
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,863,,"printf("" %s <> %s"", a1, a2);","[""addLog""]","[[], [""printf"", ""%s"", ""%s"", ""a1"", ""a2""]]",[7271713760956872054],948
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,877,,"printf("" %s:%s"", a1, a2);","[""addLog""]","[[], [""printf"", ""%s"", ""%s"", ""a1"", ""a2""]]",[7271713760956872054],948
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,861,-1,"printf("" %s >< %s"", a1, a2);",,"[""removeLog""]","[[""printf"", ""%s"", ""%s"", ""a1"", ""a2""], []]",[-7271713760956872054],947
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,863,-1,"printf("" %s <> %s"", a1, a2);",,"[""removeLog""]","[[""printf"", ""%s"", ""%s"", ""a1"", ""a2""], []]",[-7271713760956872054],947
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,877,-1,"printf("" %s:%s"", a1, a2);",,"[""removeLog""]","[[""printf"", ""%s"", ""%s"", ""a1"", ""a2""], []]",[-7271713760956872054],947
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,819,-1,"printf("" %s >< %s"", a1, a2);",,"[""removeLog""]","[[""printf"", ""%s"", ""%s"", ""a1"", ""a2""], []]",[-7271713760956872054],947
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,821,-1,"printf("" %s <> %s"", a1, a2);",,"[""removeLog""]","[[""printf"", ""%s"", ""%s"", ""a1"", ""a2""], []]",[-7271713760956872054],947
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,835,-1,"printf("" %s:%s"", a1, a2);",,"[""removeLog""]","[[""printf"", ""%s"", ""%s"", ""a1"", ""a2""], []]",[-7271713760956872054],947
https://github.com/collectd/collectd/commit/e1da538180881c6dcc1d686e504128327a1f56b9,14 Oct 2012,python: Fix memory leaks.,228,data/crawl/collectd/hunk_171.cpp,use same variable,non-trivial,data/crawl/collectd/old_hunk_171.cpp,data/crawl/collectd/new_hunk_171.cpp,9,16,"PyErr_Format(PyExc_TypeError, ""Dataset %s not found"", type);","PyErr_Format(PyExc_TypeError, ""Dataset %s not found"", value_list.type);","[""removeVariable"", ""addVariable""]","[[], [""value_list""]]",[3093710871759197000],946
https://github.com/collectd/collectd/commit/e1da538180881c6dcc1d686e504128327a1f56b9,14 Oct 2012,python: Fix memory leaks.,228,data/crawl/collectd/hunk_172.cpp,use same variable,non-trivial,data/crawl/collectd/old_hunk_172.cpp,data/crawl/collectd/new_hunk_172.cpp,3,3,"PyErr_Format(PyExc_RuntimeError, ""type %s needs %d values, got %i"", type, ds->ds_num, size);","PyErr_Format(PyExc_RuntimeError, ""type %s needs %d values, got %i"", value_list.type, ds->ds_num, size);","[""removeVariable"", ""addVariable""]","[[], [""value_list""]]",[3093710871759197000],946
https://github.com/collectd/collectd/commit/e1da538180881c6dcc1d686e504128327a1f56b9,14 Oct 2012,python: Fix memory leaks.,228,data/crawl/collectd/hunk_173.cpp,use same variable,non-trivial,data/crawl/collectd/old_hunk_173.cpp,data/crawl/collectd/new_hunk_173.cpp,3,3,"PyErr_Format(PyExc_RuntimeError, ""unknown data type %d for %s"", ds->ds->type, type);","PyErr_Format(PyExc_RuntimeError, ""unknown data type %d for %s"", ds->ds->type, value_list.type);","[""removeVariable"", ""addVariable""]","[[], [""value_list""]]",[3093710871759197000],946
https://github.com/collectd/collectd/commit/e1da538180881c6dcc1d686e504128327a1f56b9,14 Oct 2012,python: Fix memory leaks.,228,data/crawl/collectd/hunk_174.cpp,use same variable,non-trivial,data/crawl/collectd/old_hunk_174.cpp,data/crawl/collectd/new_hunk_174.cpp,23,24,"PyErr_Format(PyExc_TypeError, ""Dataset %s not found"", type);","PyErr_Format(PyExc_TypeError, ""Dataset %s not found"", value_list.type);","[""removeVariable"", ""addVariable""]","[[], [""value_list""]]",[3093710871759197000],946
https://github.com/collectd/collectd/commit/e1da538180881c6dcc1d686e504128327a1f56b9,14 Oct 2012,python: Fix memory leaks.,228,data/crawl/collectd/hunk_175.cpp,use same variable,non-trivial,data/crawl/collectd/old_hunk_175.cpp,data/crawl/collectd/new_hunk_175.cpp,3,3,"PyErr_Format(PyExc_RuntimeError, ""type %s needs %d values, got %i"", type, ds->ds_num, size);","PyErr_Format(PyExc_RuntimeError, ""type %s needs %d values, got %i"", value_list.type, ds->ds_num, size);","[""removeVariable"", ""addVariable""]","[[], [""value_list""]]",[3093710871759197000],946
https://github.com/collectd/collectd/commit/e1da538180881c6dcc1d686e504128327a1f56b9,14 Oct 2012,python: Fix memory leaks.,228,data/crawl/collectd/hunk_176.cpp,use same variable,non-trivial,data/crawl/collectd/old_hunk_176.cpp,data/crawl/collectd/new_hunk_176.cpp,3,3,"PyErr_Format(PyExc_RuntimeError, ""unknown data type %d for %s"", ds->ds->type, type);","PyErr_Format(PyExc_RuntimeError, ""unknown data type %d for %s"", ds->ds->type, value_list.type);","[""removeVariable"", ""addVariable""]","[[], [""value_list""]]",[3093710871759197000],946
https://github.com/collectd/collectd/commit/ebbe15f56430838df4397150f6c3089d5851216d,26 Mar 2008,"utils_cmd_*: Terminate all lines printed to the socket with newline.

This is a backport of 1ca0b79a4274784e4cc15d45e46e2cfa0c2039cf.

Signed-off-by: Sebastian Harl <sh@tokkee.org>
Signed-off-by: Florian Forster <octo@huhu.verplant.org>",10,data/crawl/collectd/hunk_381.cpp,use same text format,trivial,data/crawl/collectd/old_hunk_381.cpp,data/crawl/collectd/new_hunk_381.cpp,3,3,"fprintf (fh, ""-1 Error parsing option `%s'"", fields[i]);","fprintf (fh, ""-1 Error parsing option `%s'\n"", fields[i]);","[""updateContent""]","[[], [""\\n""]]",[11776070748106360],945
https://github.com/collectd/collectd/commit/ebbe15f56430838df4397150f6c3089d5851216d,26 Mar 2008,"utils_cmd_*: Terminate all lines printed to the socket with newline.

This is a backport of 1ca0b79a4274784e4cc15d45e46e2cfa0c2039cf.

Signed-off-by: Sebastian Harl <sh@tokkee.org>
Signed-off-by: Florian Forster <octo@huhu.verplant.org>",10,data/crawl/collectd/hunk_382.cpp,use same text format,trivial,data/crawl/collectd/old_hunk_382.cpp,data/crawl/collectd/new_hunk_382.cpp,3,3,"fprintf (fh, ""-1 No time found."");","fprintf (fh, ""-1 No time found.\n"");","[""updateContent""]","[[], [""\\n""]]",[11776070748106360],945
https://github.com/collectd/collectd/commit/ebbe15f56430838df4397150f6c3089d5851216d,26 Mar 2008,"utils_cmd_*: Terminate all lines printed to the socket with newline.

This is a backport of 1ca0b79a4274784e4cc15d45e46e2cfa0c2039cf.

Signed-off-by: Sebastian Harl <sh@tokkee.org>
Signed-off-by: Florian Forster <octo@huhu.verplant.org>",10,data/crawl/collectd/hunk_383.cpp,use same text format,trivial,data/crawl/collectd/old_hunk_383.cpp,data/crawl/collectd/new_hunk_383.cpp,3,3,"fprintf (fh, ""-1 Identifier too long."");","fprintf (fh, ""-1 Identifier too long.\n"");","[""updateContent""]","[[], [""\\n""]]",[11776070748106360],945
https://github.com/collectd/collectd/commit/ebbe15f56430838df4397150f6c3089d5851216d,26 Mar 2008,"utils_cmd_*: Terminate all lines printed to the socket with newline.

This is a backport of 1ca0b79a4274784e4cc15d45e46e2cfa0c2039cf.

Signed-off-by: Sebastian Harl <sh@tokkee.org>
Signed-off-by: Florian Forster <octo@huhu.verplant.org>",10,data/crawl/collectd/hunk_384.cpp,use same text format,trivial,data/crawl/collectd/old_hunk_384.cpp,data/crawl/collectd/new_hunk_384.cpp,3,3,"fprintf (fh, ""-1 malloc failed."");","fprintf (fh, ""-1 malloc failed.\n"");","[""updateContent""]","[[], [""\\n""]]",[11776070748106360],945
https://github.com/collectd/collectd/commit/ebbe15f56430838df4397150f6c3089d5851216d,26 Mar 2008,"utils_cmd_*: Terminate all lines printed to the socket with newline.

This is a backport of 1ca0b79a4274784e4cc15d45e46e2cfa0c2039cf.

Signed-off-by: Sebastian Harl <sh@tokkee.org>
Signed-off-by: Florian Forster <octo@huhu.verplant.org>",10,data/crawl/collectd/hunk_385.cpp,use same text format,trivial,data/crawl/collectd/old_hunk_385.cpp,data/crawl/collectd/new_hunk_385.cpp,3,3,"fprintf (fh, ""-1 Error parsing option `%s'"",
fields[i]);","fprintf (fh, ""-1 Error parsing option `%s'\n"",
fields[i]);","[""updateContent""]","[[], [""\\n""]]",[11776070748106360],945
https://github.com/collectd/collectd/commit/d1125cb9d1bbe3bd77f90366bf64b44904f69e54,08 Nov 2008,"collectd-nagios: Use `libcollectdclient' and various improvements.

The improvements include:
- Copyright and license header.
- More consistent output.
- Frees some more memory that was allocated..
- Better standards compliance.
- Make all functions `static' (except `main', of course).
- Use `%g' instead of `%lf' to print floating point values.",416,data/crawl/collectd/hunk_358.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_358.cpp,data/crawl/collectd/new_hunk_358.cpp,-1,5,,"printf (""WARNING: No defined values found\n"");","[""addLog""]","[[], [""printf"", ""WARNING"", ""No"", ""defined"", ""values"", ""found\\n""]]",[12626062080601662814],944
https://github.com/collectd/collectd/commit/d1125cb9d1bbe3bd77f90366bf64b44904f69e54,08 Nov 2008,"collectd-nagios: Use `libcollectdclient' and various improvements.

The improvements include:
- Copyright and license header.
- More consistent output.
- Frees some more memory that was allocated..
- Better standards compliance.
- Make all functions `static' (except `main', of course).
- Use `%g' instead of `%lf' to print floating point values.",416,data/crawl/collectd/hunk_359.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_359.cpp,data/crawl/collectd/new_hunk_359.cpp,-1,4,,"printf (""WARNING: No defined values found\n"");","[""addLog""]","[[], [""printf"", ""WARNING"", ""No"", ""defined"", ""values"", ""found\\n""]]",[12626062080601662814],944
https://github.com/collectd/collectd/commit/76c0a54209a25f62b1fe16d9b00b41dde5725ae0,28 Jan 2007,collectd-nagios: Added a small program to perform Nagios-compatible checks on values.,434,data/crawl/collectd/hunk_479.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_479.cpp,data/crawl/collectd/new_hunk_479.cpp,-1,285,,"printf (""WARNING: No defined values found\n"");","[""addLog""]","[[], [""printf"", ""WARNING"", ""No"", ""defined"", ""values"", ""found\\n""]]",[12626062080601662814],944
https://github.com/collectd/collectd/commit/76c0a54209a25f62b1fe16d9b00b41dde5725ae0,28 Jan 2007,collectd-nagios: Added a small program to perform Nagios-compatible checks on values.,434,data/crawl/collectd/hunk_479.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_479.cpp,data/crawl/collectd/new_hunk_479.cpp,-1,330,,"printf (""WARNING: No defined values found\n"");","[""addLog""]","[[], [""printf"", ""WARNING"", ""No"", ""defined"", ""values"", ""found\\n""]]",[12626062080601662814],944
https://github.com/collectd/collectd/commit/cd3a0c6f7928a34da21f670f627e8e8a21943546,09 Dec 2008,"collectd-nagios: If DSs are specified, sort the values accordingly.

If a user specifies DSs on the command line, the order or the values might
matter (e.g. when using the upcoming ""percentage"" consolidation function). So,
in this case we now order the values according to the order of the specified
DSs.

This patch replaces the function ignore_ds() with filter_ds() which is called
once in do_check(). This removes the need to check for ignored values in all
consolidation function implementations.",90,data/crawl/collectd/hunk_352.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_352.cpp,data/crawl/collectd/new_hunk_352.cpp,-1,17,,"fprintf (stderr, ""malloc failed: %s\n"", strerror (errno));","[""addLog""]","[[], [""fprintf"", ""stderr"", ""malloc"", ""failed"", ""%s\\n"", ""strerror"", ""errno""]]",[-7693798041612465915],943
https://github.com/collectd/collectd/commit/cd3a0c6f7928a34da21f670f627e8e8a21943546,09 Dec 2008,"collectd-nagios: If DSs are specified, sort the values accordingly.

If a user specifies DSs on the command line, the order or the values might
matter (e.g. when using the upcoming ""percentage"" consolidation function). So,
in this case we now order the values according to the order of the specified
DSs.

This patch replaces the function ignore_ds() with filter_ds() which is called
once in do_check(). This removes the need to check for ignored values in all
consolidation function implementations.",90,data/crawl/collectd/hunk_352.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_352.cpp,data/crawl/collectd/new_hunk_352.cpp,-1,24,,"fprintf (stderr, ""malloc failed: %s\n"", strerror (errno));","[""addLog""]","[[], [""fprintf"", ""stderr"", ""malloc"", ""failed"", ""%s\\n"", ""strerror"", ""errno""]]",[-7693798041612465915],943
https://github.com/collectd/collectd/commit/76c0a54209a25f62b1fe16d9b00b41dde5725ae0,28 Jan 2007,collectd-nagios: Added a small program to perform Nagios-compatible checks on values.,434,data/crawl/collectd/hunk_479.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_479.cpp,data/crawl/collectd/new_hunk_479.cpp,-1,167,,"fprintf (stderr, ""malloc failed: %s\n"",
strerror (errno));","[""addLog""]","[[], [""fprintf"", ""stderr"", ""malloc"", ""failed"", ""%s\\n"", ""strerror"", ""errno""]]",[-7693798041612465915],943
https://github.com/collectd/collectd/commit/76c0a54209a25f62b1fe16d9b00b41dde5725ae0,28 Jan 2007,collectd-nagios: Added a small program to perform Nagios-compatible checks on values.,434,data/crawl/collectd/hunk_479.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_479.cpp,data/crawl/collectd/new_hunk_479.cpp,-1,175,,"fprintf (stderr, ""malloc failed: %s\n"",
strerror (errno));","[""addLog""]","[[], [""fprintf"", ""stderr"", ""malloc"", ""failed"", ""%s\\n"", ""strerror"", ""errno""]]",[-7693798041612465915],943
https://github.com/collectd/collectd/commit/99364c70a7039ed496dbe429fb86ee41e464fc76,03 Apr 2011,"iptables plugin: Remove the shipped version of libiptc.

Since libiptc is now publicly available as a shared library, we don't really
have any need to ship it with collectd anymore.",5264,data/crawl/collectd/hunk_201.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_201.cpp,data/crawl/collectd/new_hunk_201.cpp,166,-1,"printf(""%d"", len);",,"[""removeLog""]","[[""printf"", ""%d"", ""len""], []]",[-14755358748724818990],942
https://github.com/collectd/collectd/commit/99364c70a7039ed496dbe429fb86ee41e464fc76,03 Apr 2011,"iptables plugin: Remove the shipped version of libiptc.

Since libiptc is now publicly available as a shared library, we don't really
have any need to ship it with collectd anymore.",5264,data/crawl/collectd/hunk_201.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_201.cpp,data/crawl/collectd/new_hunk_201.cpp,179,-1,"printf(""%d"", len);",,"[""removeLog""]","[[""printf"", ""%d"", ""len""], []]",[-14755358748724818990],942
https://github.com/collectd/collectd/commit/8de91034a0186feba7079b92711b0d140278ce7a,03 Mar 2007,"iptables plugin: Use a global `libiptc' if it exists.

Will likely not build under non-Linux systems yet.",4275,data/crawl/collectd/hunk_452.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_452.cpp,data/crawl/collectd/new_hunk_452.cpp,148,-1,"printf(""%d"", len);",,"[""removeLog""]","[[""printf"", ""%d"", ""len""], []]",[-14755358748724818990],942
https://github.com/collectd/collectd/commit/8de91034a0186feba7079b92711b0d140278ce7a,03 Mar 2007,"iptables plugin: Use a global `libiptc' if it exists.

Will likely not build under non-Linux systems yet.",4275,data/crawl/collectd/hunk_452.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_452.cpp,data/crawl/collectd/new_hunk_452.cpp,161,-1,"printf(""%d"", len);",,"[""removeLog""]","[[""printf"", ""%d"", ""len""], []]",[-14755358748724818990],942
https://github.com/collectd/collectd/commit/99364c70a7039ed496dbe429fb86ee41e464fc76,03 Apr 2011,"iptables plugin: Remove the shipped version of libiptc.

Since libiptc is now publicly available as a shared library, we don't really
have any need to ship it with collectd anymore.",5264,data/crawl/collectd/hunk_200.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_200.cpp,data/crawl/collectd/new_hunk_200.cpp,187,-1,"printf(""error=`%s'\n"", t->data);",,"[""removeLog""]","[[""printf"", ""error"", ""%s"", ""\\n"", ""t"", ""data""], []]",[-6720392809562806197],941
https://github.com/collectd/collectd/commit/99364c70a7039ed496dbe429fb86ee41e464fc76,03 Apr 2011,"iptables plugin: Remove the shipped version of libiptc.

Since libiptc is now publicly available as a shared library, we don't really
have any need to ship it with collectd anymore.",5264,data/crawl/collectd/hunk_201.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_201.cpp,data/crawl/collectd/new_hunk_201.cpp,217,-1,"printf(""error=`%s'\n"", t->data);",,"[""removeLog""]","[[""printf"", ""error"", ""%s"", ""\\n"", ""t"", ""data""], []]",[-6720392809562806197],941
https://github.com/collectd/collectd/commit/8de91034a0186feba7079b92711b0d140278ce7a,03 Mar 2007,"iptables plugin: Use a global `libiptc' if it exists.

Will likely not build under non-Linux systems yet.",4275,data/crawl/collectd/hunk_451.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_451.cpp,data/crawl/collectd/new_hunk_451.cpp,171,-1,"printf(""error=`%s'\n"", t->data);",,"[""removeLog""]","[[""printf"", ""error"", ""%s"", ""\\n"", ""t"", ""data""], []]",[-6720392809562806197],941
https://github.com/collectd/collectd/commit/8de91034a0186feba7079b92711b0d140278ce7a,03 Mar 2007,"iptables plugin: Use a global `libiptc' if it exists.

Will likely not build under non-Linux systems yet.",4275,data/crawl/collectd/hunk_452.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_452.cpp,data/crawl/collectd/new_hunk_452.cpp,201,-1,"printf(""error=`%s'\n"", t->data);",,"[""removeLog""]","[[""printf"", ""error"", ""%s"", ""\\n"", ""t"", ""data""], []]",[-6720392809562806197],941
https://github.com/collectd/collectd/commit/99364c70a7039ed496dbe429fb86ee41e464fc76,03 Apr 2011,"iptables plugin: Remove the shipped version of libiptc.

Since libiptc is now publicly available as a shared library, we don't really
have any need to ship it with collectd anymore.",5264,data/crawl/collectd/hunk_200.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_200.cpp,data/crawl/collectd/new_hunk_200.cpp,185,-1,"printf(""verdict=%u\n"", pos);",,"[""removeLog""]","[[""printf"", ""verdict"", ""%u\\n"", ""pos""], []]",[-11130951458288192564],940
https://github.com/collectd/collectd/commit/99364c70a7039ed496dbe429fb86ee41e464fc76,03 Apr 2011,"iptables plugin: Remove the shipped version of libiptc.

Since libiptc is now publicly available as a shared library, we don't really
have any need to ship it with collectd anymore.",5264,data/crawl/collectd/hunk_201.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_201.cpp,data/crawl/collectd/new_hunk_201.cpp,215,-1,"printf(""verdict=%u\n"", pos);",,"[""removeLog""]","[[""printf"", ""verdict"", ""%u\\n"", ""pos""], []]",[-11130951458288192564],940
https://github.com/collectd/collectd/commit/8de91034a0186feba7079b92711b0d140278ce7a,03 Mar 2007,"iptables plugin: Use a global `libiptc' if it exists.

Will likely not build under non-Linux systems yet.",4275,data/crawl/collectd/hunk_451.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_451.cpp,data/crawl/collectd/new_hunk_451.cpp,169,-1,"printf(""verdict=%u\n"", pos);",,"[""removeLog""]","[[""printf"", ""verdict"", ""%u\\n"", ""pos""], []]",[-11130951458288192564],940
https://github.com/collectd/collectd/commit/8de91034a0186feba7079b92711b0d140278ce7a,03 Mar 2007,"iptables plugin: Use a global `libiptc' if it exists.

Will likely not build under non-Linux systems yet.",4275,data/crawl/collectd/hunk_452.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_452.cpp,data/crawl/collectd/new_hunk_452.cpp,199,-1,"printf(""verdict=%u\n"", pos);",,"[""removeLog""]","[[""printf"", ""verdict"", ""%u\\n"", ""pos""], []]",[-11130951458288192564],940
https://github.com/collectd/collectd/commit/99364c70a7039ed496dbe429fb86ee41e464fc76,03 Apr 2011,"iptables plugin: Remove the shipped version of libiptc.

Since libiptc is now publicly available as a shared library, we don't really
have any need to ship it with collectd anymore.",5264,data/crawl/collectd/hunk_200.cpp,use same variable,non-trivial,data/crawl/collectd/old_hunk_200.cpp,data/crawl/collectd/new_hunk_200.cpp,173,-1,"printf(""Target name: `%s' [%u]\n"", t->u.user.name, t->u.target_size);",,"[""removeLog""]","[[""printf"", ""Target"", ""name"", ""%s"", ""[%u]\\n"", ""t"", ""u"", ""user"", ""name"", ""t"", ""u"", ""target_size""], []]",[13998123860762750433],939
https://github.com/collectd/collectd/commit/99364c70a7039ed496dbe429fb86ee41e464fc76,03 Apr 2011,"iptables plugin: Remove the shipped version of libiptc.

Since libiptc is now publicly available as a shared library, we don't really
have any need to ship it with collectd anymore.",5264,data/crawl/collectd/hunk_201.cpp,use same variable,non-trivial,data/crawl/collectd/old_hunk_201.cpp,data/crawl/collectd/new_hunk_201.cpp,204,-1,"printf(""Target name: `%s' [%u]\n"", t->u.user.name, t->u.target_size);",,"[""removeLog""]","[[""printf"", ""Target"", ""name"", ""%s"", ""[%u]\\n"", ""t"", ""u"", ""user"", ""name"", ""t"", ""u"", ""target_size""], []]",[13998123860762750433],939
https://github.com/collectd/collectd/commit/8de91034a0186feba7079b92711b0d140278ce7a,03 Mar 2007,"iptables plugin: Use a global `libiptc' if it exists.

Will likely not build under non-Linux systems yet.",4275,data/crawl/collectd/hunk_451.cpp,use same variable,non-trivial,data/crawl/collectd/old_hunk_451.cpp,data/crawl/collectd/new_hunk_451.cpp,158,-1,"printf(""Target name: `%s' [%u]\n"", t->u.user.name, t->u.target_size);",,"[""removeLog""]","[[""printf"", ""Target"", ""name"", ""%s"", ""[%u]\\n"", ""t"", ""u"", ""user"", ""name"", ""t"", ""u"", ""target_size""], []]",[13998123860762750433],939
https://github.com/collectd/collectd/commit/8de91034a0186feba7079b92711b0d140278ce7a,03 Mar 2007,"iptables plugin: Use a global `libiptc' if it exists.

Will likely not build under non-Linux systems yet.",4275,data/crawl/collectd/hunk_452.cpp,use same variable,non-trivial,data/crawl/collectd/old_hunk_452.cpp,data/crawl/collectd/new_hunk_452.cpp,189,-1,"printf(""Target name: `%s' [%u]\n"", t->u.user.name, t->u.target_size);",,"[""removeLog""]","[[""printf"", ""Target"", ""name"", ""%s"", ""[%u]\\n"", ""t"", ""u"", ""user"", ""name"", ""t"", ""u"", ""target_size""], []]",[13998123860762750433],939
https://github.com/collectd/collectd/commit/99364c70a7039ed496dbe429fb86ee41e464fc76,03 Apr 2011,"iptables plugin: Remove the shipped version of libiptc.

Since libiptc is now publicly available as a shared library, we don't really
have any need to ship it with collectd anymore.",5264,data/crawl/collectd/hunk_200.cpp,use same variable,non-trivial,data/crawl/collectd/old_hunk_200.cpp,data/crawl/collectd/new_hunk_200.cpp,166,-1,"printf(""Counters: %llu packets, %llu bytes\n"",
       (unsigned long long)e->counters.pcnt, (unsigned long long)e->counters.bcnt);",,"[""removeLog""]","[[""printf"", ""Counters"", ""%llu"", ""packets"", ""%llu"", ""bytes\\n"", ""unsigned"", ""long"", ""long"", ""e"", ""counters"", ""pcnt"", ""unsigned"", ""long"", ""long"", ""e"", ""counters"", ""bcnt""], []]",[-5440441793197685850],938
https://github.com/collectd/collectd/commit/99364c70a7039ed496dbe429fb86ee41e464fc76,03 Apr 2011,"iptables plugin: Remove the shipped version of libiptc.

Since libiptc is now publicly available as a shared library, we don't really
have any need to ship it with collectd anymore.",5264,data/crawl/collectd/hunk_201.cpp,use same variable,non-trivial,data/crawl/collectd/old_hunk_201.cpp,data/crawl/collectd/new_hunk_201.cpp,197,-1,"printf(""Counters: %llu packets, %llu bytes\n"",
       (unsigned long long)e->counters.pcnt, (unsigned long long)e->counters.bcnt);",,"[""removeLog""]","[[""printf"", ""Counters"", ""%llu"", ""packets"", ""%llu"", ""bytes\\n"", ""unsigned"", ""long"", ""long"", ""e"", ""counters"", ""pcnt"", ""unsigned"", ""long"", ""long"", ""e"", ""counters"", ""bcnt""], []]",[-5440441793197685850],938
https://github.com/collectd/collectd/commit/8de91034a0186feba7079b92711b0d140278ce7a,03 Mar 2007,"iptables plugin: Use a global `libiptc' if it exists.

Will likely not build under non-Linux systems yet.",4275,data/crawl/collectd/hunk_451.cpp,use same variable,non-trivial,data/crawl/collectd/old_hunk_451.cpp,data/crawl/collectd/new_hunk_451.cpp,148,-1,"printf(""Counters: %llu packets, %llu bytes\n"",
       (unsigned long long)e->counters.pcnt, (unsigned long long)e->counters.bcnt);",,"[""removeLog""]","[[""printf"", ""Counters"", ""%llu"", ""packets"", ""%llu"", ""bytes\\n"", ""unsigned"", ""long"", ""long"", ""e"", ""counters"", ""pcnt"", ""unsigned"", ""long"", ""long"", ""e"", ""counters"", ""bcnt""], []]",[-5440441793197685850],938
https://github.com/collectd/collectd/commit/8de91034a0186feba7079b92711b0d140278ce7a,03 Mar 2007,"iptables plugin: Use a global `libiptc' if it exists.

Will likely not build under non-Linux systems yet.",4275,data/crawl/collectd/hunk_452.cpp,use same variable,non-trivial,data/crawl/collectd/old_hunk_452.cpp,data/crawl/collectd/new_hunk_452.cpp,179,-1,"printf(""Counters: %llu packets, %llu bytes\n"",
       (unsigned long long)e->counters.pcnt, (unsigned long long)e->counters.bcnt);",,"[""removeLog""]","[[""printf"", ""Counters"", ""%llu"", ""packets"", ""%llu"", ""bytes\\n"", ""unsigned"", ""long"", ""long"", ""e"", ""counters"", ""pcnt"", ""unsigned"", ""long"", ""long"", ""e"", ""counters"", ""bcnt""], []]",[-5440441793197685850],938
https://github.com/collectd/collectd/commit/99364c70a7039ed496dbe429fb86ee41e464fc76,03 Apr 2011,"iptables plugin: Remove the shipped version of libiptc.

Since libiptc is now publicly available as a shared library, we don't really
have any need to ship it with collectd anymore.",5264,data/crawl/collectd/hunk_200.cpp,invoke same method,non-trivial,data/crawl/collectd/old_hunk_200.cpp,data/crawl/collectd/new_hunk_200.cpp,151,-1,"printf(""Entry %u (%lu):\n"", iptcb_entry2index(handle, e),
       iptcb_entry2offset(handle, e));",,"[""removeLog""]","[[""printf"", ""Entry"", ""%u"", ""%lu"", ""\\n"", ""iptcb_entry2index"", ""handle"", ""e"", ""iptcb_entry2offset"", ""handle"", ""e""], []]",[-16304182402726198819],937
https://github.com/collectd/collectd/commit/99364c70a7039ed496dbe429fb86ee41e464fc76,03 Apr 2011,"iptables plugin: Remove the shipped version of libiptc.

Since libiptc is now publicly available as a shared library, we don't really
have any need to ship it with collectd anymore.",5264,data/crawl/collectd/hunk_201.cpp,invoke same method,non-trivial,data/crawl/collectd/old_hunk_201.cpp,data/crawl/collectd/new_hunk_201.cpp,158,-1,"printf(""Entry %u (%lu):\n"", iptcb_entry2index(handle, e),
       iptcb_entry2offset(handle, e));",,"[""removeLog""]","[[""printf"", ""Entry"", ""%u"", ""%lu"", ""\\n"", ""iptcb_entry2index"", ""handle"", ""e"", ""iptcb_entry2offset"", ""handle"", ""e""], []]",[-16304182402726198819],937
https://github.com/collectd/collectd/commit/8de91034a0186feba7079b92711b0d140278ce7a,03 Mar 2007,"iptables plugin: Use a global `libiptc' if it exists.

Will likely not build under non-Linux systems yet.",4275,data/crawl/collectd/hunk_451.cpp,invoke same method,non-trivial,data/crawl/collectd/old_hunk_451.cpp,data/crawl/collectd/new_hunk_451.cpp,133,-1,"printf(""Entry %u (%lu):\n"", iptcb_entry2index(handle, e),
       iptcb_entry2offset(handle, e));",,"[""removeLog""]","[[""printf"", ""Entry"", ""%u"", ""%lu"", ""\\n"", ""iptcb_entry2index"", ""handle"", ""e"", ""iptcb_entry2offset"", ""handle"", ""e""], []]",[-16304182402726198819],937
https://github.com/collectd/collectd/commit/8de91034a0186feba7079b92711b0d140278ce7a,03 Mar 2007,"iptables plugin: Use a global `libiptc' if it exists.

Will likely not build under non-Linux systems yet.",4275,data/crawl/collectd/hunk_452.cpp,invoke same method,non-trivial,data/crawl/collectd/old_hunk_452.cpp,data/crawl/collectd/new_hunk_452.cpp,140,-1,"printf(""Entry %u (%lu):\n"", iptcb_entry2index(handle, e),
       iptcb_entry2offset(handle, e));",,"[""removeLog""]","[[""printf"", ""Entry"", ""%u"", ""%lu"", ""\\n"", ""iptcb_entry2index"", ""handle"", ""e"", ""iptcb_entry2offset"", ""handle"", ""e""], []]",[-16304182402726198819],937
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,617,,"printf("" port %u"", p1);","[""addLog""]","[[], [""printf"", ""port"", ""%u"", ""p1""]]",[11399045443309582703],936
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,624,,"printf("" port %u"", p1);","[""addLog""]","[[], [""printf"", ""port"", ""%u"", ""p1""]]",[11399045443309582703],936
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,671,,"printf("" port %u"", p1);","[""addLog""]","[[], [""printf"", ""port"", ""%u"", ""p1""]]",[11399045443309582703],936
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,678,,"printf("" port %u"", p1);","[""addLog""]","[[], [""printf"", ""port"", ""%u"", ""p1""]]",[11399045443309582703],936
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,426,,"printf("" global"");","[""addLog""]","[[], [""printf"", ""global""]]",[3308202519487908130],935
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,462,,"printf("" global"");","[""addLog""]","[[], [""printf"", ""global""]]",[3308202519487908130],935
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,429,,"printf("" global"");","[""addLog""]","[[], [""printf"", ""global""]]",[3308202519487908130],935
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,465,,"printf("" global"");","[""addLog""]","[[], [""printf"", ""global""]]",[3308202519487908130],935
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,300,,"printf("" on ! %s"", r->ifname);","[""addLog""]","[[], [""printf"", ""on"", ""%s"", ""r"", ""ifname""]]",[5740704984773001603],934
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,302,,"printf("" on %s"", r->ifname);","[""addLog""]","[[], [""printf"", ""on"", ""%s"", ""r"", ""ifname""]]",[5740704984773001603],934
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,299,,"printf("" on ! %s"", r->ifname);","[""addLog""]","[[], [""printf"", ""on"", ""%s"", ""r"", ""ifname""]]",[5740704984773001603],934
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,301,,"printf("" on %s"", r->ifname);","[""addLog""]","[[], [""printf"", ""on"", ""%s"", ""r"", ""ifname""]]",[5740704984773001603],934
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,257,,"printf(""(%s)"", ic6->name);","[""addLog""]","[[], [""printf"", ""%s"", ""ic6"", ""name""]]",[-4479797274679857961],933
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,268,,"printf(""%s)"", ic6->name);","[""addLog""]","[[], [""printf"", ""%s"", ""ic6"", ""name""]]",[-4479797274679857961],933
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,258,,"printf(""(%s)"", ic6->name);","[""addLog""]","[[], [""printf"", ""%s"", ""ic6"", ""name""]]",[-4479797274679857961],933
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,269,,"printf(""%s)"", ic6->name);","[""addLog""]","[[], [""printf"", ""%s"", ""ic6"", ""name""]]",[-4479797274679857961],933
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,255,,"printf(""(%u)"", r->return_icmp6 & 255);","[""addLog""]","[[], [""printf"", ""%u"", ""r"", ""return_icmp6"", ""&"", ""255""]]",[4872133785150696032],932
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,266,,"printf(""%u)"", r->return_icmp6 & 255);","[""addLog""]","[[], [""printf"", ""%u"", ""r"", ""return_icmp6"", ""&"", ""255""]]",[4872133785150696032],932
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,256,,"printf(""(%u)"", r->return_icmp6 & 255);","[""addLog""]","[[], [""printf"", ""%u"", ""r"", ""return_icmp6"", ""&"", ""255""]]",[4872133785150696032],932
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,267,,"printf(""%u)"", r->return_icmp6 & 255);","[""addLog""]","[[], [""printf"", ""%u"", ""r"", ""return_icmp6"", ""&"", ""255""]]",[4872133785150696032],932
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,250,,"printf(""(%s)"", ic->name);","[""addLog""]","[[], [""printf"", ""%s"", ""ic"", ""name""]]",[3089007176917027700],931
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,264,,"printf(""(%s, "", ic->name);","[""addLog""]","[[], [""printf"", ""%s"", ""ic"", ""name""]]",[3089007176917027700],931
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,251,,"printf(""(%s)"", ic->name);","[""addLog""]","[[], [""printf"", ""%s"", ""ic"", ""name""]]",[3089007176917027700],931
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,265,,"printf(""(%s, "", ic->name);","[""addLog""]","[[], [""printf"", ""%s"", ""ic"", ""name""]]",[3089007176917027700],931
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,248,,"printf(""(%u)"", r->return_icmp & 255);","[""addLog""]","[[], [""printf"", ""%u"", ""r"", ""return_icmp"", ""&"", ""255""]]",[3956295685272056069],930
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,262,,"printf(""(%u, "", r->return_icmp & 255);","[""addLog""]","[[], [""printf"", ""%u"", ""r"", ""return_icmp"", ""&"", ""255""]]",[3956295685272056069],930
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,249,,"printf(""(%u)"", r->return_icmp & 255);","[""addLog""]","[[], [""printf"", ""%u"", ""r"", ""return_icmp"", ""&"", ""255""]]",[3956295685272056069],930
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,263,,"printf(""(%u, "", r->return_icmp & 255);","[""addLog""]","[[], [""printf"", ""%u"", ""r"", ""return_icmp"", ""&"", ""255""]]",[3956295685272056069],930
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,246,,"printf("" return-icmp"");","[""addLog""]","[[], [""printf"", ""return"", ""icmp""]]",[5084756166278527670],929
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,260,,"printf("" return-icmp"");","[""addLog""]","[[], [""printf"", ""return"", ""icmp""]]",[5084756166278527670],929
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,247,,"printf("" return-icmp"");","[""addLog""]","[[], [""printf"", ""return"", ""icmp""]]",[5084756166278527670],929
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,261,,"printf("" return-icmp"");","[""addLog""]","[[], [""printf"", ""return"", ""icmp""]]",[5084756166278527670],929
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,671,-1,"printf("" port %u"", p1);",,"[""removeLog""]","[[""printf"", ""port"", ""%u"", ""p1""], []]",[-11399045443309582703],928
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,678,-1,"printf("" port %u"", p1);",,"[""removeLog""]","[[""printf"", ""port"", ""%u"", ""p1""], []]",[-11399045443309582703],928
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,617,-1,"printf("" port %u"", p1);",,"[""removeLog""]","[[""printf"", ""port"", ""%u"", ""p1""], []]",[-11399045443309582703],928
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,624,-1,"printf("" port %u"", p1);",,"[""removeLog""]","[[""printf"", ""port"", ""%u"", ""p1""], []]",[-11399045443309582703],928
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,429,-1,"printf("" global"");",,"[""removeLog""]","[[""printf"", ""global""], []]",[-3308202519487908130],927
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,465,-1,"printf("" global"");",,"[""removeLog""]","[[""printf"", ""global""], []]",[-3308202519487908130],927
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,426,-1,"printf("" global"");",,"[""removeLog""]","[[""printf"", ""global""], []]",[-3308202519487908130],927
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,462,-1,"printf("" global"");",,"[""removeLog""]","[[""printf"", ""global""], []]",[-3308202519487908130],927
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,299,-1,"printf("" on ! %s"", r->ifname);",,"[""removeLog""]","[[""printf"", ""on"", ""%s"", ""r"", ""ifname""], []]",[-5740704984773001603],926
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,301,-1,"printf("" on %s"", r->ifname);",,"[""removeLog""]","[[""printf"", ""on"", ""%s"", ""r"", ""ifname""], []]",[-5740704984773001603],926
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,300,-1,"printf("" on ! %s"", r->ifname);",,"[""removeLog""]","[[""printf"", ""on"", ""%s"", ""r"", ""ifname""], []]",[-5740704984773001603],926
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,302,-1,"printf("" on %s"", r->ifname);",,"[""removeLog""]","[[""printf"", ""on"", ""%s"", ""r"", ""ifname""], []]",[-5740704984773001603],926
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,258,-1,"printf(""(%s)"", ic6->name);",,"[""removeLog""]","[[""printf"", ""%s"", ""ic6"", ""name""], []]",[4479797274679857961],925
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,269,-1,"printf(""%s)"", ic6->name);",,"[""removeLog""]","[[""printf"", ""%s"", ""ic6"", ""name""], []]",[4479797274679857961],925
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,257,-1,"printf(""(%s)"", ic6->name);",,"[""removeLog""]","[[""printf"", ""%s"", ""ic6"", ""name""], []]",[4479797274679857961],925
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,268,-1,"printf(""%s)"", ic6->name);",,"[""removeLog""]","[[""printf"", ""%s"", ""ic6"", ""name""], []]",[4479797274679857961],925
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,256,-1,"printf(""(%u)"", r->return_icmp6 & 255);",,"[""removeLog""]","[[""printf"", ""%u"", ""r"", ""return_icmp6"", ""&"", ""255""], []]",[-4872133785150696032],924
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,267,-1,"printf(""%u)"", r->return_icmp6 & 255);",,"[""removeLog""]","[[""printf"", ""%u"", ""r"", ""return_icmp6"", ""&"", ""255""], []]",[-4872133785150696032],924
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,255,-1,"printf(""(%u)"", r->return_icmp6 & 255);",,"[""removeLog""]","[[""printf"", ""%u"", ""r"", ""return_icmp6"", ""&"", ""255""], []]",[-4872133785150696032],924
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,266,-1,"printf(""%u)"", r->return_icmp6 & 255);",,"[""removeLog""]","[[""printf"", ""%u"", ""r"", ""return_icmp6"", ""&"", ""255""], []]",[-4872133785150696032],924
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,251,-1,"printf(""(%s)"", ic->name);",,"[""removeLog""]","[[""printf"", ""%s"", ""ic"", ""name""], []]",[-3089007176917027700],923
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,265,-1,"printf(""(%s, "", ic->name);",,"[""removeLog""]","[[""printf"", ""%s"", ""ic"", ""name""], []]",[-3089007176917027700],923
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,250,-1,"printf(""(%s)"", ic->name);",,"[""removeLog""]","[[""printf"", ""%s"", ""ic"", ""name""], []]",[-3089007176917027700],923
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,264,-1,"printf(""(%s, "", ic->name);",,"[""removeLog""]","[[""printf"", ""%s"", ""ic"", ""name""], []]",[-3089007176917027700],923
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,249,-1,"printf(""(%u)"", r->return_icmp & 255);",,"[""removeLog""]","[[""printf"", ""%u"", ""r"", ""return_icmp"", ""&"", ""255""], []]",[-3956295685272056069],922
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,263,-1,"printf(""(%u, "", r->return_icmp & 255);",,"[""removeLog""]","[[""printf"", ""%u"", ""r"", ""return_icmp"", ""&"", ""255""], []]",[-3956295685272056069],922
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,248,-1,"printf(""(%u)"", r->return_icmp & 255);",,"[""removeLog""]","[[""printf"", ""%u"", ""r"", ""return_icmp"", ""&"", ""255""], []]",[-3956295685272056069],922
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,262,-1,"printf(""(%u, "", r->return_icmp & 255);",,"[""removeLog""]","[[""printf"", ""%u"", ""r"", ""return_icmp"", ""&"", ""255""], []]",[-3956295685272056069],922
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,247,-1,"printf("" return-icmp"");",,"[""removeLog""]","[[""printf"", ""return"", ""icmp""], []]",[-5084756166278527670],921
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,261,-1,"printf("" return-icmp"");",,"[""removeLog""]","[[""printf"", ""return"", ""icmp""], []]",[-5084756166278527670],921
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,246,-1,"printf("" return-icmp"");",,"[""removeLog""]","[[""printf"", ""return"", ""icmp""], []]",[-5084756166278527670],921
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,260,-1,"printf("" return-icmp"");",,"[""removeLog""]","[[""printf"", ""return"", ""icmp""], []]",[-5084756166278527670],921
https://github.com/collectd/collectd/commit/7383e7cf33edb331e0ec64ba2c1f67b297856dc8,01 Apr 2016,liboconfig: malloc + memset -> calloc,11,data/crawl/collectd/hunk_111.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_111.cpp,data/crawl/collectd/new_hunk_111.cpp,6,6,"fprintf (stderr, ""malloc failed.\n"");","fprintf (stderr, ""calloc failed.\n"");","[""updateContent""]","[[""malloc""], [""calloc""]]",[726483826770663510],920
https://github.com/collectd/collectd/commit/4743f198cfd38e2776bf1a8af8b31c37c4ea537e,28 Mar 2016,collectd-tg: malloc + memset -> calloc,5,data/crawl/collectd/hunk_112.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_112.cpp,data/crawl/collectd/new_hunk_112.cpp,6,6,"fprintf (stderr, ""malloc failed.\n"");","fprintf (stderr, ""calloc failed.\n"");","[""updateContent""]","[[""malloc""], [""calloc""]]",[726483826770663510],920
https://github.com/collectd/collectd/commit/2facdd7eef91949c1594f06703afeb6dd87e51cc,28 Mar 2016,"treewide: fix a few error messages

Don't log that malloc failed when we call calloc",26,data/crawl/collectd/hunk_113.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_113.cpp,data/crawl/collectd/new_hunk_113.cpp,3,3,"fprintf (stderr, ""malloc failed: %s\n"", strerror (errno));","fprintf (stderr, ""calloc failed: %s\n"", strerror (errno));","[""updateContent""]","[[""malloc""], [""calloc""]]",[726483826770663510],920
https://github.com/collectd/collectd/commit/2facdd7eef91949c1594f06703afeb6dd87e51cc,28 Mar 2016,"treewide: fix a few error messages

Don't log that malloc failed when we call calloc",26,data/crawl/collectd/hunk_113.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_113.cpp,data/crawl/collectd/new_hunk_113.cpp,10,10,"fprintf (stderr, ""malloc failed: %s\n"", strerror (errno));","fprintf (stderr, ""calloc failed: %s\n"", strerror (errno));","[""updateContent""]","[[""malloc""], [""calloc""]]",[726483826770663510],920
https://github.com/collectd/collectd/commit/6e6c1eecf05ac8bc9e59b0967cb87e578253d5a0,25 Sep 2016,"command parser: Add support for the GETVAL command.

Implement the generic interface for GETVAL and switch the GETVAL
implementation to use the generic interface.",182,data/crawl/collectd/hunk_76.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_76.cpp,data/crawl/collectd/new_hunk_76.cpp,-1,72,,"cmd_error (CMD_UNKNOWN_COMMAND, &err,
""Unexpected command: `%s'."", CMD_TO_STRING (cmd.type));","[""addLog""]","[[], [""cmd_error"", ""CMD_UNKNOWN_COMMAND"", ""&err"", ""Unexpected"", ""command"", ""%s"", ""CMD_TO_STRING"", ""cmd"", ""type""]]",[-1134001138038500100],919
https://github.com/collectd/collectd/commit/6108316e4008edce45c6d861b49e339c1360181f,25 Sep 2016,"command parser: Add support for the LISTVAL command.

Implement the generic interface for LISTVAL and switch the LISTVAL
implementation to use the generic interface.",85,data/crawl/collectd/hunk_79.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_79.cpp,data/crawl/collectd/new_hunk_79.cpp,-1,25,,"cmd_error (CMD_UNKNOWN_COMMAND, &err,
""Unexpected command: `%s'."", CMD_TO_STRING (cmd.type));","[""addLog""]","[[], [""cmd_error"", ""CMD_UNKNOWN_COMMAND"", ""&err"", ""Unexpected"", ""command"", ""%s"", ""CMD_TO_STRING"", ""cmd"", ""type""]]",[-1134001138038500100],919
https://github.com/collectd/collectd/commit/938471bee8cc86d32615144c5037f17338b19e70,25 Sep 2016,"command parser: Add support for the FLUSH command.

That is, implement the generic interface for FLUSH and switch the FLUSH
implementation to use the generic interface.",230,data/crawl/collectd/hunk_80.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_80.cpp,data/crawl/collectd/new_hunk_80.cpp,-1,115,,"cmd_error (CMD_UNKNOWN_COMMAND, &err, ""Unexpected command: `%s'."",
CMD_TO_STRING (cmd.type));","[""addLog""]","[[], [""cmd_error"", ""CMD_UNKNOWN_COMMAND"", ""&err"", ""Unexpected"", ""command"", ""%s"", ""CMD_TO_STRING"", ""cmd"", ""type""]]",[-1134001138038500100],919
https://github.com/collectd/collectd/commit/3090a8852788aaca0d8063fdf9ac4ba66f048cd8,25 Sep 2016,"Add a generic interface for parsing the text protocol.

Implement it for PUTVAL for now.

The text protocol is used in multiple places and the parser will avoid code
duplication in client programs which can, instead, use it to generate the
respective requests.

Use the 'cmd_' prefix for public functions related to command handling.",484,data/crawl/collectd/hunk_94.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_94.cpp,data/crawl/collectd/new_hunk_94.cpp,-1,70,,"cmd_error (CMD_UNKNOWN_COMMAND, &err, ""Unexpected command: `%s'."",
CMD_TO_STRING (cmd.type));","[""addLog""]","[[], [""cmd_error"", ""CMD_UNKNOWN_COMMAND"", ""&err"", ""Unexpected"", ""command"", ""%s"", ""CMD_TO_STRING"", ""cmd"", ""type""]]",[-1134001138038500100],919
https://github.com/collectd/collectd/commit/936c450a86c841eea89888c8550c9118fae90c25,28 Nov 2016,Tree wide: Reformat with clang-format.,141000,data/crawl/collectd/hunk_59.cpp,,,data/crawl/collectd/old_hunk_59.cpp,data/crawl/collectd/new_hunk_59.cpp,140,126,"fprintf (stderr, ""Usage: %s <-s socket> <-n value_spec> <-H hostname> [options]\n""
""\n""
""Valid options are:\n""
""  -s <socket>    Path to collectd's UNIX-socket.\n""
""  -n <v_spec>    Value specification to get from collectd.\n""
""                 Format: `plugin-instance/type-instance'\n""
""  -d <ds>        Select the DS to examine. May be repeated to examine multiple\n""
""                 DSes. By default all DSes are used.\n""
""  -g <consol>    Method to use to consolidate several DSes.\n""
""                 See below for a list of valid arguments.\n""
""  -H <host>      Hostname to query the values for.\n""
""  -c <range>     Critical range\n""
""  -w <range>     Warning range\n""
""  -m             Treat \""Not a Number\"" (NaN) as critical (default: warning)\n""
""\n""
""Consolidation functions:\n""
""  none:          Apply the warning- and critical-ranges to each data-source\n""
""                 individually.\n""
""  average:       Calculate the average of all matching DSes and apply the\n""
""                 warning- and critical-ranges to the calculated average.\n""
""  sum:           Apply the ranges to the sum of all DSes.\n""
""  percentage:    Apply the ranges to the ratio (in percent) of the first value\n""
""                 and the sum of all values.""
""\n"", name);","fprintf(stderr,
          ""Usage: %s <-s socket> <-n value_spec> <-H hostname> [options]\n""
          ""\n""
          ""Valid options are:\n""
          ""  -s <socket>    Path to collectd's UNIX-socket.\n""
          ""  -n <v_spec>    Value specification to get from collectd.\n""
          ""                 Format: `plugin-instance/type-instance'\n""
          ""  -d <ds>        Select the DS to examine. May be repeated to ""
          ""examine multiple\n""
          ""                 DSes. By default all DSes are used.\n""
          ""  -g <consol>    Method to use to consolidate several DSes.\n""
          ""                 See below for a list of valid arguments.\n""
          ""  -H <host>      Hostname to query the values for.\n""
          ""  -c <range>     Critical range\n""
          ""  -w <range>     Warning range\n""
          ""  -m             Treat \""Not a Number\"" (NaN) as critical (default: ""
          ""warning)\n""
          ""\n""
          ""Consolidation functions:\n""
          ""  none:          Apply the warning- and critical-ranges to each ""
          ""data-source\n""
          ""                 individually.\n""
          ""  average:       Calculate the average of all matching DSes and ""
          ""apply the\n""
          ""                 warning- and critical-ranges to the calculated ""
          ""average.\n""
          ""  sum:           Apply the ranges to the sum of all DSes.\n""
          ""  percentage:    Apply the ranges to the ratio (in percent) of the ""
          ""first value\n""
          ""                 and the sum of all values.""
          ""\n"",
          name);","[""addContent"", ""updateContent""]","[[], []]",[0],918
https://github.com/collectd/collectd/commit/79963d13c1884d1d92667cc502ad20758b084a12,28 Nov 2016,Tree wide: Reformat with clang-format.,145385,data/crawl/collectd/hunk_64.cpp,,,data/crawl/collectd/old_hunk_64.cpp,data/crawl/collectd/new_hunk_64.cpp,140,126,"fprintf (stderr, ""Usage: %s <-s socket> <-n value_spec> <-H hostname> [options]\n""
""\n""
""Valid options are:\n""
""  -s <socket>    Path to collectd's UNIX-socket.\n""
""  -n <v_spec>    Value specification to get from collectd.\n""
""                 Format: `plugin-instance/type-instance'\n""
""  -d <ds>        Select the DS to examine. May be repeated to examine multiple\n""
""                 DSes. By default all DSes are used.\n""
""  -g <consol>    Method to use to consolidate several DSes.\n""
""                 See below for a list of valid arguments.\n""
""  -H <host>      Hostname to query the values for.\n""
""  -c <range>     Critical range\n""
""  -w <range>     Warning range\n""
""  -m             Treat \""Not a Number\"" (NaN) as critical (default: warning)\n""
""\n""
""Consolidation functions:\n""
""  none:          Apply the warning- and critical-ranges to each data-source\n""
""                 individually.\n""
""  average:       Calculate the average of all matching DSes and apply the\n""
""                 warning- and critical-ranges to the calculated average.\n""
""  sum:           Apply the ranges to the sum of all DSes.\n""
""  percentage:    Apply the ranges to the ratio (in percent) of the first value\n""
""                 and the sum of all values.""
""\n"", name);","fprintf(stderr,
          ""Usage: %s <-s socket> <-n value_spec> <-H hostname> [options]\n""
          ""\n""
          ""Valid options are:\n""
          ""  -s <socket>    Path to collectd's UNIX-socket.\n""
          ""  -n <v_spec>    Value specification to get from collectd.\n""
          ""                 Format: `plugin-instance/type-instance'\n""
          ""  -d <ds>        Select the DS to examine. May be repeated to ""
          ""examine multiple\n""
          ""                 DSes. By default all DSes are used.\n""
          ""  -g <consol>    Method to use to consolidate several DSes.\n""
          ""                 See below for a list of valid arguments.\n""
          ""  -H <host>      Hostname to query the values for.\n""
          ""  -c <range>     Critical range\n""
          ""  -w <range>     Warning range\n""
          ""  -m             Treat \""Not a Number\"" (NaN) as critical (default: ""
          ""warning)\n""
          ""\n""
          ""Consolidation functions:\n""
          ""  none:          Apply the warning- and critical-ranges to each ""
          ""data-source\n""
          ""                 individually.\n""
          ""  average:       Calculate the average of all matching DSes and ""
          ""apply the\n""
          ""                 warning- and critical-ranges to the calculated ""
          ""average.\n""
          ""  sum:           Apply the ranges to the sum of all DSes.\n""
          ""  percentage:    Apply the ranges to the ratio (in percent) of the ""
          ""first value\n""
          ""                 and the sum of all values.""
          ""\n"",
          name);","[""addContent"", ""updateContent""]","[[], []]",[0],918
https://github.com/collectd/collectd/commit/a04ffbda508739433df0975328100e33e7986c87,03 Nov 2010,"Many plugins and files: Convert ""interval_g"" and ""vl->interval"" to cdtime_t.",366,data/crawl/collectd/hunk_204.cpp,,,data/crawl/collectd/old_hunk_204.cpp,data/crawl/collectd/new_hunk_204.cpp,7,13,"fprintf (stderr, ""Cannot set the interval to a correct value.\n""
""Please check your settings.\n"");","fprintf (stderr, ""Cannot set the interval to a ""
""correct value.\n""
""Please check your settings.\n"");","[""updateContent"", ""addContent""]","[[], []]",[0],918
https://github.com/collectd/collectd/commit/f34da8f00133da85d1538f8bc7dd118f30f853ea,28 Jan 2007,unixsock plugin: Transmit the DS name so clients can chose which values they need.,38,data/crawl/collectd/hunk_480.cpp,,,data/crawl/collectd/old_hunk_480.cpp,data/crawl/collectd/new_hunk_480.cpp,11,21,"fprintf (fh, "" %12e"", vc->gauge[i]);","fprintf (fh, ""%12e"", vc->gauge[i]);","[""updateContent""]","[[], []]",[0],918
https://github.com/collectd/collectd/commit/619adc097bbc8f26e846db9a6cdfcb0322ba9944,12 May 2017,"src/utils_cmd_putval.c: Fix multi-value PUTVAL.

vl.values was allocated outside of the loop and then copied into each
ret_putval->vl[]. This means that later values overwrote the values
stored in previous ret_putval->vl[].",36,data/crawl/collectd/hunk_38.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_38.cpp,data/crawl/collectd/new_hunk_38.cpp,-1,6,,"cmd_error(CMD_ERROR, err, ""malloc failed."");","[""addLog""]","[[], [""cmd_error"", ""CMD_ERROR"", ""err"", ""malloc"", ""failed""]]",[-25722487241109501475],917
https://github.com/collectd/collectd/commit/1aa4295ba6875ceb02a7383237bc2485ffab9c1e,25 Sep 2016,"command parser: Add a vector-based interface.

The new interface expects a parsed list of fields. Parsing of input buffers
is now done centrally in the generic code and the existing parser is a
wrapper around this and the new vector-based parser. The actual command
parsers (PUTVAL for now) receive the parsed list of fields.

As a side-effect, this changes the parser behavior a little:

 - ""foo=a string with spaces or \\ special characters"" is now valid syntax
   for specifying options in addition to foo=""value with spaces, etc."".
 - foo= is now a valid option even without quotes around the empty value.",308,data/crawl/collectd/hunk_84.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_84.cpp,data/crawl/collectd/new_hunk_84.cpp,-1,40,,"cmd_error (CMD_ERROR, err, ""malloc failed."");","[""addLog""]","[[], [""cmd_error"", ""CMD_ERROR"", ""err"", ""malloc"", ""failed""]]",[-25722487241109501475],917
https://github.com/collectd/collectd/commit/3090a8852788aaca0d8063fdf9ac4ba66f048cd8,25 Sep 2016,"Add a generic interface for parsing the text protocol.

Implement it for PUTVAL for now.

The text protocol is used in multiple places and the parser will avoid code
duplication in client programs which can, instead, use it to generate the
respective requests.

Use the 'cmd_' prefix for public functions related to command handling.",484,data/crawl/collectd/hunk_92.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_92.cpp,data/crawl/collectd/new_hunk_92.cpp,-1,3,,"cmd_error (CMD_ERROR, err, ""malloc failed."");","[""addLog""]","[[], [""cmd_error"", ""CMD_ERROR"", ""err"", ""malloc"", ""failed""]]",[-25722487241109501475],917
https://github.com/collectd/collectd/commit/3090a8852788aaca0d8063fdf9ac4ba66f048cd8,25 Sep 2016,"Add a generic interface for parsing the text protocol.

Implement it for PUTVAL for now.

The text protocol is used in multiple places and the parser will avoid code
duplication in client programs which can, instead, use it to generate the
respective requests.

Use the 'cmd_' prefix for public functions related to command handling.",484,data/crawl/collectd/hunk_92.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_92.cpp,data/crawl/collectd/new_hunk_92.cpp,-1,10,,"cmd_error (CMD_ERROR, err, ""malloc failed."");","[""addLog""]","[[], [""cmd_error"", ""CMD_ERROR"", ""err"", ""malloc"", ""failed""]]",[-25722487241109501475],917
https://github.com/collectd/collectd/commit/569a23ffadffa658bd7af8c58be6f36e4e8a6854,10 Jun 2006,octo@casella:~/collectd $ svn merge -r753:807 trunk branches/processes,2143,data/crawl/collectd/hunk_509.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_509.cpp,data/crawl/collectd/new_hunk_509.cpp,-1,119,,"printf(""apcups: Failed...\n"");","[""addLog""]","[[], [""printf"", ""apcups"", ""Failed"", ""\\n""]]",[6517545720927913590],916
https://github.com/collectd/collectd/commit/09cc422eeae5dd0fa1e5f1f6b472b8c959b315d9,06 Jun 2006,"octo@leeloo:~/collectd $ svn merge -r737:784 branches/apcups trunk

The trunk did not compile with the `apcups' plugin enabled. Since it's enabled
by default some extra action was neccessary. The `apcups' plugin in the branch
compiles and may be useable, so I'm merging it back to get to some consistent
state.",851,data/crawl/collectd/hunk_512.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_512.cpp,data/crawl/collectd/new_hunk_512.cpp,-1,51,,"printf(""apcups: Failed...\n"");","[""addLog""]","[[], [""printf"", ""apcups"", ""Failed"", ""\\n""]]",[6517545720927913590],916
https://github.com/collectd/collectd/commit/db336a80e7f9e46170e637cc140756d35a90da66,22 May 2006,"1. (major) Code no longer calls exit() when it encounters an error. It
will send an appropriate error via syslog instead.

2. Adopted the code recommended by Octo (thx)  It was considerably cleaner
and easier to understand. Not to mention the plugin size is smaller. A win
all around ;-) I rearranged some, though.

3. Fixed the indentation. I believe I see what is recommended by octo....
Hopefully, it is now similar to the other plugins.

4. On a failure to connect apcups will log the initial failure via syslog. It will
only log another failure after the integer apcConnStatus rolls over. This should prevent
apcups from overloading syslog.

5. Other minor code cleanups.",376,data/crawl/collectd/hunk_514.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_514.cpp,data/crawl/collectd/new_hunk_514.cpp,-1,165,,"printf(""apcups: Failed...\n"");","[""addLog""]","[[], [""printf"", ""apcups"", ""Failed"", ""\\n""]]",[6517545720927913590],916
https://github.com/collectd/collectd/commit/108c20b23f2ca3d0ae67a44dfd8da31a7db7544c,11 Feb 2007,"Changed from the old `libconfig' to the new `liboconfig'.

Much work lies in front of us.. :/",1437,data/crawl/collectd/hunk_471.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_471.cpp,data/crawl/collectd/new_hunk_471.cpp,302,-1,"fprintf (stderr, ERR_NEEDS_SECTION, shortvar);",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""ERR_NEEDS_SECTION"", ""shortvar""], []]",[15396723425136558495],915
https://github.com/collectd/collectd/commit/3cf46d9689f6fae30e19f3898852083003862552,15 Jan 2006,"Fixed a but in the mysql module, so it builds as write-only module, too.
Shorted the command line options to `help' and `dont fork' only.
Brought `getopt' back: `libconfig' doesn't do what I want: Command line options are evaluated after config files. So I don't know what mode the daemon will be in when parsing the file. That's why I moved everything into the config file.
Removed `cf_callback_usage' again.
Changed `cf_read' to not need `argc' and `argv' anymore..",209,data/crawl/collectd/hunk_542.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_542.cpp,data/crawl/collectd/new_hunk_542.cpp,5,-1,"fprintf (stderr, ERR_NEEDS_SECTION, shortvar);",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""ERR_NEEDS_SECTION"", ""shortvar""], []]",[15396723425136558495],915
https://github.com/collectd/collectd/commit/424db8460223d3fb13cf96ba0e93b246c74639dc,20 Dec 2005,"Changed `plugin_set_dir' to take a `const' argument.
Reorganized the `configfile.c' file. Changed callback names, their order and added comments.
Added `cf_callback_mode_plugindir' to allow the config file to change the plugin directory.",210,data/crawl/collectd/hunk_547.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_547.cpp,data/crawl/collectd/new_hunk_547.cpp,15,-1,"fprintf (stderr, ERR_NEEDS_SECTION, shortvar);",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""ERR_NEEDS_SECTION"", ""shortvar""], []]",[15396723425136558495],915
https://github.com/collectd/collectd/commit/276490e1d23db4c7db710075954655583c728e3e,12 Feb 2007,Removed `src/libconfig/*'.,2235,data/crawl/collectd/hunk_464.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_464.cpp,data/crawl/collectd/new_hunk_464.cpp,345,-1,"fprintf(stderr, ""Error processing command (command was valid, but an error occured, errno was set)\n"");",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""Error"", ""processing"", ""command"", ""command"", ""was"", ""valid"", ""but"", ""an"", ""error"", ""occured"", ""errno"", ""was"", ""set"", ""\\n""], []]",[-11570070399454792699],914
https://github.com/collectd/collectd/commit/276490e1d23db4c7db710075954655583c728e3e,12 Feb 2007,Removed `src/libconfig/*'.,2235,data/crawl/collectd/hunk_465.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_465.cpp,data/crawl/collectd/new_hunk_465.cpp,175,-1,"fprintf(stderr, ""Error processing command (command was valid, but an error occured, errno was set)\n"");",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""Error"", ""processing"", ""command"", ""command"", ""was"", ""valid"", ""but"", ""an"", ""error"", ""occured"", ""errno"", ""was"", ""set"", ""\\n""], []]",[-11570070399454792699],914
https://github.com/collectd/collectd/commit/276490e1d23db4c7db710075954655583c728e3e,12 Feb 2007,Removed `src/libconfig/*'.,2235,data/crawl/collectd/hunk_466.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_466.cpp,data/crawl/collectd/new_hunk_466.cpp,94,-1,"fprintf(stderr, ""Error processing command (command was valid, but an error occured, errno was set)\n"");",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""Error"", ""processing"", ""command"", ""command"", ""was"", ""valid"", ""but"", ""an"", ""error"", ""occured"", ""errno"", ""was"", ""set"", ""\\n""], []]",[-11570070399454792699],914
https://github.com/collectd/collectd/commit/276490e1d23db4c7db710075954655583c728e3e,12 Feb 2007,Removed `src/libconfig/*'.,2235,data/crawl/collectd/hunk_464.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_464.cpp,data/crawl/collectd/new_hunk_464.cpp,338,-1,"fprintf(stderr, ""Invalid command: \""%s\""\n"", cmd);",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""Invalid"", ""command"", ""\\"", ""%s\\"", ""\\n"", ""cmd""], []]",[20102511200863750345],913
https://github.com/collectd/collectd/commit/276490e1d23db4c7db710075954655583c728e3e,12 Feb 2007,Removed `src/libconfig/*'.,2235,data/crawl/collectd/hunk_465.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_465.cpp,data/crawl/collectd/new_hunk_465.cpp,170,-1,"fprintf(stderr, ""Invalid command: \""%s\""\n"", cmd);",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""Invalid"", ""command"", ""\\"", ""%s\\"", ""\\n"", ""cmd""], []]",[20102511200863750345],913
https://github.com/collectd/collectd/commit/276490e1d23db4c7db710075954655583c728e3e,12 Feb 2007,Removed `src/libconfig/*'.,2235,data/crawl/collectd/hunk_466.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_466.cpp,data/crawl/collectd/new_hunk_466.cpp,89,-1,"fprintf(stderr, ""Invalid command: \""%s\""\n"", cmd);",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""Invalid"", ""command"", ""\\"", ""%s\\"", ""\\n"", ""cmd""], []]",[20102511200863750345],913
https://github.com/collectd/collectd/commit/6e779261c08a8996ed476d23638fc62ad867fa5f,23 Aug 2007,"exec and unixsock plugin: Move the shared `PUTVAL' code into src/utils_cmd_putval.[ch].

The putval code itself has been extended to allow `options' which can currently
be used to set the interval of the value-list(s) being submitted. Also,
submiting multiple value-lists in one command has been implemented. The
manpages should be up to date.",560,data/crawl/collectd/hunk_414.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_414.cpp,data/crawl/collectd/new_hunk_414.cpp,-1,143,,"fprintf (fh, ""-1 Cannot parse identifier.\n"");","[""addLog""]","[[], [""fprintf"", ""fh"", ""1"", ""Cannot"", ""parse"", ""identifier"", ""\\n""]]",[-2315965906722351118],912
https://github.com/collectd/collectd/commit/d60759821fc7cfa47d279fe69307e80ec206ddf6,26 Mar 2007,unixsock plugin: Fixed many issues. `GETVAL' and `PUTVAL' are now mostly working as intended.,69,data/crawl/collectd/hunk_431.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_431.cpp,data/crawl/collectd/new_hunk_431.cpp,-1,18,,"fprintf (fh, ""-1 Cannot parse identifier.\n"");","[""addLog""]","[[], [""fprintf"", ""fh"", ""1"", ""Cannot"", ""parse"", ""identifier"", ""\\n""]]",[-2315965906722351118],912
https://github.com/collectd/collectd/commit/d60759821fc7cfa47d279fe69307e80ec206ddf6,26 Mar 2007,unixsock plugin: Fixed many issues. `GETVAL' and `PUTVAL' are now mostly working as intended.,69,data/crawl/collectd/hunk_432.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_432.cpp,data/crawl/collectd/new_hunk_432.cpp,-1,17,,"fprintf (fh, ""-1 Cannot parse identifier.\n"");","[""addLog""]","[[], [""fprintf"", ""fh"", ""1"", ""Cannot"", ""parse"", ""identifier"", ""\\n""]]",[-2315965906722351118],912
https://github.com/collectd/collectd/commit/963766d0bcbbcdaeb7ebf567046c613455133666,23 Jan 2008,"src/utils_cmd_putnotif.[ch]: Added a new module which handles parsing of notifications from some command line or similar.

Of course, this is similar to the `utils_cmd_putval' module.",202,data/crawl/collectd/hunk_394.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_394.cpp,data/crawl/collectd/new_hunk_394.cpp,-1,163,,"fprintf (fh, ""0 Success\n"");","[""addLog""]","[[], [""fprintf"", ""fh"", ""0"", ""Success\\n""]]",[-1294967653535268681],911
https://github.com/collectd/collectd/commit/6e779261c08a8996ed476d23638fc62ad867fa5f,23 Aug 2007,"exec and unixsock plugin: Move the shared `PUTVAL' code into src/utils_cmd_putval.[ch].

The putval code itself has been extended to allow `options' which can currently
be used to set the interval of the value-list(s) being submitted. Also,
submiting multiple value-lists in one command has been implemented. The
manpages should be up to date.",560,data/crawl/collectd/hunk_414.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_414.cpp,data/crawl/collectd/new_hunk_414.cpp,-1,209,,"fprintf (fh, ""0 Success\n"");","[""addLog""]","[[], [""fprintf"", ""fh"", ""0"", ""Success\\n""]]",[-1294967653535268681],911
https://github.com/collectd/collectd/commit/d60759821fc7cfa47d279fe69307e80ec206ddf6,26 Mar 2007,unixsock plugin: Fixed many issues. `GETVAL' and `PUTVAL' are now mostly working as intended.,69,data/crawl/collectd/hunk_433.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_433.cpp,data/crawl/collectd/new_hunk_433.cpp,-1,11,,"fprintf (fh, ""0 Success\n"");","[""addLog""]","[[], [""fprintf"", ""fh"", ""0"", ""Success\\n""]]",[-1294967653535268681],911
https://github.com/collectd/collectd/commit/f5edd182195cb7a13fa32846ae869a8b8dcc1e3f,19 Dec 2008,"Do not use *printf() to report errors / debugging messages.

The only exception to that is during configuration (which is done before
daemonization) to let the user know about problems immediately.",29,data/crawl/collectd/hunk_336.cpp,use same constant,non-trivial,data/crawl/collectd/old_hunk_336.cpp,data/crawl/collectd/new_hunk_336.cpp,3,3,"fprintf (stderr, ""ERROR: %s:%i: ksp == NULL\n"", __FILE__, __LINE__);","ERROR (""ERROR: %s:%i: ksp == NULL\n"", __FILE__, __LINE__);","[""updateLog"", ""removeVariable""]","[[""fprintf"", ""stderr""], [""ERROR""]]",[22210794069444832109],910
https://github.com/collectd/collectd/commit/f5edd182195cb7a13fa32846ae869a8b8dcc1e3f,19 Dec 2008,"Do not use *printf() to report errors / debugging messages.

The only exception to that is during configuration (which is done before
daemonization) to let the user know about problems immediately.",29,data/crawl/collectd/hunk_336.cpp,use same constant,non-trivial,data/crawl/collectd/old_hunk_336.cpp,data/crawl/collectd/new_hunk_336.cpp,8,8,"fprintf (stderr, ""ERROR: %s:%i: ksp->ks_type != KSTAT_TYPE_NAMED\n"", __FILE__, __LINE__);","ERROR (""ERROR: %s:%i: ksp->ks_type != KSTAT_TYPE_NAMED\n"", __FILE__, __LINE__);","[""updateLog"", ""removeVariable""]","[[""fprintf"", ""stderr""], [""ERROR""]]",[22210794069444832109],910
https://github.com/collectd/collectd/commit/f5edd182195cb7a13fa32846ae869a8b8dcc1e3f,19 Dec 2008,"Do not use *printf() to report errors / debugging messages.

The only exception to that is during configuration (which is done before
daemonization) to let the user know about problems immediately.",29,data/crawl/collectd/hunk_339.cpp,use same constant,non-trivial,data/crawl/collectd/old_hunk_339.cpp,data/crawl/collectd/new_hunk_339.cpp,3,3,"fprintf (stderr, ""ipmi plugin: thread_init failed.\n"");","ERROR (""ipmi plugin: thread_init failed.\n"");","[""updateLog"", ""removeVariable""]","[[""fprintf"", ""stderr""], [""ERROR""]]",[22210794069444832109],910
https://github.com/collectd/collectd/commit/08d2e13121e70afcf65d3925a16b4c8a6f41c915,18 Feb 2009,"src/liboconfig/oconfig.[ch]: Add `oconfig_clone'.

This new function clones an entire sub-tree, that can be free'd again
using `oconfig_free'.",98,data/crawl/collectd/hunk_331.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_331.cpp,data/crawl/collectd/new_hunk_331.cpp,-1,21,,"fprintf (stderr, ""strdup failed.\n"");","[""addLog""]","[[], [""fprintf"", ""stderr"", ""strdup"", ""failed"", ""\\n""]]",[-31898705550608075283],909
https://github.com/collectd/collectd/commit/08d2e13121e70afcf65d3925a16b4c8a6f41c915,18 Feb 2009,"src/liboconfig/oconfig.[ch]: Add `oconfig_clone'.

This new function clones an entire sub-tree, that can be free'd again
using `oconfig_free'.",98,data/crawl/collectd/hunk_331.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_331.cpp,data/crawl/collectd/new_hunk_331.cpp,-1,50,,"fprintf (stderr, ""strdup failed.\n"");","[""addLog""]","[[], [""fprintf"", ""stderr"", ""strdup"", ""failed"", ""\\n""]]",[-31898705550608075283],909
https://github.com/collectd/collectd/commit/953bd0f881faa40c415a1f1a9d7e2da739d343ff,06 Oct 2008,"src/collectd-nagios.c: Improve handling of lines returned from `GETVAL'.

Then selecting only certain data sources with the `-d' option, the program
would try to read more lines from the server than the server reports, resulting
in the communication never finishing.

This patch resolves that problem and introduces a couple other error handling
blocks.

Thanks to Fabian Linzberger for pointing this out.",54,data/crawl/collectd/hunk_363.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_363.cpp,data/crawl/collectd/new_hunk_363.cpp,-1,42,,"fprintf (stderr, ""strdup failed.\n"");","[""addLog""]","[[], [""fprintf"", ""stderr"", ""strdup"", ""failed"", ""\\n""]]",[-31898705550608075283],909
https://github.com/collectd/collectd/commit/7ee1b9ecea5a261b82d5a91416d8ae25e5fdd237,07 Nov 2009,"Added read callback. And ""read"" in this case means ""plugin_register_complex_read"".",58,data/crawl/collectd/hunk_301.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_301.cpp,data/crawl/collectd/new_hunk_301.cpp,-1,15,,"PyErr_SetString(PyExc_TypeError, ""callback needs a be a callable object."");","[""addLog""]","[[], [""PyErr_SetString"", ""PyExc_TypeError"", ""callback"", ""needs"", ""a"", ""be"", ""a"", ""callable"", ""object""]]",[-11304270591854965537],908
https://github.com/collectd/collectd/commit/f131f0347f58929bdb992ca4dabcb40120757ffc,17 Oct 2009,"Added a workaround to module loading to allow Python scripts to do imports.
Redid the python thread handling.
Added log callback.",165,data/crawl/collectd/hunk_305.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_305.cpp,data/crawl/collectd/new_hunk_305.cpp,-1,12,,"PyErr_SetString(PyExc_TypeError, ""callback needs a be a callable object."");","[""addLog""]","[[], [""PyErr_SetString"", ""PyExc_TypeError"", ""callback"", ""needs"", ""a"", ""be"", ""a"", ""callable"", ""object""]]",[-11304270591854965537],908
https://github.com/collectd/collectd/commit/8d6c9e224c4a719b6cec6f13c27c8e1e3bdff0d8,11 Oct 2009,"Added python plugin.

It adds a ""collectd"" module to the embedded python interpreter
which contains a ""register_config"" method to register config
callbacks and ""Config"" class which contains a config item.",336,data/crawl/collectd/hunk_307.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_307.cpp,data/crawl/collectd/new_hunk_307.cpp,-1,157,,"PyErr_SetString(PyExc_TypeError, ""callback needs a be a callable object."");","[""addLog""]","[[], [""PyErr_SetString"", ""PyExc_TypeError"", ""callback"", ""needs"", ""a"", ""be"", ""a"", ""callable"", ""object""]]",[-11304270591854965537],908
https://github.com/collectd/collectd/commit/a6ce5dbab98419162c5430f08261a4bc27bfe3a1,28 Nov 2009,Added notification support.,240,data/crawl/collectd/hunk_283.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_283.cpp,data/crawl/collectd/new_hunk_283.cpp,-1,115,,"PyErr_SetString(PyExc_TypeError, ""Cannot delete this attribute"");","[""addLog""]","[[], [""PyErr_SetString"", ""PyExc_TypeError"", ""Cannot"", ""delete"", ""this"", ""attribute""]]",[-4098758635858614797],907
https://github.com/collectd/collectd/commit/c98b98bfaaeb26894229d7da66ad145c75fb9b69,27 Oct 2009,"Added new python class ""Values"". Only ""dispatch"" is implemented right now.",335,data/crawl/collectd/hunk_304.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_304.cpp,data/crawl/collectd/new_hunk_304.cpp,-1,123,,"PyErr_SetString(PyExc_TypeError, ""Cannot delete this attribute"");","[""addLog""]","[[], [""PyErr_SetString"", ""PyExc_TypeError"", ""Cannot"", ""delete"", ""this"", ""attribute""]]",[-4098758635858614797],907
https://github.com/collectd/collectd/commit/c98b98bfaaeb26894229d7da66ad145c75fb9b69,27 Oct 2009,"Added new python class ""Values"". Only ""dispatch"" is implemented right now.",335,data/crawl/collectd/hunk_304.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_304.cpp,data/crawl/collectd/new_hunk_304.cpp,-1,138,,"PyErr_SetString(PyExc_TypeError, ""Cannot delete this attribute"");","[""addLog""]","[[], [""PyErr_SetString"", ""PyExc_TypeError"", ""Cannot"", ""delete"", ""this"", ""attribute""]]",[-4098758635858614797],907
https://github.com/collectd/collectd/commit/89eebe98be9968c165800503971782e28a40ce00,05 Dec 2009,Added write method to Values.,116,data/crawl/collectd/hunk_278.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_278.cpp,data/crawl/collectd/new_hunk_278.cpp,-1,27,,"PyErr_SetString(PyExc_RuntimeError, ""type not set"");","[""addLog""]","[[], [""PyErr_SetString"", ""PyExc_RuntimeError"", ""type"", ""not"", ""set""]]",[4076775213891174326],906
https://github.com/collectd/collectd/commit/a6ce5dbab98419162c5430f08261a4bc27bfe3a1,28 Nov 2009,Added notification support.,240,data/crawl/collectd/hunk_283.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_283.cpp,data/crawl/collectd/new_hunk_283.cpp,-1,64,,"PyErr_SetString(PyExc_RuntimeError, ""type not set"");","[""addLog""]","[[], [""PyErr_SetString"", ""PyExc_RuntimeError"", ""type"", ""not"", ""set""]]",[4076775213891174326],906
https://github.com/collectd/collectd/commit/c98b98bfaaeb26894229d7da66ad145c75fb9b69,27 Oct 2009,"Added new python class ""Values"". Only ""dispatch"" is implemented right now.",335,data/crawl/collectd/hunk_304.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_304.cpp,data/crawl/collectd/new_hunk_304.cpp,-1,177,,"PyErr_SetString(PyExc_RuntimeError, ""type not set"");","[""addLog""]","[[], [""PyErr_SetString"", ""PyExc_RuntimeError"", ""type"", ""not"", ""set""]]",[4076775213891174326],906
https://github.com/collectd/collectd/commit/106e2016957fe53e4d249f1352bb5a7ec9caa76b,25 Apr 2010,"collectd-nagios.c: Output performance data with the ""%f"" format string.

Apparently the parser used by nagios is dumb as bread. Thanks to Lao Wai
for pointing this out. For more information, see:
<http://nagiosplug.sourceforge.net/developer-guidelines.html#AEN201>",6,data/crawl/collectd/hunk_237.cpp,use same variable,non-trivial,data/crawl/collectd/old_hunk_237.cpp,data/crawl/collectd/new_hunk_237.cpp,3,3,"printf ("" %s=%g;;;;"", values_names[i], values[i]);","printf ("" %s=%f;;;;"", values_names[i], values[i]);","[""updateContent""]","[[""%g""], [""%f""]]",[1],905
https://github.com/collectd/collectd/commit/106e2016957fe53e4d249f1352bb5a7ec9caa76b,25 Apr 2010,"collectd-nagios.c: Output performance data with the ""%f"" format string.

Apparently the parser used by nagios is dumb as bread. Thanks to Lao Wai
for pointing this out. For more information, see:
<http://nagiosplug.sourceforge.net/developer-guidelines.html#AEN201>",6,data/crawl/collectd/hunk_238.cpp,use same variable,non-trivial,data/crawl/collectd/old_hunk_238.cpp,data/crawl/collectd/new_hunk_238.cpp,3,3,"printf ("" %s=%g;;;;"", values_names[i], values[i]);","printf ("" %s=%f;;;;"", values_names[i], values[i]);","[""updateContent""]","[[""%g""], [""%f""]]",[1],905
https://github.com/collectd/collectd/commit/106e2016957fe53e4d249f1352bb5a7ec9caa76b,25 Apr 2010,"collectd-nagios.c: Output performance data with the ""%f"" format string.

Apparently the parser used by nagios is dumb as bread. Thanks to Lao Wai
for pointing this out. For more information, see:
<http://nagiosplug.sourceforge.net/developer-guidelines.html#AEN201>",6,data/crawl/collectd/hunk_239.cpp,use same variable,non-trivial,data/crawl/collectd/old_hunk_239.cpp,data/crawl/collectd/new_hunk_239.cpp,3,3,"printf ("" %s=%g;;;;"", values_names[i], values[i]);","printf ("" %s=%f;;;;"", values_names[i], values[i]);","[""updateContent""]","[[""%g""], [""%f""]]",[1],905
https://github.com/collectd/collectd/commit/7017d8cd9cff36c1dd757869d9428c50906aaa2b,30 Jun 2010,"collectd-nagios: Implement the ""-m"" option (treat NaNs as critical).",63,data/crawl/collectd/hunk_234.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_234.cpp,data/crawl/collectd/new_hunk_234.cpp,-1,8,,"printf (""CRITICAL: Data source \""%s\"" is NaN\n"",
values_names[i]);","[""addLog""]","[[], [""printf"", ""CRITICAL"", ""Data"", ""source"", ""\\"", ""%s\\"", ""is"", ""NaN\\n"", ""values_names[i]""]]",[-6279072054513330208],904
https://github.com/collectd/collectd/commit/7017d8cd9cff36c1dd757869d9428c50906aaa2b,30 Jun 2010,"collectd-nagios: Implement the ""-m"" option (treat NaNs as critical).",63,data/crawl/collectd/hunk_235.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_235.cpp,data/crawl/collectd/new_hunk_235.cpp,-1,8,,"printf (""CRITICAL: Data source \""%s\"" is NaN\n"",
values_names[i]);","[""addLog""]","[[], [""printf"", ""CRITICAL"", ""Data"", ""source"", ""\\"", ""%s\\"", ""is"", ""NaN\\n"", ""values_names[i]""]]",[-6279072054513330208],904
https://github.com/collectd/collectd/commit/7017d8cd9cff36c1dd757869d9428c50906aaa2b,30 Jun 2010,"collectd-nagios: Implement the ""-m"" option (treat NaNs as critical).",63,data/crawl/collectd/hunk_236.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_236.cpp,data/crawl/collectd/new_hunk_236.cpp,-1,9,,"printf (""CRITICAL: Data source \""%s\"" is NaN\n"",
values_names[i]);","[""addLog""]","[[], [""printf"", ""CRITICAL"", ""Data"", ""source"", ""\\"", ""%s\\"", ""is"", ""NaN\\n"", ""values_names[i]""]]",[-6279072054513330208],904
https://github.com/collectd/collectd/commit/666394e4a4fe8efe6a98266b9dbac32e30064f45,09 Aug 2010,collectdctl: Added support for the ‘putval’ command.,182,data/crawl/collectd/hunk_207.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_207.cpp,data/crawl/collectd/new_hunk_207.cpp,-1,140,,"fprintf (stderr, ""ERROR: %s\n"", lcc_strerror (c));","[""addLog""]","[[], [""fprintf"", ""stderr"", ""ERROR"", ""%s\\n"", ""lcc_strerror"", ""c""]]",[-4211688719665947095],903
https://github.com/collectd/collectd/commit/5b4655df8b9d8e60d0502b0c6ecdcb05e99f7fc7,08 Aug 2010,collectdctl: Improved error reporting.,10,data/crawl/collectd/hunk_213.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_213.cpp,data/crawl/collectd/new_hunk_213.cpp,-1,4,,"fprintf (stderr, ""ERROR: %s\n"", lcc_strerror (c));","[""addLog""]","[[], [""fprintf"", ""stderr"", ""ERROR"", ""%s\\n"", ""lcc_strerror"", ""c""]]",[-4211688719665947095],903
https://github.com/collectd/collectd/commit/5b4655df8b9d8e60d0502b0c6ecdcb05e99f7fc7,08 Aug 2010,collectdctl: Improved error reporting.,10,data/crawl/collectd/hunk_214.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_214.cpp,data/crawl/collectd/new_hunk_214.cpp,-1,4,,"fprintf (stderr, ""ERROR: %s\n"", lcc_strerror (c));","[""addLog""]","[[], [""fprintf"", ""stderr"", ""ERROR"", ""%s\\n"", ""lcc_strerror"", ""c""]]",[-4211688719665947095],903
https://github.com/collectd/collectd/commit/689b59231ea00f607fd27b0feaf0bd79bff0fb80,07 Oct 2017,"ipmi plugin: Implemented IPMI LAN connection and plugin improved

* Added instances support
* Removed the sensor removal in case of reading errors
* Added the lock to do not request new readings until previous reading is complete
* Disabled SDRs local cache
* Added the check for sensors 'is readable' flag
* Added the check for sensor event reading type (if sensor is discrete or not)
* Added checks for sensor states 'scanning disabled' and 'initial update in progress'
* Changes in error reporting",842,data/crawl/collectd/hunk_30.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_30.cpp,data/crawl/collectd/new_hunk_30.cpp,-1,32,,"fprintf(stderr, ""%s\n"", msg);","[""addLog""]","[[], [""fprintf"", ""stderr"", ""%s\\n"", ""msg""]]",[-1393532391984386060],902
https://github.com/collectd/collectd/commit/a841b5f2882acf431f4fd0783f602f3ae80716c5,21 Apr 2010,"src/plugin.c: plugin_log: Append newline to message …

… even when no log-plugin was loaded.",14,data/crawl/collectd/hunk_241.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_241.cpp,data/crawl/collectd/new_hunk_241.cpp,-1,5,,"fprintf (stderr, ""%s\n"", msg);","[""addLog""]","[[], [""fprintf"", ""stderr"", ""%s\\n"", ""msg""]]",[-1393532391984386060],902
https://github.com/collectd/collectd/commit/cfb8c142cd23432d965f00a69cc9337168916c90,26 Mar 2007,"stderr plugin: Added ""stderr"" plugin to log to stderr.

This plugin is heavily based on Florian's syslog plugin.

Signed-off-by: Sebastian Harl <sh@tokkee.org>",95,data/crawl/collectd/hunk_439.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_439.cpp,data/crawl/collectd/new_hunk_439.cpp,-1,69,,"fprintf (stderr, ""%s\n"", msg);","[""addLog""]","[[], [""fprintf"", ""stderr"", ""%s\\n"", ""msg""]]",[-1393532391984386060],902
https://github.com/collectd/collectd/commit/500559839355fc4061afe1d010d9f9479bca450d,19 Dec 2005,"Added to src/configfile.c:
  `cf_callback_options_mode': Callback for <Mode> options
  `cf_get_mode_option':       Function to query above options",143,data/crawl/collectd/hunk_550.cpp,inner similar method,non-trivial,data/crawl/collectd/old_hunk_550.cpp,data/crawl/collectd/new_hunk_550.cpp,3,3,"fprintf (stderr, ""Plugin `%s' did not register a callback.\n"", type);","syslog (LOG_WARNING, ""Plugin `%s' did not register a callback.\n"", type);","[""updateVariable"", ""updateLog""]","[[""fprintf"", ""stderr""], [""syslog"", ""LOG_WARNING""]]",[13918680475578832551],901
https://github.com/collectd/collectd/commit/500559839355fc4061afe1d010d9f9479bca450d,19 Dec 2005,"Added to src/configfile.c:
  `cf_callback_options_mode': Callback for <Mode> options
  `cf_get_mode_option':       Function to query above options",143,data/crawl/collectd/hunk_551.cpp,inner similar method,non-trivial,data/crawl/collectd/old_hunk_551.cpp,data/crawl/collectd/new_hunk_551.cpp,3,3,"fprintf (stderr, ""Plugin `%s' did not register for value `%s'.\n"", type, key);","syslog (LOG_WARNING, ""Plugin `%s' did not register for value `%s'.\n"", type, key);","[""updateVariable"", ""updateLog""]","[[""fprintf"", ""stderr""], [""syslog"", ""LOG_WARNING""]]",[13918680475578832551],901
https://github.com/collectd/collectd/commit/8822d7c9d8e86358cc4bb86e306ff90e40a15401,21 Apr 2006,octo@crystal:~/Projects/collectd $ svn merge -r646:651 trunk tags/collectd-3.9.1,36,data/crawl/collectd/hunk_526.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_526.cpp,data/crawl/collectd/new_hunk_526.cpp,3,3,"fprintf(log, "",%.*s"", (tmp - name), name);","fprintf(log, "",%.*s"", (int) (tmp - name), name);","[""removeVariable"", ""addVariable""]","[[], [""int""]]",[-7555364370854764664],900
https://github.com/collectd/collectd/commit/953e326bb2a192db7f1763f89c2e62f1533ef7a7,21 Apr 2006,Cast pointer arithmetics to make weird gcc versions happy.,2,data/crawl/collectd/hunk_527.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_527.cpp,data/crawl/collectd/new_hunk_527.cpp,3,3,"fprintf(log, "",%.*s"", (tmp - name), name);","fprintf(log, "",%.*s"", (int) (tmp - name), name);","[""removeVariable"", ""addVariable""]","[[], [""int""]]",[-7555364370854764664],900
https://github.com/collectd/collectd/commit/49cd2468501a2a492fa9de5cd1819be821a77c5a,19 May 2006,"1. (major) The code in apcups.c was adapted from apcupsd-3.12.3 the command
'apcaccess status'.  The code I used calls 'exit()' if it cannot connect
to the apcupsd daemon. A reasonable action for a standalone program.
Not good for a monitoring daemon.  This was completely an oversight on my part.

2. (minor) Some dead code is now defined out if APCMAIN is not defined.

3. (minor) My units in collection.cgi where incorrect.

4. (minor) if the apcups plugin cannot connect to the apcupsd it will
simply not call the submit routines allowing the rrd files to fill with NAN
as expected, rather than submitting zeros.",393,data/crawl/collectd/hunk_519.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_519.cpp,data/crawl/collectd/new_hunk_519.cpp,-1,60,,"fprintf(stdout,""  Found TIMELEFT.\n"");","[""addLog""]","[[], [""fprintf"", ""stdout"", ""Found"", ""TIMELEFT"", ""\\n""]]",[-13582238061150778128],899
https://github.com/collectd/collectd/commit/148087def9520d4bd4a343761defefa5d06a3215,18 May 2006,Added `apcups.c' by Anthony Gialluca <tonyabg at charter.net>,827,data/crawl/collectd/hunk_523.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_523.cpp,data/crawl/collectd/new_hunk_523.cpp,-1,529,,"fprintf(stdout,""  Found TIMELEFT.\n"");","[""addLog""]","[[], [""fprintf"", ""stdout"", ""Found"", ""TIMELEFT"", ""\\n""]]",[-13582238061150778128],899
https://github.com/collectd/collectd/commit/49cd2468501a2a492fa9de5cd1819be821a77c5a,19 May 2006,"1. (major) The code in apcups.c was adapted from apcupsd-3.12.3 the command
'apcaccess status'.  The code I used calls 'exit()' if it cannot connect
to the apcupsd daemon. A reasonable action for a standalone program.
Not good for a monitoring daemon.  This was completely an oversight on my part.

2. (minor) Some dead code is now defined out if APCMAIN is not defined.

3. (minor) My units in collection.cgi where incorrect.

4. (minor) if the apcups plugin cannot connect to the apcupsd it will
simply not call the submit routines allowing the rrd files to fill with NAN
as expected, rather than submitting zeros.",393,data/crawl/collectd/hunk_519.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_519.cpp,data/crawl/collectd/new_hunk_519.cpp,-1,53,,"fprintf(stdout,""  Found LINEFREQ.\n"");","[""addLog""]","[[], [""fprintf"", ""stdout"", ""Found"", ""LINEFREQ"", ""\\n""]]",[-16050609908335966616],898
https://github.com/collectd/collectd/commit/148087def9520d4bd4a343761defefa5d06a3215,18 May 2006,Added `apcups.c' by Anthony Gialluca <tonyabg at charter.net>,827,data/crawl/collectd/hunk_523.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_523.cpp,data/crawl/collectd/new_hunk_523.cpp,-1,523,,"fprintf(stdout,""  Found LINEFREQ.\n"");","[""addLog""]","[[], [""fprintf"", ""stdout"", ""Found"", ""LINEFREQ"", ""\\n""]]",[-16050609908335966616],898
https://github.com/collectd/collectd/commit/49cd2468501a2a492fa9de5cd1819be821a77c5a,19 May 2006,"1. (major) The code in apcups.c was adapted from apcupsd-3.12.3 the command
'apcaccess status'.  The code I used calls 'exit()' if it cannot connect
to the apcupsd daemon. A reasonable action for a standalone program.
Not good for a monitoring daemon.  This was completely an oversight on my part.

2. (minor) Some dead code is now defined out if APCMAIN is not defined.

3. (minor) My units in collection.cgi where incorrect.

4. (minor) if the apcups plugin cannot connect to the apcupsd it will
simply not call the submit routines allowing the rrd files to fill with NAN
as expected, rather than submitting zeros.",393,data/crawl/collectd/hunk_519.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_519.cpp,data/crawl/collectd/new_hunk_519.cpp,-1,46,,"fprintf(stdout,""  Found OUTPUTV.\n"");","[""addLog""]","[[], [""fprintf"", ""stdout"", ""Found"", ""OUTPUTV"", ""\\n""]]",[-8264490530382139048],897
https://github.com/collectd/collectd/commit/148087def9520d4bd4a343761defefa5d06a3215,18 May 2006,Added `apcups.c' by Anthony Gialluca <tonyabg at charter.net>,827,data/crawl/collectd/hunk_523.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_523.cpp,data/crawl/collectd/new_hunk_523.cpp,-1,517,,"fprintf(stdout,""  Found OUTPUTV.\n"");","[""addLog""]","[[], [""fprintf"", ""stdout"", ""Found"", ""OUTPUTV"", ""\\n""]]",[-8264490530382139048],897
https://github.com/collectd/collectd/commit/49cd2468501a2a492fa9de5cd1819be821a77c5a,19 May 2006,"1. (major) The code in apcups.c was adapted from apcupsd-3.12.3 the command
'apcaccess status'.  The code I used calls 'exit()' if it cannot connect
to the apcupsd daemon. A reasonable action for a standalone program.
Not good for a monitoring daemon.  This was completely an oversight on my part.

2. (minor) Some dead code is now defined out if APCMAIN is not defined.

3. (minor) My units in collection.cgi where incorrect.

4. (minor) if the apcups plugin cannot connect to the apcupsd it will
simply not call the submit routines allowing the rrd files to fill with NAN
as expected, rather than submitting zeros.",393,data/crawl/collectd/hunk_519.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_519.cpp,data/crawl/collectd/new_hunk_519.cpp,-1,39,,"fprintf(stdout,""  Found BCHARGE.\n"");","[""addLog""]","[[], [""fprintf"", ""stdout"", ""Found"", ""BCHARGE"", ""\\n""]]",[-13321171508171897071],896
https://github.com/collectd/collectd/commit/148087def9520d4bd4a343761defefa5d06a3215,18 May 2006,Added `apcups.c' by Anthony Gialluca <tonyabg at charter.net>,827,data/crawl/collectd/hunk_523.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_523.cpp,data/crawl/collectd/new_hunk_523.cpp,-1,511,,"fprintf(stdout,""  Found BCHARGE.\n"");","[""addLog""]","[[], [""fprintf"", ""stdout"", ""Found"", ""BCHARGE"", ""\\n""]]",[-13321171508171897071],896
https://github.com/collectd/collectd/commit/49cd2468501a2a492fa9de5cd1819be821a77c5a,19 May 2006,"1. (major) The code in apcups.c was adapted from apcupsd-3.12.3 the command
'apcaccess status'.  The code I used calls 'exit()' if it cannot connect
to the apcupsd daemon. A reasonable action for a standalone program.
Not good for a monitoring daemon.  This was completely an oversight on my part.

2. (minor) Some dead code is now defined out if APCMAIN is not defined.

3. (minor) My units in collection.cgi where incorrect.

4. (minor) if the apcups plugin cannot connect to the apcupsd it will
simply not call the submit routines allowing the rrd files to fill with NAN
as expected, rather than submitting zeros.",393,data/crawl/collectd/hunk_519.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_519.cpp,data/crawl/collectd/new_hunk_519.cpp,-1,32,,"fprintf(stdout,""  Found LOADPCT.\n"");","[""addLog""]","[[], [""fprintf"", ""stdout"", ""Found"", ""LOADPCT"", ""\\n""]]",[-8068730621012423550],895
https://github.com/collectd/collectd/commit/148087def9520d4bd4a343761defefa5d06a3215,18 May 2006,Added `apcups.c' by Anthony Gialluca <tonyabg at charter.net>,827,data/crawl/collectd/hunk_523.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_523.cpp,data/crawl/collectd/new_hunk_523.cpp,-1,505,,"fprintf(stdout,""  Found LOADPCT.\n"");","[""addLog""]","[[], [""fprintf"", ""stdout"", ""Found"", ""LOADPCT"", ""\\n""]]",[-8068730621012423550],895
https://github.com/collectd/collectd/commit/49cd2468501a2a492fa9de5cd1819be821a77c5a,19 May 2006,"1. (major) The code in apcups.c was adapted from apcupsd-3.12.3 the command
'apcaccess status'.  The code I used calls 'exit()' if it cannot connect
to the apcupsd daemon. A reasonable action for a standalone program.
Not good for a monitoring daemon.  This was completely an oversight on my part.

2. (minor) Some dead code is now defined out if APCMAIN is not defined.

3. (minor) My units in collection.cgi where incorrect.

4. (minor) if the apcups plugin cannot connect to the apcupsd it will
simply not call the submit routines allowing the rrd files to fill with NAN
as expected, rather than submitting zeros.",393,data/crawl/collectd/hunk_519.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_519.cpp,data/crawl/collectd/new_hunk_519.cpp,-1,25,,"fprintf(stdout,""  Found ITEMP.\n"");","[""addLog""]","[[], [""fprintf"", ""stdout"", ""Found"", ""ITEMP"", ""\\n""]]",[-4553897085573568266],894
https://github.com/collectd/collectd/commit/148087def9520d4bd4a343761defefa5d06a3215,18 May 2006,Added `apcups.c' by Anthony Gialluca <tonyabg at charter.net>,827,data/crawl/collectd/hunk_523.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_523.cpp,data/crawl/collectd/new_hunk_523.cpp,-1,499,,"fprintf(stdout,""  Found ITEMP.\n"");","[""addLog""]","[[], [""fprintf"", ""stdout"", ""Found"", ""ITEMP"", ""\\n""]]",[-4553897085573568266],894
https://github.com/collectd/collectd/commit/49cd2468501a2a492fa9de5cd1819be821a77c5a,19 May 2006,"1. (major) The code in apcups.c was adapted from apcupsd-3.12.3 the command
'apcaccess status'.  The code I used calls 'exit()' if it cannot connect
to the apcupsd daemon. A reasonable action for a standalone program.
Not good for a monitoring daemon.  This was completely an oversight on my part.

2. (minor) Some dead code is now defined out if APCMAIN is not defined.

3. (minor) My units in collection.cgi where incorrect.

4. (minor) if the apcups plugin cannot connect to the apcupsd it will
simply not call the submit routines allowing the rrd files to fill with NAN
as expected, rather than submitting zeros.",393,data/crawl/collectd/hunk_519.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_519.cpp,data/crawl/collectd/new_hunk_519.cpp,-1,18,,"fprintf(stdout,""  Found BATTV.\n"");","[""addLog""]","[[], [""fprintf"", ""stdout"", ""Found"", ""BATTV"", ""\\n""]]",[-17383835269639032446],893
https://github.com/collectd/collectd/commit/148087def9520d4bd4a343761defefa5d06a3215,18 May 2006,Added `apcups.c' by Anthony Gialluca <tonyabg at charter.net>,827,data/crawl/collectd/hunk_523.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_523.cpp,data/crawl/collectd/new_hunk_523.cpp,-1,493,,"fprintf(stdout,""  Found BATTV.\n"");","[""addLog""]","[[], [""fprintf"", ""stdout"", ""Found"", ""BATTV"", ""\\n""]]",[-17383835269639032446],893
https://github.com/collectd/collectd/commit/49cd2468501a2a492fa9de5cd1819be821a77c5a,19 May 2006,"1. (major) The code in apcups.c was adapted from apcupsd-3.12.3 the command
'apcaccess status'.  The code I used calls 'exit()' if it cannot connect
to the apcupsd daemon. A reasonable action for a standalone program.
Not good for a monitoring daemon.  This was completely an oversight on my part.

2. (minor) Some dead code is now defined out if APCMAIN is not defined.

3. (minor) My units in collection.cgi where incorrect.

4. (minor) if the apcups plugin cannot connect to the apcupsd it will
simply not call the submit routines allowing the rrd files to fill with NAN
as expected, rather than submitting zeros.",393,data/crawl/collectd/hunk_519.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_519.cpp,data/crawl/collectd/new_hunk_519.cpp,-1,11,,"fprintf(stdout,""  Found LINEV.\n"");","[""addLog""]","[[], [""fprintf"", ""stdout"", ""Found"", ""LINEV"", ""\\n""]]",[-9105025051848728075],892
https://github.com/collectd/collectd/commit/148087def9520d4bd4a343761defefa5d06a3215,18 May 2006,Added `apcups.c' by Anthony Gialluca <tonyabg at charter.net>,827,data/crawl/collectd/hunk_523.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_523.cpp,data/crawl/collectd/new_hunk_523.cpp,-1,487,,"fprintf(stdout,""  Found LINEV.\n"");","[""addLog""]","[[], [""fprintf"", ""stdout"", ""Found"", ""LINEV"", ""\\n""]]",[-9105025051848728075],892
https://github.com/collectd/collectd/commit/49cd2468501a2a492fa9de5cd1819be821a77c5a,19 May 2006,"1. (major) The code in apcups.c was adapted from apcupsd-3.12.3 the command
'apcaccess status'.  The code I used calls 'exit()' if it cannot connect
to the apcupsd daemon. A reasonable action for a standalone program.
Not good for a monitoring daemon.  This was completely an oversight on my part.

2. (minor) Some dead code is now defined out if APCMAIN is not defined.

3. (minor) My units in collection.cgi where incorrect.

4. (minor) if the apcups plugin cannot connect to the apcupsd it will
simply not call the submit routines allowing the rrd files to fill with NAN
as expected, rather than submitting zeros.",393,data/crawl/collectd/hunk_518.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_518.cpp,data/crawl/collectd/new_hunk_518.cpp,-1,50,,"fputs(recvline, stdout);","[""addLog""]","[[], [""fputs"", ""recvline"", ""stdout""]]",[-17731199542179456442],891
https://github.com/collectd/collectd/commit/148087def9520d4bd4a343761defefa5d06a3215,18 May 2006,Added `apcups.c' by Anthony Gialluca <tonyabg at charter.net>,827,data/crawl/collectd/hunk_523.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_523.cpp,data/crawl/collectd/new_hunk_523.cpp,-1,477,,"fputs(recvline, stdout);","[""addLog""]","[[], [""fputs"", ""recvline"", ""stdout""]]",[-17731199542179456442],891
https://github.com/collectd/collectd/commit/00e902810c0b76e4e110c1b53dbb2931114ff927,20 May 2006,"branches/apcups/src/apcups.c:
  Restored changes made to the trunk.",377,data/crawl/collectd/hunk_517.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_517.cpp,data/crawl/collectd/new_hunk_517.cpp,60,-1,"fprintf(stdout,""  Found TIMELEFT.\n"");",,"[""removeLog""]","[[""fprintf"", ""stdout"", ""Found"", ""TIMELEFT"", ""\\n""], []]",[13582238061150778128],890
https://github.com/collectd/collectd/commit/45edddd42012056e61fc167b1fcc8fa9455eac94,19 May 2006,"apcups.c:
- Improved the `do_pthreads_status' function to not have the same code 10 times (or so).",135,data/crawl/collectd/hunk_520.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_520.cpp,data/crawl/collectd/new_hunk_520.cpp,69,-1,"fprintf(stdout,""  Found TIMELEFT.\n"");",,"[""removeLog""]","[[""fprintf"", ""stdout"", ""Found"", ""TIMELEFT"", ""\\n""], []]",[13582238061150778128],890
https://github.com/collectd/collectd/commit/00e902810c0b76e4e110c1b53dbb2931114ff927,20 May 2006,"branches/apcups/src/apcups.c:
  Restored changes made to the trunk.",377,data/crawl/collectd/hunk_517.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_517.cpp,data/crawl/collectd/new_hunk_517.cpp,53,-1,"fprintf(stdout,""  Found LINEFREQ.\n"");",,"[""removeLog""]","[[""fprintf"", ""stdout"", ""Found"", ""LINEFREQ"", ""\\n""], []]",[16050609908335966616],889
https://github.com/collectd/collectd/commit/45edddd42012056e61fc167b1fcc8fa9455eac94,19 May 2006,"apcups.c:
- Improved the `do_pthreads_status' function to not have the same code 10 times (or so).",135,data/crawl/collectd/hunk_520.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_520.cpp,data/crawl/collectd/new_hunk_520.cpp,63,-1,"fprintf(stdout,""  Found LINEFREQ.\n"");",,"[""removeLog""]","[[""fprintf"", ""stdout"", ""Found"", ""LINEFREQ"", ""\\n""], []]",[16050609908335966616],889
https://github.com/collectd/collectd/commit/00e902810c0b76e4e110c1b53dbb2931114ff927,20 May 2006,"branches/apcups/src/apcups.c:
  Restored changes made to the trunk.",377,data/crawl/collectd/hunk_517.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_517.cpp,data/crawl/collectd/new_hunk_517.cpp,46,-1,"fprintf(stdout,""  Found OUTPUTV.\n"");",,"[""removeLog""]","[[""fprintf"", ""stdout"", ""Found"", ""OUTPUTV"", ""\\n""], []]",[8264490530382139048],888
https://github.com/collectd/collectd/commit/45edddd42012056e61fc167b1fcc8fa9455eac94,19 May 2006,"apcups.c:
- Improved the `do_pthreads_status' function to not have the same code 10 times (or so).",135,data/crawl/collectd/hunk_520.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_520.cpp,data/crawl/collectd/new_hunk_520.cpp,57,-1,"fprintf(stdout,""  Found OUTPUTV.\n"");",,"[""removeLog""]","[[""fprintf"", ""stdout"", ""Found"", ""OUTPUTV"", ""\\n""], []]",[8264490530382139048],888
https://github.com/collectd/collectd/commit/00e902810c0b76e4e110c1b53dbb2931114ff927,20 May 2006,"branches/apcups/src/apcups.c:
  Restored changes made to the trunk.",377,data/crawl/collectd/hunk_517.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_517.cpp,data/crawl/collectd/new_hunk_517.cpp,39,-1,"fprintf(stdout,""  Found BCHARGE.\n"");",,"[""removeLog""]","[[""fprintf"", ""stdout"", ""Found"", ""BCHARGE"", ""\\n""], []]",[13321171508171897071],887
https://github.com/collectd/collectd/commit/45edddd42012056e61fc167b1fcc8fa9455eac94,19 May 2006,"apcups.c:
- Improved the `do_pthreads_status' function to not have the same code 10 times (or so).",135,data/crawl/collectd/hunk_520.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_520.cpp,data/crawl/collectd/new_hunk_520.cpp,51,-1,"fprintf(stdout,""  Found BCHARGE.\n"");",,"[""removeLog""]","[[""fprintf"", ""stdout"", ""Found"", ""BCHARGE"", ""\\n""], []]",[13321171508171897071],887
https://github.com/collectd/collectd/commit/00e902810c0b76e4e110c1b53dbb2931114ff927,20 May 2006,"branches/apcups/src/apcups.c:
  Restored changes made to the trunk.",377,data/crawl/collectd/hunk_517.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_517.cpp,data/crawl/collectd/new_hunk_517.cpp,32,-1,"fprintf(stdout,""  Found LOADPCT.\n"");",,"[""removeLog""]","[[""fprintf"", ""stdout"", ""Found"", ""LOADPCT"", ""\\n""], []]",[8068730621012423550],886
https://github.com/collectd/collectd/commit/45edddd42012056e61fc167b1fcc8fa9455eac94,19 May 2006,"apcups.c:
- Improved the `do_pthreads_status' function to not have the same code 10 times (or so).",135,data/crawl/collectd/hunk_520.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_520.cpp,data/crawl/collectd/new_hunk_520.cpp,45,-1,"fprintf(stdout,""  Found LOADPCT.\n"");",,"[""removeLog""]","[[""fprintf"", ""stdout"", ""Found"", ""LOADPCT"", ""\\n""], []]",[8068730621012423550],886
https://github.com/collectd/collectd/commit/00e902810c0b76e4e110c1b53dbb2931114ff927,20 May 2006,"branches/apcups/src/apcups.c:
  Restored changes made to the trunk.",377,data/crawl/collectd/hunk_517.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_517.cpp,data/crawl/collectd/new_hunk_517.cpp,25,-1,"fprintf(stdout,""  Found ITEMP.\n"");",,"[""removeLog""]","[[""fprintf"", ""stdout"", ""Found"", ""ITEMP"", ""\\n""], []]",[4553897085573568266],885
https://github.com/collectd/collectd/commit/45edddd42012056e61fc167b1fcc8fa9455eac94,19 May 2006,"apcups.c:
- Improved the `do_pthreads_status' function to not have the same code 10 times (or so).",135,data/crawl/collectd/hunk_520.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_520.cpp,data/crawl/collectd/new_hunk_520.cpp,39,-1,"fprintf(stdout,""  Found ITEMP.\n"");",,"[""removeLog""]","[[""fprintf"", ""stdout"", ""Found"", ""ITEMP"", ""\\n""], []]",[4553897085573568266],885
https://github.com/collectd/collectd/commit/00e902810c0b76e4e110c1b53dbb2931114ff927,20 May 2006,"branches/apcups/src/apcups.c:
  Restored changes made to the trunk.",377,data/crawl/collectd/hunk_517.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_517.cpp,data/crawl/collectd/new_hunk_517.cpp,11,-1,"fprintf(stdout,""  Found LINEV.\n"");",,"[""removeLog""]","[[""fprintf"", ""stdout"", ""Found"", ""LINEV"", ""\\n""], []]",[9105025051848728075],884
https://github.com/collectd/collectd/commit/45edddd42012056e61fc167b1fcc8fa9455eac94,19 May 2006,"apcups.c:
- Improved the `do_pthreads_status' function to not have the same code 10 times (or so).",135,data/crawl/collectd/hunk_520.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_520.cpp,data/crawl/collectd/new_hunk_520.cpp,27,-1,"fprintf(stdout,""  Found LINEV.\n"");",,"[""removeLog""]","[[""fprintf"", ""stdout"", ""Found"", ""LINEV"", ""\\n""], []]",[9105025051848728075],884
https://github.com/collectd/collectd/commit/dba2d8d17d4ec56bcd3f74c1f13c378aceec7ab6,22 Oct 2006,"More improvements on the named/dns plugin.

The `dnstop.c' code now contains my IPv6 patch to capture IPv6 traffic. The
plugin captures both, queries and replies, and collects statistics
accordingly. This means that the qtype of queries and the rcode of replies are
collected. The plugin can now be configured to ignore certain sources, but
this functionality is to be improved.",997,data/crawl/collectd/hunk_491.cpp,use same variable,trivial,data/crawl/collectd/old_hunk_491.cpp,data/crawl/collectd/new_hunk_491.cpp,2,2,"fprintf (stderr, ""unsupported data link type %d\n"",
    pcap_datalink(pcap));","fprintf (stderr, ""unsupported data link type %d\n"",
    pcap_datalink(pcap_obj));","[""updateVariable""]","[[""pcap""], [""pcap_obj""]]",[-6475374085607192614],883
https://github.com/collectd/collectd/commit/dba2d8d17d4ec56bcd3f74c1f13c378aceec7ab6,22 Oct 2006,"More improvements on the named/dns plugin.

The `dnstop.c' code now contains my IPv6 patch to capture IPv6 traffic. The
plugin captures both, queries and replies, and collects statistics
accordingly. This means that the qtype of queries and the rcode of replies are
collected. The plugin can now be configured to ignore certain sources, but
this functionality is to be improved.",997,data/crawl/collectd/hunk_495.cpp,use same variable,trivial,data/crawl/collectd/old_hunk_495.cpp,data/crawl/collectd/new_hunk_495.cpp,2,2,"fprintf(stderr, ""unsupported data link type %d\n"",
    pcap_datalink(pcap));","fprintf(stderr, ""unsupported data link type %d\n"",
    pcap_datalink(pcap_obj));","[""updateVariable""]","[[""pcap""], [""pcap_obj""]]",[-6475374085607192614],883
https://github.com/collectd/collectd/commit/f34da8f00133da85d1538f8bc7dd118f30f853ea,28 Jan 2007,unixsock plugin: Transmit the DS name so clients can chose which values they need.,38,data/crawl/collectd/hunk_480.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_480.cpp,data/crawl/collectd/new_hunk_480.cpp,-1,19,,"fprintf (fh, ""NaN"");","[""addLog""]","[[], [""fprintf"", ""fh"", ""NaN""]]",[70019744529744664],882
https://github.com/collectd/collectd/commit/86090b3d409634d016da7bbb0cbe43ed5a851d30,28 Jan 2007,"unixsock plugin: Added a first version of a UNIX-socket output plugin.

The goal is to build a nagios-interface on top of this.",670,data/crawl/collectd/hunk_481.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_481.cpp,data/crawl/collectd/new_hunk_481.cpp,-1,468,,"fprintf (fh, "" NaN"");","[""addLog""]","[[], [""fprintf"", ""fh"", ""NaN""]]",[70019744529744664],882
https://github.com/collectd/collectd/commit/108c20b23f2ca3d0ae67a44dfd8da31a7db7544c,11 Feb 2007,"Changed from the old `libconfig' to the new `liboconfig'.

Much work lies in front of us.. :/",1437,data/crawl/collectd/hunk_471.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_471.cpp,data/crawl/collectd/new_hunk_471.cpp,250,-1,"fprintf (stderr, ERR_NEEDS_ARG, shortvar);",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""ERR_NEEDS_ARG"", ""shortvar""], []]",[17035135711402455970],881
https://github.com/collectd/collectd/commit/3cf46d9689f6fae30e19f3898852083003862552,15 Jan 2006,"Fixed a but in the mysql module, so it builds as write-only module, too.
Shorted the command line options to `help' and `dont fork' only.
Brought `getopt' back: `libconfig' doesn't do what I want: Command line options are evaluated after config files. So I don't know what mode the daemon will be in when parsing the file. That's why I moved everything into the config file.
Removed `cf_callback_usage' again.
Changed `cf_read' to not need `argc' and `argv' anymore..",209,data/crawl/collectd/hunk_541.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_541.cpp,data/crawl/collectd/new_hunk_541.cpp,13,-1,"fprintf (stderr, ERR_NEEDS_ARG, shortvar);",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""ERR_NEEDS_ARG"", ""shortvar""], []]",[17035135711402455970],881
https://github.com/collectd/collectd/commit/108c20b23f2ca3d0ae67a44dfd8da31a7db7544c,11 Feb 2007,"Changed from the old `libconfig' to the new `liboconfig'.

Much work lies in front of us.. :/",1437,data/crawl/collectd/hunk_471.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_471.cpp,data/crawl/collectd/new_hunk_471.cpp,244,-1,"fprintf (stderr, ERR_NOT_NESTED);",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""ERR_NOT_NESTED""], []]",[22592359931818281405],880
https://github.com/collectd/collectd/commit/3cf46d9689f6fae30e19f3898852083003862552,15 Jan 2006,"Fixed a but in the mysql module, so it builds as write-only module, too.
Shorted the command line options to `help' and `dont fork' only.
Brought `getopt' back: `libconfig' doesn't do what I want: Command line options are evaluated after config files. So I don't know what mode the daemon will be in when parsing the file. That's why I moved everything into the config file.
Removed `cf_callback_usage' again.
Changed `cf_read' to not need `argc' and `argv' anymore..",209,data/crawl/collectd/hunk_541.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_541.cpp,data/crawl/collectd/new_hunk_541.cpp,7,-1,"fprintf (stderr, ERR_NOT_NESTED);",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""ERR_NOT_NESTED""], []]",[22592359931818281405],880
https://github.com/collectd/collectd/commit/276490e1d23db4c7db710075954655583c728e3e,12 Feb 2007,Removed `src/libconfig/*'.,2235,data/crawl/collectd/hunk_468.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_468.cpp,data/crawl/collectd/new_hunk_468.cpp,52,-1,"fprintf(stderr, ""Error processing config file: %s\n"", lc_geterrstr());",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""Error"", ""processing"", ""config"", ""file"", ""%s\\n"", ""lc_geterrstr""], []]",[6980915557026924556],879
https://github.com/collectd/collectd/commit/276490e1d23db4c7db710075954655583c728e3e,12 Feb 2007,Removed `src/libconfig/*'.,2235,data/crawl/collectd/hunk_468.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_468.cpp,data/crawl/collectd/new_hunk_468.cpp,58,-1,"fprintf(stderr, ""Error processing config file: %s\n"", lc_geterrstr());",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""Error"", ""processing"", ""config"", ""file"", ""%s\\n"", ""lc_geterrstr""], []]",[6980915557026924556],879
https://github.com/collectd/collectd/commit/276490e1d23db4c7db710075954655583c728e3e,12 Feb 2007,Removed `src/libconfig/*'.,2235,data/crawl/collectd/hunk_467.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_467.cpp,data/crawl/collectd/new_hunk_467.cpp,658,-1,"fprintf(stderr, ""Argument required.\n"");",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""Argument"", ""required"", ""\\n""], []]",[28949906511021040646],878
https://github.com/collectd/collectd/commit/276490e1d23db4c7db710075954655583c728e3e,12 Feb 2007,Removed `src/libconfig/*'.,2235,data/crawl/collectd/hunk_467.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_467.cpp,data/crawl/collectd/new_hunk_467.cpp,710,-1,"fprintf(stderr, ""Argument required.\n"");",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""Argument"", ""required"", ""\\n""], []]",[28949906511021040646],878
https://github.com/collectd/collectd/commit/276490e1d23db4c7db710075954655583c728e3e,12 Feb 2007,Removed `src/libconfig/*'.,2235,data/crawl/collectd/hunk_465.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_465.cpp,data/crawl/collectd/new_hunk_465.cpp,74,-1,"fprintf(stderr, ""Invalid section terminating: \""%s\""\n"", currsection);",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""Invalid"", ""section"", ""terminating"", ""\\"", ""%s\\"", ""\\n"", ""currsection""], []]",[17719299540667739173],877
https://github.com/collectd/collectd/commit/276490e1d23db4c7db710075954655583c728e3e,12 Feb 2007,Removed `src/libconfig/*'.,2235,data/crawl/collectd/hunk_465.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_465.cpp,data/crawl/collectd/new_hunk_465.cpp,191,-1,"fprintf(stderr, ""Invalid section terminating: \""%s\""\n"", currsection);",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""Invalid"", ""section"", ""terminating"", ""\\"", ""%s\\"", ""\\n"", ""currsection""], []]",[17719299540667739173],877
https://github.com/collectd/collectd/commit/276490e1d23db4c7db710075954655583c728e3e,12 Feb 2007,Removed `src/libconfig/*'.,2235,data/crawl/collectd/hunk_464.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_464.cpp,data/crawl/collectd/new_hunk_464.cpp,272,-1,"fprintf(stderr, ""Ignoring line (because ignored section): %s\n"", linebuf);",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""Ignoring"", ""line"", ""because"", ""ignored"", ""section"", ""%s\\n"", ""linebuf""], []]",[357629866679668951],876
https://github.com/collectd/collectd/commit/276490e1d23db4c7db710075954655583c728e3e,12 Feb 2007,Removed `src/libconfig/*'.,2235,data/crawl/collectd/hunk_465.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_465.cpp,data/crawl/collectd/new_hunk_465.cpp,125,-1,"fprintf(stderr, ""Ignoring line (because ignored section): %s\n"", linebuf);",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""Ignoring"", ""line"", ""because"", ""ignored"", ""section"", ""%s\\n"", ""linebuf""], []]",[357629866679668951],876
https://github.com/collectd/collectd/commit/276490e1d23db4c7db710075954655583c728e3e,12 Feb 2007,Removed `src/libconfig/*'.,2235,data/crawl/collectd/hunk_464.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_464.cpp,data/crawl/collectd/new_hunk_464.cpp,266,-1,"fprintf(stderr, ""Ignoring line (because invalid section): %s\n"", linebuf);",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""Ignoring"", ""line"", ""because"", ""invalid"", ""section"", ""%s\\n"", ""linebuf""], []]",[3035915354265970090],875
https://github.com/collectd/collectd/commit/276490e1d23db4c7db710075954655583c728e3e,12 Feb 2007,Removed `src/libconfig/*'.,2235,data/crawl/collectd/hunk_465.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_465.cpp,data/crawl/collectd/new_hunk_465.cpp,117,-1,"fprintf(stderr, ""Ignoring line (because invalid section): %s\n"", linebuf);",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""Ignoring"", ""line"", ""because"", ""invalid"", ""section"", ""%s\\n"", ""linebuf""], []]",[3035915354265970090],875
https://github.com/collectd/collectd/commit/2d897a731bd23f7a33b89e7b7e3004b6b26b5a94,28 Feb 2007,"Introduce two global variables: `hostname_g' and `interval_g'.

hostname_g: Hostname we're running on. May be set in the configfile with the
  `Hostname'-option. This replaces the global `hostname'-variable exported by
  `plugin.c'.
interval_g: Interval in which we query the read plugins. This replaces the
  `COLLECTD_STEP'-define and is configurable using the `Interval'-option.",190,data/crawl/collectd/hunk_461.cpp,use same variable,trivial,data/crawl/collectd/old_hunk_461.cpp,data/crawl/collectd/new_hunk_461.cpp,5,5,"fprintf (stderr, ""Don't have a datadir to use. This should not happen. Ever."");","fprintf (stderr, ""Don't have a basedir to use. This should not happen. Ever."");","[""updateContent""]","[[""datadir""], [""basedir""]]",[-2503095606478511751],874
https://github.com/collectd/collectd/commit/2d897a731bd23f7a33b89e7b7e3004b6b26b5a94,28 Feb 2007,"Introduce two global variables: `hostname_g' and `interval_g'.

hostname_g: Hostname we're running on. May be set in the configfile with the
  `Hostname'-option. This replaces the global `hostname'-variable exported by
  `plugin.c'.
interval_g: Interval in which we query the read plugins. This replaces the
  `COLLECTD_STEP'-define and is configurable using the `Interval'-option.",190,data/crawl/collectd/hunk_461.cpp,use same variable,trivial,data/crawl/collectd/old_hunk_461.cpp,data/crawl/collectd/new_hunk_461.cpp,10,10,"fprintf (stderr, ""Error: Unable to change to directory `%s'.\n"", datadir);","fprintf (stderr, ""Error: Unable to change to directory `%s'.\n"", basedir);","[""updateVariable""]","[[""datadir""], [""basedir""]]",[-2503095606478511751],874
https://github.com/collectd/collectd/commit/863dfcdf274509e4e1836c2c8f1f10f09e1d13be,03 Mar 2007,"iptables plugin: Adds a plugin to collect iptables'-counters.

My first attempt at a module for this is an iptables modules This will try to
read out the rules from iptables for a specific table and chain.
It will go through the rules looking for ones with ""comment"" matches and will
use the comment as a base for the generated filename.

So basically looking for lines like
 $ iptables -t mangle -A incoming -p tcp -m comment --comment ""tcp""
will generate a iptables-incoming/tcp.rrd file from the byte counters

There used to also be an account iptables module but that seems to have been
neglected, which would generate /proc entries for specific rules, don't know
what would work better. Either way, this seems to work somewhat.",4451,data/crawl/collectd/hunk_455.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_455.cpp,data/crawl/collectd/new_hunk_455.cpp,-1,148,,"printf(""%d"", len);","[""addLog""]","[[], [""printf"", ""%d"", ""len""]]",[14755358748724818990],873
https://github.com/collectd/collectd/commit/863dfcdf274509e4e1836c2c8f1f10f09e1d13be,03 Mar 2007,"iptables plugin: Adds a plugin to collect iptables'-counters.

My first attempt at a module for this is an iptables modules This will try to
read out the rules from iptables for a specific table and chain.
It will go through the rules looking for ones with ""comment"" matches and will
use the comment as a base for the generated filename.

So basically looking for lines like
 $ iptables -t mangle -A incoming -p tcp -m comment --comment ""tcp""
will generate a iptables-incoming/tcp.rrd file from the byte counters

There used to also be an account iptables module but that seems to have been
neglected, which would generate /proc entries for specific rules, don't know
what would work better. Either way, this seems to work somewhat.",4451,data/crawl/collectd/hunk_455.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_455.cpp,data/crawl/collectd/new_hunk_455.cpp,-1,161,,"printf(""%d"", len);","[""addLog""]","[[], [""printf"", ""%d"", ""len""]]",[14755358748724818990],873
https://github.com/collectd/collectd/commit/863dfcdf274509e4e1836c2c8f1f10f09e1d13be,03 Mar 2007,"iptables plugin: Adds a plugin to collect iptables'-counters.

My first attempt at a module for this is an iptables modules This will try to
read out the rules from iptables for a specific table and chain.
It will go through the rules looking for ones with ""comment"" matches and will
use the comment as a base for the generated filename.

So basically looking for lines like
 $ iptables -t mangle -A incoming -p tcp -m comment --comment ""tcp""
will generate a iptables-incoming/tcp.rrd file from the byte counters

There used to also be an account iptables module but that seems to have been
neglected, which would generate /proc entries for specific rules, don't know
what would work better. Either way, this seems to work somewhat.",4451,data/crawl/collectd/hunk_454.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_454.cpp,data/crawl/collectd/new_hunk_454.cpp,-1,171,,"printf(""error=`%s'\n"", t->data);","[""addLog""]","[[], [""printf"", ""error"", ""%s"", ""\\n"", ""t"", ""data""]]",[6720392809562806197],872
https://github.com/collectd/collectd/commit/863dfcdf274509e4e1836c2c8f1f10f09e1d13be,03 Mar 2007,"iptables plugin: Adds a plugin to collect iptables'-counters.

My first attempt at a module for this is an iptables modules This will try to
read out the rules from iptables for a specific table and chain.
It will go through the rules looking for ones with ""comment"" matches and will
use the comment as a base for the generated filename.

So basically looking for lines like
 $ iptables -t mangle -A incoming -p tcp -m comment --comment ""tcp""
will generate a iptables-incoming/tcp.rrd file from the byte counters

There used to also be an account iptables module but that seems to have been
neglected, which would generate /proc entries for specific rules, don't know
what would work better. Either way, this seems to work somewhat.",4451,data/crawl/collectd/hunk_455.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_455.cpp,data/crawl/collectd/new_hunk_455.cpp,-1,201,,"printf(""error=`%s'\n"", t->data);","[""addLog""]","[[], [""printf"", ""error"", ""%s"", ""\\n"", ""t"", ""data""]]",[6720392809562806197],872
https://github.com/collectd/collectd/commit/863dfcdf274509e4e1836c2c8f1f10f09e1d13be,03 Mar 2007,"iptables plugin: Adds a plugin to collect iptables'-counters.

My first attempt at a module for this is an iptables modules This will try to
read out the rules from iptables for a specific table and chain.
It will go through the rules looking for ones with ""comment"" matches and will
use the comment as a base for the generated filename.

So basically looking for lines like
 $ iptables -t mangle -A incoming -p tcp -m comment --comment ""tcp""
will generate a iptables-incoming/tcp.rrd file from the byte counters

There used to also be an account iptables module but that seems to have been
neglected, which would generate /proc entries for specific rules, don't know
what would work better. Either way, this seems to work somewhat.",4451,data/crawl/collectd/hunk_454.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_454.cpp,data/crawl/collectd/new_hunk_454.cpp,-1,169,,"printf(""verdict=%u\n"", pos);","[""addLog""]","[[], [""printf"", ""verdict"", ""%u\\n"", ""pos""]]",[11130951458288192564],871
https://github.com/collectd/collectd/commit/863dfcdf274509e4e1836c2c8f1f10f09e1d13be,03 Mar 2007,"iptables plugin: Adds a plugin to collect iptables'-counters.

My first attempt at a module for this is an iptables modules This will try to
read out the rules from iptables for a specific table and chain.
It will go through the rules looking for ones with ""comment"" matches and will
use the comment as a base for the generated filename.

So basically looking for lines like
 $ iptables -t mangle -A incoming -p tcp -m comment --comment ""tcp""
will generate a iptables-incoming/tcp.rrd file from the byte counters

There used to also be an account iptables module but that seems to have been
neglected, which would generate /proc entries for specific rules, don't know
what would work better. Either way, this seems to work somewhat.",4451,data/crawl/collectd/hunk_455.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_455.cpp,data/crawl/collectd/new_hunk_455.cpp,-1,199,,"printf(""verdict=%u\n"", pos);","[""addLog""]","[[], [""printf"", ""verdict"", ""%u\\n"", ""pos""]]",[11130951458288192564],871
https://github.com/collectd/collectd/commit/863dfcdf274509e4e1836c2c8f1f10f09e1d13be,03 Mar 2007,"iptables plugin: Adds a plugin to collect iptables'-counters.

My first attempt at a module for this is an iptables modules This will try to
read out the rules from iptables for a specific table and chain.
It will go through the rules looking for ones with ""comment"" matches and will
use the comment as a base for the generated filename.

So basically looking for lines like
 $ iptables -t mangle -A incoming -p tcp -m comment --comment ""tcp""
will generate a iptables-incoming/tcp.rrd file from the byte counters

There used to also be an account iptables module but that seems to have been
neglected, which would generate /proc entries for specific rules, don't know
what would work better. Either way, this seems to work somewhat.",4451,data/crawl/collectd/hunk_454.cpp,use same variable,non-trivial,data/crawl/collectd/old_hunk_454.cpp,data/crawl/collectd/new_hunk_454.cpp,-1,158,,"printf(""Target name: `%s' [%u]\n"", t->u.user.name, t->u.target_size);","[""addLog""]","[[], [""printf"", ""Target"", ""name"", ""%s"", ""[%u]\\n"", ""t"", ""u"", ""user"", ""name"", ""t"", ""u"", ""target_size""]]",[-13998123860762750433],870
https://github.com/collectd/collectd/commit/863dfcdf274509e4e1836c2c8f1f10f09e1d13be,03 Mar 2007,"iptables plugin: Adds a plugin to collect iptables'-counters.

My first attempt at a module for this is an iptables modules This will try to
read out the rules from iptables for a specific table and chain.
It will go through the rules looking for ones with ""comment"" matches and will
use the comment as a base for the generated filename.

So basically looking for lines like
 $ iptables -t mangle -A incoming -p tcp -m comment --comment ""tcp""
will generate a iptables-incoming/tcp.rrd file from the byte counters

There used to also be an account iptables module but that seems to have been
neglected, which would generate /proc entries for specific rules, don't know
what would work better. Either way, this seems to work somewhat.",4451,data/crawl/collectd/hunk_455.cpp,use same variable,non-trivial,data/crawl/collectd/old_hunk_455.cpp,data/crawl/collectd/new_hunk_455.cpp,-1,189,,"printf(""Target name: `%s' [%u]\n"", t->u.user.name, t->u.target_size);","[""addLog""]","[[], [""printf"", ""Target"", ""name"", ""%s"", ""[%u]\\n"", ""t"", ""u"", ""user"", ""name"", ""t"", ""u"", ""target_size""]]",[-13998123860762750433],870
https://github.com/collectd/collectd/commit/863dfcdf274509e4e1836c2c8f1f10f09e1d13be,03 Mar 2007,"iptables plugin: Adds a plugin to collect iptables'-counters.

My first attempt at a module for this is an iptables modules This will try to
read out the rules from iptables for a specific table and chain.
It will go through the rules looking for ones with ""comment"" matches and will
use the comment as a base for the generated filename.

So basically looking for lines like
 $ iptables -t mangle -A incoming -p tcp -m comment --comment ""tcp""
will generate a iptables-incoming/tcp.rrd file from the byte counters

There used to also be an account iptables module but that seems to have been
neglected, which would generate /proc entries for specific rules, don't know
what would work better. Either way, this seems to work somewhat.",4451,data/crawl/collectd/hunk_454.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_454.cpp,data/crawl/collectd/new_hunk_454.cpp,-1,152,,"printf(""UNKNOWN "");","[""addLog""]","[[], [""printf"", ""UNKNOWN""]]",[2656735856303856704],869
https://github.com/collectd/collectd/commit/863dfcdf274509e4e1836c2c8f1f10f09e1d13be,03 Mar 2007,"iptables plugin: Adds a plugin to collect iptables'-counters.

My first attempt at a module for this is an iptables modules This will try to
read out the rules from iptables for a specific table and chain.
It will go through the rules looking for ones with ""comment"" matches and will
use the comment as a base for the generated filename.

So basically looking for lines like
 $ iptables -t mangle -A incoming -p tcp -m comment --comment ""tcp""
will generate a iptables-incoming/tcp.rrd file from the byte counters

There used to also be an account iptables module but that seems to have been
neglected, which would generate /proc entries for specific rules, don't know
what would work better. Either way, this seems to work somewhat.",4451,data/crawl/collectd/hunk_455.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_455.cpp,data/crawl/collectd/new_hunk_455.cpp,-1,183,,"printf(""UNKNOWN "");","[""addLog""]","[[], [""printf"", ""UNKNOWN""]]",[2656735856303856704],869
https://github.com/collectd/collectd/commit/863dfcdf274509e4e1836c2c8f1f10f09e1d13be,03 Mar 2007,"iptables plugin: Adds a plugin to collect iptables'-counters.

My first attempt at a module for this is an iptables modules This will try to
read out the rules from iptables for a specific table and chain.
It will go through the rules looking for ones with ""comment"" matches and will
use the comment as a base for the generated filename.

So basically looking for lines like
 $ iptables -t mangle -A incoming -p tcp -m comment --comment ""tcp""
will generate a iptables-incoming/tcp.rrd file from the byte counters

There used to also be an account iptables module but that seems to have been
neglected, which would generate /proc entries for specific rules, don't know
what would work better. Either way, this seems to work somewhat.",4451,data/crawl/collectd/hunk_454.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_454.cpp,data/crawl/collectd/new_hunk_454.cpp,-1,151,,"printf(""ALTERED "");","[""addLog""]","[[], [""printf"", ""ALTERED""]]",[15198065609320230107],868
https://github.com/collectd/collectd/commit/863dfcdf274509e4e1836c2c8f1f10f09e1d13be,03 Mar 2007,"iptables plugin: Adds a plugin to collect iptables'-counters.

My first attempt at a module for this is an iptables modules This will try to
read out the rules from iptables for a specific table and chain.
It will go through the rules looking for ones with ""comment"" matches and will
use the comment as a base for the generated filename.

So basically looking for lines like
 $ iptables -t mangle -A incoming -p tcp -m comment --comment ""tcp""
will generate a iptables-incoming/tcp.rrd file from the byte counters

There used to also be an account iptables module but that seems to have been
neglected, which would generate /proc entries for specific rules, don't know
what would work better. Either way, this seems to work somewhat.",4451,data/crawl/collectd/hunk_455.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_455.cpp,data/crawl/collectd/new_hunk_455.cpp,-1,182,,"printf(""ALTERED "");","[""addLog""]","[[], [""printf"", ""ALTERED""]]",[15198065609320230107],868
https://github.com/collectd/collectd/commit/863dfcdf274509e4e1836c2c8f1f10f09e1d13be,03 Mar 2007,"iptables plugin: Adds a plugin to collect iptables'-counters.

My first attempt at a module for this is an iptables modules This will try to
read out the rules from iptables for a specific table and chain.
It will go through the rules looking for ones with ""comment"" matches and will
use the comment as a base for the generated filename.

So basically looking for lines like
 $ iptables -t mangle -A incoming -p tcp -m comment --comment ""tcp""
will generate a iptables-incoming/tcp.rrd file from the byte counters

There used to also be an account iptables module but that seems to have been
neglected, which would generate /proc entries for specific rules, don't know
what would work better. Either way, this seems to work somewhat.",4451,data/crawl/collectd/hunk_454.cpp,use same variable,non-trivial,data/crawl/collectd/old_hunk_454.cpp,data/crawl/collectd/new_hunk_454.cpp,-1,150,,"printf(""Cache: %08X "", e->nfcache);","[""addLog""]","[[], [""printf"", ""Cache"", ""%08X"", ""e"", ""nfcache""]]",[-2289092929809419082],867
https://github.com/collectd/collectd/commit/863dfcdf274509e4e1836c2c8f1f10f09e1d13be,03 Mar 2007,"iptables plugin: Adds a plugin to collect iptables'-counters.

My first attempt at a module for this is an iptables modules This will try to
read out the rules from iptables for a specific table and chain.
It will go through the rules looking for ones with ""comment"" matches and will
use the comment as a base for the generated filename.

So basically looking for lines like
 $ iptables -t mangle -A incoming -p tcp -m comment --comment ""tcp""
will generate a iptables-incoming/tcp.rrd file from the byte counters

There used to also be an account iptables module but that seems to have been
neglected, which would generate /proc entries for specific rules, don't know
what would work better. Either way, this seems to work somewhat.",4451,data/crawl/collectd/hunk_455.cpp,use same variable,non-trivial,data/crawl/collectd/old_hunk_455.cpp,data/crawl/collectd/new_hunk_455.cpp,-1,181,,"printf(""Cache: %08X "", e->nfcache);","[""addLog""]","[[], [""printf"", ""Cache"", ""%08X"", ""e"", ""nfcache""]]",[-2289092929809419082],867
https://github.com/collectd/collectd/commit/863dfcdf274509e4e1836c2c8f1f10f09e1d13be,03 Mar 2007,"iptables plugin: Adds a plugin to collect iptables'-counters.

My first attempt at a module for this is an iptables modules This will try to
read out the rules from iptables for a specific table and chain.
It will go through the rules looking for ones with ""comment"" matches and will
use the comment as a base for the generated filename.

So basically looking for lines like
 $ iptables -t mangle -A incoming -p tcp -m comment --comment ""tcp""
will generate a iptables-incoming/tcp.rrd file from the byte counters

There used to also be an account iptables module but that seems to have been
neglected, which would generate /proc entries for specific rules, don't know
what would work better. Either way, this seems to work somewhat.",4451,data/crawl/collectd/hunk_454.cpp,use same variable,non-trivial,data/crawl/collectd/old_hunk_454.cpp,data/crawl/collectd/new_hunk_454.cpp,-1,148,,"printf(""Counters: %llu packets, %llu bytes\n"",
       (unsigned long long)e->counters.pcnt, (unsigned long long)e->counters.bcnt);","[""addLog""]","[[], [""printf"", ""Counters"", ""%llu"", ""packets"", ""%llu"", ""bytes\\n"", ""unsigned"", ""long"", ""long"", ""e"", ""counters"", ""pcnt"", ""unsigned"", ""long"", ""long"", ""e"", ""counters"", ""bcnt""]]",[5440441793197685850],866
https://github.com/collectd/collectd/commit/863dfcdf274509e4e1836c2c8f1f10f09e1d13be,03 Mar 2007,"iptables plugin: Adds a plugin to collect iptables'-counters.

My first attempt at a module for this is an iptables modules This will try to
read out the rules from iptables for a specific table and chain.
It will go through the rules looking for ones with ""comment"" matches and will
use the comment as a base for the generated filename.

So basically looking for lines like
 $ iptables -t mangle -A incoming -p tcp -m comment --comment ""tcp""
will generate a iptables-incoming/tcp.rrd file from the byte counters

There used to also be an account iptables module but that seems to have been
neglected, which would generate /proc entries for specific rules, don't know
what would work better. Either way, this seems to work somewhat.",4451,data/crawl/collectd/hunk_455.cpp,use same variable,non-trivial,data/crawl/collectd/old_hunk_455.cpp,data/crawl/collectd/new_hunk_455.cpp,-1,179,,"printf(""Counters: %llu packets, %llu bytes\n"",
       (unsigned long long)e->counters.pcnt, (unsigned long long)e->counters.bcnt);","[""addLog""]","[[], [""printf"", ""Counters"", ""%llu"", ""packets"", ""%llu"", ""bytes\\n"", ""unsigned"", ""long"", ""long"", ""e"", ""counters"", ""pcnt"", ""unsigned"", ""long"", ""long"", ""e"", ""counters"", ""bcnt""]]",[5440441793197685850],866
https://github.com/collectd/collectd/commit/863dfcdf274509e4e1836c2c8f1f10f09e1d13be,03 Mar 2007,"iptables plugin: Adds a plugin to collect iptables'-counters.

My first attempt at a module for this is an iptables modules This will try to
read out the rules from iptables for a specific table and chain.
It will go through the rules looking for ones with ""comment"" matches and will
use the comment as a base for the generated filename.

So basically looking for lines like
 $ iptables -t mangle -A incoming -p tcp -m comment --comment ""tcp""
will generate a iptables-incoming/tcp.rrd file from the byte counters

There used to also be an account iptables module but that seems to have been
neglected, which would generate /proc entries for specific rules, don't know
what would work better. Either way, this seems to work somewhat.",4451,data/crawl/collectd/hunk_454.cpp,use same variable,non-trivial,data/crawl/collectd/old_hunk_454.cpp,data/crawl/collectd/new_hunk_454.cpp,-1,133,,"printf(""Entry %u (%lu):\n"", iptcb_entry2index(handle, e),
       iptcb_entry2offset(handle, e));","[""addLog""]","[[], [""printf"", ""Entry"", ""%u"", ""%lu"", ""\\n"", ""iptcb_entry2index"", ""handle"", ""e"", ""iptcb_entry2offset"", ""handle"", ""e""]]",[16304182402726198819],865
https://github.com/collectd/collectd/commit/863dfcdf274509e4e1836c2c8f1f10f09e1d13be,03 Mar 2007,"iptables plugin: Adds a plugin to collect iptables'-counters.

My first attempt at a module for this is an iptables modules This will try to
read out the rules from iptables for a specific table and chain.
It will go through the rules looking for ones with ""comment"" matches and will
use the comment as a base for the generated filename.

So basically looking for lines like
 $ iptables -t mangle -A incoming -p tcp -m comment --comment ""tcp""
will generate a iptables-incoming/tcp.rrd file from the byte counters

There used to also be an account iptables module but that seems to have been
neglected, which would generate /proc entries for specific rules, don't know
what would work better. Either way, this seems to work somewhat.",4451,data/crawl/collectd/hunk_455.cpp,use same variable,non-trivial,data/crawl/collectd/old_hunk_455.cpp,data/crawl/collectd/new_hunk_455.cpp,-1,140,,"printf(""Entry %u (%lu):\n"", iptcb_entry2index(handle, e),
       iptcb_entry2offset(handle, e));","[""addLog""]","[[], [""printf"", ""Entry"", ""%u"", ""%lu"", ""\\n"", ""iptcb_entry2index"", ""handle"", ""e"", ""iptcb_entry2offset"", ""handle"", ""e""]]",[16304182402726198819],865
https://github.com/collectd/collectd/commit/8de91034a0186feba7079b92711b0d140278ce7a,03 Mar 2007,"iptables plugin: Use a global `libiptc' if it exists.

Will likely not build under non-Linux systems yet.",4275,data/crawl/collectd/hunk_451.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_451.cpp,data/crawl/collectd/new_hunk_451.cpp,152,-1,"printf(""UNKNOWN "");",,"[""removeLog""]","[[""printf"", ""UNKNOWN""], []]",[-2656735856303856704],864
https://github.com/collectd/collectd/commit/8de91034a0186feba7079b92711b0d140278ce7a,03 Mar 2007,"iptables plugin: Use a global `libiptc' if it exists.

Will likely not build under non-Linux systems yet.",4275,data/crawl/collectd/hunk_452.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_452.cpp,data/crawl/collectd/new_hunk_452.cpp,183,-1,"printf(""UNKNOWN "");",,"[""removeLog""]","[[""printf"", ""UNKNOWN""], []]",[-2656735856303856704],864
https://github.com/collectd/collectd/commit/8de91034a0186feba7079b92711b0d140278ce7a,03 Mar 2007,"iptables plugin: Use a global `libiptc' if it exists.

Will likely not build under non-Linux systems yet.",4275,data/crawl/collectd/hunk_451.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_451.cpp,data/crawl/collectd/new_hunk_451.cpp,151,-1,"printf(""ALTERED "");",,"[""removeLog""]","[[""printf"", ""ALTERED""], []]",[-15198065609320230107],863
https://github.com/collectd/collectd/commit/8de91034a0186feba7079b92711b0d140278ce7a,03 Mar 2007,"iptables plugin: Use a global `libiptc' if it exists.

Will likely not build under non-Linux systems yet.",4275,data/crawl/collectd/hunk_452.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_452.cpp,data/crawl/collectd/new_hunk_452.cpp,182,-1,"printf(""ALTERED "");",,"[""removeLog""]","[[""printf"", ""ALTERED""], []]",[-15198065609320230107],863
https://github.com/collectd/collectd/commit/8de91034a0186feba7079b92711b0d140278ce7a,03 Mar 2007,"iptables plugin: Use a global `libiptc' if it exists.

Will likely not build under non-Linux systems yet.",4275,data/crawl/collectd/hunk_451.cpp,use same variable,non-trivial,data/crawl/collectd/old_hunk_451.cpp,data/crawl/collectd/new_hunk_451.cpp,150,-1,"printf(""Cache: %08X "", e->nfcache);",,"[""removeLog""]","[[""printf"", ""Cache"", ""%08X"", ""e"", ""nfcache""], []]",[2289092929809419082],862
https://github.com/collectd/collectd/commit/8de91034a0186feba7079b92711b0d140278ce7a,03 Mar 2007,"iptables plugin: Use a global `libiptc' if it exists.

Will likely not build under non-Linux systems yet.",4275,data/crawl/collectd/hunk_452.cpp,use same variable,non-trivial,data/crawl/collectd/old_hunk_452.cpp,data/crawl/collectd/new_hunk_452.cpp,181,-1,"printf(""Cache: %08X "", e->nfcache);",,"[""removeLog""]","[[""printf"", ""Cache"", ""%08X"", ""e"", ""nfcache""], []]",[2289092929809419082],862
https://github.com/collectd/collectd/commit/838af4cdc6c8674ed3e14a95fea172118c707a85,15 Mar 2007,Replace all syslog-calls with one of the new logging-macros.,933,data/crawl/collectd/hunk_445.cpp,invoke same log method,non-trivial,data/crawl/collectd/old_hunk_445.cpp,data/crawl/collectd/new_hunk_445.cpp,-1,3,,"plugin_log (level, message);","[""addLog""]","[[], [""plugin_log"", ""level"", ""message""]]",[-6509785772690165223],861
https://github.com/collectd/collectd/commit/838af4cdc6c8674ed3e14a95fea172118c707a85,15 Mar 2007,Replace all syslog-calls with one of the new logging-macros.,933,data/crawl/collectd/hunk_446.cpp,invoke same log method,non-trivial,data/crawl/collectd/old_hunk_446.cpp,data/crawl/collectd/new_hunk_446.cpp,-1,3,,"plugin_log (level, message);","[""addLog""]","[[], [""plugin_log"", ""level"", ""message""]]",[-6509785772690165223],861
https://github.com/collectd/collectd/commit/7b08f89792c84c47b824cd4a7309c948819915fe,26 Mar 2007,logfile plugin: Renamed functions and changed error-messages to reflect the renaming.,18,data/crawl/collectd/hunk_434.cpp,inner similar method,trivial,data/crawl/collectd/old_hunk_434.cpp,data/crawl/collectd/new_hunk_434.cpp,3,3,"fprintf (stderr, ""stderr plugin: Access to %s denied: %s\n"",
value, sstrerror (errno, errbuf, sizeof (errbuf)));","fprintf (stderr, ""logfile plugin: Access to %s denied: %s\n"",
value, sstrerror (errno, errbuf, sizeof (errbuf)));","[""updateContent""]","[[""stderr""], [""logfile""]]",[17749656267901289445],860
https://github.com/collectd/collectd/commit/7b08f89792c84c47b824cd4a7309c948819915fe,26 Mar 2007,logfile plugin: Renamed functions and changed error-messages to reflect the renaming.,18,data/crawl/collectd/hunk_435.cpp,inner similar method,trivial,data/crawl/collectd/old_hunk_435.cpp,data/crawl/collectd/new_hunk_435.cpp,3,3,"fprintf (stderr, ""stderr plugin: fopen (%s) failed: %s\n"",
(log_file == NULL) ? ""<null>"" : log_file,
sstrerror (errno, errbuf, sizeof (errbuf)));","fprintf (stderr, ""logfile plugin: fopen (%s) failed: %s\n"",
(log_file == NULL) ? ""<null>"" : log_file,
sstrerror (errno, errbuf, sizeof (errbuf)));","[""updateContent""]","[[""stderr""], [""logfile""]]",[17749656267901289445],860
https://github.com/collectd/collectd/commit/21ebca2d467304ebd3dc187d3ecdda6e5aff9d52,11 Apr 2007,"perl plugin: Exported plugin_log() to Perl.

This adds the following function to collectd's Perl API:

Collectd::plugin_log:
  pass a message to collectd's logging mechanism

  arguments:
  level - log level
  message - log message

The log level should be any of the Collectd::LOG_* constants.

Signed-off-by: Sebastian Harl <sh@tokkee.org>",40,data/crawl/collectd/hunk_428.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_428.cpp,data/crawl/collectd/new_hunk_428.cpp,-1,23,,"plugin_log (SvIV (ST (0)), SvPV_nolen (ST (1)));","[""addLog""]","[[], [""plugin_log"", ""SvIV"", ""ST"", ""0"", ""SvPV_nolen"", ""ST"", ""1""]]",[-8595347171521742895],859
https://github.com/collectd/collectd/commit/f59d051e2087090f15545c65facbc507699ac7e6,11 Apr 2007,"perl plugin: Exported plugin_log() to Perl.

This adds the following function to collectd's Perl API:

Collectd::plugin_log:
  pass a message to collectd's logging mechanism

  arguments:
  level - log level
  message - log message

The log level should be any of the Collectd::LOG_* constants.

Signed-off-by: Sebastian Harl <sh@tokkee.org>",40,data/crawl/collectd/hunk_429.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_429.cpp,data/crawl/collectd/new_hunk_429.cpp,-1,23,,"plugin_log (SvIV (ST (0)), SvPV_nolen (ST (1)));","[""addLog""]","[[], [""plugin_log"", ""SvIV"", ""ST"", ""0"", ""SvPV_nolen"", ""ST"", ""1""]]",[-8595347171521742895],859
https://github.com/collectd/collectd/commit/21ebca2d467304ebd3dc187d3ecdda6e5aff9d52,11 Apr 2007,"perl plugin: Exported plugin_log() to Perl.

This adds the following function to collectd's Perl API:

Collectd::plugin_log:
  pass a message to collectd's logging mechanism

  arguments:
  level - log level
  message - log message

The log level should be any of the Collectd::LOG_* constants.

Signed-off-by: Sebastian Harl <sh@tokkee.org>",40,data/crawl/collectd/hunk_428.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_428.cpp,data/crawl/collectd/new_hunk_428.cpp,-1,17,,"log_err (""Usage: Collectd::plugin_log(level, message)"");","[""addLog""]","[[], [""log_err"", ""Usage"", ""Collectd"", ""plugin_log"", ""level"", ""message""]]",[-12602696963145898840],858
https://github.com/collectd/collectd/commit/f59d051e2087090f15545c65facbc507699ac7e6,11 Apr 2007,"perl plugin: Exported plugin_log() to Perl.

This adds the following function to collectd's Perl API:

Collectd::plugin_log:
  pass a message to collectd's logging mechanism

  arguments:
  level - log level
  message - log message

The log level should be any of the Collectd::LOG_* constants.

Signed-off-by: Sebastian Harl <sh@tokkee.org>",40,data/crawl/collectd/hunk_429.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_429.cpp,data/crawl/collectd/new_hunk_429.cpp,-1,17,,"log_err (""Usage: Collectd::plugin_log(level, message)"");","[""addLog""]","[[], [""log_err"", ""Usage"", ""Collectd"", ""plugin_log"", ""level"", ""message""]]",[-12602696963145898840],858
https://github.com/collectd/collectd/commit/6e779261c08a8996ed476d23638fc62ad867fa5f,23 Aug 2007,"exec and unixsock plugin: Move the shared `PUTVAL' code into src/utils_cmd_putval.[ch].

The putval code itself has been extended to allow `options' which can currently
be used to set the interval of the value-list(s) being submitted. Also,
submiting multiple value-lists in one command has been implemented. The
manpages should be up to date.",560,data/crawl/collectd/hunk_414.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_414.cpp,data/crawl/collectd/new_hunk_414.cpp,-1,174,,"fprintf (fh, ""-1 malloc failed."");","[""addLog""]","[[], [""fprintf"", ""fh"", ""1"", ""malloc"", ""failed""]]",[-17844596785343168817],857
https://github.com/collectd/collectd/commit/90885f2e932708b8596a71ec8861bcd5e1cf51a8,19 May 2007,"unixsock plugin: Return a message in any case.

This removes a fair amount of `FIXME's :)",22,data/crawl/collectd/hunk_425.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_425.cpp,data/crawl/collectd/new_hunk_425.cpp,-1,3,,"fprintf (fh, ""-1 malloc failed."");","[""addLog""]","[[], [""fprintf"", ""fh"", ""1"", ""malloc"", ""failed""]]",[-17844596785343168817],857
https://github.com/collectd/collectd/commit/6e779261c08a8996ed476d23638fc62ad867fa5f,23 Aug 2007,"exec and unixsock plugin: Move the shared `PUTVAL' code into src/utils_cmd_putval.[ch].

The putval code itself has been extended to allow `options' which can currently
be used to set the interval of the value-list(s) being submitted. Also,
submiting multiple value-lists in one command has been implemented. The
manpages should be up to date.",560,data/crawl/collectd/hunk_414.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_414.cpp,data/crawl/collectd/new_hunk_414.cpp,-1,155,,"fprintf (fh, ""-1 Identifier too long."");","[""addLog""]","[[], [""fprintf"", ""fh"", ""1"", ""Identifier"", ""too"", ""long""]]",[7926612238597679610],856
https://github.com/collectd/collectd/commit/90885f2e932708b8596a71ec8861bcd5e1cf51a8,19 May 2007,"unixsock plugin: Return a message in any case.

This removes a fair amount of `FIXME's :)",22,data/crawl/collectd/hunk_421.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_421.cpp,data/crawl/collectd/new_hunk_421.cpp,-1,10,,"fprintf (fh, ""-1 Identifier too long."");","[""addLog""]","[[], [""fprintf"", ""fh"", ""1"", ""Identifier"", ""too"", ""long""]]",[7926612238597679610],856
https://github.com/collectd/collectd/commit/6e779261c08a8996ed476d23638fc62ad867fa5f,23 Aug 2007,"exec and unixsock plugin: Move the shared `PUTVAL' code into src/utils_cmd_putval.[ch].

The putval code itself has been extended to allow `options' which can currently
be used to set the interval of the value-list(s) being submitted. Also,
submiting multiple value-lists in one command has been implemented. The
manpages should be up to date.",560,data/crawl/collectd/hunk_414.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_414.cpp,data/crawl/collectd/new_hunk_414.cpp,-1,38,,"fprintf (fh, ""-1 No time found."");","[""addLog""]","[[], [""fprintf"", ""fh"", ""1"", ""No"", ""time"", ""found""]]",[2189894988615169843],855
https://github.com/collectd/collectd/commit/90885f2e932708b8596a71ec8861bcd5e1cf51a8,19 May 2007,"unixsock plugin: Return a message in any case.

This removes a fair amount of `FIXME's :)",22,data/crawl/collectd/hunk_422.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_422.cpp,data/crawl/collectd/new_hunk_422.cpp,-1,4,,"fprintf (fh, ""-1 No time found."");","[""addLog""]","[[], [""fprintf"", ""fh"", ""1"", ""No"", ""time"", ""found""]]",[2189894988615169843],855
https://github.com/collectd/collectd/commit/e3f63afc6fc07e04540a42e69bdeab4928f1cd49,09 Dec 2007,src/plugin.[ch]: Removed the complain functions.,57,data/crawl/collectd/hunk_397.cpp,inner similar method,non-trivial,data/crawl/collectd/old_hunk_397.cpp,data/crawl/collectd/new_hunk_397.cpp,29,-1,"plugin_log (level, message);",,"[""removeLog""]","[[""plugin_log"", ""level"", ""message""], []]",[6509785772690165223],854
https://github.com/collectd/collectd/commit/e3f63afc6fc07e04540a42e69bdeab4928f1cd49,09 Dec 2007,src/plugin.[ch]: Removed the complain functions.,57,data/crawl/collectd/hunk_397.cpp,inner similar method,non-trivial,data/crawl/collectd/old_hunk_397.cpp,data/crawl/collectd/new_hunk_397.cpp,47,-1,"plugin_log (level, message);",,"[""removeLog""]","[[""plugin_log"", ""level"", ""message""], []]",[6509785772690165223],854
https://github.com/collectd/collectd/commit/0e3895c00ea46efccac1a7cf27483b6556cf8741,23 Jan 2008,"collectd: Added ``associative'' members to the notification_t structure.

A notification does not need to be related to any performance data collected by
collectd, but now it *may* be related. This is used in the threshold stuff
already and passed via ExecNotification in the exec plugin, too.
The new `notification_init' function in `src/common.c' and the
`NOTIFICATION_INIT_VL' macro simplify the initialization of these new fields.",102,data/crawl/collectd/hunk_395.cpp,use same text format,non-trivial,data/crawl/collectd/old_hunk_395.cpp,data/crawl/collectd/new_hunk_395.cpp,-1,19,,"fprintf (fh, ""\n"");","[""addLog""]","[[], [""fprintf"", ""fh"", ""\\n""]]",[-5179306325123647004],853
https://github.com/collectd/collectd/commit/86090b3d409634d016da7bbb0cbe43ed5a851d30,28 Jan 2007,"unixsock plugin: Added a first version of a UNIX-socket output plugin.

The goal is to build a nagios-interface on top of this.",670,data/crawl/collectd/hunk_481.cpp,use same text format,non-trivial,data/crawl/collectd/old_hunk_481.cpp,data/crawl/collectd/new_hunk_481.cpp,-1,476,,"fprintf (fh, ""\n"");","[""addLog""]","[[], [""fprintf"", ""fh"", ""\\n""]]",[-5179306325123647004],853
https://github.com/collectd/collectd/commit/963766d0bcbbcdaeb7ebf567046c613455133666,23 Jan 2008,"src/utils_cmd_putnotif.[ch]: Added a new module which handles parsing of notifications from some command line or similar.

Of course, this is similar to the `utils_cmd_putval' module.",202,data/crawl/collectd/hunk_394.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_394.cpp,data/crawl/collectd/new_hunk_394.cpp,-1,135,,"fprintf (fh, ""-1 Error parsing option `%s'"", fields[i]);","[""addLog""]","[[], [""fprintf"", ""fh"", ""1"", ""Error"", ""parsing"", ""option"", ""%s"", ""fields[i]""]]",[12162330485438404634],852
https://github.com/collectd/collectd/commit/6e779261c08a8996ed476d23638fc62ad867fa5f,23 Aug 2007,"exec and unixsock plugin: Move the shared `PUTVAL' code into src/utils_cmd_putval.[ch].

The putval code itself has been extended to allow `options' which can currently
be used to set the interval of the value-list(s) being submitted. Also,
submiting multiple value-lists in one command has been implemented. The
manpages should be up to date.",560,data/crawl/collectd/hunk_414.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_414.cpp,data/crawl/collectd/new_hunk_414.cpp,-1,193,,"fprintf (fh, ""-1 Error parsing option `%s'"",
fields[i]);","[""addLog""]","[[], [""fprintf"", ""fh"", ""1"", ""Error"", ""parsing"", ""option"", ""%s"", ""fields[i]""]]",[12162330485438404634],852
https://github.com/collectd/collectd/commit/583b04d5826669eb182cb6ea538cf68266721ccb,26 Mar 2008,"unixsock plugin: Open two different IO stream handles for reading and writing.

Full-duplex standard IO streams are not really supported on sockets.
Mixing input and output functions involves calls to lseek(2) which is
not supported on sockets and thus causes the IO operations to fail.
Opening two IO streams solves the problem.

This is a backport of 43df21461d523023951746ef669f1bb95f61366d.

Signed-off-by: Sebastian Harl <sh@tokkee.org>
Signed-off-by: Florian Forster <octo@huhu.verplant.org>",31,data/crawl/collectd/hunk_379.cpp,use same variable,trivial,data/crawl/collectd/old_hunk_379.cpp,data/crawl/collectd/new_hunk_379.cpp,15,15,"fprintf (fh, ""-1 Unknown command: %s\n"", fields[0]);","fprintf (fhout, ""-1 Unknown command: %s\n"", fields[0]);","[""updateVariable""]","[[""fh""], [""fhout""]]",[2039895993822269659],851
https://github.com/collectd/collectd/commit/ac03ae49d85c01fe2da58dd78f66db58416d81cc,26 Mar 2008,"unixsock plugin: Open two different IO stream handles for reading and writing.

Full-duplex standard IO streams are not really supported on sockets.
Mixing input and output functions involves calls to lseek(2) which is
not supported on sockets and thus causes the IO operations to fail.
Opening two IO streams solves the problem.

This is a backport of 43df21461d523023951746ef669f1bb95f61366d.

Signed-off-by: Sebastian Harl <sh@tokkee.org>
Signed-off-by: Florian Forster <octo@huhu.verplant.org>",33,data/crawl/collectd/hunk_380.cpp,use same variable,trivial,data/crawl/collectd/old_hunk_380.cpp,data/crawl/collectd/new_hunk_380.cpp,19,19,"fprintf (fh, ""-1 Unknown command: %s\n"", fields[0]);","fprintf (fhout, ""-1 Unknown command: %s\n"", fields[0]);","[""updateVariable""]","[[""fh""], [""fhout""]]",[2039895993822269659],851
https://github.com/collectd/collectd/commit/11ba6e7c5a57c9bb73f389cfaf79b50b56b7544f,23 Jul 2008,"onewire plugin: Add a plugin to read onewire sensors.

This plugin allows to read _temperature_ sensors connected over a
onewire bus using the `owcapi' library from the `owfs' project. Other
sensors can be added easily, but without hardware to test this it's
kind of hard to be sure it all works.

ToDo's: Document the plugin, make the `Alias' configuration option work.",365,data/crawl/collectd/hunk_370.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_370.cpp,data/crawl/collectd/new_hunk_370.cpp,-1,269,,"printf (""-- 8< --\n"");","[""addLog""]","[[], [""printf"", ""8"", ""\\n""]]",[7249185632780690376],850
https://github.com/collectd/collectd/commit/11ba6e7c5a57c9bb73f389cfaf79b50b56b7544f,23 Jul 2008,"onewire plugin: Add a plugin to read onewire sensors.

This plugin allows to read _temperature_ sensors connected over a
onewire bus using the `owcapi' library from the `owfs' project. Other
sensors can be added easily, but without hardware to test this it's
kind of hard to be sure it all works.

ToDo's: Document the plugin, make the `Alias' configuration option work.",365,data/crawl/collectd/hunk_370.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_370.cpp,data/crawl/collectd/new_hunk_370.cpp,-1,282,,"printf (""-- >8 --\n"");","[""addLog""]","[[], [""printf"", ""8"", ""\\n""]]",[7249185632780690376],850
https://github.com/collectd/collectd/commit/5b8102adb3d8d11a9c1e02081cc228101de80064,27 Aug 2008,onewire plugin: Imported the code for DS2409 hubs.,95,data/crawl/collectd/hunk_367.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_367.cpp,data/crawl/collectd/new_hunk_367.cpp,19,-1,"printf (""-- 8< --\n"");",,"[""removeLog""]","[[""printf"", ""8"", ""\\n""], []]",[-7249185632780690376],849
https://github.com/collectd/collectd/commit/5b8102adb3d8d11a9c1e02081cc228101de80064,27 Aug 2008,onewire plugin: Imported the code for DS2409 hubs.,95,data/crawl/collectd/hunk_367.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_367.cpp,data/crawl/collectd/new_hunk_367.cpp,32,-1,"printf (""-- >8 --\n"");",,"[""removeLog""]","[[""printf"", ""8"", ""\\n""], []]",[-7249185632780690376],849
https://github.com/collectd/collectd/commit/d1125cb9d1bbe3bd77f90366bf64b44904f69e54,08 Nov 2008,"collectd-nagios: Use `libcollectdclient' and various improvements.

The improvements include:
- Copyright and license header.
- More consistent output.
- Frees some more memory that was allocated..
- Better standards compliance.
- Make all functions `static' (except `main', of course).
- Use `%g' instead of `%lf' to print floating point values.",416,data/crawl/collectd/hunk_358.cpp,use same variable,non-trivial,data/crawl/collectd/old_hunk_358.cpp,data/crawl/collectd/new_hunk_358.cpp,9,30,"printf ("" %s=%lf;;;;"", values_names[i], values[i]);","printf ("" %s=%g;;;;"", values_names[i], values[i]);","[""updateContent""]","[[""%lf""], [""%g""]]",[4775301843693679710],848
https://github.com/collectd/collectd/commit/d1125cb9d1bbe3bd77f90366bf64b44904f69e54,08 Nov 2008,"collectd-nagios: Use `libcollectdclient' and various improvements.

The improvements include:
- Copyright and license header.
- More consistent output.
- Frees some more memory that was allocated..
- Better standards compliance.
- Make all functions `static' (except `main', of course).
- Use `%g' instead of `%lf' to print floating point values.",416,data/crawl/collectd/hunk_359.cpp,use same variable,non-trivial,data/crawl/collectd/old_hunk_359.cpp,data/crawl/collectd/new_hunk_359.cpp,8,28,"printf ("" %s=%lf;;;;"", values_names[i], values[i]);","printf ("" %s=%g;;;;"", values_names[i], values[i]);","[""updateContent""]","[[""%lf""], [""%g""]]",[4775301843693679710],848
https://github.com/collectd/collectd/commit/d1125cb9d1bbe3bd77f90366bf64b44904f69e54,08 Nov 2008,"collectd-nagios: Use `libcollectdclient' and various improvements.

The improvements include:
- Copyright and license header.
- More consistent output.
- Frees some more memory that was allocated..
- Better standards compliance.
- Make all functions `static' (except `main', of course).
- Use `%g' instead of `%lf' to print floating point values.",416,data/crawl/collectd/hunk_357.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_357.cpp,data/crawl/collectd/new_hunk_357.cpp,86,-1,"fprintf (stderr, ""malloc failed: %s\n"",
strerror (errno));",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""malloc"", ""failed"", ""%s\\n"", ""strerror"", ""errno""], []]",[7693798041612465915],847
https://github.com/collectd/collectd/commit/d1125cb9d1bbe3bd77f90366bf64b44904f69e54,08 Nov 2008,"collectd-nagios: Use `libcollectdclient' and various improvements.

The improvements include:
- Copyright and license header.
- More consistent output.
- Frees some more memory that was allocated..
- Better standards compliance.
- Make all functions `static' (except `main', of course).
- Use `%g' instead of `%lf' to print floating point values.",416,data/crawl/collectd/hunk_357.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_357.cpp,data/crawl/collectd/new_hunk_357.cpp,94,-1,"fprintf (stderr, ""malloc failed: %s\n"",
strerror (errno));",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""malloc"", ""failed"", ""%s\\n"", ""strerror"", ""errno""], []]",[7693798041612465915],847
https://github.com/collectd/collectd/commit/d1125cb9d1bbe3bd77f90366bf64b44904f69e54,08 Nov 2008,"collectd-nagios: Use `libcollectdclient' and various improvements.

The improvements include:
- Copyright and license header.
- More consistent output.
- Frees some more memory that was allocated..
- Better standards compliance.
- Make all functions `static' (except `main', of course).
- Use `%g' instead of `%lf' to print floating point values.",416,data/crawl/collectd/hunk_357.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_357.cpp,data/crawl/collectd/new_hunk_357.cpp,45,-1,"fprintf (stderr, ""fdopen failed: %s\n"",
strerror (errno));",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""fdopen"", ""failed"", ""%s\\n"", ""strerror"", ""errno""], []]",[-2657833622063153835],846
https://github.com/collectd/collectd/commit/d1125cb9d1bbe3bd77f90366bf64b44904f69e54,08 Nov 2008,"collectd-nagios: Use `libcollectdclient' and various improvements.

The improvements include:
- Copyright and license header.
- More consistent output.
- Frees some more memory that was allocated..
- Better standards compliance.
- Make all functions `static' (except `main', of course).
- Use `%g' instead of `%lf' to print floating point values.",416,data/crawl/collectd/hunk_357.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_357.cpp,data/crawl/collectd/new_hunk_357.cpp,54,-1,"fprintf (stderr, ""fdopen failed: %s\n"",
strerror (errno));",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""fdopen"", ""failed"", ""%s\\n"", ""strerror"", ""errno""], []]",[-2657833622063153835],846
https://github.com/collectd/collectd/commit/67a926821b3b6e39d9fd5e1c10b5a2d0ecdd237a,06 Dec 2008,"perl plugin, utils_complain: Fixed errors identified by -Wformat-security.

A few ""format not a string literal and no format arguments"" errors have been
fixed by using ""%s"" as the format argument.

Thanks to Kevin (onebinary) for reporting this.",6,data/crawl/collectd/hunk_354.cpp,invoke same log method,non-trivial,data/crawl/collectd/old_hunk_354.cpp,data/crawl/collectd/new_hunk_354.cpp,3,3,"plugin_log (level, message);","plugin_log (level, ""%s"", message);","[""addContent""]","[[], [""%s""]]",[4736028453042782],845
https://github.com/collectd/collectd/commit/67a926821b3b6e39d9fd5e1c10b5a2d0ecdd237a,06 Dec 2008,"perl plugin, utils_complain: Fixed errors identified by -Wformat-security.

A few ""format not a string literal and no format arguments"" errors have been
fixed by using ""%s"" as the format argument.

Thanks to Kevin (onebinary) for reporting this.",6,data/crawl/collectd/hunk_355.cpp,invoke same log method,non-trivial,data/crawl/collectd/old_hunk_355.cpp,data/crawl/collectd/new_hunk_355.cpp,3,3,"plugin_log (level, message);","plugin_log (level, ""%s"", message);","[""addContent""]","[[], [""%s""]]",[4736028453042782],845
https://github.com/collectd/collectd/commit/08d2e13121e70afcf65d3925a16b4c8a6f41c915,18 Feb 2009,"src/liboconfig/oconfig.[ch]: Add `oconfig_clone'.

This new function clones an entire sub-tree, that can be free'd again
using `oconfig_free'.",98,data/crawl/collectd/hunk_331.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_331.cpp,data/crawl/collectd/new_hunk_331.cpp,-1,34,,"fprintf (stderr, ""calloc failed.\n"");","[""addLog""]","[[], [""fprintf"", ""stderr"", ""calloc"", ""failed"", ""\\n""]]",[-25840909782670116213],844
https://github.com/collectd/collectd/commit/08d2e13121e70afcf65d3925a16b4c8a6f41c915,18 Feb 2009,"src/liboconfig/oconfig.[ch]: Add `oconfig_clone'.

This new function clones an entire sub-tree, that can be free'd again
using `oconfig_free'.",98,data/crawl/collectd/hunk_331.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_331.cpp,data/crawl/collectd/new_hunk_331.cpp,-1,70,,"fprintf (stderr, ""calloc failed.\n"");","[""addLog""]","[[], [""fprintf"", ""stderr"", ""calloc"", ""failed"", ""\\n""]]",[-25840909782670116213],844
https://github.com/collectd/collectd/commit/1f80f30f3eace7f9917d04ac12f63c765475d00c,23 Apr 2009,"php-collection: New graph toolbox

This patch creates a new toolbox which can be show on a per-graph base
by clicking on a graph.

This box allows changing the displayed period of the selected graph
as well as toggle the logarithmic scale and legend details flags.

The graph reordering, refresh and delete tools have been moved from
right graph edge to this new toolbox.

Signed-off-by: Florian Forster <octo@huhu.verplant.org>",250,data/crawl/collectd/hunk_325.cpp,use same constant,non-trivial,data/crawl/collectd/old_hunk_325.cpp,data/crawl/collectd/new_hunk_325.cpp,-1,8,,"printf(""\t\t\t\t\t\t<option value=\""%s\"">%s</option>\n"", htmlspecialchars($timespan['name']), htmlspecialchars($timespan['label']));","[""addLog""]","[[], [""printf"", ""\\t\\t\\t\\t\\t\\t"", ""option"", ""value"", ""\\"", ""%s\\"", ""%s"", ""/option"", ""\\n"", ""htmlspecialchars"", ""timespan["", ""name"", ""]"", ""htmlspecialchars"", ""timespan["", ""label"", ""]""]]",[11918532983648713279],843
https://github.com/collectd/collectd/commit/a019b6c8144745db63c599680bd693ac02f11666,10 Feb 2009,"contrib/php-collection: Add a PHP frontend for graph generation.

Hi,

Attached is a patch with a set of PHP files for a complete graphing
environment for collectd-generated RRDs.
Before generating a graph with rrdtool it can tell collectd to flush
the RRDs that are about to be used.

The interface is built with dynamic HTML.
It provides following options:
 - host selection
 -> plugin selection
 --> plugin instance selection
 ---> type selection
 ----> type instance selection (or meta graph)
 - linear / logarithmic Y-scale
 - verbose / minimal legend
 - [Add Graph] [Remove all Graphs] [Refresh Graphs]
For each displayed graph:
 - Move above previous graph
 - Refresh graph
 - Remove graph
 - Move below following graph

I tested on following browsers:
- Firefox-3.0
- Safari-3.2 (Win32)
- Konqueror (KDE-4.1.3)
- Webkit (webkit-gtk-0_p40220)
- Internet Explorer (6, 7, 8rc - CSS layout issues with <8)

Dependencies:
- PHP-5 (might run with PHP-4)
  > GD suport for error images
  > Ability to execute rrdtool binary
  > Unix socket for FLUSH support
- RRDTool (rrdtool graph, rrdtool info)

TODO: complete/improve graph definitions in definitions.php
 though there is code to generate basic graph for any RRD of
 unknown type, so definitions are rather a matter of color,
 DS combination and stacking.

Bruno

File listing with short description:
- config.php
  (configuration)
- functions.php
  (common functions)
- definitions.php
  (graph definitions for most? types from types.db
   - based on collection.cgi)
- definitions.local.php
  (place for site-local graph definitions, e.g. for
   unixsock, tail, snmp generated RRDs)
- index.php
  (main page)
- graph.php
  (page returning the graph's PNG image)
- browser.js
  (whole bunch of Javascript logic to show/hide/update graphs)

Not included are a few images:
- collectd-logo.png
  (16x16, e.g. use collectd.org's favicon)
- favicon.png
  (e.g. use the one in share/collection*)
- refresh.png
- move-up.png
- move-down.png
- delete.png
  (16x16 take matching ones from your system's action-icons)",3809,data/crawl/collectd/hunk_334.cpp,use same constant,non-trivial,data/crawl/collectd/old_hunk_334.cpp,data/crawl/collectd/new_hunk_334.cpp,-1,128,,"printf(""\t\t\t\t\t\t<option value=\""%s\"">%s</option>\n"", htmlspecialchars($timespan['name']), htmlspecialchars($timespan['label']));","[""addLog""]","[[], [""printf"", ""\\t\\t\\t\\t\\t\\t"", ""option"", ""value"", ""\\"", ""%s\\"", ""%s"", ""/option"", ""\\n"", ""htmlspecialchars"", ""timespan["", ""name"", ""]"", ""htmlspecialchars"", ""timespan["", ""label"", ""]""]]",[11918532983648713279],843
https://github.com/collectd/collectd/commit/d1e62aa4497458ed86d20f5ef1b6c00d50596da0,23 Apr 2009,"php-collection: add basic support for meta-selections

Add support for new meta selections allowing addition of graphs
with wildcard behavior.
This adds support for @all selection which matches any values
for the given identifier part.
In addition those types for which meta graphs exist now also list the
individual type instances in addition to the meta graph key for separate
graphing.

In order to support such new groups the lookup code has been refactored
to use a single scanning function which recursively traveses the
collectd RRD output directory for hosts, plugins, types and passing the
discovered data to callback functions for use. The callbacks returns
true to indicate traversal should continue on to next depth level and
false to tell it to continue with next element.
e.g. true on a host means it should look for plugins for given host,
false to continue with next host.

Signed-off-by: Florian Forster <octo@huhu.verplant.org>",458,data/crawl/collectd/hunk_324.cpp,use same constant,non-trivial,data/crawl/collectd/old_hunk_324.cpp,data/crawl/collectd/new_hunk_324.cpp,-1,8,,"printf("" <method>%s</method>\n"", htmlspecialchars($method));","[""addLog""]","[[], [""printf"", ""method"", ""%s"", ""/method"", ""\\n"", ""htmlspecialchars"", ""method""]]",[16112364331245358085],842
https://github.com/collectd/collectd/commit/a019b6c8144745db63c599680bd693ac02f11666,10 Feb 2009,"contrib/php-collection: Add a PHP frontend for graph generation.

Hi,

Attached is a patch with a set of PHP files for a complete graphing
environment for collectd-generated RRDs.
Before generating a graph with rrdtool it can tell collectd to flush
the RRDs that are about to be used.

The interface is built with dynamic HTML.
It provides following options:
 - host selection
 -> plugin selection
 --> plugin instance selection
 ---> type selection
 ----> type instance selection (or meta graph)
 - linear / logarithmic Y-scale
 - verbose / minimal legend
 - [Add Graph] [Remove all Graphs] [Refresh Graphs]
For each displayed graph:
 - Move above previous graph
 - Refresh graph
 - Remove graph
 - Move below following graph

I tested on following browsers:
- Firefox-3.0
- Safari-3.2 (Win32)
- Konqueror (KDE-4.1.3)
- Webkit (webkit-gtk-0_p40220)
- Internet Explorer (6, 7, 8rc - CSS layout issues with <8)

Dependencies:
- PHP-5 (might run with PHP-4)
  > GD suport for error images
  > Ability to execute rrdtool binary
  > Unix socket for FLUSH support
- RRDTool (rrdtool graph, rrdtool info)

TODO: complete/improve graph definitions in definitions.php
 though there is code to generate basic graph for any RRD of
 unknown type, so definitions are rather a matter of color,
 DS combination and stacking.

Bruno

File listing with short description:
- config.php
  (configuration)
- functions.php
  (common functions)
- definitions.php
  (graph definitions for most? types from types.db
   - based on collection.cgi)
- definitions.local.php
  (place for site-local graph definitions, e.g. for
   unixsock, tail, snmp generated RRDs)
- index.php
  (main page)
- graph.php
  (page returning the graph's PNG image)
- browser.js
  (whole bunch of Javascript logic to show/hide/update graphs)

Not included are a few images:
- collectd-logo.png
  (16x16, e.g. use collectd.org's favicon)
- favicon.png
  (e.g. use the one in share/collection*)
- refresh.png
- move-up.png
- move-down.png
- delete.png
  (16x16 take matching ones from your system's action-icons)",3809,data/crawl/collectd/hunk_334.cpp,use same constant,non-trivial,data/crawl/collectd/old_hunk_334.cpp,data/crawl/collectd/new_hunk_334.cpp,-1,33,,"printf("" <method>%s</method>\n"", htmlspecialchars($method));","[""addLog""]","[[], [""printf"", ""method"", ""%s"", ""/method"", ""\\n"", ""htmlspecialchars"", ""method""]]",[16112364331245358085],842
https://github.com/collectd/collectd/commit/f131f0347f58929bdb992ca4dabcb40120757ffc,17 Oct 2009,"Added a workaround to module loading to allow Python scripts to do imports.
Redid the python thread handling.
Added log callback.",165,data/crawl/collectd/hunk_305.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_305.cpp,data/crawl/collectd/new_hunk_305.cpp,-1,21,,"PyErr_SetString(PyExc_ValueError, ""No module name specified and ""
""callback function does not have a \""__module__\"" attribute."");","[""addLog""]","[[], [""PyErr_SetString"", ""PyExc_ValueError"", ""No"", ""module"", ""name"", ""specified"", ""and"", ""callback"", ""function"", ""does"", ""not"", ""have"", ""a"", ""\\"", ""__module__\\"", ""attribute""]]",[-8575006561073618198],841
https://github.com/collectd/collectd/commit/8d6c9e224c4a719b6cec6f13c27c8e1e3bdff0d8,11 Oct 2009,"Added python plugin.

It adds a ""collectd"" module to the embedded python interpreter
which contains a ""register_config"" method to register config
callbacks and ""Config"" class which contains a config item.",336,data/crawl/collectd/hunk_307.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_307.cpp,data/crawl/collectd/new_hunk_307.cpp,-1,166,,"PyErr_SetString(PyExc_ValueError, ""No module name specified and ""
""callback function does not have a \""__module__\"" attribute."");","[""addLog""]","[[], [""PyErr_SetString"", ""PyExc_ValueError"", ""No"", ""module"", ""name"", ""specified"", ""and"", ""callback"", ""function"", ""does"", ""not"", ""have"", ""a"", ""\\"", ""__module__\\"", ""attribute""]]",[-8575006561073618198],841
https://github.com/collectd/collectd/commit/f96813067819f4a8d6752af11f741b599b3d1651,11 Nov 2009,Proper exception logging.,110,data/crawl/collectd/hunk_290.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_290.cpp,data/crawl/collectd/new_hunk_290.cpp,-1,3,,"cpy_log_exception(""write callback"");","[""addLog""]","[[], [""cpy_log_exception"", ""write"", ""callback""]]",[10345106236061426415],840
https://github.com/collectd/collectd/commit/f96813067819f4a8d6752af11f741b599b3d1651,11 Nov 2009,Proper exception logging.,110,data/crawl/collectd/hunk_292.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_292.cpp,data/crawl/collectd/new_hunk_292.cpp,-1,3,,"cpy_log_exception(""write callback"");","[""addLog""]","[[], [""cpy_log_exception"", ""write"", ""callback""]]",[10345106236061426415],840
https://github.com/collectd/collectd/commit/0a7107bef48f170b2b6ef192e86c0afa98dbb47b,16 Nov 2009,"Added unregister functions for all callbacks.
Also removed useless plugin_unregister_complex_read declaration.",91,data/crawl/collectd/hunk_284.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_284.cpp,data/crawl/collectd/new_hunk_284.cpp,-1,23,,"PyErr_Format(PyExc_RuntimeError, ""Unable to unregister %s callback '%s'."", desc, name);","[""addLog""]","[[], [""PyErr_Format"", ""PyExc_RuntimeError"", ""Unable"", ""to"", ""unregister"", ""%s"", ""callback"", ""%s"", ""desc"", ""name""]]",[-15913461200108195447],839
https://github.com/collectd/collectd/commit/0a7107bef48f170b2b6ef192e86c0afa98dbb47b,16 Nov 2009,"Added unregister functions for all callbacks.
Also removed useless plugin_unregister_complex_read declaration.",91,data/crawl/collectd/hunk_284.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_284.cpp,data/crawl/collectd/new_hunk_284.cpp,-1,54,,"PyErr_Format(PyExc_RuntimeError, ""Unable to unregister %s callback '%s'."", desc, name);","[""addLog""]","[[], [""PyErr_Format"", ""PyExc_RuntimeError"", ""Unable"", ""to"", ""unregister"", ""%s"", ""callback"", ""%s"", ""desc"", ""name""]]",[-15913461200108195447],839
https://github.com/collectd/collectd/commit/0a7107bef48f170b2b6ef192e86c0afa98dbb47b,16 Nov 2009,"Added unregister functions for all callbacks.
Also removed useless plugin_unregister_complex_read declaration.",91,data/crawl/collectd/hunk_284.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_284.cpp,data/crawl/collectd/new_hunk_284.cpp,-1,12,,"PyErr_SetString(PyExc_TypeError, ""This function needs a string or a callable object as its only parameter."");","[""addLog""]","[[], [""PyErr_SetString"", ""PyExc_TypeError"", ""This"", ""function"", ""needs"", ""a"", ""string"", ""or"", ""a"", ""callable"", ""object"", ""as"", ""its"", ""only"", ""parameter""]]",[-30072061819639018572],838
https://github.com/collectd/collectd/commit/0a7107bef48f170b2b6ef192e86c0afa98dbb47b,16 Nov 2009,"Added unregister functions for all callbacks.
Also removed useless plugin_unregister_complex_read declaration.",91,data/crawl/collectd/hunk_284.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_284.cpp,data/crawl/collectd/new_hunk_284.cpp,-1,46,,"PyErr_SetString(PyExc_TypeError, ""This function needs a string or a callable object as its only parameter."");","[""addLog""]","[[], [""PyErr_SetString"", ""PyExc_TypeError"", ""This"", ""function"", ""needs"", ""a"", ""string"", ""or"", ""a"", ""callable"", ""object"", ""as"", ""its"", ""only"", ""parameter""]]",[-30072061819639018572],838
https://github.com/collectd/collectd/commit/89eebe98be9968c165800503971782e28a40ce00,05 Dec 2009,Added write method to Values.,116,data/crawl/collectd/hunk_278.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_278.cpp,data/crawl/collectd/new_hunk_278.cpp,-1,96,,"PyErr_SetString(PyExc_RuntimeError, ""error dispatching values, read the logs"");","[""addLog""]","[[], [""PyErr_SetString"", ""PyExc_RuntimeError"", ""error"", ""dispatching"", ""values"", ""read"", ""the"", ""logs""]]",[4132038921679808130],837
https://github.com/collectd/collectd/commit/c98b98bfaaeb26894229d7da66ad145c75fb9b69,27 Oct 2009,"Added new python class ""Values"". Only ""dispatch"" is implemented right now.",335,data/crawl/collectd/hunk_304.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_304.cpp,data/crawl/collectd/new_hunk_304.cpp,-1,246,,"PyErr_SetString(PyExc_RuntimeError, ""error dispatching values, read the logs"");","[""addLog""]","[[], [""PyErr_SetString"", ""PyExc_RuntimeError"", ""error"", ""dispatching"", ""values"", ""read"", ""the"", ""logs""]]",[4132038921679808130],837
https://github.com/collectd/collectd/commit/89eebe98be9968c165800503971782e28a40ce00,05 Dec 2009,Added write method to Values.,116,data/crawl/collectd/hunk_278.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_278.cpp,data/crawl/collectd/new_hunk_278.cpp,-1,70,,"PyErr_Format(PyExc_RuntimeError, ""unknown data type %d for %s"", ds->ds->type, type);","[""addLog""]","[[], [""PyErr_Format"", ""PyExc_RuntimeError"", ""unknown"", ""data"", ""type"", ""%d"", ""for"", ""%s"", ""ds"", ""ds"", ""type"", ""type""]]",[-14196999043304654964],836
https://github.com/collectd/collectd/commit/c98b98bfaaeb26894229d7da66ad145c75fb9b69,27 Oct 2009,"Added new python class ""Values"". Only ""dispatch"" is implemented right now.",335,data/crawl/collectd/hunk_304.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_304.cpp,data/crawl/collectd/new_hunk_304.cpp,-1,220,,"PyErr_Format(PyExc_RuntimeError, ""unknown data type %d for %s"", ds->ds->type, type);","[""addLog""]","[[], [""PyErr_Format"", ""PyExc_RuntimeError"", ""unknown"", ""data"", ""type"", ""%d"", ""for"", ""%s"", ""ds"", ""ds"", ""type"", ""type""]]",[-14196999043304654964],836
https://github.com/collectd/collectd/commit/89eebe98be9968c165800503971782e28a40ce00,05 Dec 2009,Added write method to Values.,116,data/crawl/collectd/hunk_278.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_278.cpp,data/crawl/collectd/new_hunk_278.cpp,-1,41,,"PyErr_Format(PyExc_RuntimeError, ""type %s needs %d values, got %zd"", type, ds->ds_num, size);","[""addLog""]","[[], [""PyErr_Format"", ""PyExc_RuntimeError"", ""type"", ""%s"", ""needs"", ""%d"", ""values"", ""got"", ""%zd"", ""type"", ""ds"", ""ds_num"", ""size""]]",[-8004957471968241446],835
https://github.com/collectd/collectd/commit/c98b98bfaaeb26894229d7da66ad145c75fb9b69,27 Oct 2009,"Added new python class ""Values"". Only ""dispatch"" is implemented right now.",335,data/crawl/collectd/hunk_304.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_304.cpp,data/crawl/collectd/new_hunk_304.cpp,-1,191,,"PyErr_Format(PyExc_RuntimeError, ""type %s needs %d values, got %zd"", type, ds->ds_num, size);","[""addLog""]","[[], [""PyErr_Format"", ""PyExc_RuntimeError"", ""type"", ""%s"", ""needs"", ""%d"", ""values"", ""got"", ""%zd"", ""type"", ""ds"", ""ds_num"", ""size""]]",[-8004957471968241446],835
https://github.com/collectd/collectd/commit/89eebe98be9968c165800503971782e28a40ce00,05 Dec 2009,Added write method to Values.,116,data/crawl/collectd/hunk_278.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_278.cpp,data/crawl/collectd/new_hunk_278.cpp,-1,36,,"PyErr_Format(PyExc_TypeError, ""values must be list or tuple"");","[""addLog""]","[[], [""PyErr_Format"", ""PyExc_TypeError"", ""values"", ""must"", ""be"", ""list"", ""or"", ""tuple""]]",[2979550166299375265],834
https://github.com/collectd/collectd/commit/c98b98bfaaeb26894229d7da66ad145c75fb9b69,27 Oct 2009,"Added new python class ""Values"". Only ""dispatch"" is implemented right now.",335,data/crawl/collectd/hunk_304.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_304.cpp,data/crawl/collectd/new_hunk_304.cpp,-1,186,,"PyErr_Format(PyExc_TypeError, ""values must be list or tuple"");","[""addLog""]","[[], [""PyErr_Format"", ""PyExc_TypeError"", ""values"", ""must"", ""be"", ""list"", ""or"", ""tuple""]]",[2979550166299375265],834
https://github.com/collectd/collectd/commit/28d55c0f8ae5aeadffd778ec1bf9ad9c16fde1f3,08 Dec 2009,src/pyvalues.c: Don't use Py_ssize_t - it's new in Python 2.5.,12,data/crawl/collectd/hunk_275.cpp,use same variable,non-trivial,data/crawl/collectd/old_hunk_275.cpp,data/crawl/collectd/new_hunk_275.cpp,5,5,"PyErr_Format(PyExc_RuntimeError, ""type %s needs %d values, got %zd"", type, ds->ds_num, size);","PyErr_Format(PyExc_RuntimeError, ""type %s needs %d values, got %i"", type, ds->ds_num, size);","[""updateContent""]","[[""%zd""], [""%i""]]",[4775301843675679724],833
https://github.com/collectd/collectd/commit/28d55c0f8ae5aeadffd778ec1bf9ad9c16fde1f3,08 Dec 2009,src/pyvalues.c: Don't use Py_ssize_t - it's new in Python 2.5.,12,data/crawl/collectd/hunk_276.cpp,use same variable,non-trivial,data/crawl/collectd/old_hunk_276.cpp,data/crawl/collectd/new_hunk_276.cpp,5,5,"PyErr_Format(PyExc_RuntimeError, ""type %s needs %d values, got %zd"", type, ds->ds_num, size);","PyErr_Format(PyExc_RuntimeError, ""type %s needs %d values, got %i"", type, ds->ds_num, size);","[""updateContent""]","[[""%zd""], [""%i""]]",[4775301843675679724],833
https://github.com/collectd/collectd/commit/ffa4409610e34e6f0945f365de44b986688b2353,27 Feb 2010,Add an option to add the severity of the message in the logfile plugin,47,data/crawl/collectd/hunk_246.cpp,inner similar method,non-trivial,data/crawl/collectd/old_hunk_246.cpp,data/crawl/collectd/new_hunk_246.cpp,3,3,"fprintf (fh, ""[%s] %s\n"", timestamp_str, msg);","fprintf (fh, ""[%s] %s%s\n"", timestamp_str,
print_level ? level_str : """",
msg);","[""updateContent"", ""addContent"", ""addVariable""]","[[""%s\\n""], [""%s%s\\n"", ""print_level"", ""level_str""]]",[-4256208744090820342],832
https://github.com/collectd/collectd/commit/ffa4409610e34e6f0945f365de44b986688b2353,27 Feb 2010,Add an option to add the severity of the message in the logfile plugin,47,data/crawl/collectd/hunk_246.cpp,inner similar method,non-trivial,data/crawl/collectd/old_hunk_246.cpp,data/crawl/collectd/new_hunk_246.cpp,5,7,"fprintf (fh, ""%s\n"", msg);","fprintf (fh, ""%s%s\n"", print_level ? level_str : """",
msg);","[""updateContent"", ""addContent"", ""addVariable""]","[[""%s\\n""], [""%s%s\\n"", ""print_level"", ""level_str""]]",[-4256208744090820342],832
https://github.com/collectd/collectd/commit/cbc244bc1f4493784282ba6c5f8efc33158f18f1,14 Mar 2010,Impove level print,19,data/crawl/collectd/hunk_244.cpp,inner similar method,non-trivial,data/crawl/collectd/old_hunk_244.cpp,data/crawl/collectd/new_hunk_244.cpp,3,3,"fprintf (fh, ""[%s] %s%s\n"", timestamp_str,
print_level ? level_str : """",
msg);","fprintf (fh, ""[%s] %s%s\n"", timestamp_str, level_str, msg);","[""moveVariable"", ""removeVariable"", ""removeContent""]","[[""print_level""], []]",[4196385173768666543],831
https://github.com/collectd/collectd/commit/cbc244bc1f4493784282ba6c5f8efc33158f18f1,14 Mar 2010,Impove level print,19,data/crawl/collectd/hunk_244.cpp,inner similar method,non-trivial,data/crawl/collectd/old_hunk_244.cpp,data/crawl/collectd/new_hunk_244.cpp,7,5,"fprintf (fh, ""%s%s\n"", print_level ? level_str : """",
msg);","fprintf (fh, ""%s%s\n"", level_str, msg);","[""moveVariable"", ""removeVariable"", ""removeContent""]","[[""print_level""], []]",[4196385173768666543],831
https://github.com/collectd/collectd/commit/91c09b4a499872e92c845859b912dcc049fdf712,08 Aug 2010,"collectd-flush: Switched to a command based syntax.

Basically, the command line now looks similar to the ‘unixsock’ text protocol,
i.e., a command is specified as first non-option argument followed by any
options of that command as defined by the protocol.",247,data/crawl/collectd/hunk_225.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_225.cpp,data/crawl/collectd/new_hunk_225.cpp,-1,98,,"fprintf (stderr, ""ERROR: Flushing failed: %s.\n"",
        lcc_strerror (connection));","[""addLog""]","[[], [""fprintf"", ""stderr"", ""ERROR"", ""Flushing"", ""failed"", ""%s"", ""\\n"", ""lcc_strerror"", ""connection""]]",[-23189516226270906044],830
https://github.com/collectd/collectd/commit/35ad86ccb95a7808ad2cf7ad266292cb877c5eb8,06 Aug 2010,"Add collectd-flush command line utility.

collectd-flush is a small command-line utility which uses libcollectdclient
to flush collectd through the unixsock plugin. As far as I know, there is
no easy way to work with unix sockets from the shell, so if someone
wanted to flush collectd without this program, they would need to do it
through some other language (or restart the deamon).

I am no C wizard, so please bear with me if I have
done something a stupid way. :)
The code is based on/inspired by collectd-nagios.

If this message is not properly encoded as utf-8, something wrong must have
happened with my mailer. If that's the case, I'm sorry.  The only non-ascii character
in the patch is the second character of my name, which is an &aring;.

Signed-off-by: Håkon J Dugstad Johnsen <hakon-dugstad.johnsen@telenor.com>
Signed-off-by: Florian Forster <octo@huhu.verplant.org>",246,data/crawl/collectd/hunk_233.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_233.cpp,data/crawl/collectd/new_hunk_233.cpp,-1,69,,"fprintf (stderr, ""ERROR: Flushing failed: %s.\n"",
        lcc_strerror (connection));","[""addLog""]","[[], [""fprintf"", ""stderr"", ""ERROR"", ""Flushing"", ""failed"", ""%s"", ""\\n"", ""lcc_strerror"", ""connection""]]",[-23189516226270906044],830
https://github.com/collectd/collectd/commit/677cdefc79b8317c0013521f7f9e3eff7af7c282,08 Aug 2010,collectd-flush: Moved connection handling out of ‘flush()’.,38,data/crawl/collectd/hunk_223.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_223.cpp,data/crawl/collectd/new_hunk_223.cpp,-1,6,,"fprintf (stderr, ""ERROR: Failed to connect to daemon at %s: %s.\n"",
        address, strerror (errno));","[""addLog""]","[[], [""fprintf"", ""stderr"", ""ERROR"", ""Failed"", ""to"", ""connect"", ""to"", ""daemon"", ""at"", ""%s"", ""%s"", ""\\n"", ""address"", ""strerror"", ""errno""]]",[-14130893810876939967],829
https://github.com/collectd/collectd/commit/91c09b4a499872e92c845859b912dcc049fdf712,08 Aug 2010,"collectd-flush: Switched to a command based syntax.

Basically, the command line now looks similar to the ‘unixsock’ text protocol,
i.e., a command is specified as first non-option argument followed by any
options of that command as defined by the protocol.",247,data/crawl/collectd/hunk_225.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_225.cpp,data/crawl/collectd/new_hunk_225.cpp,-1,23,,"fprintf (stderr, ""ERROR: Failed to connect to daemon at %s: %s.\n"",
        address, strerror (errno));","[""addLog""]","[[], [""fprintf"", ""stderr"", ""ERROR"", ""Failed"", ""to"", ""connect"", ""to"", ""daemon"", ""at"", ""%s"", ""%s"", ""\\n"", ""address"", ""strerror"", ""errno""]]",[-14130893810876939967],829
https://github.com/collectd/collectd/commit/677cdefc79b8317c0013521f7f9e3eff7af7c282,08 Aug 2010,collectd-flush: Moved connection handling out of ‘flush()’.,38,data/crawl/collectd/hunk_222.cpp,use same variable,trivial,data/crawl/collectd/old_hunk_222.cpp,data/crawl/collectd/new_hunk_222.cpp,5,5,"fprintf (stderr, ""ERROR: Failed to parse identifier ``%s'': %s.\n"",
            ident_str, lcc_strerror(connection));","fprintf (stderr, ""ERROR: Failed to parse identifier ``%s'': %s.\n"",
            ident_str, lcc_strerror(c));","[""updateVariable""]","[[""connection""], [""c""]]",[-2235284560327614480],828
https://github.com/collectd/collectd/commit/677cdefc79b8317c0013521f7f9e3eff7af7c282,08 Aug 2010,collectd-flush: Moved connection handling out of ‘flush()’.,38,data/crawl/collectd/hunk_222.cpp,use same variable,trivial,data/crawl/collectd/old_hunk_222.cpp,data/crawl/collectd/new_hunk_222.cpp,16,15,"fprintf (stderr, ""ERROR: Flushing failed: %s.\n"",
        lcc_strerror (connection));","fprintf (stderr, ""ERROR: Flushing failed: %s.\n"",
        lcc_strerror (c));","[""updateVariable""]","[[""connection""], [""c""]]",[-2235284560327614480],828
https://github.com/collectd/collectd/commit/dfdde4f67574cc6c02ca4bb26a1b54b3b7250fcd,08 Aug 2010,collectd-flush: Added support for the ‘getval’ command.,124,data/crawl/collectd/hunk_217.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_217.cpp,data/crawl/collectd/new_hunk_217.cpp,-1,18,,"fprintf (stderr, ""ERROR: Failed to get local hostname: %s"",
          strerror (errno));","[""addLog""]","[[], [""fprintf"", ""stderr"", ""ERROR"", ""Failed"", ""to"", ""get"", ""local"", ""hostname"", ""%s"", ""strerror"", ""errno""]]",[-2767032572980187899],827
https://github.com/collectd/collectd/commit/91c09b4a499872e92c845859b912dcc049fdf712,08 Aug 2010,"collectd-flush: Switched to a command based syntax.

Basically, the command line now looks similar to the ‘unixsock’ text protocol,
i.e., a command is specified as first non-option argument followed by any
options of that command as defined by the protocol.",247,data/crawl/collectd/hunk_225.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_225.cpp,data/crawl/collectd/new_hunk_225.cpp,-1,71,,"fprintf (stderr, ""ERROR: Failed to get local hostname: %s"",
              strerror (errno));","[""addLog""]","[[], [""fprintf"", ""stderr"", ""ERROR"", ""Failed"", ""to"", ""get"", ""local"", ""hostname"", ""%s"", ""strerror"", ""errno""]]",[-2767032572980187899],827
https://github.com/collectd/collectd/commit/99364c70a7039ed496dbe429fb86ee41e464fc76,03 Apr 2011,"iptables plugin: Remove the shipped version of libiptc.

Since libiptc is now publicly available as a shared library, we don't really
have any need to ship it with collectd anymore.",5264,data/crawl/collectd/hunk_202.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_202.cpp,data/crawl/collectd/new_hunk_202.cpp,1916,-1,"fprintf(stderr, ""ERROR: bad type %i\n"", a->type);",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""ERROR"", ""bad"", ""type"", ""%i\\n"", ""a"", ""type""], []]",[-5459527413173697547],826
https://github.com/collectd/collectd/commit/8de91034a0186feba7079b92711b0d140278ce7a,03 Mar 2007,"iptables plugin: Use a global `libiptc' if it exists.

Will likely not build under non-Linux systems yet.",4275,data/crawl/collectd/hunk_453.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_453.cpp,data/crawl/collectd/new_hunk_453.cpp,1482,-1,"fprintf(stderr, ""ERROR: bad type %i\n"", a->type);",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""ERROR"", ""bad"", ""type"", ""%i\\n"", ""a"", ""type""], []]",[-5459527413173697547],826
https://github.com/collectd/collectd/commit/99364c70a7039ed496dbe429fb86ee41e464fc76,03 Apr 2011,"iptables plugin: Remove the shipped version of libiptc.

Since libiptc is now publicly available as a shared library, we don't really
have any need to ship it with collectd anymore.",5264,data/crawl/collectd/hunk_202.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_202.cpp,data/crawl/collectd/new_hunk_202.cpp,1552,-1,"fprintf(stderr, ""ERROR: %d not a valid target)\n"",
verdict);",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""ERROR"", ""%d"", ""not"", ""a"", ""valid"", ""target"", ""\\n"", ""verdict""], []]",[20259464220232527866],825
https://github.com/collectd/collectd/commit/8de91034a0186feba7079b92711b0d140278ce7a,03 Mar 2007,"iptables plugin: Use a global `libiptc' if it exists.

Will likely not build under non-Linux systems yet.",4275,data/crawl/collectd/hunk_453.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_453.cpp,data/crawl/collectd/new_hunk_453.cpp,1120,-1,"fprintf(stderr, ""ERROR: %d not a valid target)\n"",
verdict);",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""ERROR"", ""%d"", ""not"", ""a"", ""valid"", ""target"", ""\\n"", ""verdict""], []]",[20259464220232527866],825
https://github.com/collectd/collectd/commit/99364c70a7039ed496dbe429fb86ee41e464fc76,03 Apr 2011,"iptables plugin: Remove the shipped version of libiptc.

Since libiptc is now publicly available as a shared library, we don't really
have any need to ship it with collectd anymore.",5264,data/crawl/collectd/hunk_202.cpp,invoke same method,non-trivial,data/crawl/collectd/old_hunk_202.cpp,data/crawl/collectd/new_hunk_202.cpp,1336,-1,"printf(""Match name: `%s'\n"", m->u.user.name);",,"[""removeLog""]","[[""printf"", ""Match"", ""name"", ""%s"", ""\\n"", ""m"", ""u"", ""user"", ""name""], []]",[-13360082513403856554],824
https://github.com/collectd/collectd/commit/8de91034a0186feba7079b92711b0d140278ce7a,03 Mar 2007,"iptables plugin: Use a global `libiptc' if it exists.

Will likely not build under non-Linux systems yet.",4275,data/crawl/collectd/hunk_453.cpp,invoke same method,non-trivial,data/crawl/collectd/old_hunk_453.cpp,data/crawl/collectd/new_hunk_453.cpp,906,-1,"printf(""Match name: `%s'\n"", m->u.user.name);",,"[""removeLog""]","[[""printf"", ""Match"", ""name"", ""%s"", ""\\n"", ""m"", ""u"", ""user"", ""name""], []]",[-13360082513403856554],824
https://github.com/collectd/collectd/commit/99364c70a7039ed496dbe429fb86ee41e464fc76,03 Apr 2011,"iptables plugin: Remove the shipped version of libiptc.

Since libiptc is now publicly available as a shared library, we don't really
have any need to ship it with collectd anymore.",5264,data/crawl/collectd/hunk_202.cpp,invoke same method,non-trivial,data/crawl/collectd/old_hunk_202.cpp,data/crawl/collectd/new_hunk_202.cpp,250,-1,"fprintf(stderr, ""ERROR: offset %u not an entry!\n"",
(unsigned int)((char *)seek - (char *)h->entries->entrytable));",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""ERROR"", ""offset"", ""%u"", ""not"", ""an"", ""entry"", ""\\n"", ""unsigned"", ""int"", ""char"", ""*"", ""seek"", ""char"", ""*"", ""h"", ""entries"", ""entrytable""], []]",[3798071515164340687],823
https://github.com/collectd/collectd/commit/8de91034a0186feba7079b92711b0d140278ce7a,03 Mar 2007,"iptables plugin: Use a global `libiptc' if it exists.

Will likely not build under non-Linux systems yet.",4275,data/crawl/collectd/hunk_453.cpp,invoke same method,non-trivial,data/crawl/collectd/old_hunk_453.cpp,data/crawl/collectd/new_hunk_453.cpp,224,-1,"fprintf(stderr, ""ERROR: offset %u not an entry!\n"",
(unsigned int)((char *)seek - (char *)h->entries->entrytable));",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""ERROR"", ""offset"", ""%u"", ""not"", ""an"", ""entry"", ""\\n"", ""unsigned"", ""int"", ""char"", ""*"", ""seek"", ""char"", ""*"", ""h"", ""entries"", ""entrytable""], []]",[3798071515164340687],823
https://github.com/collectd/collectd/commit/99364c70a7039ed496dbe429fb86ee41e464fc76,03 Apr 2011,"iptables plugin: Remove the shipped version of libiptc.

Since libiptc is now publicly available as a shared library, we don't really
have any need to ship it with collectd anymore.",5264,data/crawl/collectd/hunk_201.cpp,use same variable,non-trivial,data/crawl/collectd/old_hunk_201.cpp,data/crawl/collectd/new_hunk_201.cpp,415,-1,"printf(""target_size=%u, align=%u\n"",
t->target.u.target_size, ALIGN(sizeof(*t)));",,"[""removeLog""]","[[""printf"", ""target_size"", ""%u"", ""align"", ""%u\\n"", ""t"", ""target"", ""u"", ""target_size"", ""ALIGN"", ""sizeof"", ""*t""], []]",[4536747728000566221],822
https://github.com/collectd/collectd/commit/8de91034a0186feba7079b92711b0d140278ce7a,03 Mar 2007,"iptables plugin: Use a global `libiptc' if it exists.

Will likely not build under non-Linux systems yet.",4275,data/crawl/collectd/hunk_452.cpp,use same variable,non-trivial,data/crawl/collectd/old_hunk_452.cpp,data/crawl/collectd/new_hunk_452.cpp,400,-1,"printf(""target_size=%u, align=%u\n"",
t->target.u.target_size, ALIGN(sizeof(*t)));",,"[""removeLog""]","[[""printf"", ""target_size"", ""%u"", ""align"", ""%u\\n"", ""t"", ""target"", ""u"", ""target_size"", ""ALIGN"", ""sizeof"", ""*t""], []]",[4536747728000566221],822
https://github.com/collectd/collectd/commit/99364c70a7039ed496dbe429fb86ee41e464fc76,03 Apr 2011,"iptables plugin: Remove the shipped version of libiptc.

Since libiptc is now publicly available as a shared library, we don't really
have any need to ship it with collectd anymore.",5264,data/crawl/collectd/hunk_201.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_201.cpp,data/crawl/collectd/new_hunk_201.cpp,392,-1,"fprintf(stderr, ""Unknown table `%s'\n"", h->info.name);",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""Unknown"", ""table"", ""%s"", ""\\n"", ""h"", ""info"", ""name""], []]",[30241893935585031856],821
https://github.com/collectd/collectd/commit/8de91034a0186feba7079b92711b0d140278ce7a,03 Mar 2007,"iptables plugin: Use a global `libiptc' if it exists.

Will likely not build under non-Linux systems yet.",4275,data/crawl/collectd/hunk_452.cpp,check similar variable,non-trivial,data/crawl/collectd/old_hunk_452.cpp,data/crawl/collectd/new_hunk_452.cpp,377,-1,"fprintf(stderr, ""Unknown table `%s'\n"", h->info.name);",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""Unknown"", ""table"", ""%s"", ""\\n"", ""h"", ""info"", ""name""], []]",[30241893935585031856],821
https://github.com/collectd/collectd/commit/99364c70a7039ed496dbe429fb86ee41e464fc76,03 Apr 2011,"iptables plugin: Remove the shipped version of libiptc.

Since libiptc is now publicly available as a shared library, we don't really
have any need to ship it with collectd anymore.",5264,data/crawl/collectd/hunk_201.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_201.cpp,data/crawl/collectd/new_hunk_201.cpp,209,-1,"printf(""verdict=%s\n"",
       pos == -NF_ACCEPT-1 ? ""NF_ACCEPT""
       : pos == -NF_DROP-1 ? ""NF_DROP""
       : pos == IP6T_RETURN ? ""RETURN""
       : ""UNKNOWN"");",,"[""removeLog""]","[[""printf"", ""verdict"", ""%s\\n"", ""pos"", ""NF_ACCEPT"", ""1"", ""NF_ACCEPT"", ""pos"", ""NF_DROP"", ""1"", ""NF_DROP"", ""pos"", ""IP6T_RETURN"", ""RETURN"", ""UNKNOWN""], []]",[-30287945785840985600],820
https://github.com/collectd/collectd/commit/8de91034a0186feba7079b92711b0d140278ce7a,03 Mar 2007,"iptables plugin: Use a global `libiptc' if it exists.

Will likely not build under non-Linux systems yet.",4275,data/crawl/collectd/hunk_452.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_452.cpp,data/crawl/collectd/new_hunk_452.cpp,193,-1,"printf(""verdict=%s\n"",
       pos == -NF_ACCEPT-1 ? ""NF_ACCEPT""
       : pos == -NF_DROP-1 ? ""NF_DROP""
       : pos == IP6T_RETURN ? ""RETURN""
       : ""UNKNOWN"");",,"[""removeLog""]","[[""printf"", ""verdict"", ""%s\\n"", ""pos"", ""NF_ACCEPT"", ""1"", ""NF_ACCEPT"", ""pos"", ""NF_DROP"", ""1"", ""NF_DROP"", ""pos"", ""IP6T_RETURN"", ""RETURN"", ""UNKNOWN""], []]",[-30287945785840985600],820
https://github.com/collectd/collectd/commit/99364c70a7039ed496dbe429fb86ee41e464fc76,03 Apr 2011,"iptables plugin: Remove the shipped version of libiptc.

Since libiptc is now publicly available as a shared library, we don't really
have any need to ship it with collectd anymore.",5264,data/crawl/collectd/hunk_201.cpp,use same variable,non-trivial,data/crawl/collectd/old_hunk_201.cpp,data/crawl/collectd/new_hunk_201.cpp,196,-1,"printf(""Invflags: %02X\n"", e->ipv6.invflags);",,"[""removeLog""]","[[""printf"", ""Invflags"", ""%02X\\n"", ""e"", ""ipv6"", ""invflags""], []]",[3094076635387063921],819
https://github.com/collectd/collectd/commit/8de91034a0186feba7079b92711b0d140278ce7a,03 Mar 2007,"iptables plugin: Use a global `libiptc' if it exists.

Will likely not build under non-Linux systems yet.",4275,data/crawl/collectd/hunk_452.cpp,use same variable,non-trivial,data/crawl/collectd/old_hunk_452.cpp,data/crawl/collectd/new_hunk_452.cpp,178,-1,"printf(""Invflags: %02X\n"", e->ipv6.invflags);",,"[""removeLog""]","[[""printf"", ""Invflags"", ""%02X\\n"", ""e"", ""ipv6"", ""invflags""], []]",[3094076635387063921],819
https://github.com/collectd/collectd/commit/99364c70a7039ed496dbe429fb86ee41e464fc76,03 Apr 2011,"iptables plugin: Remove the shipped version of libiptc.

Since libiptc is now publicly available as a shared library, we don't really
have any need to ship it with collectd anymore.",5264,data/crawl/collectd/hunk_201.cpp,use same variable,non-trivial,data/crawl/collectd/old_hunk_201.cpp,data/crawl/collectd/new_hunk_201.cpp,195,-1,"printf(""Flags: %02X\n"", e->ipv6.flags);",,"[""removeLog""]","[[""printf"", ""Flags"", ""%02X\\n"", ""e"", ""ipv6"", ""flags""], []]",[-18612943448352921403],818
https://github.com/collectd/collectd/commit/8de91034a0186feba7079b92711b0d140278ce7a,03 Mar 2007,"iptables plugin: Use a global `libiptc' if it exists.

Will likely not build under non-Linux systems yet.",4275,data/crawl/collectd/hunk_452.cpp,use same variable,non-trivial,data/crawl/collectd/old_hunk_452.cpp,data/crawl/collectd/new_hunk_452.cpp,177,-1,"printf(""Flags: %02X\n"", e->ipv6.flags);",,"[""removeLog""]","[[""printf"", ""Flags"", ""%02X\\n"", ""e"", ""ipv6"", ""flags""], []]",[-18612943448352921403],818
https://github.com/collectd/collectd/commit/99364c70a7039ed496dbe429fb86ee41e464fc76,03 Apr 2011,"iptables plugin: Remove the shipped version of libiptc.

Since libiptc is now publicly available as a shared library, we don't really
have any need to ship it with collectd anymore.",5264,data/crawl/collectd/hunk_201.cpp,use same variable,non-trivial,data/crawl/collectd/old_hunk_201.cpp,data/crawl/collectd/new_hunk_201.cpp,194,-1,"printf(""TOS: %u\n"", e->ipv6.tos);",,"[""removeLog""]","[[""printf"", ""TOS"", ""%u\\n"", ""e"", ""ipv6"", ""tos""], []]",[-3899174871424496672],817
https://github.com/collectd/collectd/commit/8de91034a0186feba7079b92711b0d140278ce7a,03 Mar 2007,"iptables plugin: Use a global `libiptc' if it exists.

Will likely not build under non-Linux systems yet.",4275,data/crawl/collectd/hunk_452.cpp,use same variable,non-trivial,data/crawl/collectd/old_hunk_452.cpp,data/crawl/collectd/new_hunk_452.cpp,176,-1,"printf(""TOS: %u\n"", e->ipv6.tos);",,"[""removeLog""]","[[""printf"", ""TOS"", ""%u\\n"", ""e"", ""ipv6"", ""tos""], []]",[-3899174871424496672],817
https://github.com/collectd/collectd/commit/99364c70a7039ed496dbe429fb86ee41e464fc76,03 Apr 2011,"iptables plugin: Remove the shipped version of libiptc.

Since libiptc is now publicly available as a shared library, we don't really
have any need to ship it with collectd anymore.",5264,data/crawl/collectd/hunk_201.cpp,use same variable,non-trivial,data/crawl/collectd/old_hunk_201.cpp,data/crawl/collectd/new_hunk_201.cpp,192,-1,"printf(""\nProtocol: %u\n"", e->ipv6.proto);",,"[""removeLog""]","[[""printf"", ""\\nProtocol"", ""%u\\n"", ""e"", ""ipv6"", ""proto""], []]",[-7279940983753363405],816
https://github.com/collectd/collectd/commit/8de91034a0186feba7079b92711b0d140278ce7a,03 Mar 2007,"iptables plugin: Use a global `libiptc' if it exists.

Will likely not build under non-Linux systems yet.",4275,data/crawl/collectd/hunk_452.cpp,use same variable,non-trivial,data/crawl/collectd/old_hunk_452.cpp,data/crawl/collectd/new_hunk_452.cpp,174,-1,"printf(""\nProtocol: %u\n"", e->ipv6.proto);",,"[""removeLog""]","[[""printf"", ""\\nProtocol"", ""%u\\n"", ""e"", ""ipv6"", ""proto""], []]",[-7279940983753363405],816
https://github.com/collectd/collectd/commit/99364c70a7039ed496dbe429fb86ee41e464fc76,03 Apr 2011,"iptables plugin: Remove the shipped version of libiptc.

Since libiptc is now publicly available as a shared library, we don't really
have any need to ship it with collectd anymore.",5264,data/crawl/collectd/hunk_201.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_201.cpp,data/crawl/collectd/new_hunk_201.cpp,191,-1,"printf(""%c"", e->ipv6.outiface_mask[i] ? 'X' : '.');",,"[""removeLog""]","[[""printf"", ""%c"", ""e"", ""ipv6"", ""outiface_mask[i]"", ""X""], []]",[2239253335044659789],815
https://github.com/collectd/collectd/commit/8de91034a0186feba7079b92711b0d140278ce7a,03 Mar 2007,"iptables plugin: Use a global `libiptc' if it exists.

Will likely not build under non-Linux systems yet.",4275,data/crawl/collectd/hunk_452.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_452.cpp,data/crawl/collectd/new_hunk_452.cpp,173,-1,"printf(""%c"", e->ipv6.outiface_mask[i] ? 'X' : '.');",,"[""removeLog""]","[[""printf"", ""%c"", ""e"", ""ipv6"", ""outiface_mask[i]"", ""X""], []]",[2239253335044659789],815
https://github.com/collectd/collectd/commit/99364c70a7039ed496dbe429fb86ee41e464fc76,03 Apr 2011,"iptables plugin: Remove the shipped version of libiptc.

Since libiptc is now publicly available as a shared library, we don't really
have any need to ship it with collectd anymore.",5264,data/crawl/collectd/hunk_201.cpp,use same variable,non-trivial,data/crawl/collectd/old_hunk_201.cpp,data/crawl/collectd/new_hunk_201.cpp,189,-1,"printf(""to `%s'/"", e->ipv6.outiface);",,"[""removeLog""]","[[""printf"", ""to"", ""%s"", ""/"", ""e"", ""ipv6"", ""outiface""], []]",[-3962798391621517377],814
https://github.com/collectd/collectd/commit/8de91034a0186feba7079b92711b0d140278ce7a,03 Mar 2007,"iptables plugin: Use a global `libiptc' if it exists.

Will likely not build under non-Linux systems yet.",4275,data/crawl/collectd/hunk_452.cpp,use same variable,non-trivial,data/crawl/collectd/old_hunk_452.cpp,data/crawl/collectd/new_hunk_452.cpp,171,-1,"printf(""to `%s'/"", e->ipv6.outiface);",,"[""removeLog""]","[[""printf"", ""to"", ""%s"", ""/"", ""e"", ""ipv6"", ""outiface""], []]",[-3962798391621517377],814
https://github.com/collectd/collectd/commit/99364c70a7039ed496dbe429fb86ee41e464fc76,03 Apr 2011,"iptables plugin: Remove the shipped version of libiptc.

Since libiptc is now publicly available as a shared library, we don't really
have any need to ship it with collectd anymore.",5264,data/crawl/collectd/hunk_201.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_201.cpp,data/crawl/collectd/new_hunk_201.cpp,188,-1,"printf(""%c"", e->ipv6.iniface_mask[i] ? 'X' : '.');",,"[""removeLog""]","[[""printf"", ""%c"", ""e"", ""ipv6"", ""iniface_mask[i]"", ""X""], []]",[2817574395782376193],813
https://github.com/collectd/collectd/commit/8de91034a0186feba7079b92711b0d140278ce7a,03 Mar 2007,"iptables plugin: Use a global `libiptc' if it exists.

Will likely not build under non-Linux systems yet.",4275,data/crawl/collectd/hunk_452.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_452.cpp,data/crawl/collectd/new_hunk_452.cpp,170,-1,"printf(""%c"", e->ipv6.iniface_mask[i] ? 'X' : '.');",,"[""removeLog""]","[[""printf"", ""%c"", ""e"", ""ipv6"", ""iniface_mask[i]"", ""X""], []]",[2817574395782376193],813
https://github.com/collectd/collectd/commit/99364c70a7039ed496dbe429fb86ee41e464fc76,03 Apr 2011,"iptables plugin: Remove the shipped version of libiptc.

Since libiptc is now publicly available as a shared library, we don't really
have any need to ship it with collectd anymore.",5264,data/crawl/collectd/hunk_201.cpp,use same variable,non-trivial,data/crawl/collectd/old_hunk_201.cpp,data/crawl/collectd/new_hunk_201.cpp,186,-1,"printf(""Interface: `%s'/"", e->ipv6.iniface);",,"[""removeLog""]","[[""printf"", ""Interface"", ""%s"", ""/"", ""e"", ""ipv6"", ""iniface""], []]",[4532852978845341820],812
https://github.com/collectd/collectd/commit/8de91034a0186feba7079b92711b0d140278ce7a,03 Mar 2007,"iptables plugin: Use a global `libiptc' if it exists.

Will likely not build under non-Linux systems yet.",4275,data/crawl/collectd/hunk_452.cpp,use same variable,non-trivial,data/crawl/collectd/old_hunk_452.cpp,data/crawl/collectd/new_hunk_452.cpp,168,-1,"printf(""Interface: `%s'/"", e->ipv6.iniface);",,"[""removeLog""]","[[""printf"", ""Interface"", ""%s"", ""/"", ""e"", ""ipv6"", ""iniface""], []]",[4532852978845341820],812
https://github.com/collectd/collectd/commit/99364c70a7039ed496dbe429fb86ee41e464fc76,03 Apr 2011,"iptables plugin: Remove the shipped version of libiptc.

Since libiptc is now publicly available as a shared library, we don't really
have any need to ship it with collectd anymore.",5264,data/crawl/collectd/hunk_200.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_200.cpp,data/crawl/collectd/new_hunk_200.cpp,178,-1,"printf(""verdict=%s\n"",
       pos == -NF_ACCEPT-1 ? ""NF_ACCEPT""
       : pos == -NF_DROP-1 ? ""NF_DROP""
       : pos == -NF_QUEUE-1 ? ""NF_QUEUE""
       : pos == RETURN ? ""RETURN""
       : ""UNKNOWN"");",,"[""removeLog""]","[[""printf"", ""verdict"", ""%s\\n"", ""pos"", ""NF_ACCEPT"", ""1"", ""NF_ACCEPT"", ""pos"", ""NF_DROP"", ""1"", ""NF_DROP"", ""pos"", ""NF_QUEUE"", ""1"", ""NF_QUEUE"", ""pos"", ""RETURN"", ""RETURN"", ""UNKNOWN""], []]",[-30188398610879992484],811
https://github.com/collectd/collectd/commit/8de91034a0186feba7079b92711b0d140278ce7a,03 Mar 2007,"iptables plugin: Use a global `libiptc' if it exists.

Will likely not build under non-Linux systems yet.",4275,data/crawl/collectd/hunk_451.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_451.cpp,data/crawl/collectd/new_hunk_451.cpp,162,-1,"printf(""verdict=%s\n"",
       pos == -NF_ACCEPT-1 ? ""NF_ACCEPT""
       : pos == -NF_DROP-1 ? ""NF_DROP""
       : pos == -NF_QUEUE-1 ? ""NF_QUEUE""
       : pos == RETURN ? ""RETURN""
       : ""UNKNOWN"");",,"[""removeLog""]","[[""printf"", ""verdict"", ""%s\\n"", ""pos"", ""NF_ACCEPT"", ""1"", ""NF_ACCEPT"", ""pos"", ""NF_DROP"", ""1"", ""NF_DROP"", ""pos"", ""NF_QUEUE"", ""1"", ""NF_QUEUE"", ""pos"", ""RETURN"", ""RETURN"", ""UNKNOWN""], []]",[-30188398610879992484],811
https://github.com/collectd/collectd/commit/99364c70a7039ed496dbe429fb86ee41e464fc76,03 Apr 2011,"iptables plugin: Remove the shipped version of libiptc.

Since libiptc is now publicly available as a shared library, we don't really
have any need to ship it with collectd anymore.",5264,data/crawl/collectd/hunk_200.cpp,use same variable,non-trivial,data/crawl/collectd/old_hunk_200.cpp,data/crawl/collectd/new_hunk_200.cpp,168,-1,"printf(""Cache: %08X\n"", e->nfcache);",,"[""removeLog""]","[[""printf"", ""Cache"", ""%08X\\n"", ""e"", ""nfcache""], []]",[12671757366713067834],810
https://github.com/collectd/collectd/commit/99364c70a7039ed496dbe429fb86ee41e464fc76,03 Apr 2011,"iptables plugin: Remove the shipped version of libiptc.

Since libiptc is now publicly available as a shared library, we don't really
have any need to ship it with collectd anymore.",5264,data/crawl/collectd/hunk_201.cpp,use same variable,non-trivial,data/crawl/collectd/old_hunk_201.cpp,data/crawl/collectd/new_hunk_201.cpp,199,-1,"printf(""Cache: %08X\n"", e->nfcache);",,"[""removeLog""]","[[""printf"", ""Cache"", ""%08X\\n"", ""e"", ""nfcache""], []]",[12671757366713067834],810
https://github.com/collectd/collectd/commit/99364c70a7039ed496dbe429fb86ee41e464fc76,03 Apr 2011,"iptables plugin: Remove the shipped version of libiptc.

Since libiptc is now publicly available as a shared library, we don't really
have any need to ship it with collectd anymore.",5264,data/crawl/collectd/hunk_200.cpp,use same variable,non-trivial,data/crawl/collectd/old_hunk_200.cpp,data/crawl/collectd/new_hunk_200.cpp,165,-1,"printf(""Invflags: %02X\n"", e->ip.invflags);",,"[""removeLog""]","[[""printf"", ""Invflags"", ""%02X\\n"", ""e"", ""ip"", ""invflags""], []]",[-3412099511869573089],809
https://github.com/collectd/collectd/commit/8de91034a0186feba7079b92711b0d140278ce7a,03 Mar 2007,"iptables plugin: Use a global `libiptc' if it exists.

Will likely not build under non-Linux systems yet.",4275,data/crawl/collectd/hunk_451.cpp,use same variable,non-trivial,data/crawl/collectd/old_hunk_451.cpp,data/crawl/collectd/new_hunk_451.cpp,147,-1,"printf(""Invflags: %02X\n"", e->ip.invflags);",,"[""removeLog""]","[[""printf"", ""Invflags"", ""%02X\\n"", ""e"", ""ip"", ""invflags""], []]",[-3412099511869573089],809
https://github.com/collectd/collectd/commit/99364c70a7039ed496dbe429fb86ee41e464fc76,03 Apr 2011,"iptables plugin: Remove the shipped version of libiptc.

Since libiptc is now publicly available as a shared library, we don't really
have any need to ship it with collectd anymore.",5264,data/crawl/collectd/hunk_200.cpp,use same variable,non-trivial,data/crawl/collectd/old_hunk_200.cpp,data/crawl/collectd/new_hunk_200.cpp,164,-1,"printf(""Flags: %02X\n"", e->ip.flags);",,"[""removeLog""]","[[""printf"", ""Flags"", ""%02X\\n"", ""e"", ""ip"", ""flags""], []]",[-25119119595609558413],808
https://github.com/collectd/collectd/commit/8de91034a0186feba7079b92711b0d140278ce7a,03 Mar 2007,"iptables plugin: Use a global `libiptc' if it exists.

Will likely not build under non-Linux systems yet.",4275,data/crawl/collectd/hunk_451.cpp,use same variable,non-trivial,data/crawl/collectd/old_hunk_451.cpp,data/crawl/collectd/new_hunk_451.cpp,146,-1,"printf(""Flags: %02X\n"", e->ip.flags);",,"[""removeLog""]","[[""printf"", ""Flags"", ""%02X\\n"", ""e"", ""ip"", ""flags""], []]",[-25119119595609558413],808
https://github.com/collectd/collectd/commit/99364c70a7039ed496dbe429fb86ee41e464fc76,03 Apr 2011,"iptables plugin: Remove the shipped version of libiptc.

Since libiptc is now publicly available as a shared library, we don't really
have any need to ship it with collectd anymore.",5264,data/crawl/collectd/hunk_200.cpp,use same variable,non-trivial,data/crawl/collectd/old_hunk_200.cpp,data/crawl/collectd/new_hunk_200.cpp,163,-1,"printf(""\nProtocol: %u\n"", e->ip.proto);",,"[""removeLog""]","[[""printf"", ""\\nProtocol"", ""%u\\n"", ""e"", ""ip"", ""proto""], []]",[-13786117131010000415],807
https://github.com/collectd/collectd/commit/8de91034a0186feba7079b92711b0d140278ce7a,03 Mar 2007,"iptables plugin: Use a global `libiptc' if it exists.

Will likely not build under non-Linux systems yet.",4275,data/crawl/collectd/hunk_451.cpp,use same variable,non-trivial,data/crawl/collectd/old_hunk_451.cpp,data/crawl/collectd/new_hunk_451.cpp,145,-1,"printf(""\nProtocol: %u\n"", e->ip.proto);",,"[""removeLog""]","[[""printf"", ""\\nProtocol"", ""%u\\n"", ""e"", ""ip"", ""proto""], []]",[-13786117131010000415],807
https://github.com/collectd/collectd/commit/99364c70a7039ed496dbe429fb86ee41e464fc76,03 Apr 2011,"iptables plugin: Remove the shipped version of libiptc.

Since libiptc is now publicly available as a shared library, we don't really
have any need to ship it with collectd anymore.",5264,data/crawl/collectd/hunk_200.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_200.cpp,data/crawl/collectd/new_hunk_200.cpp,162,-1,"printf(""%c"", e->ip.outiface_mask[i] ? 'X' : '.');",,"[""removeLog""]","[[""printf"", ""%c"", ""e"", ""ip"", ""outiface_mask[i]"", ""X""], []]",[-4266922812211977221],806
https://github.com/collectd/collectd/commit/8de91034a0186feba7079b92711b0d140278ce7a,03 Mar 2007,"iptables plugin: Use a global `libiptc' if it exists.

Will likely not build under non-Linux systems yet.",4275,data/crawl/collectd/hunk_451.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_451.cpp,data/crawl/collectd/new_hunk_451.cpp,144,-1,"printf(""%c"", e->ip.outiface_mask[i] ? 'X' : '.');",,"[""removeLog""]","[[""printf"", ""%c"", ""e"", ""ip"", ""outiface_mask[i]"", ""X""], []]",[-4266922812211977221],806
https://github.com/collectd/collectd/commit/99364c70a7039ed496dbe429fb86ee41e464fc76,03 Apr 2011,"iptables plugin: Remove the shipped version of libiptc.

Since libiptc is now publicly available as a shared library, we don't really
have any need to ship it with collectd anymore.",5264,data/crawl/collectd/hunk_200.cpp,use same variable,non-trivial,data/crawl/collectd/old_hunk_200.cpp,data/crawl/collectd/new_hunk_200.cpp,160,-1,"printf(""to `%s'/"", e->ip.outiface);",,"[""removeLog""]","[[""printf"", ""to"", ""%s"", ""/"", ""e"", ""ip"", ""outiface""], []]",[-10468974538878154387],805
https://github.com/collectd/collectd/commit/8de91034a0186feba7079b92711b0d140278ce7a,03 Mar 2007,"iptables plugin: Use a global `libiptc' if it exists.

Will likely not build under non-Linux systems yet.",4275,data/crawl/collectd/hunk_451.cpp,use same variable,non-trivial,data/crawl/collectd/old_hunk_451.cpp,data/crawl/collectd/new_hunk_451.cpp,142,-1,"printf(""to `%s'/"", e->ip.outiface);",,"[""removeLog""]","[[""printf"", ""to"", ""%s"", ""/"", ""e"", ""ip"", ""outiface""], []]",[-10468974538878154387],805
https://github.com/collectd/collectd/commit/99364c70a7039ed496dbe429fb86ee41e464fc76,03 Apr 2011,"iptables plugin: Remove the shipped version of libiptc.

Since libiptc is now publicly available as a shared library, we don't really
have any need to ship it with collectd anymore.",5264,data/crawl/collectd/hunk_200.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_200.cpp,data/crawl/collectd/new_hunk_200.cpp,159,-1,"printf(""%c"", e->ip.iniface_mask[i] ? 'X' : '.');",,"[""removeLog""]","[[""printf"", ""%c"", ""e"", ""ip"", ""iniface_mask[i]"", ""X""], []]",[-3688601751474260817],804
https://github.com/collectd/collectd/commit/8de91034a0186feba7079b92711b0d140278ce7a,03 Mar 2007,"iptables plugin: Use a global `libiptc' if it exists.

Will likely not build under non-Linux systems yet.",4275,data/crawl/collectd/hunk_451.cpp,block change,non-trivial,data/crawl/collectd/old_hunk_451.cpp,data/crawl/collectd/new_hunk_451.cpp,141,-1,"printf(""%c"", e->ip.iniface_mask[i] ? 'X' : '.');",,"[""removeLog""]","[[""printf"", ""%c"", ""e"", ""ip"", ""iniface_mask[i]"", ""X""], []]",[-3688601751474260817],804
https://github.com/collectd/collectd/commit/99364c70a7039ed496dbe429fb86ee41e464fc76,03 Apr 2011,"iptables plugin: Remove the shipped version of libiptc.

Since libiptc is now publicly available as a shared library, we don't really
have any need to ship it with collectd anymore.",5264,data/crawl/collectd/hunk_200.cpp,use same variable,non-trivial,data/crawl/collectd/old_hunk_200.cpp,data/crawl/collectd/new_hunk_200.cpp,157,-1,"printf(""Interface: `%s'/"", e->ip.iniface);",,"[""removeLog""]","[[""printf"", ""Interface"", ""%s"", ""/"", ""e"", ""ip"", ""iniface""], []]",[-1973323168411295190],803
https://github.com/collectd/collectd/commit/8de91034a0186feba7079b92711b0d140278ce7a,03 Mar 2007,"iptables plugin: Use a global `libiptc' if it exists.

Will likely not build under non-Linux systems yet.",4275,data/crawl/collectd/hunk_451.cpp,use same variable,non-trivial,data/crawl/collectd/old_hunk_451.cpp,data/crawl/collectd/new_hunk_451.cpp,139,-1,"printf(""Interface: `%s'/"", e->ip.iniface);",,"[""removeLog""]","[[""printf"", ""Interface"", ""%s"", ""/"", ""e"", ""ip"", ""iniface""], []]",[-1973323168411295190],803
https://github.com/collectd/collectd/commit/99364c70a7039ed496dbe429fb86ee41e464fc76,03 Apr 2011,"iptables plugin: Remove the shipped version of libiptc.

Since libiptc is now publicly available as a shared library, we don't really
have any need to ship it with collectd anymore.",5264,data/crawl/collectd/hunk_200.cpp,inner similar method,non-trivial,data/crawl/collectd/old_hunk_200.cpp,data/crawl/collectd/new_hunk_200.cpp,155,-1,"printf(""DST IP: %u.%u.%u.%u/%u.%u.%u.%u\n"",
       IP_PARTS(e->ip.dst.s_addr),IP_PARTS(e->ip.dmsk.s_addr));",,"[""removeLog""]","[[""printf"", ""DST"", ""IP"", ""%u"", ""%u"", ""%u"", ""%u/%u"", ""%u"", ""%u"", ""%u\\n"", ""IP_PARTS"", ""e"", ""ip"", ""dst"", ""s_addr"", ""IP_PARTS"", ""e"", ""ip"", ""dmsk"", ""s_addr""], []]",[-15227712094292342589],802
https://github.com/collectd/collectd/commit/8de91034a0186feba7079b92711b0d140278ce7a,03 Mar 2007,"iptables plugin: Use a global `libiptc' if it exists.

Will likely not build under non-Linux systems yet.",4275,data/crawl/collectd/hunk_451.cpp,inner similar method,non-trivial,data/crawl/collectd/old_hunk_451.cpp,data/crawl/collectd/new_hunk_451.cpp,137,-1,"printf(""DST IP: %u.%u.%u.%u/%u.%u.%u.%u\n"",
       IP_PARTS(e->ip.dst.s_addr),IP_PARTS(e->ip.dmsk.s_addr));",,"[""removeLog""]","[[""printf"", ""DST"", ""IP"", ""%u"", ""%u"", ""%u"", ""%u/%u"", ""%u"", ""%u"", ""%u\\n"", ""IP_PARTS"", ""e"", ""ip"", ""dst"", ""s_addr"", ""IP_PARTS"", ""e"", ""ip"", ""dmsk"", ""s_addr""], []]",[-15227712094292342589],802
https://github.com/collectd/collectd/commit/99364c70a7039ed496dbe429fb86ee41e464fc76,03 Apr 2011,"iptables plugin: Remove the shipped version of libiptc.

Since libiptc is now publicly available as a shared library, we don't really
have any need to ship it with collectd anymore.",5264,data/crawl/collectd/hunk_200.cpp,inner similar method,non-trivial,data/crawl/collectd/old_hunk_200.cpp,data/crawl/collectd/new_hunk_200.cpp,153,-1,"printf(""SRC IP: %u.%u.%u.%u/%u.%u.%u.%u\n"",
       IP_PARTS(e->ip.src.s_addr),IP_PARTS(e->ip.smsk.s_addr));",,"[""removeLog""]","[[""printf"", ""SRC"", ""IP"", ""%u"", ""%u"", ""%u"", ""%u/%u"", ""%u"", ""%u"", ""%u\\n"", ""IP_PARTS"", ""e"", ""ip"", ""src"", ""s_addr"", ""IP_PARTS"", ""e"", ""ip"", ""smsk"", ""s_addr""], []]",[-25317834603374159630],801
https://github.com/collectd/collectd/commit/8de91034a0186feba7079b92711b0d140278ce7a,03 Mar 2007,"iptables plugin: Use a global `libiptc' if it exists.

Will likely not build under non-Linux systems yet.",4275,data/crawl/collectd/hunk_451.cpp,inner similar method,non-trivial,data/crawl/collectd/old_hunk_451.cpp,data/crawl/collectd/new_hunk_451.cpp,135,-1,"printf(""SRC IP: %u.%u.%u.%u/%u.%u.%u.%u\n"",
       IP_PARTS(e->ip.src.s_addr),IP_PARTS(e->ip.smsk.s_addr));",,"[""removeLog""]","[[""printf"", ""SRC"", ""IP"", ""%u"", ""%u"", ""%u"", ""%u/%u"", ""%u"", ""%u"", ""%u\\n"", ""IP_PARTS"", ""e"", ""ip"", ""src"", ""s_addr"", ""IP_PARTS"", ""e"", ""ip"", ""smsk"", ""s_addr""], []]",[-25317834603374159630],801
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,651,,"printf(""%s"", pooladdr->ifname);","[""addLog""]","[[], [""printf"", ""%s"", ""pooladdr"", ""ifname""]]",[3250460036917863830],800
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,check similar return value,non-trivial,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,653,,"printf(""(%s "", pooladdr->ifname);","[""addLog""]","[[], [""printf"", ""%s"", ""pooladdr"", ""ifname""]]",[3250460036917863830],800
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,855,,"printf("" %s"", t);","[""addLog""]","[[], [""printf"", ""%s"", ""t""]]",[7242145598165649898],799
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,756,,"printf("" %s"", t);","[""addLog""]","[[], [""printf"", ""%s"", ""t""]]",[7242145598165649898],799
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,845,,"printf(""%c"", tcpflags[i]);","[""addLog""]","[[], [""printf"", ""%c"", ""tcpflags[i]""]]",[2212560642550899577],798
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,770,,"printf(""%c"", tcpflags[i]);","[""addLog""]","[[], [""printf"", ""%c"", ""tcpflags[i]""]]",[2212560642550899577],798
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,808,,"printf("" port"");","[""addLog""]","[[], [""printf"", ""port""]]",[11379973328728410548],797
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,908,,"printf("" port"");","[""addLog""]","[[], [""printf"", ""port""]]",[11379973328728410548],797
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,786,,"printf("" to "");","[""addLog""]","[[], [""printf"", ""to""]]",[7252257644068696392],796
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,738,,"printf("" to "");","[""addLog""]","[[], [""printf"", ""to""]]",[7252257644068696392],796
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,783,,"printf("" os \""%s\"""", pfctl_lookup_fingerprint(osfp, buf,
    sizeof(buf)));","[""addLog""]","[[], [""printf"", ""os"", ""\\"", ""%s\\"", ""pfctl_lookup_fingerprint"", ""osfp"", ""buf"", ""sizeof"", ""buf""]]",[5500147762427001088],795
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,735,,"printf("" os \""%s\"""", pfctl_lookup_fingerprint(osfp, buf,
    sizeof(buf)));","[""addLog""]","[[], [""printf"", ""os"", ""\\"", ""%s\\"", ""pfctl_lookup_fingerprint"", ""osfp"", ""buf"", ""sizeof"", ""buf""]]",[5500147762427001088],795
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,774,,"printf("" from "");","[""addLog""]","[[], [""printf"", ""from""]]",[6727851171353778747],794
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,726,,"printf("" from "");","[""addLog""]","[[], [""printf"", ""from""]]",[6727851171353778747],794
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,772,,"printf("" all"");","[""addLog""]","[[], [""printf"", ""all""]]",[8690489284066660633],793
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,724,,"printf("" all"");","[""addLog""]","[[], [""printf"", ""all""]]",[8690489284066660633],793
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,736,,"printf(""/%d"", bits);","[""addLog""]","[[], [""printf"", ""/%d"", ""bits""]]",[10971988856684572722],792
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,853,,"printf(""/%d"", bits);","[""addLog""]","[[], [""printf"", ""/%d"", ""bits""]]",[10971988856684572722],792
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,722,,"printf(""route \""%s\"""", addr->v.rtlabelname);","[""addLog""]","[[], [""printf"", ""route"", ""\\"", ""%s\\"", ""addr"", ""v"", ""rtlabelname""]]",[-9673634733515718261],791
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,839,,"printf(""route \""%s\"""", addr->v.rtlabelname);","[""addLog""]","[[], [""printf"", ""route"", ""\\"", ""%s\\"", ""addr"", ""v"", ""rtlabelname""]]",[-9673634733515718261],791
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,719,,"printf(""urpf-failed"");","[""addLog""]","[[], [""printf"", ""urpf"", ""failed""]]",[4889232453716628751],790
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,836,,"printf(""urpf-failed"");","[""addLog""]","[[], [""printf"", ""urpf"", ""failed""]]",[4889232453716628751],790
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,716,,"printf(""no-route"");","[""addLog""]","[[], [""printf"", ""no"", ""route""]]",[6370918528492110760],789
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,833,,"printf(""no-route"");","[""addLog""]","[[], [""printf"", ""no"", ""route""]]",[6370918528492110760],789
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,704,,"printf(""any"");","[""addLog""]","[[], [""printf"", ""any""]]",[8690489284064660660],788
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,821,,"printf(""any"");","[""addLog""]","[[], [""printf"", ""any""]]",[8690489284064660660],788
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,686,,"printf(""<%s>"", addr->v.tblname);","[""addLog""]","[[], [""printf"", ""%s"", ""addr"", ""v"", ""tblname""]]",[11138089653288908981],787
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,803,,"printf(""<%s>"", addr->v.tblname);","[""addLog""]","[[], [""printf"", ""%s"", ""addr"", ""v"", ""tblname""]]",[11138089653288908981],787
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,683,,"printf(""<%s:%d>"", addr->v.tblname,
    addr->p.tblcnt);","[""addLog""]","[[], [""printf"", ""%s"", ""%d"", ""addr"", ""v"", ""tblname"", ""addr"", ""p"", ""tblcnt""]]",[10067429523792067753],786
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,800,,"printf(""<%s:%d>"", addr->v.tblname,
    addr->p.tblcnt);","[""addLog""]","[[], [""printf"", ""%s"", ""%d"", ""addr"", ""v"", ""tblname"", ""addr"", ""p"", ""tblcnt""]]",[10067429523792067753],786
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,681,,"printf(""<%s:*>"", addr->v.tblname);","[""addLog""]","[[], [""printf"", ""%s"", ""*"", ""addr"", ""v"", ""tblname""]]",[11138089658664925152],785
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,798,,"printf(""<%s:*>"", addr->v.tblname);","[""addLog""]","[[], [""printf"", ""%s"", ""*"", ""addr"", ""v"", ""tblname""]]",[11138089658664925152],785
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,674,,"printf("":%d"", addr->p.dyncnt);","[""addLog""]","[[], [""printf"", ""%d"", ""addr"", ""p"", ""dyncnt""]]",[7412012780973744286],784
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,791,,"printf("":%d"", addr->p.dyncnt);","[""addLog""]","[[], [""printf"", ""%d"", ""addr"", ""p"", ""dyncnt""]]",[7412012780973744286],784
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,672,,"printf("":*"");","[""addLog""]","[[], [""printf"", ""*""]]",[7237409560240578626],783
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,789,,"printf("":*"");","[""addLog""]","[[], [""printf"", ""*""]]",[7237409560240578626],783
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,669,,"printf("":0"");","[""addLog""]","[[], [""printf"", ""0""]]",[7237409561008580936],782
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,786,,"printf("":0"");","[""addLog""]","[[], [""printf"", ""0""]]",[7237409561008580936],782
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,667,,"printf("":peer"");","[""addLog""]","[[], [""printf"", ""peer""]]",[11379963328741410799],781
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,784,,"printf("":peer"");","[""addLog""]","[[], [""printf"", ""peer""]]",[11379963328741410799],781
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,665,,"printf("":broadcast"");","[""addLog""]","[[], [""printf"", ""broadcast""]]",[2594591724333411431],780
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,782,,"printf("":broadcast"");","[""addLog""]","[[], [""printf"", ""broadcast""]]",[2594591724333411431],780
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,663,,"printf("":network"");","[""addLog""]","[[], [""printf"", ""network""]]",[-159075666890325060],779
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,780,,"printf("":network"");","[""addLog""]","[[], [""printf"", ""network""]]",[-159075666890325060],779
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,661,,"printf(""(%s"", addr->v.ifname);","[""addLog""]","[[], [""printf"", ""%s"", ""addr"", ""v"", ""ifname""]]",[2890755936933273931],778
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,778,,"printf(""(%s"", addr->v.ifname);","[""addLog""]","[[], [""printf"", ""%s"", ""addr"", ""v"", ""ifname""]]",[2890755936933273931],778
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,653,,"printf("" static-port"");","[""addLog""]","[[], [""printf"", ""static"", ""port""]]",[5658596519278830664],777
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,707,,"printf("" static-port"");","[""addLog""]","[[], [""printf"", ""static"", ""port""]]",[5658596519278830664],777
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,651,,"printf("" sticky-address"");","[""addLog""]","[[], [""printf"", ""sticky"", ""address""]]",[757876703365771645],776
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,705,,"printf("" sticky-address"");","[""addLog""]","[[], [""printf"", ""sticky"", ""address""]]",[757876703365771645],776
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,647,,"printf("" round-robin"");","[""addLog""]","[[], [""printf"", ""round"", ""robin""]]",[5476246332822404881],775
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,701,,"printf("" round-robin"");","[""addLog""]","[[], [""printf"", ""round"", ""robin""]]",[5476246332822404881],775
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,642,,"printf("" source-hash 0x%08x%08x%08x%08x"",
    pool->key.key32[0], pool->key.key32[1],
    pool->key.key32[2], pool->key.key32[3]);","[""addLog""]","[[], [""printf"", ""source"", ""hash"", ""0x%08x%08x%08x%08x"", ""pool"", ""key"", ""key32[0]"", ""pool"", ""key"", ""key32[1]"", ""pool"", ""key"", ""key32[2]"", ""pool"", ""key"", ""key32[3]""]]",[99398516677331504304],774
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,696,,"printf("" source-hash 0x%08x%08x%08x%08x"",
    pool->key.key32[0], pool->key.key32[1],
    pool->key.key32[2], pool->key.key32[3]);","[""addLog""]","[[], [""printf"", ""source"", ""hash"", ""0x%08x%08x%08x%08x"", ""pool"", ""key"", ""key32[0]"", ""pool"", ""key"", ""key32[1]"", ""pool"", ""key"", ""key32[2]"", ""pool"", ""key"", ""key32[3]""]]",[99398516677331504304],774
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,639,,"printf("" random"");","[""addLog""]","[[], [""printf"", ""random""]]",[3145522978430076194],773
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,693,,"printf("" random"");","[""addLog""]","[[], [""printf"", ""random""]]",[3145522978430076194],773
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,636,,"printf("" bitmask"");","[""addLog""]","[[], [""printf"", ""bitmask""]]",[15416948916834894345],772
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,690,,"printf("" bitmask"");","[""addLog""]","[[], [""printf"", ""bitmask""]]",[15416948916834894345],772
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,626,,"printf("":%u"", p2);","[""addLog""]","[[], [""printf"", ""%u"", ""p2""]]",[7256481669445734607],771
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,680,,"printf("":%u"", p2);","[""addLog""]","[[], [""printf"", ""%u"", ""p2""]]",[7256481669445734607],771
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,619,,"printf("" port %u:%u"", p1, p2);","[""addLog""]","[[], [""printf"", ""port"", ""%u"", ""%u"", ""p1"", ""p2""]]",[11418117557890754855],770
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,673,,"printf("" port %u:%u"", p1, p2);","[""addLog""]","[[], [""printf"", ""port"", ""%u"", ""%u"", ""p1"", ""p2""]]",[11418117557890754855],770
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,594,,"printf("" dup-to"");","[""addLog""]","[[], [""printf"", ""dup"", ""to""]]",[5327170835885221504],769
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,309,,"printf("" dup-to"");","[""addLog""]","[[], [""printf"", ""dup"", ""to""]]",[5327170835885221504],769
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,592,,"printf("" reply-to"");","[""addLog""]","[[], [""printf"", ""reply"", ""to""]]",[371661533190117889],768
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,307,,"printf("" reply-to"");","[""addLog""]","[[], [""printf"", ""reply"", ""to""]]",[371661533190117889],768
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,590,,"printf("" route-to"");","[""addLog""]","[[], [""printf"", ""route"", ""to""]]",[6371686533106117682],767
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,305,,"printf("" route-to"");","[""addLog""]","[[], [""printf"", ""route"", ""to""]]",[6371686533106117682],767
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,573,,"printf("" port %u"", ntohs(r->divert.port));","[""addLog""]","[[], [""printf"", ""port"", ""%u"", ""ntohs"", ""r"", ""divert"", ""port""]]",[5697063142289968905],766
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,555,,"printf("" port %u"", ntohs(r->divert.port));","[""addLog""]","[[], [""printf"", ""port"", ""%u"", ""ntohs"", ""r"", ""divert"", ""port""]]",[5697063142289968905],766
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,567,,"printf("" divert-to "");","[""addLog""]","[[], [""printf"", ""divert"", ""to""]]",[3324781023721909506],765
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,549,,"printf("" divert-to "");","[""addLog""]","[[], [""printf"", ""divert"", ""to""]]",[3324781023721909506],765
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,562,,"printf("" divert-reply"");","[""addLog""]","[[], [""printf"", ""divert"", ""reply""]]",[-3570663176360802934],764
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,544,,"printf("" divert-reply"");","[""addLog""]","[[], [""printf"", ""divert"", ""reply""]]",[-3570663176360802934],764
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,559,,"printf("" rtable %u"", r->rtableid);","[""addLog""]","[[], [""printf"", ""rtable"", ""%u"", ""r"", ""rtableid""]]",[-3430045270165863953],763
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,541,,"printf("" rtable %u"", r->rtableid);","[""addLog""]","[[], [""printf"", ""rtable"", ""%u"", ""r"", ""rtableid""]]",[-3430045270165863953],763
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,556,,"printf("" tagged %s"", r->match_tagname);","[""addLog""]","[[], [""printf"", ""tagged"", ""%s"", ""r"", ""match_tagname""]]",[3507246297539807416],762
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,538,,"printf("" tagged %s"", r->match_tagname);","[""addLog""]","[[], [""printf"", ""tagged"", ""%s"", ""r"", ""match_tagname""]]",[3507246297539807416],762
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,552,,"printf("" tag %s"", r->tagname);","[""addLog""]","[[], [""printf"", ""tag"", ""%s"", ""r"", ""tagname""]]",[3539429469589801201],761
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,534,,"printf("" tag %s"", r->tagname);","[""addLog""]","[[], [""printf"", ""tag"", ""%s"", ""r"", ""tagname""]]",[3539429469589801201],761
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,550,,"printf("" queue %s"", r->qname);","[""addLog""]","[[], [""printf"", ""queue"", ""%s"", ""r"", ""qname""]]",[10887937826197599557],760
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,532,,"printf("" queue %s"", r->qname);","[""addLog""]","[[], [""printf"", ""queue"", ""%s"", ""r"", ""qname""]]",[10887937826197599557],760
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,548,,"printf("" queue(%s, %s)"", r->qname, r->pqname);","[""addLog""]","[[], [""printf"", ""queue"", ""%s"", ""%s"", ""r"", ""qname"", ""r"", ""pqname""]]",[4000354707123495348],759
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,530,,"printf("" queue(%s, %s)"", r->qname, r->pqname);","[""addLog""]","[[], [""printf"", ""queue"", ""%s"", ""%s"", ""r"", ""qname"", ""r"", ""pqname""]]",[4000354707123495348],759
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,546,,"printf("" label \""%s\"""", r->label);","[""addLog""]","[[], [""printf"", ""label"", ""\\"", ""%s\\"", ""r"", ""label""]]",[-14021146053028532592],758
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,528,,"printf("" label \""%s\"""", r->label);","[""addLog""]","[[], [""printf"", ""label"", ""\\"", ""%s\\"", ""r"", ""label""]]",[-14021146053028532592],758
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,544,,"printf("" allow-opts"");","[""addLog""]","[[], [""printf"", ""allow"", ""opts""]]",[9934797783555056907],757
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,515,,"printf("" allow-opts"");","[""addLog""]","[[], [""printf"", ""allow"", ""opts""]]",[9934797783555056907],757
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,537,,"printf(""max-mss %d"", r->max_mss);","[""addLog""]","[[], [""printf"", ""max"", ""mss"", ""%d"", ""r"", ""max_mss""]]",[11828861311679460391],756
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,511,,"printf("" max-mss %d"", r->max_mss);","[""addLog""]","[[], [""printf"", ""max"", ""mss"", ""%d"", ""r"", ""max_mss""]]",[11828861311679460391],756
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,531,,"printf(""reassemble tcp"");","[""addLog""]","[[], [""printf"", ""reassemble"", ""tcp""]]",[11555867051850057570],755
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,518,,"printf("" reassemble tcp"");","[""addLog""]","[[], [""printf"", ""reassemble"", ""tcp""]]",[11555867051850057570],755
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,525,,"printf(""set-tos 0x%2.2x"", r->set_tos);","[""addLog""]","[[], [""printf"", ""set"", ""tos"", ""0x%2"", ""2x"", ""r"", ""set_tos""]]",[6483563197245946827],754
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,513,,"printf("" set-tos 0x%2.2x"", r->set_tos);","[""addLog""]","[[], [""printf"", ""set"", ""tos"", ""0x%2"", ""2x"", ""r"", ""set_tos""]]",[6483563197245946827],754
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,519,,"printf(""min-ttl %d"", r->min_ttl);","[""addLog""]","[[], [""printf"", ""min"", ""ttl"", ""%d"", ""r"", ""min_ttl""]]",[6758767122295601603],753
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,509,,"printf("" min-ttl %d"", r->min_ttl);","[""addLog""]","[[], [""printf"", ""min"", ""ttl"", ""%d"", ""r"", ""min_ttl""]]",[6758767122295601603],753
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,513,,"printf(""random-id"");","[""addLog""]","[[], [""printf"", ""random"", ""id""]]",[3158963059175197375],752
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,507,,"printf("" random-id"");","[""addLog""]","[[], [""printf"", ""random"", ""id""]]",[3158963059175197375],752
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,507,,"printf(""no-df"");","[""addLog""]","[[], [""printf"", ""no"", ""df""]]",[7264289716354804998],751
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,505,,"printf("" no-df"");","[""addLog""]","[[], [""printf"", ""no"", ""df""]]",[7264289716354804998],751
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,501,,"printf("" fragment"");","[""addLog""]","[[], [""printf"", ""fragment""]]",[-453875422335532193],750
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,503,,"printf("" fragment"");","[""addLog""]","[[], [""printf"", ""fragment""]]",[-453875422335532193],750
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,493,,"printf(""%s %u"", pf_timeouts[j].name == NULL ?
    ""inv.timeout"" : pf_timeouts[j].name,
    r->timeout[i]);","[""addLog""]","[[], [""printf"", ""%s"", ""%u"", ""pf_timeouts[j]"", ""name"", ""NULL"", ""inv"", ""timeout"", ""pf_timeouts[j]"", ""name"", ""r"", ""timeout[i]""]]",[-20589580412064047037],749
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,496,,"printf(""%s %u"", pf_timeouts[j].name == NULL ?
    ""inv.timeout"" : pf_timeouts[j].name,
    r->timeout[i]);","[""addLog""]","[[], [""printf"", ""%s"", ""%u"", ""pf_timeouts[j]"", ""name"", ""NULL"", ""inv"", ""timeout"", ""pf_timeouts[j]"", ""name"", ""r"", ""timeout[i]""]]",[-20589580412064047037],749
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,479,,"printf(""pflow"");","[""addLog""]","[[], [""printf"", ""pflow""]]",[7569148844912254292],748
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,482,,"printf(""pflow"");","[""addLog""]","[[], [""printf"", ""pflow""]]",[7569148844912254292],748
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,473,,"printf(""sloppy"");","[""addLog""]","[[], [""printf"", ""sloppy""]]",[7312664018543397222],747
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,476,,"printf(""sloppy"");","[""addLog""]","[[], [""printf"", ""sloppy""]]",[7312664018543397222],747
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,467,,"printf(""if-bound"");","[""addLog""]","[[], [""printf"", ""if"", ""bound""]]",[728081508294610371],746
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,470,,"printf(""if-bound"");","[""addLog""]","[[], [""printf"", ""if"", ""bound""]]",[728081508294610371],746
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,460,,"printf("" flush"");","[""addLog""]","[[], [""printf"", ""flush""]]",[13290399627434950574],745
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,463,,"printf("" flush"");","[""addLog""]","[[], [""printf"", ""flush""]]",[13290399627434950574],745
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,458,,"printf(""overload <%s>"", r->overload_tblname);","[""addLog""]","[[], [""printf"", ""overload"", ""%s"", ""r"", ""overload_tblname""]]",[3548967021324130882],744
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,461,,"printf(""overload <%s>"", r->overload_tblname);","[""addLog""]","[[], [""printf"", ""overload"", ""%s"", ""r"", ""overload_tblname""]]",[3548967021324130882],744
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,452,,"printf(""max-src-nodes %u"", r->max_src_nodes);","[""addLog""]","[[], [""printf"", ""max"", ""src"", ""nodes"", ""%u"", ""r"", ""max_src_nodes""]]",[27104560562674562568],743
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,455,,"printf(""max-src-nodes %u"", r->max_src_nodes);","[""addLog""]","[[], [""printf"", ""max"", ""src"", ""nodes"", ""%u"", ""r"", ""max_src_nodes""]]",[27104560562674562568],743
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,444,,"printf(""max-src-conn-rate %u/%u"",
    r->max_src_conn_rate.limit,
    r->max_src_conn_rate.seconds);","[""addLog""]","[[], [""printf"", ""max"", ""src"", ""conn"", ""rate"", ""%u/%u"", ""r"", ""max_src_conn_rate"", ""limit"", ""r"", ""max_src_conn_rate"", ""seconds""]]",[4535366429256538457],742
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,447,,"printf(""max-src-conn-rate %u/%u"",
    r->max_src_conn_rate.limit,
    r->max_src_conn_rate.seconds);","[""addLog""]","[[], [""printf"", ""max"", ""src"", ""conn"", ""rate"", ""%u/%u"", ""r"", ""max_src_conn_rate"", ""limit"", ""r"", ""max_src_conn_rate"", ""seconds""]]",[4535366429256538457],742
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,438,,"printf(""max-src-conn %u"", r->max_src_conn);","[""addLog""]","[[], [""printf"", ""max"", ""src"", ""conn"", ""%u"", ""r"", ""max_src_conn""]]",[15163422948546839568],741
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,441,,"printf(""max-src-conn %u"", r->max_src_conn);","[""addLog""]","[[], [""printf"", ""max"", ""src"", ""conn"", ""%u"", ""r"", ""max_src_conn""]]",[15163422948546839568],741
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,432,,"printf(""max-src-states %u"", r->max_src_states);","[""addLog""]","[[], [""printf"", ""max"", ""src"", ""states"", ""%u"", ""r"", ""max_src_states""]]",[1512087061394281604],740
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,435,,"printf(""max-src-states %u"", r->max_src_states);","[""addLog""]","[[], [""printf"", ""max"", ""src"", ""states"", ""%u"", ""r"", ""max_src_states""]]",[1512087061394281604],740
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,424,,"printf("" rule"");","[""addLog""]","[[], [""printf"", ""rule""]]",[1242323515967406341],739
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,427,,"printf("" rule"");","[""addLog""]","[[], [""printf"", ""rule""]]",[1242323515967406341],739
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,422,,"printf(""source-track"");","[""addLog""]","[[], [""printf"", ""source"", ""track""]]",[15243224373620409104],738
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,425,,"printf(""source-track"");","[""addLog""]","[[], [""printf"", ""source"", ""track""]]",[15243224373620409104],738
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,416,,"printf(""no-sync"");","[""addLog""]","[[], [""printf"", ""no"", ""sync""]]",[5411089731814807883],737
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,419,,"printf(""no-sync"");","[""addLog""]","[[], [""printf"", ""no"", ""sync""]]",[5411089731814807883],737
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,410,,"printf(""max %u"", r->max_states);","[""addLog""]","[[], [""printf"", ""max"", ""%u"", ""r"", ""max_states""]]",[21512123513546963352],736
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,413,,"printf(""max %u"", r->max_states);","[""addLog""]","[[], [""printf"", ""max"", ""%u"", ""r"", ""max_states""]]",[21512123513546963352],736
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,389,,"printf("" probability %s%%"", buf);","[""addLog""]","[[], [""printf"", ""probability"", ""%s%%"", ""buf""]]",[7717622795444870251],735
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,394,,"printf("" probability %s%%"", buf);","[""addLog""]","[[], [""printf"", ""probability"", ""%s%%"", ""buf""]]",[7717622795444870251],735
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,375,,"printf("" synproxy state"");","[""addLog""]","[[], [""printf"", ""synproxy"", ""state""]]",[10564088388262267539],734
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,380,,"printf("" synproxy state"");","[""addLog""]","[[], [""printf"", ""synproxy"", ""state""]]",[10564088388262267539],734
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,373,,"printf("" modulate state"");","[""addLog""]","[[], [""printf"", ""modulate"", ""state""]]",[13843688624563880934],733
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,378,,"printf("" modulate state"");","[""addLog""]","[[], [""printf"", ""modulate"", ""state""]]",[13843688624563880934],733
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,371,,"printf("" keep state"");","[""addLog""]","[[], [""printf"", ""keep"", ""state""]]",[11388085001533577400],732
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,376,,"printf("" keep state"");","[""addLog""]","[[], [""printf"", ""keep"", ""state""]]",[11388085001533577400],732
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,369,,"printf("" no state"");","[""addLog""]","[[], [""printf"", ""no"", ""state""]]",[9585561890251670896],731
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,374,,"printf("" no state"");","[""addLog""]","[[], [""printf"", ""no"", ""state""]]",[9585561890251670896],731
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,367,,"printf("" tos 0x%2.2x"", r->tos);","[""addLog""]","[[], [""printf"", ""tos"", ""0x%2"", ""2x"", ""r"", ""tos""]]",[758329192676429929],730
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,372,,"printf("" tos 0x%2.2x"", r->tos);","[""addLog""]","[[], [""printf"", ""tos"", ""0x%2"", ""2x"", ""r"", ""tos""]]",[758329192676429929],730
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,363,,"printf("" code %u"", r->code-1);","[""addLog""]","[[], [""printf"", ""code"", ""%u"", ""r"", ""code"", ""1""]]",[18188906200413560984],729
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,368,,"printf("" code %u"", r->code-1);","[""addLog""]","[[], [""printf"", ""code"", ""%u"", ""r"", ""code"", ""1""]]",[18188906200413560984],729
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,361,,"printf("" code %s"", ic->name);","[""addLog""]","[[], [""printf"", ""code"", ""%s"", ""ic"", ""name""]]",[8562387475032974199],728
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,366,,"printf("" code %s"", ic->name);","[""addLog""]","[[], [""printf"", ""code"", ""%s"", ""ic"", ""name""]]",[8562387475032974199],728
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,355,,"printf("" %u"", r->type-1);","[""addLog""]","[[], [""printf"", ""%u"", ""r"", ""type"", ""1""]]",[9556183826295058894],727
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,360,,"printf("" %u"", r->type-1);","[""addLog""]","[[], [""printf"", ""%u"", ""r"", ""type"", ""1""]]",[9556183826295058894],727
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,353,,"printf("" %s"", it->name);","[""addLog""]","[[], [""printf"", ""%s"", ""it"", ""name""]]",[3089007176917027687],726
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,358,,"printf("" %s"", it->name);","[""addLog""]","[[], [""printf"", ""%s"", ""it"", ""name""]]",[3089007176917027687],726
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,351,,"printf("" icmp6-type"");","[""addLog""]","[[], [""printf"", ""icmp6"", ""type""]]",[4411995760478793281],725
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,356,,"printf("" icmp6-type"");","[""addLog""]","[[], [""printf"", ""icmp6"", ""type""]]",[4411995760478793281],725
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,349,,"printf("" icmp-type"");","[""addLog""]","[[], [""printf"", ""icmp"", ""type""]]",[3058724710583437742],724
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,354,,"printf("" icmp-type"");","[""addLog""]","[[], [""printf"", ""icmp"", ""type""]]",[3058724710583437742],724
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,343,,"printf("" flags any"");","[""addLog""]","[[], [""printf"", ""flags"", ""any""]]",[14743491356631048872],723
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,348,,"printf("" flags any"");","[""addLog""]","[[], [""printf"", ""flags"", ""any""]]",[14743491356631048872],723
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,337,,"printf(""/"");","[""addLog""]","[[], [""printf"", ""/""]]",[7237409560880580549],722
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,342,,"printf(""/"");","[""addLog""]","[[], [""printf"", ""/""]]",[7237409560880580549],722
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,335,,"printf("" flags "");","[""addLog""]","[[], [""printf"", ""flags""]]",[13290411627430950667],721
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,340,,"printf("" flags "");","[""addLog""]","[[], [""printf"", ""flags""]]",[13290411627430950667],721
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,322,,"printf("" proto %u"", r->proto);","[""addLog""]","[[], [""printf"", ""proto"", ""%u"", ""r"", ""proto""]]",[4798478322814132784],720
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,329,,"printf("" proto %u"", r->proto);","[""addLog""]","[[], [""printf"", ""proto"", ""%u"", ""r"", ""proto""]]",[4798478322814132784],720
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,320,,"printf("" proto %s"", p->p_name);","[""addLog""]","[[], [""printf"", ""proto"", ""%s"", ""p"", ""p_name""]]",[4886238719468689065],719
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,327,,"printf("" proto %s"", p->p_name);","[""addLog""]","[[], [""printf"", ""proto"", ""%s"", ""p"", ""p_name""]]",[4886238719468689065],719
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,314,,"printf("" inet6"");","[""addLog""]","[[], [""printf"", ""inet6""]]",[-902135462179598540],718
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,321,,"printf("" inet6"");","[""addLog""]","[[], [""printf"", ""inet6""]]",[-902135462179598540],718
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,312,,"printf("" inet"");","[""addLog""]","[[], [""printf"", ""inet""]]",[744683488386046549],717
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,319,,"printf("" inet"");","[""addLog""]","[[], [""printf"", ""inet""]]",[744683488386046549],717
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,306,,"printf("" on ! rdomain %i"", r->onrdomain);","[""addLog""]","[[], [""printf"", ""on"", ""rdomain"", ""%i"", ""r"", ""onrdomain""]]",[9477123951197783886],716
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,308,,"printf("" on rdomain %i"", r->onrdomain);","[""addLog""]","[[], [""printf"", ""on"", ""rdomain"", ""%i"", ""r"", ""onrdomain""]]",[9477123951197783886],716
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,297,,"printf("" quick"");","[""addLog""]","[[], [""printf"", ""quick""]]",[6783581205519813007],715
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,296,,"printf("" quick"");","[""addLog""]","[[], [""printf"", ""quick""]]",[6783581205519813007],715
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,291,,"printf(""%sto pflog%u"", count++ ? "", "" : """",
    r->logif);","[""addLog""]","[[], [""printf"", ""%sto"", ""pflog%u"", ""count"", ""r"", ""logif""]]",[25074894582623420492],714
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,290,,"printf(""%sto pflog%u"", count++ ? "", "" : """",
    r->logif);","[""addLog""]","[[], [""printf"", ""%sto"", ""pflog%u"", ""count"", ""r"", ""logif""]]",[25074894582623420492],714
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,289,,"printf(""%suser"", count++ ? "", "" : """");","[""addLog""]","[[], [""printf"", ""%suser"", ""count""]]",[11839753455475943874],713
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,288,,"printf(""%suser"", count++ ? "", "" : """");","[""addLog""]","[[], [""printf"", ""%suser"", ""count""]]",[11839753455475943874],713
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,285,,"printf(""%sall"", count++ ? "", "" : """");","[""addLog""]","[[], [""printf"", ""%sall"", ""count""]]",[19469830115665570919],712
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,286,,"printf(""%sall"", count++ ? "", "" : """");","[""addLog""]","[[], [""printf"", ""%sall"", ""count""]]",[19469830115665570919],712
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,279,,"printf("" log"");","[""addLog""]","[[], [""printf"", ""log""]]",[14750622720281776188],711
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,280,,"printf("" log"");","[""addLog""]","[[], [""printf"", ""log""]]",[14750622720281776188],711
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,277,,"printf("" out"");","[""addLog""]","[[], [""printf"", ""out""]]",[11372456182899202998],710
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,278,,"printf("" out"");","[""addLog""]","[[], [""printf"", ""out""]]",[11372456182899202998],710
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,275,,"printf("" in"");","[""addLog""]","[[], [""printf"", ""in""]]",[7250849635609683630],709
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,276,,"printf("" in"");","[""addLog""]","[[], [""printf"", ""in""]]",[7250849635609683630],709
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,272,,"printf("" drop"");","[""addLog""]","[[], [""printf"", ""drop""]]",[-1581241089336767614],708
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,273,,"printf("" drop"");","[""addLog""]","[[], [""printf"", ""drop""]]",[-1581241089336767614],708
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,253,,"printf("" return-icmp6"");","[""addLog""]","[[], [""printf"", ""return"", ""icmp6""]]",[6438027216173883209],707
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,254,,"printf("" return-icmp6"");","[""addLog""]","[[], [""printf"", ""return"", ""icmp6""]]",[6438027216173883209],707
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,235,,"printf("" return-rst(ttl %d)"", r->return_ttl);","[""addLog""]","[[], [""printf"", ""return"", ""rst"", ""ttl"", ""%d"", ""r"", ""return_ttl""]]",[17010010411217766019],706
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,236,,"printf("" return-rst(ttl %d)"", r->return_ttl);","[""addLog""]","[[], [""printf"", ""return"", ""rst"", ""ttl"", ""%d"", ""r"", ""return_ttl""]]",[17010010411217766019],706
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,233,,"printf("" return-rst"");","[""addLog""]","[[], [""printf"", ""return"", ""rst""]]",[12334359323037109939],705
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,234,,"printf("" return-rst"");","[""addLog""]","[[], [""printf"", ""return"", ""rst""]]",[12334359323037109939],705
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,230,,"printf("" return"");","[""addLog""]","[[], [""printf"", ""return""]]",[11577479232673043291],704
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,231,,"printf("" return"");","[""addLog""]","[[], [""printf"", ""return""]]",[11577479232673043291],704
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,227,,"printf(""%s"", actiontypes[r->action]);","[""addLog""]","[[], [""printf"", ""%s"", ""actiontypes[r"", ""action]""]]",[544926209889043860],703
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,225,,"printf(""%s"", actiontypes[r->action]);","[""addLog""]","[[], [""printf"", ""%s"", ""actiontypes[r"", ""action]""]]",[544926209889043860],703
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,224,,"printf(""%s \""%s\"""", anchortypes[r->action],
    anchor_call);","[""addLog""]","[[], [""printf"", ""%s"", ""\\"", ""%s\\"", ""anchortypes[r"", ""action]"", ""anchor_call""]]",[7358904466532662830],702
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,222,,"printf(""%s \""%s\"""", anchortypes[r->action],
    anchor_call);","[""addLog""]","[[], [""printf"", ""%s"", ""\\"", ""%s\\"", ""anchortypes[r"", ""action]"", ""anchor_call""]]",[7358904466532662830],702
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,222,,"printf(""%s"", anchortypes[r->action]);","[""addLog""]","[[], [""printf"", ""%s"", ""anchortypes[r"", ""action]""]]",[15741375109241195077],701
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,220,,"printf(""%s"", anchortypes[r->action]);","[""addLog""]","[[], [""printf"", ""%s"", ""anchortypes[r"", ""action]""]]",[15741375109241195077],701
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,218,,"printf(""action(%d)"", r->action);","[""addLog""]","[[], [""printf"", ""action"", ""%d"", ""r"", ""action""]]",[23951821349376583875],700
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,217,,"printf(""action(%d)"", r->action);","[""addLog""]","[[], [""printf"", ""action"", ""%d"", ""r"", ""action""]]",[23951821349376583875],700
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,216,,"printf(""@%d "", r->nr);","[""addLog""]","[[], [""printf"", ""%d"", ""r"", ""nr""]]",[7256225682499776141],699
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,215,,"printf(""@%d "", r->nr);","[""addLog""]","[[], [""printf"", ""%d"", ""r"", ""nr""]]",[7256225682499776141],699
https://github.com/collectd/collectd/commit/22d0859f5c5c43adc8c58ff0dd40be79528681eb,21 Apr 2011,pf plugin: some code cleanup,43,data/crawl/collectd/hunk_196.cpp,,,data/crawl/collectd/old_hunk_196.cpp,data/crawl/collectd/new_hunk_196.cpp,-1,20,,"printf(""%s.%s: %lld\n"", type, inst, val);","[""addLog""]","[[], [""printf"", ""%s"", ""%s"", ""%lld\\n"", ""type"", ""inst"", ""val""]]",[-7074647356142150744],698
https://github.com/collectd/collectd/commit/3fdb55938b0e70e042f893dadcc62cfe7a92a914,14 Apr 2011,pf plugin: init commit - import pf.c from pyr@openbsd.org,136,data/crawl/collectd/hunk_199.cpp,,,data/crawl/collectd/old_hunk_199.cpp,data/crawl/collectd/new_hunk_199.cpp,-1,67,,"printf(""%s.%s: %lld\n"", type, inst, val);","[""addLog""]","[[], [""printf"", ""%s"", ""%s"", ""%lld\\n"", ""type"", ""inst"", ""val""]]",[-7074647356142150744],698
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,306,-1,"printf("" on ! rdomain %i"", r->onrdomain);",,"[""removeLog""]","[[""printf"", ""on"", ""rdomain"", ""%i"", ""r"", ""onrdomain""], []]",[-9477123951197783886],697
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,308,-1,"printf("" on rdomain %i"", r->onrdomain);",,"[""removeLog""]","[[""printf"", ""on"", ""rdomain"", ""%i"", ""r"", ""onrdomain""], []]",[-9477123951197783886],697
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,908,-1,"printf("" port"");",,"[""removeLog""]","[[""printf"", ""port""], []]",[-11379973328728410548],696
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,808,-1,"printf("" port"");",,"[""removeLog""]","[[""printf"", ""port""], []]",[-11379973328728410548],696
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,853,-1,"printf(""/%d"", bits);",,"[""removeLog""]","[[""printf"", ""/%d"", ""bits""], []]",[-10971988856684572722],695
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,736,-1,"printf(""/%d"", bits);",,"[""removeLog""]","[[""printf"", ""/%d"", ""bits""], []]",[-10971988856684572722],695
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,839,-1,"printf(""route \""%s\"""", addr->v.rtlabelname);",,"[""removeLog""]","[[""printf"", ""route"", ""\\"", ""%s\\"", ""addr"", ""v"", ""rtlabelname""], []]",[9673634733515718261],694
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,722,-1,"printf(""route \""%s\"""", addr->v.rtlabelname);",,"[""removeLog""]","[[""printf"", ""route"", ""\\"", ""%s\\"", ""addr"", ""v"", ""rtlabelname""], []]",[9673634733515718261],694
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,836,-1,"printf(""urpf-failed"");",,"[""removeLog""]","[[""printf"", ""urpf"", ""failed""], []]",[-4889232453716628751],693
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,719,-1,"printf(""urpf-failed"");",,"[""removeLog""]","[[""printf"", ""urpf"", ""failed""], []]",[-4889232453716628751],693
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,833,-1,"printf(""no-route"");",,"[""removeLog""]","[[""printf"", ""no"", ""route""], []]",[-6370918528492110760],692
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,716,-1,"printf(""no-route"");",,"[""removeLog""]","[[""printf"", ""no"", ""route""], []]",[-6370918528492110760],692
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,821,-1,"printf(""any"");",,"[""removeLog""]","[[""printf"", ""any""], []]",[-8690489284064660660],691
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,704,-1,"printf(""any"");",,"[""removeLog""]","[[""printf"", ""any""], []]",[-8690489284064660660],691
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,803,-1,"printf(""<%s>"", addr->v.tblname);",,"[""removeLog""]","[[""printf"", ""%s"", ""addr"", ""v"", ""tblname""], []]",[-11138089653288908981],690
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,686,-1,"printf(""<%s>"", addr->v.tblname);",,"[""removeLog""]","[[""printf"", ""%s"", ""addr"", ""v"", ""tblname""], []]",[-11138089653288908981],690
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,800,-1,"printf(""<%s:%d>"", addr->v.tblname,
    addr->p.tblcnt);",,"[""removeLog""]","[[""printf"", ""%s"", ""%d"", ""addr"", ""v"", ""tblname"", ""addr"", ""p"", ""tblcnt""], []]",[-10067429523792067753],689
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,683,-1,"printf(""<%s:%d>"", addr->v.tblname,
    addr->p.tblcnt);",,"[""removeLog""]","[[""printf"", ""%s"", ""%d"", ""addr"", ""v"", ""tblname"", ""addr"", ""p"", ""tblcnt""], []]",[-10067429523792067753],689
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,798,-1,"printf(""<%s:*>"", addr->v.tblname);",,"[""removeLog""]","[[""printf"", ""%s"", ""*"", ""addr"", ""v"", ""tblname""], []]",[-11138089658664925152],688
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,681,-1,"printf(""<%s:*>"", addr->v.tblname);",,"[""removeLog""]","[[""printf"", ""%s"", ""*"", ""addr"", ""v"", ""tblname""], []]",[-11138089658664925152],688
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,791,-1,"printf("":%d"", addr->p.dyncnt);",,"[""removeLog""]","[[""printf"", ""%d"", ""addr"", ""p"", ""dyncnt""], []]",[-7412012780973744286],687
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,674,-1,"printf("":%d"", addr->p.dyncnt);",,"[""removeLog""]","[[""printf"", ""%d"", ""addr"", ""p"", ""dyncnt""], []]",[-7412012780973744286],687
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,789,-1,"printf("":*"");",,"[""removeLog""]","[[""printf"", ""*""], []]",[-7237409560240578626],686
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,672,-1,"printf("":*"");",,"[""removeLog""]","[[""printf"", ""*""], []]",[-7237409560240578626],686
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,786,-1,"printf("":0"");",,"[""removeLog""]","[[""printf"", ""0""], []]",[-7237409561008580936],685
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,669,-1,"printf("":0"");",,"[""removeLog""]","[[""printf"", ""0""], []]",[-7237409561008580936],685
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,784,-1,"printf("":peer"");",,"[""removeLog""]","[[""printf"", ""peer""], []]",[-11379963328741410799],684
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,667,-1,"printf("":peer"");",,"[""removeLog""]","[[""printf"", ""peer""], []]",[-11379963328741410799],684
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,782,-1,"printf("":broadcast"");",,"[""removeLog""]","[[""printf"", ""broadcast""], []]",[-2594591724333411431],683
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,665,-1,"printf("":broadcast"");",,"[""removeLog""]","[[""printf"", ""broadcast""], []]",[-2594591724333411431],683
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,780,-1,"printf("":network"");",,"[""removeLog""]","[[""printf"", ""network""], []]",[159075666890325060],682
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,663,-1,"printf("":network"");",,"[""removeLog""]","[[""printf"", ""network""], []]",[159075666890325060],682
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,778,-1,"printf(""(%s"", addr->v.ifname);",,"[""removeLog""]","[[""printf"", ""%s"", ""addr"", ""v"", ""ifname""], []]",[-2890755936933273931],681
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,661,-1,"printf(""(%s"", addr->v.ifname);",,"[""removeLog""]","[[""printf"", ""%s"", ""addr"", ""v"", ""ifname""], []]",[-2890755936933273931],681
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,770,-1,"printf(""%c"", tcpflags[i]);",,"[""removeLog""]","[[""printf"", ""%c"", ""tcpflags[i]""], []]",[-2212560642550899577],680
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,845,-1,"printf(""%c"", tcpflags[i]);",,"[""removeLog""]","[[""printf"", ""%c"", ""tcpflags[i]""], []]",[-2212560642550899577],680
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,756,-1,"printf("" %s"", t);",,"[""removeLog""]","[[""printf"", ""%s"", ""t""], []]",[-7242145598165649898],679
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,855,-1,"printf("" %s"", t);",,"[""removeLog""]","[[""printf"", ""%s"", ""t""], []]",[-7242145598165649898],679
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,738,-1,"printf("" to "");",,"[""removeLog""]","[[""printf"", ""to""], []]",[-7252257644068696392],678
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,786,-1,"printf("" to "");",,"[""removeLog""]","[[""printf"", ""to""], []]",[-7252257644068696392],678
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,735,-1,"printf("" os \""%s\"""", pfctl_lookup_fingerprint(osfp, buf,
    sizeof(buf)));",,"[""removeLog""]","[[""printf"", ""os"", ""\\"", ""%s\\"", ""pfctl_lookup_fingerprint"", ""osfp"", ""buf"", ""sizeof"", ""buf""], []]",[-5500147762427001088],677
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,783,-1,"printf("" os \""%s\"""", pfctl_lookup_fingerprint(osfp, buf,
    sizeof(buf)));",,"[""removeLog""]","[[""printf"", ""os"", ""\\"", ""%s\\"", ""pfctl_lookup_fingerprint"", ""osfp"", ""buf"", ""sizeof"", ""buf""], []]",[-5500147762427001088],677
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,726,-1,"printf("" from "");",,"[""removeLog""]","[[""printf"", ""from""], []]",[-6727851171353778747],676
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,774,-1,"printf("" from "");",,"[""removeLog""]","[[""printf"", ""from""], []]",[-6727851171353778747],676
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,724,-1,"printf("" all"");",,"[""removeLog""]","[[""printf"", ""all""], []]",[-8690489284066660633],675
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,772,-1,"printf("" all"");",,"[""removeLog""]","[[""printf"", ""all""], []]",[-8690489284066660633],675
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,707,-1,"printf("" static-port"");",,"[""removeLog""]","[[""printf"", ""static"", ""port""], []]",[-5658596519278830664],674
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,653,-1,"printf("" static-port"");",,"[""removeLog""]","[[""printf"", ""static"", ""port""], []]",[-5658596519278830664],674
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,705,-1,"printf("" sticky-address"");",,"[""removeLog""]","[[""printf"", ""sticky"", ""address""], []]",[-757876703365771645],673
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,651,-1,"printf("" sticky-address"");",,"[""removeLog""]","[[""printf"", ""sticky"", ""address""], []]",[-757876703365771645],673
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,701,-1,"printf("" round-robin"");",,"[""removeLog""]","[[""printf"", ""round"", ""robin""], []]",[-5476246332822404881],672
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,647,-1,"printf("" round-robin"");",,"[""removeLog""]","[[""printf"", ""round"", ""robin""], []]",[-5476246332822404881],672
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,696,-1,"printf("" source-hash 0x%08x%08x%08x%08x"",
    pool->key.key32[0], pool->key.key32[1],
    pool->key.key32[2], pool->key.key32[3]);",,"[""removeLog""]","[[""printf"", ""source"", ""hash"", ""0x%08x%08x%08x%08x"", ""pool"", ""key"", ""key32[0]"", ""pool"", ""key"", ""key32[1]"", ""pool"", ""key"", ""key32[2]"", ""pool"", ""key"", ""key32[3]""], []]",[-99398516677331504304],671
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,642,-1,"printf("" source-hash 0x%08x%08x%08x%08x"",
    pool->key.key32[0], pool->key.key32[1],
    pool->key.key32[2], pool->key.key32[3]);",,"[""removeLog""]","[[""printf"", ""source"", ""hash"", ""0x%08x%08x%08x%08x"", ""pool"", ""key"", ""key32[0]"", ""pool"", ""key"", ""key32[1]"", ""pool"", ""key"", ""key32[2]"", ""pool"", ""key"", ""key32[3]""], []]",[-99398516677331504304],671
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,693,-1,"printf("" random"");",,"[""removeLog""]","[[""printf"", ""random""], []]",[-3145522978430076194],670
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,639,-1,"printf("" random"");",,"[""removeLog""]","[[""printf"", ""random""], []]",[-3145522978430076194],670
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,690,-1,"printf("" bitmask"");",,"[""removeLog""]","[[""printf"", ""bitmask""], []]",[-15416948916834894345],669
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,636,-1,"printf("" bitmask"");",,"[""removeLog""]","[[""printf"", ""bitmask""], []]",[-15416948916834894345],669
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,680,-1,"printf("":%u"", p2);",,"[""removeLog""]","[[""printf"", ""%u"", ""p2""], []]",[-7256481669445734607],668
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,626,-1,"printf("":%u"", p2);",,"[""removeLog""]","[[""printf"", ""%u"", ""p2""], []]",[-7256481669445734607],668
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,673,-1,"printf("" port %u:%u"", p1, p2);",,"[""removeLog""]","[[""printf"", ""port"", ""%u"", ""%u"", ""p1"", ""p2""], []]",[-11418117557890754855],667
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,619,-1,"printf("" port %u:%u"", p1, p2);",,"[""removeLog""]","[[""printf"", ""port"", ""%u"", ""%u"", ""p1"", ""p2""], []]",[-11418117557890754855],667
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,651,-1,"printf(""%s"", pooladdr->ifname);",,"[""removeLog""]","[[""printf"", ""%s"", ""pooladdr"", ""ifname""], []]",[-3250460036917863830],666
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,653,-1,"printf(""(%s "", pooladdr->ifname);",,"[""removeLog""]","[[""printf"", ""%s"", ""pooladdr"", ""ifname""], []]",[-3250460036917863830],666
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,555,-1,"printf("" port %u"", ntohs(r->divert.port));",,"[""removeLog""]","[[""printf"", ""port"", ""%u"", ""ntohs"", ""r"", ""divert"", ""port""], []]",[-5697063142289968905],665
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,573,-1,"printf("" port %u"", ntohs(r->divert.port));",,"[""removeLog""]","[[""printf"", ""port"", ""%u"", ""ntohs"", ""r"", ""divert"", ""port""], []]",[-5697063142289968905],665
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,549,-1,"printf("" divert-to "");",,"[""removeLog""]","[[""printf"", ""divert"", ""to""], []]",[-3324781023721909506],664
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,567,-1,"printf("" divert-to "");",,"[""removeLog""]","[[""printf"", ""divert"", ""to""], []]",[-3324781023721909506],664
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,544,-1,"printf("" divert-reply"");",,"[""removeLog""]","[[""printf"", ""divert"", ""reply""], []]",[3570663176360802934],663
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,562,-1,"printf("" divert-reply"");",,"[""removeLog""]","[[""printf"", ""divert"", ""reply""], []]",[3570663176360802934],663
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,541,-1,"printf("" rtable %u"", r->rtableid);",,"[""removeLog""]","[[""printf"", ""rtable"", ""%u"", ""r"", ""rtableid""], []]",[3430045270165863953],662
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,559,-1,"printf("" rtable %u"", r->rtableid);",,"[""removeLog""]","[[""printf"", ""rtable"", ""%u"", ""r"", ""rtableid""], []]",[3430045270165863953],662
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,538,-1,"printf("" tagged %s"", r->match_tagname);",,"[""removeLog""]","[[""printf"", ""tagged"", ""%s"", ""r"", ""match_tagname""], []]",[-3507246297539807416],661
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,556,-1,"printf("" tagged %s"", r->match_tagname);",,"[""removeLog""]","[[""printf"", ""tagged"", ""%s"", ""r"", ""match_tagname""], []]",[-3507246297539807416],661
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,534,-1,"printf("" tag %s"", r->tagname);",,"[""removeLog""]","[[""printf"", ""tag"", ""%s"", ""r"", ""tagname""], []]",[-3539429469589801201],660
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,552,-1,"printf("" tag %s"", r->tagname);",,"[""removeLog""]","[[""printf"", ""tag"", ""%s"", ""r"", ""tagname""], []]",[-3539429469589801201],660
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,532,-1,"printf("" queue %s"", r->qname);",,"[""removeLog""]","[[""printf"", ""queue"", ""%s"", ""r"", ""qname""], []]",[-10887937826197599557],659
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,550,-1,"printf("" queue %s"", r->qname);",,"[""removeLog""]","[[""printf"", ""queue"", ""%s"", ""r"", ""qname""], []]",[-10887937826197599557],659
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,530,-1,"printf("" queue(%s, %s)"", r->qname, r->pqname);",,"[""removeLog""]","[[""printf"", ""queue"", ""%s"", ""%s"", ""r"", ""qname"", ""r"", ""pqname""], []]",[-4000354707123495348],658
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,548,-1,"printf("" queue(%s, %s)"", r->qname, r->pqname);",,"[""removeLog""]","[[""printf"", ""queue"", ""%s"", ""%s"", ""r"", ""qname"", ""r"", ""pqname""], []]",[-4000354707123495348],658
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,528,-1,"printf("" label \""%s\"""", r->label);",,"[""removeLog""]","[[""printf"", ""label"", ""\\"", ""%s\\"", ""r"", ""label""], []]",[14021146053028532592],657
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,546,-1,"printf("" label \""%s\"""", r->label);",,"[""removeLog""]","[[""printf"", ""label"", ""\\"", ""%s\\"", ""r"", ""label""], []]",[14021146053028532592],657
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,518,-1,"printf("" reassemble tcp"");",,"[""removeLog""]","[[""printf"", ""reassemble"", ""tcp""], []]",[-11555867051850057570],656
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,531,-1,"printf(""reassemble tcp"");",,"[""removeLog""]","[[""printf"", ""reassemble"", ""tcp""], []]",[-11555867051850057570],656
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,515,-1,"printf("" allow-opts"");",,"[""removeLog""]","[[""printf"", ""allow"", ""opts""], []]",[-9934797783555056907],655
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,544,-1,"printf("" allow-opts"");",,"[""removeLog""]","[[""printf"", ""allow"", ""opts""], []]",[-9934797783555056907],655
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,513,-1,"printf("" set-tos 0x%2.2x"", r->set_tos);",,"[""removeLog""]","[[""printf"", ""set"", ""tos"", ""0x%2"", ""2x"", ""r"", ""set_tos""], []]",[-6483563197245946827],654
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,525,-1,"printf(""set-tos 0x%2.2x"", r->set_tos);",,"[""removeLog""]","[[""printf"", ""set"", ""tos"", ""0x%2"", ""2x"", ""r"", ""set_tos""], []]",[-6483563197245946827],654
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,511,-1,"printf("" max-mss %d"", r->max_mss);",,"[""removeLog""]","[[""printf"", ""max"", ""mss"", ""%d"", ""r"", ""max_mss""], []]",[-11828861311679460391],653
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,537,-1,"printf(""max-mss %d"", r->max_mss);",,"[""removeLog""]","[[""printf"", ""max"", ""mss"", ""%d"", ""r"", ""max_mss""], []]",[-11828861311679460391],653
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,509,-1,"printf("" min-ttl %d"", r->min_ttl);",,"[""removeLog""]","[[""printf"", ""min"", ""ttl"", ""%d"", ""r"", ""min_ttl""], []]",[-6758767122295601603],652
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,519,-1,"printf(""min-ttl %d"", r->min_ttl);",,"[""removeLog""]","[[""printf"", ""min"", ""ttl"", ""%d"", ""r"", ""min_ttl""], []]",[-6758767122295601603],652
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,507,-1,"printf("" random-id"");",,"[""removeLog""]","[[""printf"", ""random"", ""id""], []]",[-3158963059175197375],651
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,513,-1,"printf(""random-id"");",,"[""removeLog""]","[[""printf"", ""random"", ""id""], []]",[-3158963059175197375],651
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,505,-1,"printf("" no-df"");",,"[""removeLog""]","[[""printf"", ""no"", ""df""], []]",[-7264289716354804998],650
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,507,-1,"printf(""no-df"");",,"[""removeLog""]","[[""printf"", ""no"", ""df""], []]",[-7264289716354804998],650
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,503,-1,"printf("" fragment"");",,"[""removeLog""]","[[""printf"", ""fragment""], []]",[453875422335532193],649
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,501,-1,"printf("" fragment"");",,"[""removeLog""]","[[""printf"", ""fragment""], []]",[453875422335532193],649
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,496,-1,"printf(""%s %u"", pf_timeouts[j].name == NULL ?
    ""inv.timeout"" : pf_timeouts[j].name,
    r->timeout[i]);",,"[""removeLog""]","[[""printf"", ""%s"", ""%u"", ""pf_timeouts[j]"", ""name"", ""NULL"", ""inv"", ""timeout"", ""pf_timeouts[j]"", ""name"", ""r"", ""timeout[i]""], []]",[20589580412064047037],648
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,493,-1,"printf(""%s %u"", pf_timeouts[j].name == NULL ?
    ""inv.timeout"" : pf_timeouts[j].name,
    r->timeout[i]);",,"[""removeLog""]","[[""printf"", ""%s"", ""%u"", ""pf_timeouts[j]"", ""name"", ""NULL"", ""inv"", ""timeout"", ""pf_timeouts[j]"", ""name"", ""r"", ""timeout[i]""], []]",[20589580412064047037],648
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,482,-1,"printf(""pflow"");",,"[""removeLog""]","[[""printf"", ""pflow""], []]",[-7569148844912254292],647
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,479,-1,"printf(""pflow"");",,"[""removeLog""]","[[""printf"", ""pflow""], []]",[-7569148844912254292],647
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,476,-1,"printf(""sloppy"");",,"[""removeLog""]","[[""printf"", ""sloppy""], []]",[-7312664018543397222],646
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,473,-1,"printf(""sloppy"");",,"[""removeLog""]","[[""printf"", ""sloppy""], []]",[-7312664018543397222],646
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,470,-1,"printf(""if-bound"");",,"[""removeLog""]","[[""printf"", ""if"", ""bound""], []]",[-728081508294610371],645
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,467,-1,"printf(""if-bound"");",,"[""removeLog""]","[[""printf"", ""if"", ""bound""], []]",[-728081508294610371],645
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,463,-1,"printf("" flush"");",,"[""removeLog""]","[[""printf"", ""flush""], []]",[-13290399627434950574],644
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,460,-1,"printf("" flush"");",,"[""removeLog""]","[[""printf"", ""flush""], []]",[-13290399627434950574],644
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,461,-1,"printf(""overload <%s>"", r->overload_tblname);",,"[""removeLog""]","[[""printf"", ""overload"", ""%s"", ""r"", ""overload_tblname""], []]",[-3548967021324130882],643
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,458,-1,"printf(""overload <%s>"", r->overload_tblname);",,"[""removeLog""]","[[""printf"", ""overload"", ""%s"", ""r"", ""overload_tblname""], []]",[-3548967021324130882],643
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,455,-1,"printf(""max-src-nodes %u"", r->max_src_nodes);",,"[""removeLog""]","[[""printf"", ""max"", ""src"", ""nodes"", ""%u"", ""r"", ""max_src_nodes""], []]",[-27104560562674562568],642
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,452,-1,"printf(""max-src-nodes %u"", r->max_src_nodes);",,"[""removeLog""]","[[""printf"", ""max"", ""src"", ""nodes"", ""%u"", ""r"", ""max_src_nodes""], []]",[-27104560562674562568],642
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,447,-1,"printf(""max-src-conn-rate %u/%u"",
    r->max_src_conn_rate.limit,
    r->max_src_conn_rate.seconds);",,"[""removeLog""]","[[""printf"", ""max"", ""src"", ""conn"", ""rate"", ""%u/%u"", ""r"", ""max_src_conn_rate"", ""limit"", ""r"", ""max_src_conn_rate"", ""seconds""], []]",[-4535366429256538457],641
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,444,-1,"printf(""max-src-conn-rate %u/%u"",
    r->max_src_conn_rate.limit,
    r->max_src_conn_rate.seconds);",,"[""removeLog""]","[[""printf"", ""max"", ""src"", ""conn"", ""rate"", ""%u/%u"", ""r"", ""max_src_conn_rate"", ""limit"", ""r"", ""max_src_conn_rate"", ""seconds""], []]",[-4535366429256538457],641
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,441,-1,"printf(""max-src-conn %u"", r->max_src_conn);",,"[""removeLog""]","[[""printf"", ""max"", ""src"", ""conn"", ""%u"", ""r"", ""max_src_conn""], []]",[-15163422948546839568],640
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,438,-1,"printf(""max-src-conn %u"", r->max_src_conn);",,"[""removeLog""]","[[""printf"", ""max"", ""src"", ""conn"", ""%u"", ""r"", ""max_src_conn""], []]",[-15163422948546839568],640
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,435,-1,"printf(""max-src-states %u"", r->max_src_states);",,"[""removeLog""]","[[""printf"", ""max"", ""src"", ""states"", ""%u"", ""r"", ""max_src_states""], []]",[-1512087061394281604],639
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,432,-1,"printf(""max-src-states %u"", r->max_src_states);",,"[""removeLog""]","[[""printf"", ""max"", ""src"", ""states"", ""%u"", ""r"", ""max_src_states""], []]",[-1512087061394281604],639
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,427,-1,"printf("" rule"");",,"[""removeLog""]","[[""printf"", ""rule""], []]",[-1242323515967406341],638
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,424,-1,"printf("" rule"");",,"[""removeLog""]","[[""printf"", ""rule""], []]",[-1242323515967406341],638
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,425,-1,"printf(""source-track"");",,"[""removeLog""]","[[""printf"", ""source"", ""track""], []]",[-15243224373620409104],637
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,422,-1,"printf(""source-track"");",,"[""removeLog""]","[[""printf"", ""source"", ""track""], []]",[-15243224373620409104],637
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,419,-1,"printf(""no-sync"");",,"[""removeLog""]","[[""printf"", ""no"", ""sync""], []]",[-5411089731814807883],636
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,416,-1,"printf(""no-sync"");",,"[""removeLog""]","[[""printf"", ""no"", ""sync""], []]",[-5411089731814807883],636
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,413,-1,"printf(""max %u"", r->max_states);",,"[""removeLog""]","[[""printf"", ""max"", ""%u"", ""r"", ""max_states""], []]",[-21512123513546963352],635
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,410,-1,"printf(""max %u"", r->max_states);",,"[""removeLog""]","[[""printf"", ""max"", ""%u"", ""r"", ""max_states""], []]",[-21512123513546963352],635
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,394,-1,"printf("" probability %s%%"", buf);",,"[""removeLog""]","[[""printf"", ""probability"", ""%s%%"", ""buf""], []]",[-7717622795444870251],634
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,389,-1,"printf("" probability %s%%"", buf);",,"[""removeLog""]","[[""printf"", ""probability"", ""%s%%"", ""buf""], []]",[-7717622795444870251],634
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,380,-1,"printf("" synproxy state"");",,"[""removeLog""]","[[""printf"", ""synproxy"", ""state""], []]",[-10564088388262267539],633
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,375,-1,"printf("" synproxy state"");",,"[""removeLog""]","[[""printf"", ""synproxy"", ""state""], []]",[-10564088388262267539],633
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,378,-1,"printf("" modulate state"");",,"[""removeLog""]","[[""printf"", ""modulate"", ""state""], []]",[-13843688624563880934],632
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,373,-1,"printf("" modulate state"");",,"[""removeLog""]","[[""printf"", ""modulate"", ""state""], []]",[-13843688624563880934],632
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,376,-1,"printf("" keep state"");",,"[""removeLog""]","[[""printf"", ""keep"", ""state""], []]",[-11388085001533577400],631
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,371,-1,"printf("" keep state"");",,"[""removeLog""]","[[""printf"", ""keep"", ""state""], []]",[-11388085001533577400],631
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,374,-1,"printf("" no state"");",,"[""removeLog""]","[[""printf"", ""no"", ""state""], []]",[-9585561890251670896],630
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,369,-1,"printf("" no state"");",,"[""removeLog""]","[[""printf"", ""no"", ""state""], []]",[-9585561890251670896],630
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,372,-1,"printf("" tos 0x%2.2x"", r->tos);",,"[""removeLog""]","[[""printf"", ""tos"", ""0x%2"", ""2x"", ""r"", ""tos""], []]",[-758329192676429929],629
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,367,-1,"printf("" tos 0x%2.2x"", r->tos);",,"[""removeLog""]","[[""printf"", ""tos"", ""0x%2"", ""2x"", ""r"", ""tos""], []]",[-758329192676429929],629
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,368,-1,"printf("" code %u"", r->code-1);",,"[""removeLog""]","[[""printf"", ""code"", ""%u"", ""r"", ""code"", ""1""], []]",[-18188906200413560984],628
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,363,-1,"printf("" code %u"", r->code-1);",,"[""removeLog""]","[[""printf"", ""code"", ""%u"", ""r"", ""code"", ""1""], []]",[-18188906200413560984],628
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,366,-1,"printf("" code %s"", ic->name);",,"[""removeLog""]","[[""printf"", ""code"", ""%s"", ""ic"", ""name""], []]",[-8562387475032974199],627
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,361,-1,"printf("" code %s"", ic->name);",,"[""removeLog""]","[[""printf"", ""code"", ""%s"", ""ic"", ""name""], []]",[-8562387475032974199],627
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,360,-1,"printf("" %u"", r->type-1);",,"[""removeLog""]","[[""printf"", ""%u"", ""r"", ""type"", ""1""], []]",[-9556183826295058894],626
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,355,-1,"printf("" %u"", r->type-1);",,"[""removeLog""]","[[""printf"", ""%u"", ""r"", ""type"", ""1""], []]",[-9556183826295058894],626
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,358,-1,"printf("" %s"", it->name);",,"[""removeLog""]","[[""printf"", ""%s"", ""it"", ""name""], []]",[-3089007176917027687],625
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,353,-1,"printf("" %s"", it->name);",,"[""removeLog""]","[[""printf"", ""%s"", ""it"", ""name""], []]",[-3089007176917027687],625
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,356,-1,"printf("" icmp6-type"");",,"[""removeLog""]","[[""printf"", ""icmp6"", ""type""], []]",[-4411995760478793281],624
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,351,-1,"printf("" icmp6-type"");",,"[""removeLog""]","[[""printf"", ""icmp6"", ""type""], []]",[-4411995760478793281],624
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,354,-1,"printf("" icmp-type"");",,"[""removeLog""]","[[""printf"", ""icmp"", ""type""], []]",[-3058724710583437742],623
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,349,-1,"printf("" icmp-type"");",,"[""removeLog""]","[[""printf"", ""icmp"", ""type""], []]",[-3058724710583437742],623
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,348,-1,"printf("" flags any"");",,"[""removeLog""]","[[""printf"", ""flags"", ""any""], []]",[-14743491356631048872],622
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,343,-1,"printf("" flags any"");",,"[""removeLog""]","[[""printf"", ""flags"", ""any""], []]",[-14743491356631048872],622
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,342,-1,"printf(""/"");",,"[""removeLog""]","[[""printf"", ""/""], []]",[-7237409560880580549],621
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,337,-1,"printf(""/"");",,"[""removeLog""]","[[""printf"", ""/""], []]",[-7237409560880580549],621
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,340,-1,"printf("" flags "");",,"[""removeLog""]","[[""printf"", ""flags""], []]",[-13290411627430950667],620
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,335,-1,"printf("" flags "");",,"[""removeLog""]","[[""printf"", ""flags""], []]",[-13290411627430950667],620
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,329,-1,"printf("" proto %u"", r->proto);",,"[""removeLog""]","[[""printf"", ""proto"", ""%u"", ""r"", ""proto""], []]",[-4798478322814132784],619
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,322,-1,"printf("" proto %u"", r->proto);",,"[""removeLog""]","[[""printf"", ""proto"", ""%u"", ""r"", ""proto""], []]",[-4798478322814132784],619
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,327,-1,"printf("" proto %s"", p->p_name);",,"[""removeLog""]","[[""printf"", ""proto"", ""%s"", ""p"", ""p_name""], []]",[-4886238719468689065],618
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,320,-1,"printf("" proto %s"", p->p_name);",,"[""removeLog""]","[[""printf"", ""proto"", ""%s"", ""p"", ""p_name""], []]",[-4886238719468689065],618
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,321,-1,"printf("" inet6"");",,"[""removeLog""]","[[""printf"", ""inet6""], []]",[902135462179598540],617
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,314,-1,"printf("" inet6"");",,"[""removeLog""]","[[""printf"", ""inet6""], []]",[902135462179598540],617
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,319,-1,"printf("" inet"");",,"[""removeLog""]","[[""printf"", ""inet""], []]",[-744683488386046549],616
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,312,-1,"printf("" inet"");",,"[""removeLog""]","[[""printf"", ""inet""], []]",[-744683488386046549],616
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,309,-1,"printf("" dup-to"");",,"[""removeLog""]","[[""printf"", ""dup"", ""to""], []]",[-5327170835885221504],615
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,594,-1,"printf("" dup-to"");",,"[""removeLog""]","[[""printf"", ""dup"", ""to""], []]",[-5327170835885221504],615
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,307,-1,"printf("" reply-to"");",,"[""removeLog""]","[[""printf"", ""reply"", ""to""], []]",[-371661533190117889],614
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,592,-1,"printf("" reply-to"");",,"[""removeLog""]","[[""printf"", ""reply"", ""to""], []]",[-371661533190117889],614
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,305,-1,"printf("" route-to"");",,"[""removeLog""]","[[""printf"", ""route"", ""to""], []]",[-6371686533106117682],613
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,590,-1,"printf("" route-to"");",,"[""removeLog""]","[[""printf"", ""route"", ""to""], []]",[-6371686533106117682],613
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,296,-1,"printf("" quick"");",,"[""removeLog""]","[[""printf"", ""quick""], []]",[-6783581205519813007],612
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,297,-1,"printf("" quick"");",,"[""removeLog""]","[[""printf"", ""quick""], []]",[-6783581205519813007],612
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,290,-1,"printf(""%sto pflog%u"", count++ ? "", "" : """",
    r->logif);",,"[""removeLog""]","[[""printf"", ""%sto"", ""pflog%u"", ""count"", ""r"", ""logif""], []]",[-25074894582623420492],611
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,291,-1,"printf(""%sto pflog%u"", count++ ? "", "" : """",
    r->logif);",,"[""removeLog""]","[[""printf"", ""%sto"", ""pflog%u"", ""count"", ""r"", ""logif""], []]",[-25074894582623420492],611
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,288,-1,"printf(""%suser"", count++ ? "", "" : """");",,"[""removeLog""]","[[""printf"", ""%suser"", ""count""], []]",[-11839753455475943874],610
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,289,-1,"printf(""%suser"", count++ ? "", "" : """");",,"[""removeLog""]","[[""printf"", ""%suser"", ""count""], []]",[-11839753455475943874],610
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,286,-1,"printf(""%sall"", count++ ? "", "" : """");",,"[""removeLog""]","[[""printf"", ""%sall"", ""count""], []]",[-19469830115665570919],609
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,285,-1,"printf(""%sall"", count++ ? "", "" : """");",,"[""removeLog""]","[[""printf"", ""%sall"", ""count""], []]",[-19469830115665570919],609
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,280,-1,"printf("" log"");",,"[""removeLog""]","[[""printf"", ""log""], []]",[-14750622720281776188],608
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,279,-1,"printf("" log"");",,"[""removeLog""]","[[""printf"", ""log""], []]",[-14750622720281776188],608
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,278,-1,"printf("" out"");",,"[""removeLog""]","[[""printf"", ""out""], []]",[-11372456182899202998],607
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,277,-1,"printf("" out"");",,"[""removeLog""]","[[""printf"", ""out""], []]",[-11372456182899202998],607
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,276,-1,"printf("" in"");",,"[""removeLog""]","[[""printf"", ""in""], []]",[-7250849635609683630],606
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,275,-1,"printf("" in"");",,"[""removeLog""]","[[""printf"", ""in""], []]",[-7250849635609683630],606
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,273,-1,"printf("" drop"");",,"[""removeLog""]","[[""printf"", ""drop""], []]",[1581241089336767614],605
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,272,-1,"printf("" drop"");",,"[""removeLog""]","[[""printf"", ""drop""], []]",[1581241089336767614],605
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,254,-1,"printf("" return-icmp6"");",,"[""removeLog""]","[[""printf"", ""return"", ""icmp6""], []]",[-6438027216173883209],604
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,253,-1,"printf("" return-icmp6"");",,"[""removeLog""]","[[""printf"", ""return"", ""icmp6""], []]",[-6438027216173883209],604
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,236,-1,"printf("" return-rst(ttl %d)"", r->return_ttl);",,"[""removeLog""]","[[""printf"", ""return"", ""rst"", ""ttl"", ""%d"", ""r"", ""return_ttl""], []]",[-17010010411217766019],603
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,235,-1,"printf("" return-rst(ttl %d)"", r->return_ttl);",,"[""removeLog""]","[[""printf"", ""return"", ""rst"", ""ttl"", ""%d"", ""r"", ""return_ttl""], []]",[-17010010411217766019],603
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,234,-1,"printf("" return-rst"");",,"[""removeLog""]","[[""printf"", ""return"", ""rst""], []]",[-12334359323037109939],602
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,233,-1,"printf("" return-rst"");",,"[""removeLog""]","[[""printf"", ""return"", ""rst""], []]",[-12334359323037109939],602
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,231,-1,"printf("" return"");",,"[""removeLog""]","[[""printf"", ""return""], []]",[-11577479232673043291],601
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,230,-1,"printf("" return"");",,"[""removeLog""]","[[""printf"", ""return""], []]",[-11577479232673043291],601
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,225,-1,"printf(""%s"", actiontypes[r->action]);",,"[""removeLog""]","[[""printf"", ""%s"", ""actiontypes[r"", ""action]""], []]",[-544926209889043860],600
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,227,-1,"printf(""%s"", actiontypes[r->action]);",,"[""removeLog""]","[[""printf"", ""%s"", ""actiontypes[r"", ""action]""], []]",[-544926209889043860],600
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,222,-1,"printf(""%s \""%s\"""", anchortypes[r->action],
    anchor_call);",,"[""removeLog""]","[[""printf"", ""%s"", ""\\"", ""%s\\"", ""anchortypes[r"", ""action]"", ""anchor_call""], []]",[-7358904466532662830],599
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,224,-1,"printf(""%s \""%s\"""", anchortypes[r->action],
    anchor_call);",,"[""removeLog""]","[[""printf"", ""%s"", ""\\"", ""%s\\"", ""anchortypes[r"", ""action]"", ""anchor_call""], []]",[-7358904466532662830],599
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,220,-1,"printf(""%s"", anchortypes[r->action]);",,"[""removeLog""]","[[""printf"", ""%s"", ""anchortypes[r"", ""action]""], []]",[-15741375109241195077],598
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,222,-1,"printf(""%s"", anchortypes[r->action]);",,"[""removeLog""]","[[""printf"", ""%s"", ""anchortypes[r"", ""action]""], []]",[-15741375109241195077],598
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,217,-1,"printf(""action(%d)"", r->action);",,"[""removeLog""]","[[""printf"", ""action"", ""%d"", ""r"", ""action""], []]",[-23951821349376583875],597
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,218,-1,"printf(""action(%d)"", r->action);",,"[""removeLog""]","[[""printf"", ""action"", ""%d"", ""r"", ""action""], []]",[-23951821349376583875],597
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,215,-1,"printf(""@%d "", r->nr);",,"[""removeLog""]","[[""printf"", ""%d"", ""r"", ""nr""], []]",[-7256225682499776141],596
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,216,-1,"printf(""@%d "", r->nr);",,"[""removeLog""]","[[""printf"", ""%d"", ""r"", ""nr""], []]",[-7256225682499776141],596
https://github.com/collectd/collectd/commit/03326eeaf8819d87786b132b80a0e772a9c5e2b0,16 May 2011,collectd-nagios: Let '-n LIST' list all available datasets.,76,data/crawl/collectd/hunk_190.cpp,,,data/crawl/collectd/old_hunk_190.cpp,data/crawl/collectd/new_hunk_190.cpp,-1,31,,"printf (""%s\n"", id);","[""addLog""]","[[], [""printf"", ""%s\\n"", ""id""]]",[13395814875024393062],595
https://github.com/collectd/collectd/commit/1252d60cdbd86328ecb815e978dbfa380c29b385,08 Aug 2010,collectdctl: Added ‘listval’ command.,47,data/crawl/collectd/hunk_215.cpp,,,data/crawl/collectd/old_hunk_215.cpp,data/crawl/collectd/new_hunk_215.cpp,-1,43,,"printf (""%s\n"", id);","[""addLog""]","[[], [""printf"", ""%s\\n"", ""id""]]",[13395814875024393062],595
https://github.com/collectd/collectd/commit/36d3cd820b5f977fcd349250a22a932f5af5a062,16 May 2011,"collectd-nagios: Sort LISTVAL output.

Also, output the data for each host in a separate ""section"", printing the
hostname as the heading and leaving it out from any further output.

This way, the strings may directly be used as options for -H and -n.",24,data/crawl/collectd/hunk_188.cpp,,,data/crawl/collectd/old_hunk_188.cpp,data/crawl/collectd/new_hunk_188.cpp,-1,5,,"printf (""UNKNOWN: %s\n"", lcc_strerror (connection));","[""addLog""]","[[], [""printf"", ""UNKNOWN"", ""%s\\n"", ""lcc_strerror"", ""connection""]]",[6320848196411595512],594
https://github.com/collectd/collectd/commit/03326eeaf8819d87786b132b80a0e772a9c5e2b0,16 May 2011,collectd-nagios: Let '-n LIST' list all available datasets.,76,data/crawl/collectd/hunk_190.cpp,,,data/crawl/collectd/old_hunk_190.cpp,data/crawl/collectd/new_hunk_190.cpp,-1,13,,"printf (""UNKNOWN: %s\n"", lcc_strerror (connection));","[""addLog""]","[[], [""printf"", ""UNKNOWN"", ""%s\\n"", ""lcc_strerror"", ""connection""]]",[6320848196411595512],594
https://github.com/collectd/collectd/commit/40dfca383199dfd178b3359f69d5732732f29b29,18 Jan 2012,python: Fixed memory leaks during dispatch.,65,data/crawl/collectd/hunk_180.cpp,,,data/crawl/collectd/old_hunk_180.cpp,data/crawl/collectd/new_hunk_180.cpp,-1,5,,"cpy_log_exception(""building meta data"");","[""addLog""]","[[], [""cpy_log_exception"", ""building"", ""meta"", ""data""]]",[-5210178578119763043],593
https://github.com/collectd/collectd/commit/f7cf0dad2e933ac6066ca5f27645ee577f065710,29 Jan 2010,python: Full meta data support.,173,data/crawl/collectd/hunk_250.cpp,,,data/crawl/collectd/old_hunk_250.cpp,data/crawl/collectd/new_hunk_250.cpp,-1,73,,"cpy_log_exception(""building meta data"");","[""addLog""]","[[], [""cpy_log_exception"", ""building"", ""meta"", ""data""]]",[-5210178578119763043],593
https://github.com/collectd/collectd/commit/e95c6a7731455136b68bbf075739506db8d5c447,13 Sep 2012,"pf plugin: Rearrange functions to get rid of prototypes.

* Add collectd specific includes.
* Make global variables and functions static.
* Remove main() function and associated code.",96,data/crawl/collectd/hunk_179.cpp,,,data/crawl/collectd/old_hunk_179.cpp,data/crawl/collectd/new_hunk_179.cpp,23,-1,"printf(""%s.%s: %lld\n"", type, inst, val);",,"[""removeLog""]","[[""printf"", ""%s"", ""%s"", ""%lld\\n"", ""type"", ""inst"", ""val""], []]",[7074647356142150744],592
https://github.com/collectd/collectd/commit/22d0859f5c5c43adc8c58ff0dd40be79528681eb,21 Apr 2011,pf plugin: some code cleanup,43,data/crawl/collectd/hunk_195.cpp,,,data/crawl/collectd/old_hunk_195.cpp,data/crawl/collectd/new_hunk_195.cpp,20,-1,"printf(""%s.%s: %lld\n"", type, inst, val);",,"[""removeLog""]","[[""printf"", ""%s"", ""%s"", ""%lld\\n"", ""type"", ""inst"", ""val""], []]",[7074647356142150744],592
https://github.com/collectd/collectd/commit/f19159854c272e5a8bb9f6915c456cf3a0f2d20e,25 Jun 2015,"src/daemon/plugin.h: Change ""values_len"" to type ""size_t"".",171,data/crawl/collectd/hunk_134.cpp,,,data/crawl/collectd/old_hunk_134.cpp,data/crawl/collectd/new_hunk_134.cpp,5,5,"PyErr_Format(PyExc_RuntimeError, ""type %s needs %d values, got %i"", value_list.type, ds->ds_num, size);","PyErr_Format(PyExc_RuntimeError, ""type %s needs %zu values, got %zu"", value_list.type, ds->ds_num, size);","[""updateContent""]","[[""%d"", ""%i""], [""%zu"", ""%zu""]]",[-9550603687351359483],591
https://github.com/collectd/collectd/commit/f19159854c272e5a8bb9f6915c456cf3a0f2d20e,25 Jun 2015,"src/daemon/plugin.h: Change ""values_len"" to type ""size_t"".",171,data/crawl/collectd/hunk_135.cpp,,,data/crawl/collectd/old_hunk_135.cpp,data/crawl/collectd/new_hunk_135.cpp,5,5,"PyErr_Format(PyExc_RuntimeError, ""type %s needs %d values, got %i"", value_list.type, ds->ds_num, size);","PyErr_Format(PyExc_RuntimeError, ""type %s needs %zu values, got %zu"", value_list.type, ds->ds_num, size);","[""updateContent""]","[[""%d"", ""%i""], [""%zu"", ""%zu""]]",[-9550603687351359483],591
https://github.com/collectd/collectd/commit/374d5b33a80a31a9e25bc4b1e9404091a4017761,20 Nov 2015,"Applied comments from Florian FOSTER, added more documentation, pause, fixed some typos.",193,data/crawl/collectd/hunk_117.cpp,,,data/crawl/collectd/old_hunk_117.cpp,data/crawl/collectd/new_hunk_117.cpp,3,3,"printf (""gps: will use %s:%s with timeout %d.\n"", gps_data_config.host, gps_data_config.port, gps_data_config.timeout);","DEBUG (""gps: will use %s:%s, timeout %d ms, pause %d sec.\n"", gps_data_config.host, gps_data_config.port, gps_data_config.timeout, gps_data_config.pause);","[""updateLog"", ""updateContent"", ""addVariable""]","[[""printf"", ""with""], [""DEBUG"", ""ms"", ""pause"", ""%d"", ""sec"", ""gps_data_config"", ""pause""]]",[-6292439264637885823],590
https://github.com/collectd/collectd/commit/ad2caf6750e5e584e39cf6c76a32937e1cef621c,19 Nov 2015,"Applied comments from Florian FOSTER, added more documentation, pause, fixed some typos.",193,data/crawl/collectd/hunk_120.cpp,,,data/crawl/collectd/old_hunk_120.cpp,data/crawl/collectd/new_hunk_120.cpp,3,3,"printf (""gps: will use %s:%s with timeout %d.\n"", gps_data_config.host, gps_data_config.port, gps_data_config.timeout);","DEBUG (""gps: will use %s:%s, timeout %d ms, pause %d sec.\n"", gps_data_config.host, gps_data_config.port, gps_data_config.timeout, gps_data_config.pause);","[""updateLog"", ""updateContent"", ""addVariable""]","[[""printf"", ""with""], [""DEBUG"", ""ms"", ""pause"", ""%d"", ""sec"", ""gps_data_config"", ""pause""]]",[-6292439264637885823],590
https://github.com/collectd/collectd/commit/374d5b33a80a31a9e25bc4b1e9404091a4017761,20 Nov 2015,"Applied comments from Florian FOSTER, added more documentation, pause, fixed some typos.",193,data/crawl/collectd/hunk_115.cpp,,,data/crawl/collectd/old_hunk_115.cpp,data/crawl/collectd/new_hunk_115.cpp,3,3,"printf (""cannot connect to: %s:%s"", gps_data_config.host, gps_data_config.port);","WARNING (""gps: cannot connect to: %s:%s"", gps_data_config.host, gps_data_config.port);","[""updateLog"", ""updateContent""]","[[""printf""], [""WARNING"", ""gps""]]",[-16928640459084592709],589
https://github.com/collectd/collectd/commit/ad2caf6750e5e584e39cf6c76a32937e1cef621c,19 Nov 2015,"Applied comments from Florian FOSTER, added more documentation, pause, fixed some typos.",193,data/crawl/collectd/hunk_118.cpp,,,data/crawl/collectd/old_hunk_118.cpp,data/crawl/collectd/new_hunk_118.cpp,3,3,"printf (""cannot connect to: %s:%s"", gps_data_config.host, gps_data_config.port);","WARNING (""gps: cannot connect to: %s:%s"", gps_data_config.host, gps_data_config.port);","[""updateLog"", ""updateContent""]","[[""printf""], [""WARNING"", ""gps""]]",[-16928640459084592709],589
https://github.com/collectd/collectd/commit/9fd3d670c4e85d840e618647c15b64d728a3f193,11 Dec 2015,"src/utils_ignorelist.c: Refactoring / code style fixes.

One of the goals was to remove uses of smalloc().",111,data/crawl/collectd/hunk_114.cpp,,,data/crawl/collectd/old_hunk_114.cpp,data/crawl/collectd/new_hunk_114.cpp,27,-1,"fprintf (stderr, ""Cannot compile regex %s: %i/%s"",
entry, rcompile, regerr);",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""Cannot"", ""compile"", ""regex"", ""%s"", ""%i/%s"", ""entry"", ""rcompile"", ""regerr""], []]",[13335140678383872414],588
https://github.com/collectd/collectd/commit/710586ae652d56ddeaafd530621e129a580fb780,03 Jul 2015,"src/utils_ignorelist.c: Reimplement ignorelist_append_regex().

There's a signed / unsigned conversion in that function ...
... aaaaand it's fully rewritten. Oops.",93,data/crawl/collectd/hunk_132.cpp,,,data/crawl/collectd/old_hunk_132.cpp,data/crawl/collectd/new_hunk_132.cpp,29,-1,"fprintf (stderr, ""Cannot compile regex %s: %i/%s"",
entry, rcompile, regerr);",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""Cannot"", ""compile"", ""regex"", ""%s"", ""%i/%s"", ""entry"", ""rcompile"", ""regerr""], []]",[13335140678383872414],588
https://github.com/collectd/collectd/commit/8af74098eb65ff4c0c0cc65dfaa40973fe741a63,04 Aug 2016,"python plugin: Fix conversion of value-lists from Python to C.

This affects data-sets with more than one data-source of different types.
Previously, the type of the first data-source would have been used to convert
all values.",34,data/crawl/collectd/hunk_105.cpp,,,data/crawl/collectd/old_hunk_105.cpp,data/crawl/collectd/new_hunk_105.cpp,33,38,"PyErr_Format(PyExc_RuntimeError, ""unknown data type %d for %s"", ds->ds->type, value_list.type);","PyErr_Format(PyExc_RuntimeError, ""unknown data type %d for %s"", ds->ds[i].type, value_list.type);","[""moveVariable"", ""removeVariable"", ""addVariable""]","[[""ds""], [""ds[i]""]]",[-7194500678630010612],587
https://github.com/collectd/collectd/commit/8af74098eb65ff4c0c0cc65dfaa40973fe741a63,04 Aug 2016,"python plugin: Fix conversion of value-lists from Python to C.

This affects data-sets with more than one data-source of different types.
Previously, the type of the first data-source would have been used to convert
all values.",34,data/crawl/collectd/hunk_106.cpp,,,data/crawl/collectd/old_hunk_106.cpp,data/crawl/collectd/new_hunk_106.cpp,33,38,"PyErr_Format(PyExc_RuntimeError, ""unknown data type %d for %s"", ds->ds->type, value_list.type);","PyErr_Format(PyExc_RuntimeError, ""unknown data type %d for %s"", ds->ds[i].type, value_list.type);","[""moveVariable"", ""removeVariable"", ""addVariable""]","[[""ds""], [""ds[i]""]]",[-7194500678630010612],587
https://github.com/collectd/collectd/commit/938471bee8cc86d32615144c5037f17338b19e70,25 Sep 2016,"command parser: Add support for the FLUSH command.

That is, implement the generic interface for FLUSH and switch the FLUSH
implementation to use the generic interface.",230,data/crawl/collectd/hunk_80.cpp,,,data/crawl/collectd/old_hunk_80.cpp,data/crawl/collectd/new_hunk_80.cpp,-1,42,,"cmd_error (CMD_ERROR, err, ""realloc failed."");","[""addLog""]","[[], [""cmd_error"", ""CMD_ERROR"", ""err"", ""realloc"", ""failed""]]",[-15218419426056434332],586
https://github.com/collectd/collectd/commit/3090a8852788aaca0d8063fdf9ac4ba66f048cd8,25 Sep 2016,"Add a generic interface for parsing the text protocol.

Implement it for PUTVAL for now.

The text protocol is used in multiple places and the parser will avoid code
duplication in client programs which can, instead, use it to generate the
respective requests.

Use the 'cmd_' prefix for public functions related to command handling.",484,data/crawl/collectd/hunk_94.cpp,,,data/crawl/collectd/old_hunk_94.cpp,data/crawl/collectd/new_hunk_94.cpp,-1,21,,"cmd_error (CMD_ERROR, err, ""realloc failed."");","[""addLog""]","[[], [""cmd_error"", ""CMD_ERROR"", ""err"", ""realloc"", ""failed""]]",[-15218419426056434332],586
https://github.com/collectd/collectd/commit/1e8a95944f39cf4d552f2afed8e26b93febd50ec,31 Dec 2016,"dpdkstat plugin rework

This patch contains rework of existing dpdkstat plugin. Changes are focused on
extracting common dpdk related features into utils file that could be reused by
other DPDK plugins. Also some related structural changes are introduced.

List of changes:
- introduction of new utils_dpdk.c that handles child process spawning,
  and terminating, messaging between parent and child, DPDK configuration
  and initialization and DPDK commands execution
- DPDK EAL specific options put into separate subsection of
  dpdkstat configuration
- documentation update

Those changes are preparatory steps for upstreaming dpdkevent plugin
that is going to collect DPDK ports and logical cores status info.

Signed-off-by: Krzysztof Matczak <krzysztofx.matczak@intel.com>",2068,data/crawl/collectd/hunk_54.cpp,,,data/crawl/collectd/old_hunk_54.cpp,data/crawl/collectd/new_hunk_54.cpp,-1,518,,"printf(""%s "", argp[i]);","[""addLog""]","[[], [""printf"", ""%s"", ""argp[i]""]]",[9980646000730281435],585
https://github.com/collectd/collectd/commit/8a7ec0cfb7aaab52e53fbb21cdc887cee4cccd6d,28 Jul 2016,"dpdkstat: enable a plugin for DPDK stats

This patch enables support to retrieve statistics for DPDK
interfaces. An overview of the threading is as follows:
1. collectd init() or read() calls dpdk_helper_spawn() to retrieve
   the required size of xstats to allocate.
   1.1. DPDK counts ports, stats and length, writing them to
        shared-memory (SHM).
   1.2. DPDK helper (secondary) process quits, allowing cleanup of
        the shared memory.
2. collectd resizes shared-memory to size of stats as provided by
   DPDK.
3. collectd respawns the DPDK helper.
   3.1. Helper blocks on a semaphore until told to read the stats
        from DPDK and write them to SHM.
4. collectd dispatches statistics
   4.1. Thread blocks on semaphore until stats are available.
This threading model is required to allow the plugin to detect when
the DPDK primary process/application has been killed/reset, and to avoid
the plugin from stopping another DPDK primary process from starting.
Some extra housekeeping is in place to ensure collectd is never
stalled by using sem_timedwait() with a timeout. If collectd dies, the
helper process will automatically quit after a timeout, as it detects
its ppid has changed.

Signed-off-by: Harry van Haaren <harry.van.haaren@intel.com>
Signed-off-by: Maryam Tahhan <maryam.tahhan@intel.com>",1020,data/crawl/collectd/hunk_108.cpp,,,data/crawl/collectd/old_hunk_108.cpp,data/crawl/collectd/new_hunk_108.cpp,-1,420,,"printf(""%s "", argp[i]);","[""addLog""]","[[], [""printf"", ""%s"", ""argp[i]""]]",[9980646000730281435],585
https://github.com/collectd/collectd/commit/acb5a3393b5ffcd73eeaa06c91e98e4ba9a58469,06 Jan 2017,"python: Extend Notification class

Extended python Notification class to support metadata in the same
way as it is implemented in Values class. The Values metadata class
implementation has been used as a example/source.

Change-Id: I4beab887c1dffb369864b9167e3f6c7ca21bc83f
Signed-off-by: Mytnyk, VolodymyrX <volodymyrx.mytnyk@intel.com>",205,data/crawl/collectd/hunk_52.cpp,,,data/crawl/collectd/old_hunk_52.cpp,data/crawl/collectd/new_hunk_52.cpp,-1,4,,"PyErr_Format(PyExc_TypeError, ""meta must be a dict"");","[""addLog""]","[[], [""PyErr_Format"", ""PyExc_TypeError"", ""meta"", ""must"", ""be"", ""a"", ""dict""]]",[-25662647079494767836],584
https://github.com/collectd/collectd/commit/f7cf0dad2e933ac6066ca5f27645ee577f065710,29 Jan 2010,python: Full meta data support.,173,data/crawl/collectd/hunk_251.cpp,,,data/crawl/collectd/old_hunk_251.cpp,data/crawl/collectd/new_hunk_251.cpp,-1,4,,"PyErr_Format(PyExc_TypeError, ""meta must be a dict"");","[""addLog""]","[[], [""PyErr_Format"", ""PyExc_TypeError"", ""meta"", ""must"", ""be"", ""a"", ""dict""]]",[-25662647079494767836],584
https://github.com/collectd/collectd/commit/25a2a0a9204610245b245656c91ad326725ef72d,22 Feb 2017,"log_logstash: send log messages to STDERR by default

See also dec394e08",8,data/crawl/collectd/hunk_49.cpp,,,data/crawl/collectd/old_hunk_49.cpp,data/crawl/collectd/new_hunk_49.cpp,3,3,"fprintf(stderr, ""log_logstash plugin: fopen (%s) failed: %s\n"",
            (log_file == NULL) ? DEFAULT_LOGFILE : log_file,
            sstrerror(errno, errbuf, sizeof(errbuf)));","fprintf(stderr, ""log_logstash plugin: fopen (%s) failed: %s\n"", log_file,
            sstrerror(errno, errbuf, sizeof(errbuf)));","[""moveVariable"", ""removeVariable""]","[[""NULL"", ""DEFAULT_LOGFILE"", ""log_file""], []]",[-307774261761050279],583
https://github.com/collectd/collectd/commit/9cb3abd9449a7f909c3434ec2ff0939939371269,22 Feb 2017,"logfile: send log messages to STDERR by default

This prevents early startup log messages from going unnoticed if the
default logfile isn't writeable.

Fixes: #2057",8,data/crawl/collectd/hunk_50.cpp,,,data/crawl/collectd/old_hunk_50.cpp,data/crawl/collectd/new_hunk_50.cpp,3,3,"fprintf(stderr, ""logfile plugin: fopen (%s) failed: %s\n"",
            (log_file == NULL) ? DEFAULT_LOGFILE : log_file,
            sstrerror(errno, errbuf, sizeof(errbuf)));","fprintf(stderr, ""logfile plugin: fopen (%s) failed: %s\n"", log_file,
            sstrerror(errno, errbuf, sizeof(errbuf)));","[""moveVariable"", ""removeVariable""]","[[""NULL"", ""DEFAULT_LOGFILE"", ""log_file""], []]",[-307774261761050279],583
https://github.com/collectd/collectd/commit/a21477bc160169035f250724d7fa027fe3da1106,13 Apr 2017,libcollectdclient: Separate module for lcc_network_parse().,1263,data/crawl/collectd/hunk_39.cpp,,,data/crawl/collectd/old_hunk_39.cpp,data/crawl/collectd/new_hunk_39.cpp,-1,412,,"fprintf(stderr, ""sizeof(iv) = %zu\n"", sizeof(iv));","[""addLog""]","[[], [""fprintf"", ""stderr"", ""sizeof"", ""iv"", ""%zu\\n"", ""sizeof"", ""iv""]]",[-25565438479868675511],582
https://github.com/collectd/collectd/commit/c3eb1f9dd670b0d112820ed2894e6d5ecb09c286,13 Apr 2017,libcollectdclient: Implement parsing of signed and encrypted network data.,348,data/crawl/collectd/hunk_43.cpp,,,data/crawl/collectd/old_hunk_43.cpp,data/crawl/collectd/new_hunk_43.cpp,-1,81,,"fprintf(stderr, ""sizeof(iv) = %zu\n"", sizeof(iv));","[""addLog""]","[[], [""fprintf"", ""stderr"", ""sizeof"", ""iv"", ""%zu\\n"", ""sizeof"", ""iv""]]",[-25565438479868675511],582
https://github.com/collectd/collectd/commit/4207aaf6ec9ab59f77f18d234f4a6ce40a34840e,10 Oct 2017,ipmi plugin: Fixed remarks found while review,88,data/crawl/collectd/hunk_29.cpp,,,data/crawl/collectd/old_hunk_29.cpp,data/crawl/collectd/new_hunk_29.cpp,3,3,"fprintf(stderr, ""ipmi plugin: %s\n"", msg);","DEBUG(""ipmi plugin: %s"", msg);","[""updateLog"", ""removeVariable"", ""updateContent""]","[[""fprintf"", ""stderr"", ""%s\\n""], [""DEBUG"", ""%s""]]",[15497196619610994202],581
https://github.com/collectd/collectd/commit/4207aaf6ec9ab59f77f18d234f4a6ce40a34840e,10 Oct 2017,ipmi plugin: Fixed remarks found while review,88,data/crawl/collectd/hunk_29.cpp,,,data/crawl/collectd/old_hunk_29.cpp,data/crawl/collectd/new_hunk_29.cpp,7,7,"fprintf(stderr, ""%s\n"", msg);","DEBUG(""%s"", msg);","[""updateLog"", ""removeVariable"", ""updateContent""]","[[""fprintf"", ""stderr"", ""%s\\n""], [""DEBUG"", ""%s""]]",[15497196619610994202],581
https://github.com/collectd/collectd/commit/ae299c233838bb1d7ddcb4b2826b3352a12af7e7,30 Nov 2017,"Auto-Merge pull request #2586 from octo/issue/2583

Automatically merged due to ""Automerge"" label",8,data/crawl/collectd/hunk_5.cpp,,,data/crawl/collectd/old_hunk_5.cpp,data/crawl/collectd/new_hunk_5.cpp,7,-1,"printf(""libcollectdclient/server_test.c\n"");",,"[""removeLog""]","[[""printf"", ""libcollectdclient/server_test"", ""c\\n""], []]",[-63777970201486563],580
https://github.com/collectd/collectd/commit/4b5072913bf8da67ac39f26fccb94c3b1a8944d8,30 Nov 2017,"network_parse_test.c: Only test security features if libgcrypt is available.

Fixes: #2583",8,data/crawl/collectd/hunk_6.cpp,,,data/crawl/collectd/old_hunk_6.cpp,data/crawl/collectd/new_hunk_6.cpp,7,-1,"printf(""libcollectdclient/server_test.c\n"");",,"[""removeLog""]","[[""printf"", ""libcollectdclient/server_test"", ""c\\n""], []]",[-63777970201486563],580
https://github.com/collectd/collectd/commit/500559839355fc4061afe1d010d9f9479bca450d,19 Dec 2005,"Added to src/configfile.c:
  `cf_callback_options_mode': Callback for <Mode> options
  `cf_get_mode_option':       Function to query above options",143,data/crawl/collectd/hunk_552.cpp,,,data/crawl/collectd/old_hunk_552.cpp,data/crawl/collectd/new_hunk_552.cpp,-1,25,,"fprintf (stderr, ""Option `%s' is not valid in this mode!\n"", shortvar);","[""addLog""]","[[], [""fprintf"", ""stderr"", ""Option"", ""%s"", ""is"", ""not"", ""valid"", ""in"", ""this"", ""mode"", ""\\n"", ""shortvar""]]",[-18409884831772261269],579
https://github.com/collectd/collectd/commit/500559839355fc4061afe1d010d9f9479bca450d,19 Dec 2005,"Added to src/configfile.c:
  `cf_callback_options_mode': Callback for <Mode> options
  `cf_get_mode_option':       Function to query above options",143,data/crawl/collectd/hunk_552.cpp,,,data/crawl/collectd/old_hunk_552.cpp,data/crawl/collectd/new_hunk_552.cpp,-1,19,,"fprintf (stderr, ""Wrong extra..\n"");","[""addLog""]","[[], [""fprintf"", ""stderr"", ""Wrong"", ""extra"", ""\\n""]]",[-2825956832575421605],578
https://github.com/collectd/collectd/commit/500559839355fc4061afe1d010d9f9479bca450d,19 Dec 2005,"Added to src/configfile.c:
  `cf_callback_options_mode': Callback for <Mode> options
  `cf_get_mode_option':       Function to query above options",143,data/crawl/collectd/hunk_552.cpp,,,data/crawl/collectd/old_hunk_552.cpp,data/crawl/collectd/new_hunk_552.cpp,-1,11,,"fprintf (stderr, ""No extra..?\n"");","[""addLog""]","[[], [""fprintf"", ""stderr"", ""No"", ""extra"", ""\\n""]]",[-11614684343900837584],577
https://github.com/collectd/collectd/commit/424db8460223d3fb13cf96ba0e93b246c74639dc,20 Dec 2005,"Changed `plugin_set_dir' to take a `const' argument.
Reorganized the `configfile.c' file. Changed callback names, their order and added comments.
Added `cf_callback_mode_plugindir' to allow the config file to change the plugin directory.",210,data/crawl/collectd/hunk_548.cpp,,,data/crawl/collectd/old_hunk_548.cpp,data/crawl/collectd/new_hunk_548.cpp,48,48,"fprintf (stderr, ERR_SECTION_ONLY, shortvar);","fprintf (stderr, ""cf_callback_mode_switch: Wrong mode!\n"");","[""removeVariable"", ""addContent""]","[[""ERR_SECTION_ONLY"", ""shortvar""], [""cf_callback_mode_switch"", ""Wrong"", ""mode"", ""\\n""]]",[8131905593238720077],576
https://github.com/collectd/collectd/commit/424db8460223d3fb13cf96ba0e93b246c74639dc,20 Dec 2005,"Changed `plugin_set_dir' to take a `const' argument.
Reorganized the `configfile.c' file. Changed callback names, their order and added comments.
Added `cf_callback_mode_plugindir' to allow the config file to change the plugin directory.",210,data/crawl/collectd/hunk_548.cpp,,,data/crawl/collectd/old_hunk_548.cpp,data/crawl/collectd/new_hunk_548.cpp,20,25,"fprintf (stderr, ERR_NEEDS_ARG, shortvar);","syslog (LOG_ERR, ""plugin_load (%s): failed to load plugin"", value);","[""updateVariable"", ""updateLog"", ""removeVariable"", ""addContent""]","[[""fprintf"", ""stderr"", ""ERR_NEEDS_ARG"", ""shortvar""], [""syslog"", ""LOG_ERR"", ""plugin_load"", ""%s"", ""failed"", ""to"", ""load"", ""plugin"", ""value""]]",[-834426179944201500],575
https://github.com/collectd/collectd/commit/424db8460223d3fb13cf96ba0e93b246c74639dc,20 Dec 2005,"Changed `plugin_set_dir' to take a `const' argument.
Reorganized the `configfile.c' file. Changed callback names, their order and added comments.
Added `cf_callback_mode_plugindir' to allow the config file to change the plugin directory.",210,data/crawl/collectd/hunk_548.cpp,,,data/crawl/collectd/old_hunk_548.cpp,data/crawl/collectd/new_hunk_548.cpp,14,20,"fprintf (stderr, ERR_NOT_NESTED);","fprintf (stderr, ERR_NEEDS_SECTION, shortvar);","[""updateVariable"", ""addVariable""]","[[""ERR_NOT_NESTED""], [""ERR_NEEDS_SECTION"", ""shortvar""]]",[7195636506681722910],574
https://github.com/collectd/collectd/commit/424db8460223d3fb13cf96ba0e93b246c74639dc,20 Dec 2005,"Changed `plugin_set_dir' to take a `const' argument.
Reorganized the `configfile.c' file. Changed callback names, their order and added comments.
Added `cf_callback_mode_plugindir' to allow the config file to change the plugin directory.",210,data/crawl/collectd/hunk_547.cpp,,,data/crawl/collectd/old_hunk_547.cpp,data/crawl/collectd/new_hunk_547.cpp,-1,60,,"fprintf (stderr, ERR_SECTION_ONLY, shortvar);","[""addLog""]","[[], [""fprintf"", ""stderr"", ""ERR_SECTION_ONLY"", ""shortvar""]]",[-17317328203833019531],573
https://github.com/collectd/collectd/commit/424db8460223d3fb13cf96ba0e93b246c74639dc,20 Dec 2005,"Changed `plugin_set_dir' to take a `const' argument.
Reorganized the `configfile.c' file. Changed callback names, their order and added comments.
Added `cf_callback_mode_plugindir' to allow the config file to change the plugin directory.",210,data/crawl/collectd/hunk_547.cpp,,,data/crawl/collectd/old_hunk_547.cpp,data/crawl/collectd/new_hunk_547.cpp,-1,32,,"fprintf (stderr, ERR_NEEDS_ARG, shortvar);","[""addLog""]","[[], [""fprintf"", ""stderr"", ""ERR_NEEDS_ARG"", ""shortvar""]]",[-17035135711402455970],572
https://github.com/collectd/collectd/commit/424db8460223d3fb13cf96ba0e93b246c74639dc,20 Dec 2005,"Changed `plugin_set_dir' to take a `const' argument.
Reorganized the `configfile.c' file. Changed callback names, their order and added comments.
Added `cf_callback_mode_plugindir' to allow the config file to change the plugin directory.",210,data/crawl/collectd/hunk_547.cpp,,,data/crawl/collectd/old_hunk_547.cpp,data/crawl/collectd/new_hunk_547.cpp,-1,26,,"fprintf (stderr, ERR_NOT_NESTED);","[""addLog""]","[[], [""fprintf"", ""stderr"", ""ERR_NOT_NESTED""]]",[-22592359931818281405],571
https://github.com/collectd/collectd/commit/0334d1bf754bf285668cdbc4243a972495f25dd7,08 Jan 2006,"Moved `exit_usage' from `collectd.c' to `configfile.c' and renamed it to `cf_callback_usage'.
Removed the `getopt' code. Argument parsing is now done by `libconfig' as well.
Fixed a typo in `collectd.c' which prevented collectd from catching a SIGINT..",230,data/crawl/collectd/hunk_546.cpp,,,data/crawl/collectd/old_hunk_546.cpp,data/crawl/collectd/new_hunk_546.cpp,-1,10,,"printf (""Usage: ""PACKAGE"" [OPTIONS]\n\n""

""Available options:\n""
#if COLLECT_DAEMON
""    -P <file>       PID file.\n""
""                    Default: ""PIDFILE""\n""
#endif
""    -M <dir>        Module/Plugin directory.\n""
""                    Default: ""PLUGINDIR""\n""
""    -D <dir>        Data storage directory.\n""
""                    Default: ""PKGLOCALSTATEDIR""\n""
#if COLLECT_DEBUG
""    -L <file>       Log file.\n""
""                    Default: ""LOGFILE""\n""
#endif
#if COLLECT_DAEMON
""    -f              Don't fork to the background.\n""
#endif
#if HAVE_LIBRRD
""    -l              Start in local mode (no network).\n""
""    -c              Start in client (sender) mode.\n""
""    -s              Start in server (listener) mode.\n""
#endif /* HAVE_LIBRRD */
#if COLLECT_PING
""  Ping:\n""
""    -p <host>       Host to ping periodically, may be repeated to ping\n""
""                    more than one host.\n""
#endif /* COLLECT_PING */
""\n""PACKAGE"" ""VERSION"", http://verplant.org/collectd/\n""
""by Florian octo Forster <octo@verplant.org>\n""
""for contributions see `AUTHORS'\n"");","[""addLog""]","[[], [""printf"", ""Usage"", ""PACKAGE"", ""[OPTIONS]\\n\\n"", ""Available"", ""options"", ""\\n"", ""if"", ""COLLECT_DAEMON"", ""P"", ""file"", ""PID"", ""file"", ""\\n"", ""Default"", ""PIDFILE"", ""\\n"", ""endif"", ""M"", ""dir"", ""Module/Plugin"", ""directory"", ""\\n"", ""Default"", ""PLUGINDIR"", ""\\n"", ""D"", ""dir"", ""Data"", ""storage"", ""directory"", ""\\n"", ""Default"", ""PKGLOCALSTATEDIR"", ""\\n"", ""if"", ""COLLECT_DEBUG"", ""L"", ""file"", ""Log"", ""file"", ""\\n"", ""Default"", ""LOGFILE"", ""\\n"", ""endif"", ""if"", ""COLLECT_DAEMON"", ""f"", ""Don"", ""t"", ""fork"", ""to"", ""the"", ""background"", ""\\n"", ""endif"", ""if"", ""HAVE_LIBRRD"", ""l"", ""Start"", ""in"", ""local"", ""mode"", ""no"", ""network"", ""\\n"", ""c"", ""Start"", ""in"", ""client"", ""sender"", ""mode"", ""\\n"", ""s"", ""Start"", ""in"", ""server"", ""listener"", ""mode"", ""\\n"", ""endif"", ""/*"", ""HAVE_LIBRRD"", ""*/"", ""if"", ""COLLECT_PING"", ""Ping"", ""\\n"", ""p"", ""host"", ""Host"", ""to"", ""ping"", ""periodically"", ""may"", ""be"", ""repeated"", ""to"", ""ping\\n"", ""more"", ""than"", ""one"", ""host"", ""\\n"", ""endif"", ""/*"", ""COLLECT_PING"", ""*/"", ""\\n"", ""PACKAGE"", ""VERSION"", ""http"", ""//verplant"", ""org/collectd/\\n"", ""by"", ""Florian"", ""octo"", ""Forster"", ""octo"", ""verplant"", ""org"", ""\\n"", ""for"", ""contributions"", ""see"", ""AUTHORS"", ""\\n""]]",[-26256122083363697961],570
https://github.com/collectd/collectd/commit/0334d1bf754bf285668cdbc4243a972495f25dd7,08 Jan 2006,"Moved `exit_usage' from `collectd.c' to `configfile.c' and renamed it to `cf_callback_usage'.
Removed the `getopt' code. Argument parsing is now done by `libconfig' as well.
Fixed a typo in `collectd.c' which prevented collectd from catching a SIGINT..",230,data/crawl/collectd/hunk_545.cpp,,,data/crawl/collectd/old_hunk_545.cpp,data/crawl/collectd/new_hunk_545.cpp,-1,23,,"fprintf (stderr, ""Cannot obtain pidfile. This shoud not happen. Ever."");","[""addLog""]","[[], [""fprintf"", ""stderr"", ""Cannot"", ""obtain"", ""pidfile"", ""This"", ""shoud"", ""not"", ""happen"", ""Ever""]]",[-26763535434815430048],569
https://github.com/collectd/collectd/commit/0334d1bf754bf285668cdbc4243a972495f25dd7,08 Jan 2006,"Moved `exit_usage' from `collectd.c' to `configfile.c' and renamed it to `cf_callback_usage'.
Removed the `getopt' code. Argument parsing is now done by `libconfig' as well.
Fixed a typo in `collectd.c' which prevented collectd from catching a SIGINT..",230,data/crawl/collectd/hunk_545.cpp,,,data/crawl/collectd/old_hunk_545.cpp,data/crawl/collectd/new_hunk_545.cpp,-1,5,,"fprintf (stderr, ""Don't have a datadir to use. This should not happen. Ever."");","[""addLog""]","[[], [""fprintf"", ""stderr"", ""Don"", ""t"", ""have"", ""a"", ""datadir"", ""to"", ""use"", ""This"", ""should"", ""not"", ""happen"", ""Ever""]]",[-3158886143504195677],568
https://github.com/collectd/collectd/commit/0334d1bf754bf285668cdbc4243a972495f25dd7,08 Jan 2006,"Moved `exit_usage' from `collectd.c' to `configfile.c' and renamed it to `cf_callback_usage'.
Removed the `getopt' code. Argument parsing is now done by `libconfig' as well.
Fixed a typo in `collectd.c' which prevented collectd from catching a SIGINT..",230,data/crawl/collectd/hunk_544.cpp,,,data/crawl/collectd/old_hunk_544.cpp,data/crawl/collectd/new_hunk_544.cpp,68,-1,"fprintf (stderr, ""Maximum of %i ping hosts reached.\n"", MAX_PINGHOSTS);",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""Maximum"", ""of"", ""%i"", ""ping"", ""hosts"", ""reached"", ""\\n"", ""MAX_PINGHOSTS""], []]",[14163467735914568348],567
https://github.com/collectd/collectd/commit/0334d1bf754bf285668cdbc4243a972495f25dd7,08 Jan 2006,"Moved `exit_usage' from `collectd.c' to `configfile.c' and renamed it to `cf_callback_usage'.
Removed the `getopt' code. Argument parsing is now done by `libconfig' as well.
Fixed a typo in `collectd.c' which prevented collectd from catching a SIGINT..",230,data/crawl/collectd/hunk_543.cpp,,,data/crawl/collectd/old_hunk_543.cpp,data/crawl/collectd/new_hunk_543.cpp,5,-1,"printf (""Usage: ""PACKAGE"" [OPTIONS]\n\n""

""Available options:\n""
""  General:\n""
""    -C <file>       Configuration file.\n""
""                    Default: ""CONFIGFILE""\n""
#if COLLECT_DAEMON
""    -P <file>       PID file.\n""
""                    Default: ""PIDFILE""\n""
#endif
""    -M <dir>        Module/Plugin directory.\n""
""                    Default: ""PLUGINDIR""\n""
""    -D <dir>        Data storage directory.\n""
""                    Default: ""PKGLOCALSTATEDIR""\n""
#if COLLECT_DEBUG
""    -L <file>       Log file.\n""
""                    Default: ""LOGFILE""\n""
#endif
#if COLLECT_DAEMON
""    -f              Don't fork to the background.\n""
#endif
#if HAVE_LIBRRD
""    -l              Start in local mode (no network).\n""
""    -c              Start in client (sender) mode.\n""
""    -s              Start in server (listener) mode.\n""
#endif /* HAVE_LIBRRD */
#if COLLECT_PING
""  Ping:\n""
""    -p <host>       Host to ping periodically, may be repeated to ping\n""
""                    more than one host.\n""
#endif /* COLLECT_PING */
""\n""PACKAGE"" ""VERSION"", http://verplant.org/collectd/\n""
""by Florian octo Forster <octo@verplant.org>\n""
""for contributions see `AUTHORS'\n"");",,"[""removeLog""]","[[""printf"", ""Usage"", ""PACKAGE"", ""[OPTIONS]\\n\\n"", ""Available"", ""options"", ""\\n"", ""General"", ""\\n"", ""C"", ""file"", ""Configuration"", ""file"", ""\\n"", ""Default"", ""CONFIGFILE"", ""\\n"", ""if"", ""COLLECT_DAEMON"", ""P"", ""file"", ""PID"", ""file"", ""\\n"", ""Default"", ""PIDFILE"", ""\\n"", ""endif"", ""M"", ""dir"", ""Module/Plugin"", ""directory"", ""\\n"", ""Default"", ""PLUGINDIR"", ""\\n"", ""D"", ""dir"", ""Data"", ""storage"", ""directory"", ""\\n"", ""Default"", ""PKGLOCALSTATEDIR"", ""\\n"", ""if"", ""COLLECT_DEBUG"", ""L"", ""file"", ""Log"", ""file"", ""\\n"", ""Default"", ""LOGFILE"", ""\\n"", ""endif"", ""if"", ""COLLECT_DAEMON"", ""f"", ""Don"", ""t"", ""fork"", ""to"", ""the"", ""background"", ""\\n"", ""endif"", ""if"", ""HAVE_LIBRRD"", ""l"", ""Start"", ""in"", ""local"", ""mode"", ""no"", ""network"", ""\\n"", ""c"", ""Start"", ""in"", ""client"", ""sender"", ""mode"", ""\\n"", ""s"", ""Start"", ""in"", ""server"", ""listener"", ""mode"", ""\\n"", ""endif"", ""/*"", ""HAVE_LIBRRD"", ""*/"", ""if"", ""COLLECT_PING"", ""Ping"", ""\\n"", ""p"", ""host"", ""Host"", ""to"", ""ping"", ""periodically"", ""may"", ""be"", ""repeated"", ""to"", ""ping\\n"", ""more"", ""than"", ""one"", ""host"", ""\\n"", ""endif"", ""/*"", ""COLLECT_PING"", ""*/"", ""\\n"", ""PACKAGE"", ""VERSION"", ""http"", ""//verplant"", ""org/collectd/\\n"", ""by"", ""Florian"", ""octo"", ""Forster"", ""octo"", ""verplant"", ""org"", ""\\n"", ""for"", ""contributions"", ""see"", ""AUTHORS"", ""\\n""], []]",[28977564804879155023],566
https://github.com/collectd/collectd/commit/3cf46d9689f6fae30e19f3898852083003862552,15 Jan 2006,"Fixed a but in the mysql module, so it builds as write-only module, too.
Shorted the command line options to `help' and `dont fork' only.
Brought `getopt' back: `libconfig' doesn't do what I want: Command line options are evaluated after config files. So I don't know what mode the daemon will be in when parsing the file. That's why I moved everything into the config file.
Removed `cf_callback_usage' again.
Changed `cf_read' to not need `argc' and `argv' anymore..",209,data/crawl/collectd/hunk_541.cpp,,,data/crawl/collectd/old_hunk_541.cpp,data/crawl/collectd/new_hunk_541.cpp,41,11,"fprintf (stderr, ERR_SECTION_ONLY, shortvar);","syslog (LOG_ERR, ""Invalid value for config option `Mode': `%s'"", value);","[""updateVariable"", ""updateLog"", ""removeVariable"", ""addContent""]","[[""fprintf"", ""stderr"", ""ERR_SECTION_ONLY"", ""shortvar""], [""syslog"", ""LOG_ERR"", ""Invalid"", ""value"", ""for"", ""config"", ""option"", ""Mode"", ""%s"", ""value""]]",[-10447825302057285655],565
https://github.com/collectd/collectd/commit/3cf46d9689f6fae30e19f3898852083003862552,15 Jan 2006,"Fixed a but in the mysql module, so it builds as write-only module, too.
Shorted the command line options to `help' and `dont fork' only.
Brought `getopt' back: `libconfig' doesn't do what I want: Command line options are evaluated after config files. So I don't know what mode the daemon will be in when parsing the file. That's why I moved everything into the config file.
Removed `cf_callback_usage' again.
Changed `cf_read' to not need `argc' and `argv' anymore..",209,data/crawl/collectd/hunk_540.cpp,,,data/crawl/collectd/old_hunk_540.cpp,data/crawl/collectd/new_hunk_540.cpp,10,-1,"printf (""Usage: ""PACKAGE"" [OPTIONS]\n\n""

""Available options:\n""
#if COLLECT_DAEMON
""    -P <file>       PID file.\n""
""                    Default: ""PIDFILE""\n""
#endif
""    -M <dir>        Module/Plugin directory.\n""
""                    Default: ""PLUGINDIR""\n""
""    -D <dir>        Data storage directory.\n""
""                    Default: ""PKGLOCALSTATEDIR""\n""
#if COLLECT_DEBUG
""    -L <file>       Log file.\n""
""                    Default: ""LOGFILE""\n""
#endif
#if COLLECT_DAEMON
""    -f              Don't fork to the background.\n""
#endif
#if HAVE_LIBRRD
""    -l              Start in local mode (no network).\n""
""    -c              Start in client (sender) mode.\n""
""    -s              Start in server (listener) mode.\n""
#endif /* HAVE_LIBRRD */
#if COLLECT_PING
""  Ping:\n""
""    -p <host>       Host to ping periodically, may be repeated to ping\n""
""                    more than one host.\n""
#endif /* COLLECT_PING */
""\n""PACKAGE"" ""VERSION"", http://verplant.org/collectd/\n""
""by Florian octo Forster <octo@verplant.org>\n""
""for contributions see `AUTHORS'\n"");",,"[""removeLog""]","[[""printf"", ""Usage"", ""PACKAGE"", ""[OPTIONS]\\n\\n"", ""Available"", ""options"", ""\\n"", ""if"", ""COLLECT_DAEMON"", ""P"", ""file"", ""PID"", ""file"", ""\\n"", ""Default"", ""PIDFILE"", ""\\n"", ""endif"", ""M"", ""dir"", ""Module/Plugin"", ""directory"", ""\\n"", ""Default"", ""PLUGINDIR"", ""\\n"", ""D"", ""dir"", ""Data"", ""storage"", ""directory"", ""\\n"", ""Default"", ""PKGLOCALSTATEDIR"", ""\\n"", ""if"", ""COLLECT_DEBUG"", ""L"", ""file"", ""Log"", ""file"", ""\\n"", ""Default"", ""LOGFILE"", ""\\n"", ""endif"", ""if"", ""COLLECT_DAEMON"", ""f"", ""Don"", ""t"", ""fork"", ""to"", ""the"", ""background"", ""\\n"", ""endif"", ""if"", ""HAVE_LIBRRD"", ""l"", ""Start"", ""in"", ""local"", ""mode"", ""no"", ""network"", ""\\n"", ""c"", ""Start"", ""in"", ""client"", ""sender"", ""mode"", ""\\n"", ""s"", ""Start"", ""in"", ""server"", ""listener"", ""mode"", ""\\n"", ""endif"", ""/*"", ""HAVE_LIBRRD"", ""*/"", ""if"", ""COLLECT_PING"", ""Ping"", ""\\n"", ""p"", ""host"", ""Host"", ""to"", ""ping"", ""periodically"", ""may"", ""be"", ""repeated"", ""to"", ""ping\\n"", ""more"", ""than"", ""one"", ""host"", ""\\n"", ""endif"", ""/*"", ""COLLECT_PING"", ""*/"", ""\\n"", ""PACKAGE"", ""VERSION"", ""http"", ""//verplant"", ""org/collectd/\\n"", ""by"", ""Florian"", ""octo"", ""Forster"", ""octo"", ""verplant"", ""org"", ""\\n"", ""for"", ""contributions"", ""see"", ""AUTHORS"", ""\\n""], []]",[26256122083363697961],564
https://github.com/collectd/collectd/commit/3cf46d9689f6fae30e19f3898852083003862552,15 Jan 2006,"Fixed a but in the mysql module, so it builds as write-only module, too.
Shorted the command line options to `help' and `dont fork' only.
Brought `getopt' back: `libconfig' doesn't do what I want: Command line options are evaluated after config files. So I don't know what mode the daemon will be in when parsing the file. That's why I moved everything into the config file.
Removed `cf_callback_usage' again.
Changed `cf_read' to not need `argc' and `argv' anymore..",209,data/crawl/collectd/hunk_538.cpp,,,data/crawl/collectd/old_hunk_538.cpp,data/crawl/collectd/new_hunk_538.cpp,-1,8,,"printf (""Usage: ""PACKAGE"" [OPTIONS]\n\n""

""Available options:\n""
""  General:\n""
""    -C <file>       Configuration file.\n""
""                    Default: ""CONFIGFILE""\n""
#if COLLECT_DAEMON
""    -f              Don't fork to the background.\n""
#endif
""\n""PACKAGE"" ""VERSION"", http://verplant.org/collectd/\n""
""by Florian octo Forster <octo@verplant.org>\n""
""for contributions see `AUTHORS'\n"");","[""addLog""]","[[], [""printf"", ""Usage"", ""PACKAGE"", ""[OPTIONS]\\n\\n"", ""Available"", ""options"", ""\\n"", ""General"", ""\\n"", ""C"", ""file"", ""Configuration"", ""file"", ""\\n"", ""Default"", ""CONFIGFILE"", ""\\n"", ""if"", ""COLLECT_DAEMON"", ""f"", ""Don"", ""t"", ""fork"", ""to"", ""the"", ""background"", ""\\n"", ""endif"", ""\\n"", ""PACKAGE"", ""VERSION"", ""http"", ""//verplant"", ""org/collectd/\\n"", ""by"", ""Florian"", ""octo"", ""Forster"", ""octo"", ""verplant"", ""org"", ""\\n"", ""for"", ""contributions"", ""see"", ""AUTHORS"", ""\\n""]]",[-18367207688566536590],563
https://github.com/collectd/collectd/commit/49275db235fdaa85f3bf82a25ca5e530f65448db,30 Jan 2006,Cleaned up `configfile.c',57,data/crawl/collectd/hunk_537.cpp,,,data/crawl/collectd/old_hunk_537.cpp,data/crawl/collectd/new_hunk_537.cpp,26,-1,"fprintf (stderr, ""cf_callback_mode_switch: Wrong mode!\n"");",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""cf_callback_mode_switch"", ""Wrong"", ""mode"", ""\\n""], []]",[9185422610594299454],562
https://github.com/collectd/collectd/commit/61d0abe95ab3c7461ca948fdc8824d08ad48cc6d,04 Feb 2006,Added the first version of an own ping library..,998,data/crawl/collectd/hunk_536.cpp,,,data/crawl/collectd/old_hunk_536.cpp,data/crawl/collectd/new_hunk_536.cpp,-1,51,,"printf (""host = %s, latency = %f\n"", host, latency);","[""addLog""]","[[], [""printf"", ""host"", ""%s"", ""latency"", ""%f\\n"", ""host"", ""latency""]]",[36792594960319281754],561
https://github.com/collectd/collectd/commit/61d0abe95ab3c7461ca948fdc8824d08ad48cc6d,04 Feb 2006,Added the first version of an own ping library..,998,data/crawl/collectd/hunk_536.cpp,,,data/crawl/collectd/old_hunk_536.cpp,data/crawl/collectd/new_hunk_536.cpp,-1,39,,"fprintf (stderr, ""ping_send failed\n"");","[""addLog""]","[[], [""fprintf"", ""stderr"", ""ping_send"", ""failed\\n""]]",[-15265858480462441565],560
https://github.com/collectd/collectd/commit/61d0abe95ab3c7461ca948fdc8824d08ad48cc6d,04 Feb 2006,Added the first version of an own ping library..,998,data/crawl/collectd/hunk_536.cpp,,,data/crawl/collectd/old_hunk_536.cpp,data/crawl/collectd/new_hunk_536.cpp,-1,30,,"fprintf (stderr, ""ping_host_add (verplant.org) failed\n"");","[""addLog""]","[[], [""fprintf"", ""stderr"", ""ping_host_add"", ""verplant"", ""org"", ""failed\\n""]]",[-16687066397870636518],559
https://github.com/collectd/collectd/commit/61d0abe95ab3c7461ca948fdc8824d08ad48cc6d,04 Feb 2006,Added the first version of an own ping library..,998,data/crawl/collectd/hunk_536.cpp,,,data/crawl/collectd/old_hunk_536.cpp,data/crawl/collectd/new_hunk_536.cpp,-1,26,,"printf (""Adding host `%s'..\n"", argv[i]);","[""addLog""]","[[], [""printf"", ""Adding"", ""host"", ""%s"", ""\\n"", ""argv[i]""]]",[7065638405185994760],558
https://github.com/collectd/collectd/commit/61d0abe95ab3c7461ca948fdc8824d08ad48cc6d,04 Feb 2006,Added the first version of an own ping library..,998,data/crawl/collectd/hunk_536.cpp,,,data/crawl/collectd/old_hunk_536.cpp,data/crawl/collectd/new_hunk_536.cpp,-1,20,,"fprintf (stderr, ""ping_construct failed\n"");","[""addLog""]","[[], [""fprintf"", ""stderr"", ""ping_construct"", ""failed\\n""]]",[-26986322679492551137],557
https://github.com/collectd/collectd/commit/61d0abe95ab3c7461ca948fdc8824d08ad48cc6d,04 Feb 2006,Added the first version of an own ping library..,998,data/crawl/collectd/hunk_536.cpp,,,data/crawl/collectd/old_hunk_536.cpp,data/crawl/collectd/new_hunk_536.cpp,-1,14,,"printf (""Usage: %s <host> [host [host [...]]]\n"", argv[0]);","[""addLog""]","[[], [""printf"", ""Usage"", ""%s"", ""host"", ""[host"", ""[host"", ""["", ""]]]\\n"", ""argv[0]""]]",[23047795257242398380],556
https://github.com/collectd/collectd/commit/daf3a589d4f4c47dabaf6f7f4a33fd7bb4140183,04 Apr 2006,Adds Mach/Darwin support for the cpu plugin. Also adds correcponding checks to configure.in,88,data/crawl/collectd/hunk_533.cpp,,,data/crawl/collectd/old_hunk_533.cpp,data/crawl/collectd/new_hunk_533.cpp,-1,8,,"fprintf (stderr, ""host_processors returned %i\n"", (int) status);","[""addLog""]","[[], [""fprintf"", ""stderr"", ""host_processors"", ""returned"", ""%i\\n"", ""int"", ""status""]]",[-25685817120980306052],555
https://github.com/collectd/collectd/commit/5001a461add250d65fbfb63c95beef4b8816cdc1,04 Apr 2006,Fixes so the cpu plugin compiles under Mac OS X,29,data/crawl/collectd/hunk_532.cpp,,,data/crawl/collectd/old_hunk_532.cpp,data/crawl/collectd/new_hunk_532.cpp,7,9,"fprintf (stderr, ""host_processors returned %i\n"", (int) status);","syslog (LOG_ERR, ""cpu-plugin: host_processors returned %i\n"", (int) status);","[""updateVariable"", ""updateLog"", ""updateContent""]","[[""fprintf"", ""stderr""], [""syslog"", ""LOG_ERR"", ""cpu"", ""plugin""]]",[10020149758328912692],554
https://github.com/collectd/collectd/commit/44cb6f804f46cc0a23968e27db129b86d058ac6e,13 Apr 2006,Applied patch by Christophe Kalt which adds the log-mode.,218,data/crawl/collectd/hunk_531.cpp,,,data/crawl/collectd/old_hunk_531.cpp,data/crawl/collectd/new_hunk_531.cpp,-1,121,,"fprintf(fp, ""%s\n"", values);","[""addLog""]","[[], [""fprintf"", ""fp"", ""%s\\n"", ""values""]]",[9117224867050697082],553
https://github.com/collectd/collectd/commit/44cb6f804f46cc0a23968e27db129b86d058ac6e,13 Apr 2006,Applied patch by Christophe Kalt which adds the log-mode.,218,data/crawl/collectd/hunk_531.cpp,,,data/crawl/collectd/old_hunk_531.cpp,data/crawl/collectd/new_hunk_531.cpp,-1,46,,"fprintf(log, ""\n"");","[""addLog""]","[[], [""fprintf"", ""log"", ""\\n""]]",[2320850761855448881],552
https://github.com/collectd/collectd/commit/44cb6f804f46cc0a23968e27db129b86d058ac6e,13 Apr 2006,Applied patch by Christophe Kalt which adds the log-mode.,218,data/crawl/collectd/hunk_531.cpp,,,data/crawl/collectd/old_hunk_531.cpp,data/crawl/collectd/new_hunk_531.cpp,-1,44,,"fprintf(log, ""%.*s"", (tmp - name), name);","[""addLog""]","[[], [""fprintf"", ""log"", ""%"", ""*s"", ""tmp"", ""name"", ""name""]]",[-7513937180789641386],551
https://github.com/collectd/collectd/commit/44cb6f804f46cc0a23968e27db129b86d058ac6e,13 Apr 2006,Applied patch by Christophe Kalt which adds the log-mode.,218,data/crawl/collectd/hunk_531.cpp,,,data/crawl/collectd/old_hunk_531.cpp,data/crawl/collectd/new_hunk_531.cpp,-1,43,,"fprintf (log, "":"");","[""addLog""]","[[], [""fprintf"", ""log""]]",[2309074691107342521],550
https://github.com/collectd/collectd/commit/3d57efd9b77ae9a5bd67efc4c8e4e5396ee0f600,14 Apr 2006,"Substituting colons with commas, to get comma seperated value (CSV) files.",37,data/crawl/collectd/hunk_530.cpp,,,data/crawl/collectd/old_hunk_530.cpp,data/crawl/collectd/new_hunk_530.cpp,5,-1,"fprintf(log, ""%.*s"", (tmp - name), name);",,"[""removeLog""]","[[""fprintf"", ""log"", ""%"", ""*s"", ""tmp"", ""name"", ""name""], []]",[7513937180789641386],549
https://github.com/collectd/collectd/commit/3d57efd9b77ae9a5bd67efc4c8e4e5396ee0f600,14 Apr 2006,"Substituting colons with commas, to get comma seperated value (CSV) files.",37,data/crawl/collectd/hunk_530.cpp,,,data/crawl/collectd/old_hunk_530.cpp,data/crawl/collectd/new_hunk_530.cpp,4,-1,"fprintf (log, "":"");",,"[""removeLog""]","[[""fprintf"", ""log""], []]",[-2309074691107342521],548
https://github.com/collectd/collectd/commit/148087def9520d4bd4a343761defefa5d06a3215,18 May 2006,Added `apcups.c' by Anthony Gialluca <tonyabg at charter.net>,827,data/crawl/collectd/hunk_523.cpp,,,data/crawl/collectd/old_hunk_523.cpp,data/crawl/collectd/new_hunk_523.cpp,-1,248,,"fprintf(stdout, ""%s"", buf);","[""addLog""]","[[], [""fprintf"", ""stdout"", ""%s"", ""buf""]]",[-13593901039167168299],547
https://github.com/collectd/collectd/commit/45edddd42012056e61fc167b1fcc8fa9455eac94,19 May 2006,"apcups.c:
- Improved the `do_pthreads_status' function to not have the same code 10 times (or so).",135,data/crawl/collectd/hunk_520.cpp,,,data/crawl/collectd/old_hunk_520.cpp,data/crawl/collectd/new_hunk_520.cpp,72,60,"fprintf(stdout,""  Value %s.\n"",tokptr);","syslog (LOG_WARNING, ""apcups plugin: Received unknown property from apcupsd: `%s' = %f"",
key, value);","[""updateVariable"", ""updateLog"", ""updateContent"", ""addVariable""]","[[""fprintf"", ""stdout"", ""Value"", ""\\n"", ""tokptr""], [""syslog"", ""LOG_WARNING"", ""apcups"", ""plugin"", ""Received"", ""unknown"", ""property"", ""from"", ""apcupsd"", ""%f"", ""key"", ""value""]]",[12246988701675100498],546
https://github.com/collectd/collectd/commit/45edddd42012056e61fc167b1fcc8fa9455eac94,19 May 2006,"apcups.c:
- Improved the `do_pthreads_status' function to not have the same code 10 times (or so).",135,data/crawl/collectd/hunk_520.cpp,,,data/crawl/collectd/old_hunk_520.cpp,data/crawl/collectd/new_hunk_520.cpp,33,40,"fprintf(stdout,""  Found BATTV.\n"");","PRINT_VALUE (key, value);","[""updateVariable"", ""updateLog"", ""removeContent"", ""addVariable""]","[[""fprintf"", ""stdout"", ""Found"", ""BATTV"", ""\\n""], [""PRINT_VALUE"", ""key"", ""value""]]",[26072407219371352282],545
https://github.com/collectd/collectd/commit/45edddd42012056e61fc167b1fcc8fa9455eac94,19 May 2006,"apcups.c:
- Improved the `do_pthreads_status' function to not have the same code 10 times (or so).",135,data/crawl/collectd/hunk_520.cpp,,,data/crawl/collectd/old_hunk_520.cpp,data/crawl/collectd/new_hunk_520.cpp,17,30,"fputs(recvline, stdout);","printf (""net_recv = `%s';\n"", recvline);","[""updateLog"", ""removeVariable"", ""addContent""]","[[""fputs"", ""stdout""], [""printf"", ""net_recv"", ""%s"", ""\\n""]]",[11173195878963687849],544
https://github.com/collectd/collectd/commit/00e902810c0b76e4e110c1b53dbb2931114ff927,20 May 2006,"branches/apcups/src/apcups.c:
  Restored changes made to the trunk.",377,data/crawl/collectd/hunk_517.cpp,,,data/crawl/collectd/old_hunk_517.cpp,data/crawl/collectd/new_hunk_517.cpp,18,-1,"fprintf(stdout,""  Found BATTV.\n"");",,"[""removeLog""]","[[""fprintf"", ""stdout"", ""Found"", ""BATTV"", ""\\n""], []]",[17383835269639032446],543
https://github.com/collectd/collectd/commit/00e902810c0b76e4e110c1b53dbb2931114ff927,20 May 2006,"branches/apcups/src/apcups.c:
  Restored changes made to the trunk.",377,data/crawl/collectd/hunk_516.cpp,,,data/crawl/collectd/old_hunk_516.cpp,data/crawl/collectd/new_hunk_516.cpp,50,-1,"fputs(recvline, stdout);",,"[""removeLog""]","[[""fputs"", ""recvline"", ""stdout""], []]",[17731199542179456442],542
https://github.com/collectd/collectd/commit/00e902810c0b76e4e110c1b53dbb2931114ff927,20 May 2006,"branches/apcups/src/apcups.c:
  Restored changes made to the trunk.",377,data/crawl/collectd/hunk_515.cpp,,,data/crawl/collectd/old_hunk_515.cpp,data/crawl/collectd/new_hunk_515.cpp,102,-1,"fprintf(stdout, ""%s"", buf);",,"[""removeLog""]","[[""fprintf"", ""stdout"", ""%s"", ""buf""], []]",[13593901039167168299],541
https://github.com/collectd/collectd/commit/db336a80e7f9e46170e637cc140756d35a90da66,22 May 2006,"1. (major) Code no longer calls exit() when it encounters an error. It
will send an appropriate error via syslog instead.

2. Adopted the code recommended by Octo (thx)  It was considerably cleaner
and easier to understand. Not to mention the plugin size is smaller. A win
all around ;-) I rearranged some, though.

3. Fixed the indentation. I believe I see what is recommended by octo....
Hopefully, it is now similar to the other plugins.

4. On a failure to connect apcups will log the initial failure via syslog. It will
only log another failure after the integer apcConnStatus rolls over. This should prevent
apcups from overloading syslog.

5. Other minor code cleanups.",376,data/crawl/collectd/hunk_514.cpp,,,data/crawl/collectd/old_hunk_514.cpp,data/crawl/collectd/new_hunk_514.cpp,32,64,"printf (""net_recv = `%s';\n"", recvline);","printf (""net_recv = \""%s\""\n"", recvline);","[""updateContent""]","[[""%s""], [""\\"", ""%s\\""]]",[-4775301831892644278],540
https://github.com/collectd/collectd/commit/29713f41f326a923dce84c2e1f8d581a893478b9,24 May 2006,Removed all the conflicts from the apcups-plugin again.,390,data/crawl/collectd/hunk_513.cpp,,,data/crawl/collectd/old_hunk_513.cpp,data/crawl/collectd/new_hunk_513.cpp,64,48,"printf (""net_recv = \""%s\""\n"", recvline);","printf (""net_recv = `%s';\n"", recvline);","[""updateContent""]","[[""\\"", ""%s\\""], [""%s""]]",[4775301831892644278],539
https://github.com/collectd/collectd/commit/09cc422eeae5dd0fa1e5f1f6b472b8c959b315d9,06 Jun 2006,"octo@leeloo:~/collectd $ svn merge -r737:784 branches/apcups trunk

The trunk did not compile with the `apcups' plugin enabled. Since it's enabled
by default some extra action was neccessary. The `apcups' plugin in the branch
compiles and may be useable, so I'm merging it back to get to some consistent
state.",851,data/crawl/collectd/hunk_510.cpp,,,data/crawl/collectd/old_hunk_510.cpp,data/crawl/collectd/new_hunk_510.cpp,34,44,"fprintf(stdout, ""%s"", buf);","syslog (LOG_ERR, ""apcups plugin: write failed: %s"", strerror (errno));","[""updateVariable"", ""updateLog"", ""updateContent"", ""addVariable""]","[[""fprintf"", ""stdout"", ""buf""], [""syslog"", ""LOG_ERR"", ""apcups"", ""plugin"", ""write"", ""failed"", ""strerror"", ""errno""]]",[31303738927929788407],538
https://github.com/collectd/collectd/commit/569a23ffadffa658bd7af8c58be6f36e4e8a6854,10 Jun 2006,octo@casella:~/collectd $ svn merge -r753:807 trunk branches/processes,2143,data/crawl/collectd/hunk_508.cpp,,,data/crawl/collectd/old_hunk_508.cpp,data/crawl/collectd/new_hunk_508.cpp,34,45,"fprintf(stdout, ""%s"", buf);","syslog (LOG_ERR, ""apcups plugin: Reading from socket failed failed: %s"", strerror (errno));","[""updateVariable"", ""updateLog"", ""updateContent"", ""addVariable""]","[[""fprintf"", ""stdout"", ""buf""], [""syslog"", ""LOG_ERR"", ""apcups"", ""plugin"", ""Reading"", ""from"", ""socket"", ""failed"", ""failed"", ""strerror"", ""errno""]]",[11493397621507233596],537
https://github.com/collectd/collectd/commit/1f8b06df4f907658bea49c47dd4e8329fdbc8099,25 Jun 2006,Copied missing files from the subversion repository.,2758,data/crawl/collectd/hunk_507.cpp,,,data/crawl/collectd/old_hunk_507.cpp,data/crawl/collectd/new_hunk_507.cpp,-1,220,,"fprintf( stderr, ""SSL_connect: want to %s more...\n"",
               ( problem == SSL_ERROR_WANT_READ) ? ""read"" : ""write"");","[""addLog""]","[[], [""fprintf"", ""stderr"", ""SSL_connect"", ""want"", ""to"", ""%s"", ""more"", ""\\n"", ""problem"", ""SSL_ERROR_WANT_READ"", ""read"", ""write""]]",[-7599227352028054656],536
https://github.com/collectd/collectd/commit/4302fb19fb2719b0dca2e02a9416d77c11ae6a12,25 Jun 2006,collectd-3.9: Removed `src/libping' since it's not used.,3082,data/crawl/collectd/hunk_506.cpp,,,data/crawl/collectd/old_hunk_506.cpp,data/crawl/collectd/new_hunk_506.cpp,220,-1,"fprintf( stderr, ""SSL_connect: want to %s more...\n"",
               ( problem == SSL_ERROR_WANT_READ) ? ""read"" : ""write"");",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""SSL_connect"", ""want"", ""to"", ""%s"", ""more"", ""\\n"", ""problem"", ""SSL_ERROR_WANT_READ"", ""read"", ""write""], []]",[7599227352028054656],535
https://github.com/collectd/collectd/commit/458fef2e95011c5ac9037f35421ee5262c4da42a,25 Jun 2006,"configfile: Be more verbose if the `Server' or `Local' modes are not available.

This happends if not linking against librrd. Some people missed the summary at
the end of the configure script and the error message wasn't helping them.",21,data/crawl/collectd/hunk_504.cpp,,,data/crawl/collectd/old_hunk_504.cpp,data/crawl/collectd/new_hunk_504.cpp,-1,16,,"fprintf (stderr, ""Invalid mode `Local': ""
""You need to link against librrd for this ""
""mode to be available.\n"");","[""addLog""]","[[], [""fprintf"", ""stderr"", ""Invalid"", ""mode"", ""Local"", ""You"", ""need"", ""to"", ""link"", ""against"", ""librrd"", ""for"", ""this"", ""mode"", ""to"", ""be"", ""available"", ""\\n""]]",[-41477224234303824728],534
https://github.com/collectd/collectd/commit/458fef2e95011c5ac9037f35421ee5262c4da42a,25 Jun 2006,"configfile: Be more verbose if the `Server' or `Local' modes are not available.

This happends if not linking against librrd. Some people missed the summary at
the end of the configure script and the error message wasn't helping them.",21,data/crawl/collectd/hunk_504.cpp,,,data/crawl/collectd/old_hunk_504.cpp,data/crawl/collectd/new_hunk_504.cpp,-1,6,,"fprintf (stderr, ""Invalid mode `Server': ""
""You need to link against librrd for this ""
""mode to be available.\n"");","[""addLog""]","[[], [""fprintf"", ""stderr"", ""Invalid"", ""mode"", ""Server"", ""You"", ""need"", ""to"", ""link"", ""against"", ""librrd"", ""for"", ""this"", ""mode"", ""to"", ""be"", ""available"", ""\\n""]]",[-39899109059292188965],533
https://github.com/collectd/collectd/commit/1e7b5f4e249a6c30ef39dcba63dca317fc89e314,03 Oct 2006,Added a first rough draft of the new named plugin.,1720,data/crawl/collectd/hunk_503.cpp,,,data/crawl/collectd/old_hunk_503.cpp,data/crawl/collectd/new_hunk_503.cpp,-1,1215,,"fprintf(stderr, ""\trfc1918-ptr\n"");","[""addLog""]","[[], [""fprintf"", ""stderr"", ""\\trfc1918"", ""ptr\\n""]]",[-20018988526605390582],532
https://github.com/collectd/collectd/commit/1e7b5f4e249a6c30ef39dcba63dca317fc89e314,03 Oct 2006,Added a first rough draft of the new named plugin.,1720,data/crawl/collectd/hunk_503.cpp,,,data/crawl/collectd/old_hunk_503.cpp,data/crawl/collectd/new_hunk_503.cpp,-1,1214,,"fprintf(stderr, ""\tA-for-A\n"");","[""addLog""]","[[], [""fprintf"", ""stderr"", ""\\tA"", ""for"", ""A\\n""]]",[-9566416096504156030],531
https://github.com/collectd/collectd/commit/1e7b5f4e249a6c30ef39dcba63dca317fc89e314,03 Oct 2006,Added a first rough draft of the new named plugin.,1720,data/crawl/collectd/hunk_503.cpp,,,data/crawl/collectd/old_hunk_503.cpp,data/crawl/collectd/new_hunk_503.cpp,-1,1213,,"fprintf(stderr, ""\tunknown-tlds\n"");","[""addLog""]","[[], [""fprintf"", ""stderr"", ""\\tunknown"", ""tlds\\n""]]",[-12705658578164953812],530
https://github.com/collectd/collectd/commit/1e7b5f4e249a6c30ef39dcba63dca317fc89e314,03 Oct 2006,Added a first rough draft of the new named plugin.,1720,data/crawl/collectd/hunk_503.cpp,,,data/crawl/collectd/old_hunk_503.cpp,data/crawl/collectd/new_hunk_503.cpp,-1,1212,,"fprintf(stderr, ""Available filters:\n"");","[""addLog""]","[[], [""fprintf"", ""stderr"", ""Available"", ""filters"", ""\\n""]]",[-28808944562226249896],529
https://github.com/collectd/collectd/commit/1e7b5f4e249a6c30ef39dcba63dca317fc89e314,03 Oct 2006,Added a first rough draft of the new named plugin.,1720,data/crawl/collectd/hunk_503.cpp,,,data/crawl/collectd/old_hunk_503.cpp,data/crawl/collectd/new_hunk_503.cpp,-1,1211,,"fprintf(stderr, ""\n"");","[""addLog""]","[[], [""fprintf"", ""stderr"", ""\\n""]]",[-13913879213697345406],528
https://github.com/collectd/collectd/commit/1e7b5f4e249a6c30ef39dcba63dca317fc89e314,03 Oct 2006,Added a first rough draft of the new named plugin.,1720,data/crawl/collectd/hunk_503.cpp,,,data/crawl/collectd/old_hunk_503.cpp,data/crawl/collectd/new_hunk_503.cpp,-1,1210,,"fprintf(stderr, ""\t-f\tfilter-name\n"");","[""addLog""]","[[], [""fprintf"", ""stderr"", ""\\t"", ""f\\tfilter"", ""name\\n""]]",[-9784980648419331802],527
https://github.com/collectd/collectd/commit/1e7b5f4e249a6c30ef39dcba63dca317fc89e314,03 Oct 2006,Added a first rough draft of the new named plugin.,1720,data/crawl/collectd/hunk_503.cpp,,,data/crawl/collectd/old_hunk_503.cpp,data/crawl/collectd/new_hunk_503.cpp,-1,1209,,"fprintf(stderr, ""\t-t\tEnable 3nd level domain stats collection\n"");","[""addLog""]","[[], [""fprintf"", ""stderr"", ""\\t"", ""t\\tEnable"", ""3nd"", ""level"", ""domain"", ""stats"", ""collection\\n""]]",[-3467545221131624995],526
https://github.com/collectd/collectd/commit/1e7b5f4e249a6c30ef39dcba63dca317fc89e314,03 Oct 2006,Added a first rough draft of the new named plugin.,1720,data/crawl/collectd/hunk_503.cpp,,,data/crawl/collectd/old_hunk_503.cpp,data/crawl/collectd/new_hunk_503.cpp,-1,1208,,"fprintf(stderr, ""\t-s\tEnable 2nd level domain stats collection\n"");","[""addLog""]","[[], [""fprintf"", ""stderr"", ""\\t"", ""s\\tEnable"", ""2nd"", ""level"", ""domain"", ""stats"", ""collection\\n""]]",[9381738084273626753],525
https://github.com/collectd/collectd/commit/1e7b5f4e249a6c30ef39dcba63dca317fc89e314,03 Oct 2006,Added a first rough draft of the new named plugin.,1720,data/crawl/collectd/hunk_503.cpp,,,data/crawl/collectd/old_hunk_503.cpp,data/crawl/collectd/new_hunk_503.cpp,-1,1207,,"fprintf(stderr, ""\t-p\tDon't put interface in promiscuous mode\n"");","[""addLog""]","[[], [""fprintf"", ""stderr"", ""\\t"", ""p\\tDon"", ""t"", ""put"", ""interface"", ""in"", ""promiscuous"", ""mode\\n""]]",[-20650569432794014584],524
https://github.com/collectd/collectd/commit/1e7b5f4e249a6c30ef39dcba63dca317fc89e314,03 Oct 2006,Added a first rough draft of the new named plugin.,1720,data/crawl/collectd/hunk_503.cpp,,,data/crawl/collectd/old_hunk_503.cpp,data/crawl/collectd/new_hunk_503.cpp,-1,1206,,"fprintf(stderr, ""\t-i addr\tIgnore this source IP address\n"");","[""addLog""]","[[], [""fprintf"", ""stderr"", ""\\t"", ""i"", ""addr\\tIgnore"", ""this"", ""source"", ""IP"", ""address\\n""]]",[-4111043397220104416],523
https://github.com/collectd/collectd/commit/1e7b5f4e249a6c30ef39dcba63dca317fc89e314,03 Oct 2006,Added a first rough draft of the new named plugin.,1720,data/crawl/collectd/hunk_503.cpp,,,data/crawl/collectd/old_hunk_503.cpp,data/crawl/collectd/new_hunk_503.cpp,-1,1205,,"fprintf(stderr, ""\t-b expr\tBPF program code\n"");","[""addLog""]","[[], [""fprintf"", ""stderr"", ""\\t"", ""b"", ""expr\\tBPF"", ""program"", ""code\\n""]]",[-16735902411679147809],522
https://github.com/collectd/collectd/commit/1e7b5f4e249a6c30ef39dcba63dca317fc89e314,03 Oct 2006,Added a first rough draft of the new named plugin.,1720,data/crawl/collectd/hunk_503.cpp,,,data/crawl/collectd/old_hunk_503.cpp,data/crawl/collectd/new_hunk_503.cpp,-1,1204,,"fprintf(stderr, ""\t-a\tAnonymize IP Addrs\n"");","[""addLog""]","[[], [""fprintf"", ""stderr"", ""\\t"", ""a\\tAnonymize"", ""IP"", ""Addrs\\n""]]",[-29799887018628398005],521
https://github.com/collectd/collectd/commit/1e7b5f4e249a6c30ef39dcba63dca317fc89e314,03 Oct 2006,Added a first rough draft of the new named plugin.,1720,data/crawl/collectd/hunk_503.cpp,,,data/crawl/collectd/old_hunk_503.cpp,data/crawl/collectd/new_hunk_503.cpp,-1,1202,,"fprintf(stderr, ""usage: %s [opts] netdevice|savefile\n"",
progname);","[""addLog""]","[[], [""fprintf"", ""stderr"", ""usage"", ""%s"", ""[opts]"", ""netdevice"", ""savefile\\n"", ""progname""]]",[-9478127803602380628],520
https://github.com/collectd/collectd/commit/1e7b5f4e249a6c30ef39dcba63dca317fc89e314,03 Oct 2006,Added a first rough draft of the new named plugin.,1720,data/crawl/collectd/hunk_503.cpp,,,data/crawl/collectd/old_hunk_503.cpp,data/crawl/collectd/new_hunk_503.cpp,-1,698,,"fprintf (stderr, ""unsupported data link type %d\n"",
    pcap_datalink(pcap));","[""addLog""]","[[], [""fprintf"", ""stderr"", ""unsupported"", ""data"", ""link"", ""type"", ""%d\\n"", ""pcap_datalink"", ""pcap""]]",[-14972806216327984757],519
https://github.com/collectd/collectd/commit/c553f66cf2e21a1948125f30b8bd638d26701b41,20 Oct 2006,"named plugin: Many many more fixes to get the plugin working.

So far the QTypes are collected, and nothing else. But the core pcap-capturing
and communication over the pipe work now.",728,data/crawl/collectd/hunk_502.cpp,,,data/crawl/collectd/old_hunk_502.cpp,data/crawl/collectd/new_hunk_502.cpp,339,-1,"fprintf(stderr, ""\trfc1918-ptr\n"");",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""\\trfc1918"", ""ptr\\n""], []]",[20018988526605390582],518
https://github.com/collectd/collectd/commit/c553f66cf2e21a1948125f30b8bd638d26701b41,20 Oct 2006,"named plugin: Many many more fixes to get the plugin working.

So far the QTypes are collected, and nothing else. But the core pcap-capturing
and communication over the pipe work now.",728,data/crawl/collectd/hunk_502.cpp,,,data/crawl/collectd/old_hunk_502.cpp,data/crawl/collectd/new_hunk_502.cpp,338,-1,"fprintf(stderr, ""\tA-for-A\n"");",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""\\tA"", ""for"", ""A\\n""], []]",[9566416096504156030],517
https://github.com/collectd/collectd/commit/c553f66cf2e21a1948125f30b8bd638d26701b41,20 Oct 2006,"named plugin: Many many more fixes to get the plugin working.

So far the QTypes are collected, and nothing else. But the core pcap-capturing
and communication over the pipe work now.",728,data/crawl/collectd/hunk_502.cpp,,,data/crawl/collectd/old_hunk_502.cpp,data/crawl/collectd/new_hunk_502.cpp,337,-1,"fprintf(stderr, ""\tunknown-tlds\n"");",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""\\tunknown"", ""tlds\\n""], []]",[12705658578164953812],516
https://github.com/collectd/collectd/commit/c553f66cf2e21a1948125f30b8bd638d26701b41,20 Oct 2006,"named plugin: Many many more fixes to get the plugin working.

So far the QTypes are collected, and nothing else. But the core pcap-capturing
and communication over the pipe work now.",728,data/crawl/collectd/hunk_502.cpp,,,data/crawl/collectd/old_hunk_502.cpp,data/crawl/collectd/new_hunk_502.cpp,336,-1,"fprintf(stderr, ""Available filters:\n"");",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""Available"", ""filters"", ""\\n""], []]",[28808944562226249896],515
https://github.com/collectd/collectd/commit/c553f66cf2e21a1948125f30b8bd638d26701b41,20 Oct 2006,"named plugin: Many many more fixes to get the plugin working.

So far the QTypes are collected, and nothing else. But the core pcap-capturing
and communication over the pipe work now.",728,data/crawl/collectd/hunk_502.cpp,,,data/crawl/collectd/old_hunk_502.cpp,data/crawl/collectd/new_hunk_502.cpp,335,-1,"fprintf(stderr, ""\n"");",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""\\n""], []]",[13913879213697345406],514
https://github.com/collectd/collectd/commit/c553f66cf2e21a1948125f30b8bd638d26701b41,20 Oct 2006,"named plugin: Many many more fixes to get the plugin working.

So far the QTypes are collected, and nothing else. But the core pcap-capturing
and communication over the pipe work now.",728,data/crawl/collectd/hunk_502.cpp,,,data/crawl/collectd/old_hunk_502.cpp,data/crawl/collectd/new_hunk_502.cpp,334,-1,"fprintf(stderr, ""\t-f\tfilter-name\n"");",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""\\t"", ""f\\tfilter"", ""name\\n""], []]",[9784980648419331802],513
https://github.com/collectd/collectd/commit/c553f66cf2e21a1948125f30b8bd638d26701b41,20 Oct 2006,"named plugin: Many many more fixes to get the plugin working.

So far the QTypes are collected, and nothing else. But the core pcap-capturing
and communication over the pipe work now.",728,data/crawl/collectd/hunk_502.cpp,,,data/crawl/collectd/old_hunk_502.cpp,data/crawl/collectd/new_hunk_502.cpp,333,-1,"fprintf(stderr, ""\t-t\tEnable 3nd level domain stats collection\n"");",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""\\t"", ""t\\tEnable"", ""3nd"", ""level"", ""domain"", ""stats"", ""collection\\n""], []]",[3467545221131624995],512
https://github.com/collectd/collectd/commit/c553f66cf2e21a1948125f30b8bd638d26701b41,20 Oct 2006,"named plugin: Many many more fixes to get the plugin working.

So far the QTypes are collected, and nothing else. But the core pcap-capturing
and communication over the pipe work now.",728,data/crawl/collectd/hunk_502.cpp,,,data/crawl/collectd/old_hunk_502.cpp,data/crawl/collectd/new_hunk_502.cpp,332,-1,"fprintf(stderr, ""\t-s\tEnable 2nd level domain stats collection\n"");",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""\\t"", ""s\\tEnable"", ""2nd"", ""level"", ""domain"", ""stats"", ""collection\\n""], []]",[-9381738084273626753],511
https://github.com/collectd/collectd/commit/c553f66cf2e21a1948125f30b8bd638d26701b41,20 Oct 2006,"named plugin: Many many more fixes to get the plugin working.

So far the QTypes are collected, and nothing else. But the core pcap-capturing
and communication over the pipe work now.",728,data/crawl/collectd/hunk_502.cpp,,,data/crawl/collectd/old_hunk_502.cpp,data/crawl/collectd/new_hunk_502.cpp,331,-1,"fprintf(stderr, ""\t-p\tDon't put interface in promiscuous mode\n"");",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""\\t"", ""p\\tDon"", ""t"", ""put"", ""interface"", ""in"", ""promiscuous"", ""mode\\n""], []]",[20650569432794014584],510
https://github.com/collectd/collectd/commit/c553f66cf2e21a1948125f30b8bd638d26701b41,20 Oct 2006,"named plugin: Many many more fixes to get the plugin working.

So far the QTypes are collected, and nothing else. But the core pcap-capturing
and communication over the pipe work now.",728,data/crawl/collectd/hunk_502.cpp,,,data/crawl/collectd/old_hunk_502.cpp,data/crawl/collectd/new_hunk_502.cpp,330,-1,"fprintf(stderr, ""\t-i addr\tIgnore this source IP address\n"");",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""\\t"", ""i"", ""addr\\tIgnore"", ""this"", ""source"", ""IP"", ""address\\n""], []]",[4111043397220104416],509
https://github.com/collectd/collectd/commit/c553f66cf2e21a1948125f30b8bd638d26701b41,20 Oct 2006,"named plugin: Many many more fixes to get the plugin working.

So far the QTypes are collected, and nothing else. But the core pcap-capturing
and communication over the pipe work now.",728,data/crawl/collectd/hunk_502.cpp,,,data/crawl/collectd/old_hunk_502.cpp,data/crawl/collectd/new_hunk_502.cpp,329,-1,"fprintf(stderr, ""\t-b expr\tBPF program code\n"");",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""\\t"", ""b"", ""expr\\tBPF"", ""program"", ""code\\n""], []]",[16735902411679147809],508
https://github.com/collectd/collectd/commit/c553f66cf2e21a1948125f30b8bd638d26701b41,20 Oct 2006,"named plugin: Many many more fixes to get the plugin working.

So far the QTypes are collected, and nothing else. But the core pcap-capturing
and communication over the pipe work now.",728,data/crawl/collectd/hunk_502.cpp,,,data/crawl/collectd/old_hunk_502.cpp,data/crawl/collectd/new_hunk_502.cpp,328,-1,"fprintf(stderr, ""\t-a\tAnonymize IP Addrs\n"");",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""\\t"", ""a\\tAnonymize"", ""IP"", ""Addrs\\n""], []]",[29799887018628398005],507
https://github.com/collectd/collectd/commit/c553f66cf2e21a1948125f30b8bd638d26701b41,20 Oct 2006,"named plugin: Many many more fixes to get the plugin working.

So far the QTypes are collected, and nothing else. But the core pcap-capturing
and communication over the pipe work now.",728,data/crawl/collectd/hunk_502.cpp,,,data/crawl/collectd/old_hunk_502.cpp,data/crawl/collectd/new_hunk_502.cpp,326,-1,"fprintf(stderr, ""usage: %s [opts] netdevice|savefile\n"",
progname);",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""usage"", ""%s"", ""[opts]"", ""netdevice"", ""savefile\\n"", ""progname""], []]",[9478127803602380628],506
https://github.com/collectd/collectd/commit/c553f66cf2e21a1948125f30b8bd638d26701b41,20 Oct 2006,"named plugin: Many many more fixes to get the plugin working.

So far the QTypes are collected, and nothing else. But the core pcap-capturing
and communication over the pipe work now.",728,data/crawl/collectd/hunk_501.cpp,,,data/crawl/collectd/old_hunk_501.cpp,data/crawl/collectd/new_hunk_501.cpp,-1,3,,"fprintf (stderr, ""handle_pcap (udata = %p, hdr = %p, pkt = %p): hdr->caplen = %i\n"",
    (void *) udata, (void *) hdr, (void *) pkt,
    hdr->caplen);","[""addLog""]","[[], [""fprintf"", ""stderr"", ""handle_pcap"", ""udata"", ""%p"", ""hdr"", ""%p"", ""pkt"", ""%p"", ""hdr"", ""caplen"", ""%i\\n"", ""void"", ""*"", ""udata"", ""void"", ""*"", ""hdr"", ""void"", ""*"", ""pkt"", ""hdr"", ""caplen""]]",[-57375368178849067148],505
https://github.com/collectd/collectd/commit/c553f66cf2e21a1948125f30b8bd638d26701b41,20 Oct 2006,"named plugin: Many many more fixes to get the plugin working.

So far the QTypes are collected, and nothing else. But the core pcap-capturing
and communication over the pipe work now.",728,data/crawl/collectd/hunk_500.cpp,,,data/crawl/collectd/old_hunk_500.cpp,data/crawl/collectd/new_hunk_500.cpp,-1,3,,"fprintf (stderr, ""handle_ether (pkt = %p, len = %i)\n"",
    (void *) pkt, len);","[""addLog""]","[[], [""fprintf"", ""stderr"", ""handle_ether"", ""pkt"", ""%p"", ""len"", ""%i"", ""\\n"", ""void"", ""*"", ""pkt"", ""len""]]",[7255265543014213831],504
https://github.com/collectd/collectd/commit/c553f66cf2e21a1948125f30b8bd638d26701b41,20 Oct 2006,"named plugin: Many many more fixes to get the plugin working.

So far the QTypes are collected, and nothing else. But the core pcap-capturing
and communication over the pipe work now.",728,data/crawl/collectd/hunk_499.cpp,,,data/crawl/collectd/old_hunk_499.cpp,data/crawl/collectd/new_hunk_499.cpp,-1,3,,"fprintf (stderr, ""handle_ip (ip = %p, len = %i)\n"",
    (void *) ip, len);","[""addLog""]","[[], [""fprintf"", ""stderr"", ""handle_ip"", ""ip"", ""%p"", ""len"", ""%i"", ""\\n"", ""void"", ""*"", ""ip"", ""len""]]",[-9982880342515359323],503
https://github.com/collectd/collectd/commit/c553f66cf2e21a1948125f30b8bd638d26701b41,20 Oct 2006,"named plugin: Many many more fixes to get the plugin working.

So far the QTypes are collected, and nothing else. But the core pcap-capturing
and communication over the pipe work now.",728,data/crawl/collectd/hunk_498.cpp,,,data/crawl/collectd/old_hunk_498.cpp,data/crawl/collectd/new_hunk_498.cpp,-1,3,,"fprintf (stderr, ""handle_udp (udp = %p, len = %i)\n"",
    (void *) udp, len);","[""addLog""]","[[], [""fprintf"", ""stderr"", ""handle_udp"", ""udp"", ""%p"", ""len"", ""%i"", ""\\n"", ""void"", ""*"", ""udp"", ""len""]]",[-10219208904456798888],502
https://github.com/collectd/collectd/commit/c553f66cf2e21a1948125f30b8bd638d26701b41,20 Oct 2006,"named plugin: Many many more fixes to get the plugin working.

So far the QTypes are collected, and nothing else. But the core pcap-capturing
and communication over the pipe work now.",728,data/crawl/collectd/hunk_497.cpp,,,data/crawl/collectd/old_hunk_497.cpp,data/crawl/collectd/new_hunk_497.cpp,-1,3,,"fprintf (stderr, ""qtype = %hu\n"", qtype);","[""addLog""]","[[], [""fprintf"", ""stderr"", ""qtype"", ""%hu\\n"", ""qtype""]]",[-11098531609428595231],501
https://github.com/collectd/collectd/commit/c553f66cf2e21a1948125f30b8bd638d26701b41,20 Oct 2006,"named plugin: Many many more fixes to get the plugin working.

So far the QTypes are collected, and nothing else. But the core pcap-capturing
and communication over the pipe work now.",728,data/crawl/collectd/hunk_496.cpp,,,data/crawl/collectd/old_hunk_496.cpp,data/crawl/collectd/new_hunk_496.cpp,-1,3,,"fprintf (stderr, ""handle_dns (buf = %p, len = %i)\n"",
    (void *) buf, len);","[""addLog""]","[[], [""fprintf"", ""stderr"", ""handle_dns"", ""buf"", ""%p"", ""len"", ""%i"", ""\\n"", ""void"", ""*"", ""buf"", ""len""]]",[-4322602576697303812],500
https://github.com/collectd/collectd/commit/dba2d8d17d4ec56bcd3f74c1f13c378aceec7ab6,22 Oct 2006,"More improvements on the named/dns plugin.

The `dnstop.c' code now contains my IPv6 patch to capture IPv6 traffic. The
plugin captures both, queries and replies, and collects statistics
accordingly. This means that the qtype of queries and the rcode of replies are
collected. The plugin can now be configured to ignore certain sources, but
this functionality is to be improved.",997,data/crawl/collectd/hunk_490.cpp,,,data/crawl/collectd/old_hunk_490.cpp,data/crawl/collectd/new_hunk_490.cpp,3,-1,"fprintf (stderr, ""handle_ether (pkt = %p, len = %i)\n"",
    (void *) pkt, len);",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""handle_ether"", ""pkt"", ""%p"", ""len"", ""%i"", ""\\n"", ""void"", ""*"", ""pkt"", ""len""], []]",[-7255265543014213831],499
https://github.com/collectd/collectd/commit/dba2d8d17d4ec56bcd3f74c1f13c378aceec7ab6,22 Oct 2006,"More improvements on the named/dns plugin.

The `dnstop.c' code now contains my IPv6 patch to capture IPv6 traffic. The
plugin captures both, queries and replies, and collects statistics
accordingly. This means that the qtype of queries and the rcode of replies are
collected. The plugin can now be configured to ignore certain sources, but
this functionality is to be improved.",997,data/crawl/collectd/hunk_489.cpp,,,data/crawl/collectd/old_hunk_489.cpp,data/crawl/collectd/new_hunk_489.cpp,77,128,"fprintf (stderr, ""handle_ip (ip = %p, len = %i)\n"",
    (void *) ip, len);","(handle_ipv6 ((struct ip6_hdr *) ip, len);","[""addLog"", ""updateVariable"", ""updateLog"", ""removeVariable"", ""removeContent""]","[[""fprintf"", ""stderr"", ""handle_ip"", ""%p"", ""%i"", ""\\n"", ""void"", ""ip"", ""len""], [""handle_ipv6"", ""struct"", ""ip6_hdr""]]",[4463997330288149274],498
https://github.com/collectd/collectd/commit/dba2d8d17d4ec56bcd3f74c1f13c378aceec7ab6,22 Oct 2006,"More improvements on the named/dns plugin.

The `dnstop.c' code now contains my IPv6 patch to capture IPv6 traffic. The
plugin captures both, queries and replies, and collects statistics
accordingly. This means that the qtype of queries and the rcode of replies are
collected. The plugin can now be configured to ignore certain sources, but
this functionality is to be improved.",997,data/crawl/collectd/hunk_489.cpp,,,data/crawl/collectd/old_hunk_489.cpp,data/crawl/collectd/new_hunk_489.cpp,60,-1,"fprintf (stderr, ""handle_udp (udp = %p, len = %i)\n"",
    (void *) udp, len);",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""handle_udp"", ""udp"", ""%p"", ""len"", ""%i"", ""\\n"", ""void"", ""*"", ""udp"", ""len""], []]",[10219208904456798888],497
https://github.com/collectd/collectd/commit/dba2d8d17d4ec56bcd3f74c1f13c378aceec7ab6,22 Oct 2006,"More improvements on the named/dns plugin.

The `dnstop.c' code now contains my IPv6 patch to capture IPv6 traffic. The
plugin captures both, queries and replies, and collects statistics
accordingly. This means that the qtype of queries and the rcode of replies are
collected. The plugin can now be configured to ignore certain sources, but
this functionality is to be improved.",997,data/crawl/collectd/hunk_489.cpp,,,data/crawl/collectd/old_hunk_489.cpp,data/crawl/collectd/new_hunk_489.cpp,22,-1,"fprintf (stderr, ""qtype = %hu\n"", qtype);",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""qtype"", ""%hu\\n"", ""qtype""], []]",[11098531609428595231],496
https://github.com/collectd/collectd/commit/dba2d8d17d4ec56bcd3f74c1f13c378aceec7ab6,22 Oct 2006,"More improvements on the named/dns plugin.

The `dnstop.c' code now contains my IPv6 patch to capture IPv6 traffic. The
plugin captures both, queries and replies, and collects statistics
accordingly. This means that the qtype of queries and the rcode of replies are
collected. The plugin can now be configured to ignore certain sources, but
this functionality is to be improved.",997,data/crawl/collectd/hunk_488.cpp,,,data/crawl/collectd/old_hunk_488.cpp,data/crawl/collectd/new_hunk_488.cpp,-1,23,,"fprintf (stderr, ""Bytes 0, 1: 0x%04hx\n"", us);","[""addLog""]","[[], [""fprintf"", ""stderr"", ""Bytes"", ""0"", ""1"", ""0x%04hx\\n"", ""us""]]",[-18380210829333615289],495
https://github.com/collectd/collectd/commit/dba2d8d17d4ec56bcd3f74c1f13c378aceec7ab6,22 Oct 2006,"More improvements on the named/dns plugin.

The `dnstop.c' code now contains my IPv6 patch to capture IPv6 traffic. The
plugin captures both, queries and replies, and collects statistics
accordingly. This means that the qtype of queries and the rcode of replies are
collected. The plugin can now be configured to ignore certain sources, but
this functionality is to be improved.",997,data/crawl/collectd/hunk_488.cpp,,,data/crawl/collectd/old_hunk_488.cpp,data/crawl/collectd/new_hunk_488.cpp,37,-1,"fprintf (stderr, ""handle_dns (buf = %p, len = %i)\n"",
    (void *) buf, len);",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""handle_dns"", ""buf"", ""%p"", ""len"", ""%i"", ""\\n"", ""void"", ""*"", ""buf"", ""len""], []]",[4322602576697303812],494
https://github.com/collectd/collectd/commit/403e429f70e11ac11b6d5af174322b01e45b810a,20 Nov 2006,"src/utils_ignorelist.[ch]: Renamed some functions. Internal changes.

Mostly renamed variables, but also changed some return values and inserted
asserts where appropriate.",281,data/crawl/collectd/hunk_487.cpp,,,data/crawl/collectd/old_hunk_487.cpp,data/crawl/collectd/new_hunk_487.cpp,-1,12,,"fprintf (stderr, ""Cannot compile regex %s: %i"",
entry, rcompile);","[""addLog""]","[[], [""fprintf"", ""stderr"", ""Cannot"", ""compile"", ""regex"", ""%s"", ""%i"", ""entry"", ""rcompile""]]",[-16958954629611116755],493
https://github.com/collectd/collectd/commit/403e429f70e11ac11b6d5af174322b01e45b810a,20 Nov 2006,"src/utils_ignorelist.[ch]: Renamed some functions. Internal changes.

Mostly renamed variables, but also changed some return values and inserted
asserts where appropriate.",281,data/crawl/collectd/hunk_487.cpp,,,data/crawl/collectd/old_hunk_487.cpp,data/crawl/collectd/new_hunk_487.cpp,-1,5,,"fprintf (stderr, ""Cannot compile regex %s: %i/%s"",
entry, rcompile, regerr);","[""addLog""]","[[], [""fprintf"", ""stderr"", ""Cannot"", ""compile"", ""regex"", ""%s"", ""%i/%s"", ""entry"", ""rcompile"", ""regerr""]]",[-13335140678383872414],492
https://github.com/collectd/collectd/commit/5b9630d76f7a899633037045e753ebf0542ebbef,03 Dec 2006,"email plugin: Limit the `MaxConns' option by a hardcoded value.

Because typos (and ``typos'', i. e. dumb users) happen, it's better to not
allow INT_MAX connections. The problem is that on 32bit machines this would
 a) create 2147483648 threads
 b) allocate (at least) 512 GBytes of memory
which would result in certain death of either the daemon or the system.

This patch limits the number of connections (and thus threads and allocated
memory) to 16384, which ought to be enough for most people. Those, who need
more connections (and can accomplish this, even though there are quite narrow
OS limits) will need to recompile themselves.",14,data/crawl/collectd/hunk_486.cpp,,,data/crawl/collectd/old_hunk_486.cpp,data/crawl/collectd/new_hunk_486.cpp,-1,10,,"fprintf (stderr, ""email plugin: `MaxConns' was set to invalid ""
""value %li, will use hardcoded limit %i.\n"",
tmp, MAX_CONNS_LIMIT);","[""addLog""]","[[], [""fprintf"", ""stderr"", ""email"", ""plugin"", ""MaxConns"", ""was"", ""set"", ""to"", ""invalid"", ""value"", ""%li"", ""will"", ""use"", ""hardcoded"", ""limit"", ""%i"", ""\\n"", ""tmp"", ""MAX_CONNS_LIMIT""]]",[-69768681807302793848],491
https://github.com/collectd/collectd/commit/5b9630d76f7a899633037045e753ebf0542ebbef,03 Dec 2006,"email plugin: Limit the `MaxConns' option by a hardcoded value.

Because typos (and ``typos'', i. e. dumb users) happen, it's better to not
allow INT_MAX connections. The problem is that on 32bit machines this would
 a) create 2147483648 threads
 b) allocate (at least) 512 GBytes of memory
which would result in certain death of either the daemon or the system.

This patch limits the number of connections (and thus threads and allocated
memory) to 16384, which ought to be enough for most people. Those, who need
more connections (and can accomplish this, even though there are quite narrow
OS limits) will need to recompile themselves.",14,data/crawl/collectd/hunk_486.cpp,,,data/crawl/collectd/old_hunk_486.cpp,data/crawl/collectd/new_hunk_486.cpp,-1,4,,"fprintf (stderr, ""email plugin: `MaxConns' was set to invalid ""
""value %li, will use default %i.\n"",
tmp, MAX_CONNS);","[""addLog""]","[[], [""fprintf"", ""stderr"", ""email"", ""plugin"", ""MaxConns"", ""was"", ""set"", ""to"", ""invalid"", ""value"", ""%li"", ""will"", ""use"", ""default"", ""%i"", ""\\n"", ""tmp"", ""MAX_CONNS""]]",[-62499996622041268367],490
https://github.com/collectd/collectd/commit/19af98473c1468ad538d5d2b9246ca58c624a422,14 Jan 2007,"rrdtool plugin: Implemented caching of values to minimize IO operations.

Use the `CacheTimeout' option to enable this feature.",256,data/crawl/collectd/hunk_485.cpp,,,data/crawl/collectd/old_hunk_485.cpp,data/crawl/collectd/new_hunk_485.cpp,-1,37,,"fprintf (stderr, ""rrdtool: `CacheTimeout' must ""
""be greater than 0.\n"");","[""addLog""]","[[], [""fprintf"", ""stderr"", ""rrdtool"", ""CacheTimeout"", ""must"", ""be"", ""greater"", ""than"", ""0"", ""\\n""]]",[-25548600972884140983],489
https://github.com/collectd/collectd/commit/f5b4f424b9a0eb11c4cc98513971e1a3ddf40b3b,16 Jan 2007,"csv plugin: Added this plugin which writes to CSV files.

This is basically the old `logfile' functionality.",219,data/crawl/collectd/hunk_484.cpp,,,data/crawl/collectd/old_hunk_484.cpp,data/crawl/collectd/new_hunk_484.cpp,-1,194,,"fprintf (csv, ""%s\n"", values);","[""addLog""]","[[], [""fprintf"", ""csv"", ""%s\\n"", ""values""]]",[8305137492809961845],488
https://github.com/collectd/collectd/commit/f5b4f424b9a0eb11c4cc98513971e1a3ddf40b3b,16 Jan 2007,"csv plugin: Added this plugin which writes to CSV files.

This is basically the old `logfile' functionality.",219,data/crawl/collectd/hunk_484.cpp,,,data/crawl/collectd/old_hunk_484.cpp,data/crawl/collectd/new_hunk_484.cpp,-1,133,,"fprintf (csv, ""\n"");","[""addLog""]","[[], [""fprintf"", ""csv"", ""\\n""]]",[-5991393699364382265],487
https://github.com/collectd/collectd/commit/f5b4f424b9a0eb11c4cc98513971e1a3ddf40b3b,16 Jan 2007,"csv plugin: Added this plugin which writes to CSV files.

This is basically the old `logfile' functionality.",219,data/crawl/collectd/hunk_484.cpp,,,data/crawl/collectd/old_hunk_484.cpp,data/crawl/collectd/new_hunk_484.cpp,-1,131,,"fprintf (csv, "",%s"", ds->ds[i].name);","[""addLog""]","[[], [""fprintf"", ""csv"", ""%s"", ""ds"", ""ds[i]"", ""name""]]",[-17333912753634924072],486
https://github.com/collectd/collectd/commit/f5b4f424b9a0eb11c4cc98513971e1a3ddf40b3b,16 Jan 2007,"csv plugin: Added this plugin which writes to CSV files.

This is basically the old `logfile' functionality.",219,data/crawl/collectd/hunk_484.cpp,,,data/crawl/collectd/old_hunk_484.cpp,data/crawl/collectd/new_hunk_484.cpp,-1,129,,"fprintf (csv, ""epoch"");","[""addLog""]","[[], [""fprintf"", ""csv"", ""epoch""]]",[-14164750058648659711],485
https://github.com/collectd/collectd/commit/a163637d3ee97e553ea7024608deb5e2d9e3d9f3,16 Jan 2007,"src/common.c: Removed `log_update_file' and `log_create_file'.

Also changed the license to GPLv2-only and updated the copyright date.",188,data/crawl/collectd/hunk_483.cpp,,,data/crawl/collectd/old_hunk_483.cpp,data/crawl/collectd/new_hunk_483.cpp,130,-1,"fprintf(fp, ""%s\n"", values);",,"[""removeLog""]","[[""fprintf"", ""fp"", ""%s\\n"", ""values""], []]",[-9117224867050697082],484
https://github.com/collectd/collectd/commit/a163637d3ee97e553ea7024608deb5e2d9e3d9f3,16 Jan 2007,"src/common.c: Removed `log_update_file' and `log_create_file'.

Also changed the license to GPLv2-only and updated the copyright date.",188,data/crawl/collectd/hunk_483.cpp,,,data/crawl/collectd/old_hunk_483.cpp,data/crawl/collectd/new_hunk_483.cpp,50,-1,"fprintf(log, ""\n"");",,"[""removeLog""]","[[""fprintf"", ""log"", ""\\n""], []]",[-2320850761855448881],483
https://github.com/collectd/collectd/commit/a163637d3ee97e553ea7024608deb5e2d9e3d9f3,16 Jan 2007,"src/common.c: Removed `log_update_file' and `log_create_file'.

Also changed the license to GPLv2-only and updated the copyright date.",188,data/crawl/collectd/hunk_483.cpp,,,data/crawl/collectd/old_hunk_483.cpp,data/crawl/collectd/new_hunk_483.cpp,48,-1,"fprintf(log, "",%.*s"", (int) (tmp - name), name);",,"[""removeLog""]","[[""fprintf"", ""log"", ""%"", ""*s"", ""int"", ""tmp"", ""name"", ""name""], []]",[15069301551644406050],482
https://github.com/collectd/collectd/commit/a163637d3ee97e553ea7024608deb5e2d9e3d9f3,16 Jan 2007,"src/common.c: Removed `log_update_file' and `log_create_file'.

Also changed the license to GPLv2-only and updated the copyright date.",188,data/crawl/collectd/hunk_483.cpp,,,data/crawl/collectd/old_hunk_483.cpp,data/crawl/collectd/new_hunk_483.cpp,19,-1,"fprintf (log, ""epoch"");",,"[""removeLog""]","[[""fprintf"", ""log"", ""epoch""], []]",[5852505597428828565],481
https://github.com/collectd/collectd/commit/1f4c5bf162c41be72423020bfe61c9fabe5fea47,22 Jan 2007,apcups plugin: Converted to the new plugin interface.,290,data/crawl/collectd/hunk_482.cpp,,,data/crawl/collectd/old_hunk_482.cpp,data/crawl/collectd/new_hunk_482.cpp,31,-1,"printf(""apcups: Failed...\n"");",,"[""removeLog""]","[[""printf"", ""apcups"", ""Failed"", ""\\n""], []]",[-6517545720927913590],480
https://github.com/collectd/collectd/commit/86090b3d409634d016da7bbb0cbe43ed5a851d30,28 Jan 2007,"unixsock plugin: Added a first version of a UNIX-socket output plugin.

The goal is to build a nagios-interface on top of this.",670,data/crawl/collectd/hunk_481.cpp,,,data/crawl/collectd/old_hunk_481.cpp,data/crawl/collectd/new_hunk_481.cpp,-1,524,,"fprintf (fh, ""Unknown command: %s\n"", fields[0]);","[""addLog""]","[[], [""fprintf"", ""fh"", ""Unknown"", ""command"", ""%s\\n"", ""fields[0]""]]",[11358341822271838461],479
https://github.com/collectd/collectd/commit/86090b3d409634d016da7bbb0cbe43ed5a851d30,28 Jan 2007,"unixsock plugin: Added a first version of a UNIX-socket output plugin.

The goal is to build a nagios-interface on top of this.",670,data/crawl/collectd/hunk_481.cpp,,,data/crawl/collectd/old_hunk_481.cpp,data/crawl/collectd/new_hunk_481.cpp,-1,470,,"fprintf (fh, "" %12e"", vc->gauge[i]);","[""addLog""]","[[], [""fprintf"", ""fh"", ""%12e"", ""vc"", ""gauge[i]""]]",[-4401448308019413266],478
https://github.com/collectd/collectd/commit/86090b3d409634d016da7bbb0cbe43ed5a851d30,28 Jan 2007,"unixsock plugin: Added a first version of a UNIX-socket output plugin.

The goal is to build a nagios-interface on top of this.",670,data/crawl/collectd/hunk_481.cpp,,,data/crawl/collectd/old_hunk_481.cpp,data/crawl/collectd/new_hunk_481.cpp,-1,464,,"fprintf (fh, ""%i"", vc->values_num);","[""addLog""]","[[], [""fprintf"", ""fh"", ""%i"", ""vc"", ""values_num""]]",[-1683103745119756852],477
https://github.com/collectd/collectd/commit/f34da8f00133da85d1538f8bc7dd118f30f853ea,28 Jan 2007,unixsock plugin: Transmit the DS name so clients can chose which values they need.,38,data/crawl/collectd/hunk_480.cpp,,,data/crawl/collectd/old_hunk_480.cpp,data/crawl/collectd/new_hunk_480.cpp,-1,17,,"fprintf (fh, "" %s="", vc->ds->ds[i].name);","[""addLog""]","[[], [""fprintf"", ""fh"", ""%s"", ""vc"", ""ds"", ""ds[i]"", ""name""]]",[-16506721288652052616],476
https://github.com/collectd/collectd/commit/f34da8f00133da85d1538f8bc7dd118f30f853ea,28 Jan 2007,unixsock plugin: Transmit the DS name so clients can chose which values they need.,38,data/crawl/collectd/hunk_480.cpp,,,data/crawl/collectd/old_hunk_480.cpp,data/crawl/collectd/new_hunk_480.cpp,9,9,"fprintf (fh, "" NaN"");","fprintf (fh, ""-1 No such value"");","[""updateContent""]","[[""NaN""], [""1"", ""No"", ""such"", ""value""]]",[-15052626648985698062],475
https://github.com/collectd/collectd/commit/76c0a54209a25f62b1fe16d9b00b41dde5725ae0,28 Jan 2007,collectd-nagios: Added a small program to perform Nagios-compatible checks on values.,434,data/crawl/collectd/hunk_479.cpp,,,data/crawl/collectd/old_hunk_479.cpp,data/crawl/collectd/new_hunk_479.cpp,-1,367,,"printf (""%s=%lf\n"", values_names[i], values[i]);","[""addLog""]","[[], [""printf"", ""%s"", ""%lf\\n"", ""values_names[i]"", ""values[i]""]]",[10021821571151941386],474
https://github.com/collectd/collectd/commit/76c0a54209a25f62b1fe16d9b00b41dde5725ae0,28 Jan 2007,collectd-nagios: Added a small program to perform Nagios-compatible checks on values.,434,data/crawl/collectd/hunk_479.cpp,,,data/crawl/collectd/old_hunk_479.cpp,data/crawl/collectd/new_hunk_479.cpp,-1,362,,"fputs (""ERROR: Cannot get values from daemon\n"", stdout);","[""addLog""]","[[], [""fputs"", ""ERROR"", ""Cannot"", ""get"", ""values"", ""from"", ""daemon\\n"", ""stdout""]]",[4054770757192510359],473
https://github.com/collectd/collectd/commit/76c0a54209a25f62b1fe16d9b00b41dde5725ae0,28 Jan 2007,collectd-nagios: Added a small program to perform Nagios-compatible checks on values.,434,data/crawl/collectd/hunk_479.cpp,,,data/crawl/collectd/old_hunk_479.cpp,data/crawl/collectd/new_hunk_479.cpp,-1,346,,"printf (""OKAY: Sum = %lf\n"", total);","[""addLog""]","[[], [""printf"", ""OKAY"", ""Sum"", ""%lf\\n"", ""total""]]",[11945320714639408760],472
https://github.com/collectd/collectd/commit/76c0a54209a25f62b1fe16d9b00b41dde5725ae0,28 Jan 2007,collectd-nagios: Added a small program to perform Nagios-compatible checks on values.,434,data/crawl/collectd/hunk_479.cpp,,,data/crawl/collectd/old_hunk_479.cpp,data/crawl/collectd/new_hunk_479.cpp,-1,341,,"printf (""WARNING: Sum = %lf\n"", total);","[""addLog""]","[[], [""printf"", ""WARNING"", ""Sum"", ""%lf\\n"", ""total""]]",[7569237512138851399],471
https://github.com/collectd/collectd/commit/76c0a54209a25f62b1fe16d9b00b41dde5725ae0,28 Jan 2007,collectd-nagios: Added a small program to perform Nagios-compatible checks on values.,434,data/crawl/collectd/hunk_479.cpp,,,data/crawl/collectd/old_hunk_479.cpp,data/crawl/collectd/new_hunk_479.cpp,-1,336,,"printf (""CRITICAL: Sum = %lf\n"", total);","[""addLog""]","[[], [""printf"", ""CRITICAL"", ""Sum"", ""%lf\\n"", ""total""]]",[10764966033509964647],470
https://github.com/collectd/collectd/commit/76c0a54209a25f62b1fe16d9b00b41dde5725ae0,28 Jan 2007,collectd-nagios: Added a small program to perform Nagios-compatible checks on values.,434,data/crawl/collectd/hunk_479.cpp,,,data/crawl/collectd/old_hunk_479.cpp,data/crawl/collectd/new_hunk_479.cpp,-1,303,,"printf (""OKAY: Average = %lf\n"",
(double) (total / total_num));","[""addLog""]","[[], [""printf"", ""OKAY"", ""Average"", ""%lf\\n"", ""double"", ""total"", ""/"", ""total_num""]]",[5804691831304784053],469
https://github.com/collectd/collectd/commit/76c0a54209a25f62b1fe16d9b00b41dde5725ae0,28 Jan 2007,collectd-nagios: Added a small program to perform Nagios-compatible checks on values.,434,data/crawl/collectd/hunk_479.cpp,,,data/crawl/collectd/old_hunk_479.cpp,data/crawl/collectd/new_hunk_479.cpp,-1,297,,"printf (""WARNING: Average = %lf\n"",
(double) (total / total_num));","[""addLog""]","[[], [""printf"", ""WARNING"", ""Average"", ""%lf\\n"", ""double"", ""total"", ""/"", ""total_num""]]",[1428608628804226692],468
https://github.com/collectd/collectd/commit/76c0a54209a25f62b1fe16d9b00b41dde5725ae0,28 Jan 2007,collectd-nagios: Added a small program to perform Nagios-compatible checks on values.,434,data/crawl/collectd/hunk_479.cpp,,,data/crawl/collectd/old_hunk_479.cpp,data/crawl/collectd/new_hunk_479.cpp,-1,291,,"printf (""CRITICAL: Average = %lf\n"",
(double) (total / total_num));","[""addLog""]","[[], [""printf"", ""CRITICAL"", ""Average"", ""%lf\\n"", ""double"", ""total"", ""/"", ""total_num""]]",[4624337150175339940],467
https://github.com/collectd/collectd/commit/76c0a54209a25f62b1fe16d9b00b41dde5725ae0,28 Jan 2007,collectd-nagios: Added a small program to perform Nagios-compatible checks on values.,434,data/crawl/collectd/hunk_479.cpp,,,data/crawl/collectd/old_hunk_479.cpp,data/crawl/collectd/new_hunk_479.cpp,-1,259,,"printf (""OKAY: %i okay\n"", num_okay);","[""addLog""]","[[], [""printf"", ""OKAY"", ""%i"", ""okay\\n"", ""num_okay""]]",[4211129945492352894],466
https://github.com/collectd/collectd/commit/76c0a54209a25f62b1fe16d9b00b41dde5725ae0,28 Jan 2007,collectd-nagios: Added a small program to perform Nagios-compatible checks on values.,434,data/crawl/collectd/hunk_479.cpp,,,data/crawl/collectd/old_hunk_479.cpp,data/crawl/collectd/new_hunk_479.cpp,-1,253,,"printf (""WARNING: %i warning, %i okay\n"",
num_warning, num_okay);","[""addLog""]","[[], [""printf"", ""WARNING"", ""%i"", ""warning"", ""%i"", ""okay\\n"", ""num_warning"", ""num_okay""]]",[-12015013627968114694],465
https://github.com/collectd/collectd/commit/76c0a54209a25f62b1fe16d9b00b41dde5725ae0,28 Jan 2007,collectd-nagios: Added a small program to perform Nagios-compatible checks on values.,434,data/crawl/collectd/hunk_479.cpp,,,data/crawl/collectd/old_hunk_479.cpp,data/crawl/collectd/new_hunk_479.cpp,-1,247,,"printf (""CRITICAL: %i critical, %i warning, %i okay\n"",
num_critical, num_warning, num_okay);","[""addLog""]","[[], [""printf"", ""CRITICAL"", ""%i"", ""critical"", ""%i"", ""warning"", ""%i"", ""okay\\n"", ""num_critical"", ""num_warning"", ""num_okay""]]",[-13916131216364781427],464
https://github.com/collectd/collectd/commit/76c0a54209a25f62b1fe16d9b00b41dde5725ae0,28 Jan 2007,collectd-nagios: Added a small program to perform Nagios-compatible checks on values.,434,data/crawl/collectd/hunk_479.cpp,,,data/crawl/collectd/old_hunk_479.cpp,data/crawl/collectd/new_hunk_479.cpp,-1,214,,"fprintf (stderr, ""Usage: %s <-s socket> <-n value_spec> [options]\n""
""\n""
""Valid options are:\n""
"" -s <socket>   Path to collectd's UNIX-socket\n""
"" -n <v_spec>   Value specification to get from collectd\n""
"" -c <range>    Critical range\n""
"" -w <range>    Range for critical values\n"",
name);","[""addLog""]","[[], [""fprintf"", ""stderr"", ""Usage"", ""%s"", ""s"", ""socket"", ""n"", ""value_spec"", ""[options]\\n"", ""\\n"", ""Valid"", ""options"", ""are"", ""\\n"", ""s"", ""socket"", ""Path"", ""to"", ""collectd"", ""s"", ""UNIX"", ""socket\\n"", ""n"", ""v_spec"", ""Value"", ""specification"", ""to"", ""get"", ""from"", ""collectd\\n"", ""c"", ""range"", ""Critical"", ""range\\n"", ""w"", ""range"", ""Range"", ""for"", ""critical"", ""values\\n"", ""name""]]",[-16371788466779249903],463
https://github.com/collectd/collectd/commit/76c0a54209a25f62b1fe16d9b00b41dde5725ae0,28 Jan 2007,collectd-nagios: Added a small program to perform Nagios-compatible checks on values.,434,data/crawl/collectd/hunk_479.cpp,,,data/crawl/collectd/old_hunk_479.cpp,data/crawl/collectd/new_hunk_479.cpp,-1,153,,"fprintf (stderr, ""fgets failed: %s\n"",
strerror (errno));","[""addLog""]","[[], [""fprintf"", ""stderr"", ""fgets"", ""failed"", ""%s\\n"", ""strerror"", ""errno""]]",[-6804345028525243877],462
https://github.com/collectd/collectd/commit/76c0a54209a25f62b1fe16d9b00b41dde5725ae0,28 Jan 2007,collectd-nagios: Added a small program to perform Nagios-compatible checks on values.,434,data/crawl/collectd/hunk_479.cpp,,,data/crawl/collectd/old_hunk_479.cpp,data/crawl/collectd/new_hunk_479.cpp,-1,148,,"fprintf (fh, ""GETVAL %s\n"", value_string_g);","[""addLog""]","[[], [""fprintf"", ""fh"", ""GETVAL"", ""%s\\n"", ""value_string_g""]]",[-97118176142535566],461
https://github.com/collectd/collectd/commit/76c0a54209a25f62b1fe16d9b00b41dde5725ae0,28 Jan 2007,collectd-nagios: Added a small program to perform Nagios-compatible checks on values.,434,data/crawl/collectd/hunk_479.cpp,,,data/crawl/collectd/old_hunk_479.cpp,data/crawl/collectd/new_hunk_479.cpp,-1,142,,"fprintf (stderr, ""fdopen failed: %s\n"",
strerror (errno));","[""addLog""]","[[], [""fprintf"", ""stderr"", ""fdopen"", ""failed"", ""%s\\n"", ""strerror"", ""errno""]]",[2657833622063153835],460
https://github.com/collectd/collectd/commit/76c0a54209a25f62b1fe16d9b00b41dde5725ae0,28 Jan 2007,collectd-nagios: Added a small program to perform Nagios-compatible checks on values.,434,data/crawl/collectd/hunk_479.cpp,,,data/crawl/collectd/old_hunk_479.cpp,data/crawl/collectd/new_hunk_479.cpp,-1,134,,"fprintf (stderr, ""connect failed: %s\n"",
strerror (errno));","[""addLog""]","[[], [""fprintf"", ""stderr"", ""connect"", ""failed"", ""%s\\n"", ""strerror"", ""errno""]]",[214939432562746904],459
https://github.com/collectd/collectd/commit/76c0a54209a25f62b1fe16d9b00b41dde5725ae0,28 Jan 2007,collectd-nagios: Added a small program to perform Nagios-compatible checks on values.,434,data/crawl/collectd/hunk_479.cpp,,,data/crawl/collectd/old_hunk_479.cpp,data/crawl/collectd/new_hunk_479.cpp,-1,121,,"fprintf (stderr, ""socket failed: %s\n"",
strerror (errno));","[""addLog""]","[[], [""fprintf"", ""stderr"", ""socket"", ""failed"", ""%s\\n"", ""strerror"", ""errno""]]",[-1759007772810939800],458
https://github.com/collectd/collectd/commit/88def4953cea36e3425dfa0a9caa5b5aa52c45f1,28 Jan 2007,collectd-nagios: Added an option to select certain DSes and updated the usage.,74,data/crawl/collectd/hunk_478.cpp,,,data/crawl/collectd/old_hunk_478.cpp,data/crawl/collectd/new_hunk_478.cpp,-1,19,,"fprintf (stderr, ""strdup failed: %s\n"",
strerror (errno));","[""addLog""]","[[], [""fprintf"", ""stderr"", ""strdup"", ""failed"", ""%s\\n"", ""strerror"", ""errno""]]",[-13025109982779761475],457
https://github.com/collectd/collectd/commit/88def4953cea36e3425dfa0a9caa5b5aa52c45f1,28 Jan 2007,collectd-nagios: Added an option to select certain DSes and updated the usage.,74,data/crawl/collectd/hunk_478.cpp,,,data/crawl/collectd/old_hunk_478.cpp,data/crawl/collectd/new_hunk_478.cpp,-1,11,,"fprintf (stderr, ""realloc failed: %s\n"",
strerror (errno));","[""addLog""]","[[], [""fprintf"", ""stderr"", ""realloc"", ""failed"", ""%s\\n"", ""strerror"", ""errno""]]",[2810269773440601228],456
https://github.com/collectd/collectd/commit/88def4953cea36e3425dfa0a9caa5b5aa52c45f1,28 Jan 2007,collectd-nagios: Added an option to select certain DSes and updated the usage.,74,data/crawl/collectd/hunk_477.cpp,,,data/crawl/collectd/old_hunk_477.cpp,data/crawl/collectd/new_hunk_477.cpp,12,18,"printf (""%s=%lf\n"", values_names[i], values[i]);",free (values_names);,"[""updateLog"", ""removeVariable"", ""removeContent"", ""addVariable""]","[[""printf"", ""%s"", ""%lf\\n"", ""values_names[i]"", ""values[i]""], [""free"", ""values_names""]]",[-6599515246441565853],455
https://github.com/collectd/collectd/commit/88def4953cea36e3425dfa0a9caa5b5aa52c45f1,28 Jan 2007,collectd-nagios: Added an option to select certain DSes and updated the usage.,74,data/crawl/collectd/hunk_476.cpp,,,data/crawl/collectd/old_hunk_476.cpp,data/crawl/collectd/new_hunk_476.cpp,0,0,"fprintf (stderr, ""Usage: %s <-s socket> <-n value_spec> [options]\n""
""\n""
""Valid options are:\n""
"" -s <socket>   Path to collectd's UNIX-socket\n""
"" -n <v_spec>   Value specification to get from collectd\n""
"" -c <range>    Critical range\n""
"" -w <range>    Range for critical values\n"",
name);","fprintf (stderr, ""Usage: %s <-s socket> <-n value_spec> [options]\n""
""\n""
""Valid options are:\n""
""  -s <socket>    Path to collectd's UNIX-socket.\n""
""  -n <v_spec>    Value specification to get from collectd.\n""
""                 Format: `plugin-instance/type-instance'\n""
""  -d <ds>        Select the DS to examine. May be repeated to examine multiple\n""
""                 DSes. By default all DSes are used.\n""
""  -g <consol>    Method to use to consolidate several DSes.\n""
""                 Valid arguments are `none', `average' and `sum'\n""
""  -c <range>     Critical range\n""
""  -w <range>     Warning range\n""
""\n""
""Consolidation functions:\n""
""  none:          Apply the warning- and critical-ranges to each data-source\n""
""                 individually.\n""
""  average:       Calculate the average of all matching DSes and apply the\n""
""                 warning- and critical-ranges to the calculated average.\n""
""  sum:           Apply the ranges to the sum of all DSes.\n""
""\n"", name);","[""updateContent"", ""addContent""]","[[""socket\\n"", ""collectd\\n"", ""Range"", ""for"", ""values\\n""], [""socket"", ""\\n"", ""collectd"", ""\\n"", ""Format"", ""plugin"", ""instance/type"", ""instance"", ""\\n"", ""d"", ""ds"", ""Select"", ""the"", ""DS"", ""to"", ""examine"", ""May"", ""be"", ""repeated"", ""to"", ""examine"", ""multiple\\n"", ""DSes"", ""By"", ""default"", ""all"", ""DSes"", ""are"", ""used"", ""\\n"", ""g"", ""consol"", ""Method"", ""to"", ""use"", ""to"", ""consolidate"", ""several"", ""DSes"", ""\\n"", ""Valid"", ""arguments"", ""are"", ""none"", ""average"", ""and"", ""sum"", ""\\n"", ""Warning"", ""range\\n"", ""\\n"", ""Consolidation"", ""functions"", ""\\n"", ""none"", ""Apply"", ""the"", ""warning"", ""and"", ""ranges"", ""to"", ""each"", ""data"", ""source\\n"", ""individually"", ""\\n"", ""average"", ""Calculate"", ""the"", ""average"", ""of"", ""all"", ""matching"", ""DSes"", ""and"", ""apply"", ""the\\n"", ""warning"", ""and"", ""critical"", ""ranges"", ""to"", ""the"", ""calculated"", ""average"", ""\\n"", ""sum"", ""Apply"", ""the"", ""ranges"", ""to"", ""the"", ""sum"", ""of"", ""all"", ""DSes"", ""\\n"", ""\\n""]]",[-87175032653969513244],454
https://github.com/collectd/collectd/commit/108c20b23f2ca3d0ae67a44dfd8da31a7db7544c,11 Feb 2007,"Changed from the old `libconfig' to the new `liboconfig'.

Much work lies in front of us.. :/",1437,data/crawl/collectd/hunk_473.cpp,,,data/crawl/collectd/old_hunk_473.cpp,data/crawl/collectd/new_hunk_473.cpp,-1,187,,"fprintf (stderr, ""Error in line %i near `%s': %s\n"", yylineno, yytext, s);","[""addLog""]","[[], [""fprintf"", ""stderr"", ""Error"", ""in"", ""line"", ""%i"", ""near"", ""%s"", ""%s\\n"", ""yylineno"", ""yytext"", ""s""]]",[-3086793201275640484],453
https://github.com/collectd/collectd/commit/108c20b23f2ca3d0ae67a44dfd8da31a7db7544c,11 Feb 2007,"Changed from the old `libconfig' to the new `liboconfig'.

Much work lies in front of us.. :/",1437,data/crawl/collectd/hunk_473.cpp,,,data/crawl/collectd/old_hunk_473.cpp,data/crawl/collectd/new_hunk_473.cpp,-1,131,,"printf (""block_begin = %s; block_end = %s;\n"", $1.key, $3);","[""addLog""]","[[], [""printf"", ""block_begin"", ""%s"", ""block_end"", ""%s"", ""\\n"", ""1"", ""key"", ""3""]]",[24951990257426917845],452
https://github.com/collectd/collectd/commit/108c20b23f2ca3d0ae67a44dfd8da31a7db7544c,11 Feb 2007,"Changed from the old `libconfig' to the new `liboconfig'.

Much work lies in front of us.. :/",1437,data/crawl/collectd/hunk_472.cpp,,,data/crawl/collectd/old_hunk_472.cpp,data/crawl/collectd/new_hunk_472.cpp,-1,60,,"fprintf (stderr, ""fopen (%s) failed: %s\n"", file, strerror (errno));","[""addLog""]","[[], [""fprintf"", ""stderr"", ""fopen"", ""%s"", ""failed"", ""%s\\n"", ""file"", ""strerror"", ""errno""]]",[690856616261014674],451
https://github.com/collectd/collectd/commit/108c20b23f2ca3d0ae67a44dfd8da31a7db7544c,11 Feb 2007,"Changed from the old `libconfig' to the new `liboconfig'.

Much work lies in front of us.. :/",1437,data/crawl/collectd/hunk_472.cpp,,,data/crawl/collectd/old_hunk_472.cpp,data/crawl/collectd/new_hunk_472.cpp,-1,41,,"fprintf (stderr, ""yyparse returned error #%i\n"", status);","[""addLog""]","[[], [""fprintf"", ""stderr"", ""yyparse"", ""returned"", ""error"", ""%i\\n"", ""status""]]",[-5909108885702031238],450
https://github.com/collectd/collectd/commit/108c20b23f2ca3d0ae67a44dfd8da31a7db7544c,11 Feb 2007,"Changed from the old `libconfig' to the new `liboconfig'.

Much work lies in front of us.. :/",1437,data/crawl/collectd/hunk_471.cpp,,,data/crawl/collectd/old_hunk_471.cpp,data/crawl/collectd/new_hunk_471.cpp,281,-1,"fprintf (stderr, ERR_SECTION_ONLY, shortvar);",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""ERR_SECTION_ONLY"", ""shortvar""], []]",[17317328203833019531],449
https://github.com/collectd/collectd/commit/108c20b23f2ca3d0ae67a44dfd8da31a7db7544c,11 Feb 2007,"Changed from the old `libconfig' to the new `liboconfig'.

Much work lies in front of us.. :/",1437,data/crawl/collectd/hunk_471.cpp,,,data/crawl/collectd/old_hunk_471.cpp,data/crawl/collectd/new_hunk_471.cpp,185,-1,"fprintf (stderr, ""Option `%s' is not valid in this mode!\n"", shortvar);",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""Option"", ""%s"", ""is"", ""not"", ""valid"", ""in"", ""this"", ""mode"", ""\\n"", ""shortvar""], []]",[18409884831772261269],448
https://github.com/collectd/collectd/commit/108c20b23f2ca3d0ae67a44dfd8da31a7db7544c,11 Feb 2007,"Changed from the old `libconfig' to the new `liboconfig'.

Much work lies in front of us.. :/",1437,data/crawl/collectd/hunk_471.cpp,,,data/crawl/collectd/old_hunk_471.cpp,data/crawl/collectd/new_hunk_471.cpp,179,-1,"fprintf (stderr, ""Wrong extra..\n"");",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""Wrong"", ""extra"", ""\\n""], []]",[2825956832575421605],447
https://github.com/collectd/collectd/commit/108c20b23f2ca3d0ae67a44dfd8da31a7db7544c,11 Feb 2007,"Changed from the old `libconfig' to the new `liboconfig'.

Much work lies in front of us.. :/",1437,data/crawl/collectd/hunk_471.cpp,,,data/crawl/collectd/old_hunk_471.cpp,data/crawl/collectd/new_hunk_471.cpp,171,-1,"fprintf (stderr, ""No extra..?\n"");",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""No"", ""extra"", ""\\n""], []]",[11614684343900837584],446
https://github.com/collectd/collectd/commit/108c20b23f2ca3d0ae67a44dfd8da31a7db7544c,11 Feb 2007,"Changed from the old `libconfig' to the new `liboconfig'.

Much work lies in front of us.. :/",1437,data/crawl/collectd/hunk_471.cpp,,,data/crawl/collectd/old_hunk_471.cpp,data/crawl/collectd/new_hunk_471.cpp,122,-1,"fprintf (stderr, ""Invalid mode `Local': ""
""You need to link against librrd for this ""
""mode to be available.\n"");",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""Invalid"", ""mode"", ""Local"", ""You"", ""need"", ""to"", ""link"", ""against"", ""librrd"", ""for"", ""this"", ""mode"", ""to"", ""be"", ""available"", ""\\n""], []]",[41477224234303824728],445
https://github.com/collectd/collectd/commit/108c20b23f2ca3d0ae67a44dfd8da31a7db7544c,11 Feb 2007,"Changed from the old `libconfig' to the new `liboconfig'.

Much work lies in front of us.. :/",1437,data/crawl/collectd/hunk_471.cpp,,,data/crawl/collectd/old_hunk_471.cpp,data/crawl/collectd/new_hunk_471.cpp,112,-1,"fprintf (stderr, ""Invalid mode `Server': ""
""You need to link against librrd for this ""
""mode to be available.\n"");",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""Invalid"", ""mode"", ""Server"", ""You"", ""need"", ""to"", ""link"", ""against"", ""librrd"", ""for"", ""this"", ""mode"", ""to"", ""be"", ""available"", ""\\n""], []]",[39899109059292188965],444
https://github.com/collectd/collectd/commit/108c20b23f2ca3d0ae67a44dfd8da31a7db7544c,11 Feb 2007,"Changed from the old `libconfig' to the new `liboconfig'.

Much work lies in front of us.. :/",1437,data/crawl/collectd/hunk_470.cpp,,,data/crawl/collectd/old_hunk_470.cpp,data/crawl/collectd/new_hunk_470.cpp,6,-1,"fprintf (stderr, ""Cannot obtain pidfile. This shoud not happen. Ever."");",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""Cannot"", ""obtain"", ""pidfile"", ""This"", ""shoud"", ""not"", ""happen"", ""Ever""], []]",[26763535434815430048],443
https://github.com/collectd/collectd/commit/276490e1d23db4c7db710075954655583c728e3e,12 Feb 2007,Removed `src/libconfig/*'.,2235,data/crawl/collectd/hunk_468.cpp,,,data/crawl/collectd/old_hunk_468.cpp,data/crawl/collectd/new_hunk_468.cpp,74,-1,"fprintf(stderr, ""argv[%i] = \""%s\""\n"", i, argv[i]);",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""argv[%i]"", ""\\"", ""%s\\"", ""\\n"", ""i"", ""argv[i]""], []]",[26925559326055942710],442
https://github.com/collectd/collectd/commit/276490e1d23db4c7db710075954655583c728e3e,12 Feb 2007,Removed `src/libconfig/*'.,2235,data/crawl/collectd/hunk_468.cpp,,,data/crawl/collectd/old_hunk_468.cpp,data/crawl/collectd/new_hunk_468.cpp,72,-1,"fprintf(stderr, ""ip = %08lx\n"", (unsigned long) ipaddr);",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""ip"", ""%08lx\\n"", ""unsigned"", ""long"", ""ipaddr""], []]",[24919291550100101154],441
https://github.com/collectd/collectd/commit/276490e1d23db4c7db710075954655583c728e3e,12 Feb 2007,Removed `src/libconfig/*'.,2235,data/crawl/collectd/hunk_468.cpp,,,data/crawl/collectd/old_hunk_468.cpp,data/crawl/collectd/new_hunk_468.cpp,71,-1,"fprintf(stderr, ""long = %i\n"", onoff2);",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""long"", ""%i\\n"", ""onoff2""], []]",[-4993618266752048274],440
https://github.com/collectd/collectd/commit/276490e1d23db4c7db710075954655583c728e3e,12 Feb 2007,Removed `src/libconfig/*'.,2235,data/crawl/collectd/hunk_468.cpp,,,data/crawl/collectd/old_hunk_468.cpp,data/crawl/collectd/new_hunk_468.cpp,70,-1,"fprintf(stderr, ""onoff = %i\n"", onoff);",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""onoff"", ""%i\\n"", ""onoff""], []]",[6264269944711704248],439
https://github.com/collectd/collectd/commit/276490e1d23db4c7db710075954655583c728e3e,12 Feb 2007,Removed `src/libconfig/*'.,2235,data/crawl/collectd/hunk_468.cpp,,,data/crawl/collectd/old_hunk_468.cpp,data/crawl/collectd/new_hunk_468.cpp,69,-1,"fprintf(stderr, ""xval = %llu\n"", (unsigned long long) xval);",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""xval"", ""%llu\\n"", ""unsigned"", ""long"", ""long"", ""xval""], []]",[14573490334321152861],438
https://github.com/collectd/collectd/commit/276490e1d23db4c7db710075954655583c728e3e,12 Feb 2007,Removed `src/libconfig/*'.,2235,data/crawl/collectd/hunk_468.cpp,,,data/crawl/collectd/old_hunk_468.cpp,data/crawl/collectd/new_hunk_468.cpp,67,-1,"fprintf(stderr, ""joeval = \""(null)\""\n"");",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""joeval"", ""\\"", ""null"", ""\\"", ""\\n""], []]",[20534312920637369228],437
https://github.com/collectd/collectd/commit/276490e1d23db4c7db710075954655583c728e3e,12 Feb 2007,Removed `src/libconfig/*'.,2235,data/crawl/collectd/hunk_468.cpp,,,data/crawl/collectd/old_hunk_468.cpp,data/crawl/collectd/new_hunk_468.cpp,65,-1,"fprintf(stderr, ""joeval = \""%s\""\n"", joeval);",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""joeval"", ""\\"", ""%s\\"", ""\\n"", ""joeval""], []]",[23592195503895738268],436
https://github.com/collectd/collectd/commit/276490e1d23db4c7db710075954655583c728e3e,12 Feb 2007,Removed `src/libconfig/*'.,2235,data/crawl/collectd/hunk_468.cpp,,,data/crawl/collectd/old_hunk_468.cpp,data/crawl/collectd/new_hunk_468.cpp,27,-1,"fprintf(stderr, ""IfModule (%s)\n"", argarg);",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""IfModule"", ""%s"", ""\\n"", ""argarg""], []]",[15466846692971970537],435
https://github.com/collectd/collectd/commit/276490e1d23db4c7db710075954655583c728e3e,12 Feb 2007,Removed `src/libconfig/*'.,2235,data/crawl/collectd/hunk_468.cpp,,,data/crawl/collectd/old_hunk_468.cpp,data/crawl/collectd/new_hunk_468.cpp,23,-1,"fprintf(stderr, ""You must specify an argument to IfModule.\n"");",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""You"", ""must"", ""specify"", ""an"", ""argument"", ""to"", ""IfModule"", ""\\n""], []]",[40556098208321034961],434
https://github.com/collectd/collectd/commit/276490e1d23db4c7db710075954655583c728e3e,12 Feb 2007,Removed `src/libconfig/*'.,2235,data/crawl/collectd/hunk_468.cpp,,,data/crawl/collectd/old_hunk_468.cpp,data/crawl/collectd/new_hunk_468.cpp,19,-1,"fprintf(stderr, ""IfModule can only be used as a section.\n"");",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""IfModule"", ""can"", ""only"", ""be"", ""used"", ""as"", ""a"", ""section"", ""\\n""], []]",[667373182417374798],433
https://github.com/collectd/collectd/commit/276490e1d23db4c7db710075954655583c728e3e,12 Feb 2007,Removed `src/libconfig/*'.,2235,data/crawl/collectd/hunk_468.cpp,,,data/crawl/collectd/old_hunk_468.cpp,data/crawl/collectd/new_hunk_468.cpp,10,-1,"fprintf(stderr, ""%s sets value: \""%s\"" (flags=%i)\n"", arg, val, flags);",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""%s"", ""sets"", ""value"", ""\\"", ""%s\\"", ""flags"", ""%i"", ""\\n"", ""arg"", ""val"", ""flags""], []]",[18668819645032697642],432
https://github.com/collectd/collectd/commit/276490e1d23db4c7db710075954655583c728e3e,12 Feb 2007,Removed `src/libconfig/*'.,2235,data/crawl/collectd/hunk_468.cpp,,,data/crawl/collectd/old_hunk_468.cpp,data/crawl/collectd/new_hunk_468.cpp,4,-1,"printf(""Usage info goes here\n"");",,"[""removeLog""]","[[""printf"", ""Usage"", ""info"", ""goes"", ""here\\n""], []]",[2869763803169096237],431
https://github.com/collectd/collectd/commit/276490e1d23db4c7db710075954655583c728e3e,12 Feb 2007,Removed `src/libconfig/*'.,2235,data/crawl/collectd/hunk_467.cpp,,,data/crawl/collectd/old_hunk_467.cpp,data/crawl/collectd/new_hunk_467.cpp,734,-1,"fprintf(stderr, ""Unknown option: -%c\n"", ch);",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""Unknown"", ""option"", ""%c\\n"", ""ch""], []]",[10060505256454872899],430
https://github.com/collectd/collectd/commit/276490e1d23db4c7db710075954655583c728e3e,12 Feb 2007,Removed `src/libconfig/*'.,2235,data/crawl/collectd/hunk_467.cpp,,,data/crawl/collectd/old_hunk_467.cpp,data/crawl/collectd/new_hunk_467.cpp,680,-1,"fprintf(stderr, ""Unknown option: --%s\n"", cmdarg);",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""Unknown"", ""option"", ""%s\\n"", ""cmdarg""], []]",[13858243046534089804],429
https://github.com/collectd/collectd/commit/276490e1d23db4c7db710075954655583c728e3e,12 Feb 2007,Removed `src/libconfig/*'.,2235,data/crawl/collectd/hunk_467.cpp,,,data/crawl/collectd/old_hunk_467.cpp,data/crawl/collectd/new_hunk_467.cpp,369,-1,"fprintf(stderr, ""Not implemented yet!\n"");",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""Not"", ""implemented"", ""yet"", ""\\n""], []]",[24981792000305231470],428
https://github.com/collectd/collectd/commit/276490e1d23db4c7db710075954655583c728e3e,12 Feb 2007,Removed `src/libconfig/*'.,2235,data/crawl/collectd/hunk_465.cpp,,,data/crawl/collectd/old_hunk_465.cpp,data/crawl/collectd/new_hunk_465.cpp,134,-1,"fprintf(stderr, ""Invalid line: \""%s\""\n"", linebuf);",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""Invalid"", ""line"", ""\\"", ""%s\\"", ""\\n"", ""linebuf""], []]",[25045860998540516184],427
https://github.com/collectd/collectd/commit/276490e1d23db4c7db710075954655583c728e3e,12 Feb 2007,Removed `src/libconfig/*'.,2235,data/crawl/collectd/hunk_465.cpp,,,data/crawl/collectd/old_hunk_465.cpp,data/crawl/collectd/new_hunk_465.cpp,85,-1,"fprintf(stderr, ""Invalid section: \""%s\""\n"", currsection);",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""Invalid"", ""section"", ""\\"", ""%s\\"", ""\\n"", ""currsection""], []]",[12663493453938449368],426
https://github.com/collectd/collectd/commit/276490e1d23db4c7db710075954655583c728e3e,12 Feb 2007,Removed `src/libconfig/*'.,2235,data/crawl/collectd/hunk_464.cpp,,,data/crawl/collectd/old_hunk_464.cpp,data/crawl/collectd/new_hunk_464.cpp,318,-1,"fprintf(stderr, ""Error in included file.\n"");",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""Error"", ""in"", ""included"", ""file"", ""\\n""], []]",[6027341831311002882],425
https://github.com/collectd/collectd/commit/276490e1d23db4c7db710075954655583c728e3e,12 Feb 2007,Removed `src/libconfig/*'.,2235,data/crawl/collectd/hunk_464.cpp,,,data/crawl/collectd/old_hunk_464.cpp,data/crawl/collectd/new_hunk_464.cpp,310,-1,"fprintf(stderr, ""Invalid include command.\n"");",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""Invalid"", ""include"", ""command"", ""\\n""], []]",[9844300681991059873],424
https://github.com/collectd/collectd/commit/276490e1d23db4c7db710075954655583c728e3e,12 Feb 2007,Removed `src/libconfig/*'.,2235,data/crawl/collectd/hunk_464.cpp,,,data/crawl/collectd/old_hunk_464.cpp,data/crawl/collectd/new_hunk_464.cpp,244,-1,"fprintf(stderr, ""Invalid section: \""%s\""\n"", qualifbuf);",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""Invalid"", ""section"", ""\\"", ""%s\\"", ""\\n"", ""qualifbuf""], []]",[28012998882711353740],423
https://github.com/collectd/collectd/commit/276490e1d23db4c7db710075954655583c728e3e,12 Feb 2007,Removed `src/libconfig/*'.,2235,data/crawl/collectd/hunk_464.cpp,,,data/crawl/collectd/old_hunk_464.cpp,data/crawl/collectd/new_hunk_464.cpp,188,-1,"fprintf(stderr, ""Invalid section terminating: \""%s\""\n"", qualifbuf);",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""Invalid"", ""section"", ""terminating"", ""\\"", ""%s\\"", ""\\n"", ""qualifbuf""], []]",[33068804969440643545],422
https://github.com/collectd/collectd/commit/276490e1d23db4c7db710075954655583c728e3e,12 Feb 2007,Removed `src/libconfig/*'.,2235,data/crawl/collectd/hunk_464.cpp,,,data/crawl/collectd/old_hunk_464.cpp,data/crawl/collectd/new_hunk_464.cpp,174,-1,"fprintf(stderr, ""Last opened = \""%s\"", Closing = \""%s\""\n"", lastsection, cmd);",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""Last"", ""opened"", ""\\"", ""%s\\"", ""Closing"", ""\\"", ""%s\\"", ""\\n"", ""lastsection"", ""cmd""], []]",[21316241028863890490],421
https://github.com/collectd/collectd/commit/276490e1d23db4c7db710075954655583c728e3e,12 Feb 2007,Removed `src/libconfig/*'.,2235,data/crawl/collectd/hunk_464.cpp,,,data/crawl/collectd/old_hunk_464.cpp,data/crawl/collectd/new_hunk_464.cpp,173,-1,"fprintf(stderr, ""Section closing does not match last opened section.\n"");",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""Section"", ""closing"", ""does"", ""not"", ""match"", ""last"", ""opened"", ""section"", ""\\n""], []]",[-10460426936790301218],420
https://github.com/collectd/collectd/commit/fa67d36eb4ef20d3b1988b153c86e57c19ed2e2b,15 Feb 2007,rrdtool plugin: Use the AVL-tree to implement the cache.,137,data/crawl/collectd/hunk_463.cpp,,,data/crawl/collectd/old_hunk_463.cpp,data/crawl/collectd/new_hunk_463.cpp,-1,8,,"fprintf (stderr, ""rrdtool: `CacheFlush' must ""
""be greater than 0.\n"");","[""addLog""]","[[], [""fprintf"", ""stderr"", ""rrdtool"", ""CacheFlush"", ""must"", ""be"", ""greater"", ""than"", ""0"", ""\\n""]]",[-18336269380689966412],419
https://github.com/collectd/collectd/commit/6517e56f02007d10a46a33916c1f94b3e88a159c,28 Feb 2007,"irq plugin: Fixed some issues, renamed RRD-files.

I've looked into your plugin in more detail just now and fixed the
following issues:
- Moved the RRD-files into a subdirectory called `irq'. That's how it's
  going to be done in the next major version.
- Renamed the DS to `value' and set the maximum value to 65535. I'm not
  sure if this maximum value is big enough..?
- Don't use `LOG_EMERG' when config-problems are found. Rather, print to
  `STDERR' since it's still available during configuration.
- Use `strsplit' when parsing `/proc/interrupts'. This makes much of the
  pointer-arithmetic obsolete and the code much more readable.
- The device names are not used in the filename, though I'm not certain
  if that's the way to go here.. On my workstation there is a line like
  this:
    193:      28492   IO-APIC-level  uhci_hcd, uhci_hcd, uhci_hcd, ehci_hcd
  Apparently the interrupt is shared among several USB-controllers. My
  problem here is, that as soon as one device is deactivated or the
  order changes, so does the filename. Besides, a filename along the
  lines of `irq-193-uhci_hcd-ehci_hcd.rrd' would be nice.
  On another machine I have this line:
    217:   50173955          0   IO-APIC-level  3ware Storage Controller
  Where one device somehow manages to write a _description_ in there.
  This makes detection of such shared interrupts as above tricky.
  If anyone has a good idea how to use the last part of the lines for a
  filename, please let me know.",113,data/crawl/collectd/hunk_462.cpp,,,data/crawl/collectd/old_hunk_462.cpp,data/crawl/collectd/new_hunk_462.cpp,-1,24,,"fprintf (stderr, ""irq plugin: Irq value is not a ""
""number: `%s'\n"", value);","[""addLog""]","[[], [""fprintf"", ""stderr"", ""irq"", ""plugin"", ""Irq"", ""value"", ""is"", ""not"", ""a"", ""number"", ""%s"", ""\\n"", ""value""]]",[-55172052945397077820],418
https://github.com/collectd/collectd/commit/6517e56f02007d10a46a33916c1f94b3e88a159c,28 Feb 2007,"irq plugin: Fixed some issues, renamed RRD-files.

I've looked into your plugin in more detail just now and fixed the
following issues:
- Moved the RRD-files into a subdirectory called `irq'. That's how it's
  going to be done in the next major version.
- Renamed the DS to `value' and set the maximum value to 65535. I'm not
  sure if this maximum value is big enough..?
- Don't use `LOG_EMERG' when config-problems are found. Rather, print to
  `STDERR' since it's still available during configuration.
- Use `strsplit' when parsing `/proc/interrupts'. This makes much of the
  pointer-arithmetic obsolete and the code much more readable.
- The device names are not used in the filename, though I'm not certain
  if that's the way to go here.. On my workstation there is a line like
  this:
    193:      28492   IO-APIC-level  uhci_hcd, uhci_hcd, uhci_hcd, ehci_hcd
  Apparently the interrupt is shared among several USB-controllers. My
  problem here is, that as soon as one device is deactivated or the
  order changes, so does the filename. Besides, a filename along the
  lines of `irq-193-uhci_hcd-ehci_hcd.rrd' would be nice.
  On another machine I have this line:
    217:   50173955          0   IO-APIC-level  3ware Storage Controller
  Where one device somehow manages to write a _description_ in there.
  This makes detection of such shared interrupts as above tricky.
  If anyone has a good idea how to use the last part of the lines for a
  filename, please let me know.",113,data/crawl/collectd/hunk_462.cpp,,,data/crawl/collectd/old_hunk_462.cpp,data/crawl/collectd/new_hunk_462.cpp,-1,12,,"fprintf (stderr, ""irq plugin: Cannot allocate more memory.\n"");","[""addLog""]","[[], [""fprintf"", ""stderr"", ""irq"", ""plugin"", ""Cannot"", ""allocate"", ""more"", ""memory"", ""\\n""]]",[-27698694319667427440],417
https://github.com/collectd/collectd/commit/2d897a731bd23f7a33b89e7b7e3004b6b26b5a94,28 Feb 2007,"Introduce two global variables: `hostname_g' and `interval_g'.

hostname_g: Hostname we're running on. May be set in the configfile with the
  `Hostname'-option. This replaces the global `hostname'-variable exported by
  `plugin.c'.
interval_g: Interval in which we query the read plugins. This replaces the
  `COLLECTD_STEP'-define and is configurable using the `Interval'-option.",190,data/crawl/collectd/hunk_460.cpp,,,data/crawl/collectd/old_hunk_460.cpp,data/crawl/collectd/new_hunk_460.cpp,-1,29,,"fprintf (stderr, ""Cannot set the interval to a correct value.\n""
""Please check your settings.\n"");","[""addLog""]","[[], [""fprintf"", ""stderr"", ""Cannot"", ""set"", ""the"", ""interval"", ""to"", ""a"", ""correct"", ""value"", ""\\n"", ""Please"", ""check"", ""your"", ""settings"", ""\\n""]]",[-17594316145618307138],416
https://github.com/collectd/collectd/commit/2d897a731bd23f7a33b89e7b7e3004b6b26b5a94,28 Feb 2007,"Introduce two global variables: `hostname_g' and `interval_g'.

hostname_g: Hostname we're running on. May be set in the configfile with the
  `Hostname'-option. This replaces the global `hostname'-variable exported by
  `plugin.c'.
interval_g: Interval in which we query the read plugins. This replaces the
  `COLLECTD_STEP'-define and is configurable using the `Interval'-option.",190,data/crawl/collectd/hunk_460.cpp,,,data/crawl/collectd/old_hunk_460.cpp,data/crawl/collectd/new_hunk_460.cpp,-1,16,,"fprintf (stderr, ""`gethostname' failed and no ""
""hostname was configured.\n"");","[""addLog""]","[[], [""fprintf"", ""stderr"", ""gethostname"", ""failed"", ""and"", ""no"", ""hostname"", ""was"", ""configured"", ""\\n""]]",[-21920385146758764945],415
https://github.com/collectd/collectd/commit/1ea16edee7a91e5fa077c2e368f4f608cd4330e6,28 Feb 2007,"rrdtool plugin: Implemented the settings `StepSize', `HeartBeat', `RRARows', and `XFF'.

The documentation has been updated, too.",173,data/crawl/collectd/hunk_459.cpp,,,data/crawl/collectd/old_hunk_459.cpp,data/crawl/collectd/new_hunk_459.cpp,-1,41,,"fprintf (stderr, ""rrdtool: `XFF' must ""
""be in the range 0 to 1 (exclusive)."");","[""addLog""]","[[], [""fprintf"", ""stderr"", ""rrdtool"", ""XFF"", ""must"", ""be"", ""in"", ""the"", ""range"", ""0"", ""to"", ""1"", ""exclusive""]]",[-29183313983811618960],414
https://github.com/collectd/collectd/commit/1ea16edee7a91e5fa077c2e368f4f608cd4330e6,28 Feb 2007,"rrdtool plugin: Implemented the settings `StepSize', `HeartBeat', `RRARows', and `XFF'.

The documentation has been updated, too.",173,data/crawl/collectd/hunk_459.cpp,,,data/crawl/collectd/old_hunk_459.cpp,data/crawl/collectd/new_hunk_459.cpp,-1,30,,"fprintf (stderr, ""rrdtool: `RRARows' must ""
""be greater than 0.\n"");","[""addLog""]","[[], [""fprintf"", ""stderr"", ""rrdtool"", ""RRARows"", ""must"", ""be"", ""greater"", ""than"", ""0"", ""\\n""]]",[-26544933099372599369],413
https://github.com/collectd/collectd/commit/1ea16edee7a91e5fa077c2e368f4f608cd4330e6,28 Feb 2007,"rrdtool plugin: Implemented the settings `StepSize', `HeartBeat', `RRARows', and `XFF'.

The documentation has been updated, too.",173,data/crawl/collectd/hunk_459.cpp,,,data/crawl/collectd/old_hunk_459.cpp,data/crawl/collectd/new_hunk_459.cpp,-1,19,,"fprintf (stderr, ""rrdtool: `HeartBeat' must ""
""be greater than 0.\n"");","[""addLog""]","[[], [""fprintf"", ""stderr"", ""rrdtool"", ""HeartBeat"", ""must"", ""be"", ""greater"", ""than"", ""0"", ""\\n""]]",[-16081587207689144497],412
https://github.com/collectd/collectd/commit/1ea16edee7a91e5fa077c2e368f4f608cd4330e6,28 Feb 2007,"rrdtool plugin: Implemented the settings `StepSize', `HeartBeat', `RRARows', and `XFF'.

The documentation has been updated, too.",173,data/crawl/collectd/hunk_459.cpp,,,data/crawl/collectd/old_hunk_459.cpp,data/crawl/collectd/new_hunk_459.cpp,-1,8,,"fprintf (stderr, ""rrdtool: `StepSize' must ""
""be greater than 0.\n"");","[""addLog""]","[[], [""fprintf"", ""stderr"", ""rrdtool"", ""StepSize"", ""must"", ""be"", ""greater"", ""than"", ""0"", ""\\n""]]",[-15556584065183962713],411
https://github.com/collectd/collectd/commit/863dfcdf274509e4e1836c2c8f1f10f09e1d13be,03 Mar 2007,"iptables plugin: Adds a plugin to collect iptables'-counters.

My first attempt at a module for this is an iptables modules This will try to
read out the rules from iptables for a specific table and chain.
It will go through the rules looking for ones with ""comment"" matches and will
use the comment as a base for the generated filename.

So basically looking for lines like
 $ iptables -t mangle -A incoming -p tcp -m comment --comment ""tcp""
will generate a iptables-incoming/tcp.rrd file from the byte counters

There used to also be an account iptables module but that seems to have been
neglected, which would generate /proc entries for specific rules, don't know
what would work better. Either way, this seems to work somewhat.",4451,data/crawl/collectd/hunk_456.cpp,,,data/crawl/collectd/old_hunk_456.cpp,data/crawl/collectd/new_hunk_456.cpp,-1,2180,,"fprintf(stderr,
""counters alignment incorrect! Mail rusty!\n"");","[""addLog""]","[[], [""fprintf"", ""stderr"", ""counters"", ""alignment"", ""incorrect"", ""Mail"", ""rusty"", ""\\n""]]",[-44807114627509024310],410
https://github.com/collectd/collectd/commit/863dfcdf274509e4e1836c2c8f1f10f09e1d13be,03 Mar 2007,"iptables plugin: Adds a plugin to collect iptables'-counters.

My first attempt at a module for this is an iptables modules This will try to
read out the rules from iptables for a specific table and chain.
It will go through the rules looking for ones with ""comment"" matches and will
use the comment as a base for the generated filename.

So basically looking for lines like
 $ iptables -t mangle -A incoming -p tcp -m comment --comment ""tcp""
will generate a iptables-incoming/tcp.rrd file from the byte counters

There used to also be an account iptables module but that seems to have been
neglected, which would generate /proc entries for specific rules, don't know
what would work better. Either way, this seems to work somewhat.",4451,data/crawl/collectd/hunk_456.cpp,,,data/crawl/collectd/old_hunk_456.cpp,data/crawl/collectd/new_hunk_456.cpp,-1,1482,,"fprintf(stderr, ""ERROR: bad type %i\n"", a->type);","[""addLog""]","[[], [""fprintf"", ""stderr"", ""ERROR"", ""bad"", ""type"", ""%i\\n"", ""a"", ""type""]]",[5459527413173697547],409
https://github.com/collectd/collectd/commit/863dfcdf274509e4e1836c2c8f1f10f09e1d13be,03 Mar 2007,"iptables plugin: Adds a plugin to collect iptables'-counters.

My first attempt at a module for this is an iptables modules This will try to
read out the rules from iptables for a specific table and chain.
It will go through the rules looking for ones with ""comment"" matches and will
use the comment as a base for the generated filename.

So basically looking for lines like
 $ iptables -t mangle -A incoming -p tcp -m comment --comment ""tcp""
will generate a iptables-incoming/tcp.rrd file from the byte counters

There used to also be an account iptables module but that seems to have been
neglected, which would generate /proc entries for specific rules, don't know
what would work better. Either way, this seems to work somewhat.",4451,data/crawl/collectd/hunk_456.cpp,,,data/crawl/collectd/old_hunk_456.cpp,data/crawl/collectd/new_hunk_456.cpp,-1,1120,,"fprintf(stderr, ""ERROR: %d not a valid target)\n"",
verdict);","[""addLog""]","[[], [""fprintf"", ""stderr"", ""ERROR"", ""%d"", ""not"", ""a"", ""valid"", ""target"", ""\\n"", ""verdict""]]",[-20259464220232527866],408
https://github.com/collectd/collectd/commit/863dfcdf274509e4e1836c2c8f1f10f09e1d13be,03 Mar 2007,"iptables plugin: Adds a plugin to collect iptables'-counters.

My first attempt at a module for this is an iptables modules This will try to
read out the rules from iptables for a specific table and chain.
It will go through the rules looking for ones with ""comment"" matches and will
use the comment as a base for the generated filename.

So basically looking for lines like
 $ iptables -t mangle -A incoming -p tcp -m comment --comment ""tcp""
will generate a iptables-incoming/tcp.rrd file from the byte counters

There used to also be an account iptables module but that seems to have been
neglected, which would generate /proc entries for specific rules, don't know
what would work better. Either way, this seems to work somewhat.",4451,data/crawl/collectd/hunk_456.cpp,,,data/crawl/collectd/old_hunk_456.cpp,data/crawl/collectd/new_hunk_456.cpp,-1,906,,"printf(""Match name: `%s'\n"", m->u.user.name);","[""addLog""]","[[], [""printf"", ""Match"", ""name"", ""%s"", ""\\n"", ""m"", ""u"", ""user"", ""name""]]",[13360082513403856554],407
https://github.com/collectd/collectd/commit/863dfcdf274509e4e1836c2c8f1f10f09e1d13be,03 Mar 2007,"iptables plugin: Adds a plugin to collect iptables'-counters.

My first attempt at a module for this is an iptables modules This will try to
read out the rules from iptables for a specific table and chain.
It will go through the rules looking for ones with ""comment"" matches and will
use the comment as a base for the generated filename.

So basically looking for lines like
 $ iptables -t mangle -A incoming -p tcp -m comment --comment ""tcp""
will generate a iptables-incoming/tcp.rrd file from the byte counters

There used to also be an account iptables module but that seems to have been
neglected, which would generate /proc entries for specific rules, don't know
what would work better. Either way, this seems to work somewhat.",4451,data/crawl/collectd/hunk_456.cpp,,,data/crawl/collectd/old_hunk_456.cpp,data/crawl/collectd/new_hunk_456.cpp,-1,224,,"fprintf(stderr, ""ERROR: offset %u not an entry!\n"",
(unsigned int)((char *)seek - (char *)h->entries->entrytable));","[""addLog""]","[[], [""fprintf"", ""stderr"", ""ERROR"", ""offset"", ""%u"", ""not"", ""an"", ""entry"", ""\\n"", ""unsigned"", ""int"", ""char"", ""*"", ""seek"", ""char"", ""*"", ""h"", ""entries"", ""entrytable""]]",[-3798071515164340687],406
https://github.com/collectd/collectd/commit/863dfcdf274509e4e1836c2c8f1f10f09e1d13be,03 Mar 2007,"iptables plugin: Adds a plugin to collect iptables'-counters.

My first attempt at a module for this is an iptables modules This will try to
read out the rules from iptables for a specific table and chain.
It will go through the rules looking for ones with ""comment"" matches and will
use the comment as a base for the generated filename.

So basically looking for lines like
 $ iptables -t mangle -A incoming -p tcp -m comment --comment ""tcp""
will generate a iptables-incoming/tcp.rrd file from the byte counters

There used to also be an account iptables module but that seems to have been
neglected, which would generate /proc entries for specific rules, don't know
what would work better. Either way, this seems to work somewhat.",4451,data/crawl/collectd/hunk_455.cpp,,,data/crawl/collectd/old_hunk_455.cpp,data/crawl/collectd/new_hunk_455.cpp,-1,400,,"printf(""target_size=%u, align=%u\n"",
t->target.u.target_size, ALIGN(sizeof(*t)));","[""addLog""]","[[], [""printf"", ""target_size"", ""%u"", ""align"", ""%u\\n"", ""t"", ""target"", ""u"", ""target_size"", ""ALIGN"", ""sizeof"", ""*t""]]",[-4536747728000566221],405
https://github.com/collectd/collectd/commit/863dfcdf274509e4e1836c2c8f1f10f09e1d13be,03 Mar 2007,"iptables plugin: Adds a plugin to collect iptables'-counters.

My first attempt at a module for this is an iptables modules This will try to
read out the rules from iptables for a specific table and chain.
It will go through the rules looking for ones with ""comment"" matches and will
use the comment as a base for the generated filename.

So basically looking for lines like
 $ iptables -t mangle -A incoming -p tcp -m comment --comment ""tcp""
will generate a iptables-incoming/tcp.rrd file from the byte counters

There used to also be an account iptables module but that seems to have been
neglected, which would generate /proc entries for specific rules, don't know
what would work better. Either way, this seems to work somewhat.",4451,data/crawl/collectd/hunk_455.cpp,,,data/crawl/collectd/old_hunk_455.cpp,data/crawl/collectd/new_hunk_455.cpp,-1,377,,"fprintf(stderr, ""Unknown table `%s'\n"", h->info.name);","[""addLog""]","[[], [""fprintf"", ""stderr"", ""Unknown"", ""table"", ""%s"", ""\\n"", ""h"", ""info"", ""name""]]",[-30241893935585031856],404
https://github.com/collectd/collectd/commit/863dfcdf274509e4e1836c2c8f1f10f09e1d13be,03 Mar 2007,"iptables plugin: Adds a plugin to collect iptables'-counters.

My first attempt at a module for this is an iptables modules This will try to
read out the rules from iptables for a specific table and chain.
It will go through the rules looking for ones with ""comment"" matches and will
use the comment as a base for the generated filename.

So basically looking for lines like
 $ iptables -t mangle -A incoming -p tcp -m comment --comment ""tcp""
will generate a iptables-incoming/tcp.rrd file from the byte counters

There used to also be an account iptables module but that seems to have been
neglected, which would generate /proc entries for specific rules, don't know
what would work better. Either way, this seems to work somewhat.",4451,data/crawl/collectd/hunk_455.cpp,,,data/crawl/collectd/old_hunk_455.cpp,data/crawl/collectd/new_hunk_455.cpp,-1,193,,"printf(""verdict=%s\n"",
       pos == -NF_ACCEPT-1 ? ""NF_ACCEPT""
       : pos == -NF_DROP-1 ? ""NF_DROP""
       : pos == IP6T_RETURN ? ""RETURN""
       : ""UNKNOWN"");","[""addLog""]","[[], [""printf"", ""verdict"", ""%s\\n"", ""pos"", ""NF_ACCEPT"", ""1"", ""NF_ACCEPT"", ""pos"", ""NF_DROP"", ""1"", ""NF_DROP"", ""pos"", ""IP6T_RETURN"", ""RETURN"", ""UNKNOWN""]]",[30287945785840985600],403
https://github.com/collectd/collectd/commit/863dfcdf274509e4e1836c2c8f1f10f09e1d13be,03 Mar 2007,"iptables plugin: Adds a plugin to collect iptables'-counters.

My first attempt at a module for this is an iptables modules This will try to
read out the rules from iptables for a specific table and chain.
It will go through the rules looking for ones with ""comment"" matches and will
use the comment as a base for the generated filename.

So basically looking for lines like
 $ iptables -t mangle -A incoming -p tcp -m comment --comment ""tcp""
will generate a iptables-incoming/tcp.rrd file from the byte counters

There used to also be an account iptables module but that seems to have been
neglected, which would generate /proc entries for specific rules, don't know
what would work better. Either way, this seems to work somewhat.",4451,data/crawl/collectd/hunk_455.cpp,,,data/crawl/collectd/old_hunk_455.cpp,data/crawl/collectd/new_hunk_455.cpp,-1,178,,"printf(""Invflags: %02X\n"", e->ipv6.invflags);","[""addLog""]","[[], [""printf"", ""Invflags"", ""%02X\\n"", ""e"", ""ipv6"", ""invflags""]]",[-3094076635387063921],402
https://github.com/collectd/collectd/commit/863dfcdf274509e4e1836c2c8f1f10f09e1d13be,03 Mar 2007,"iptables plugin: Adds a plugin to collect iptables'-counters.

My first attempt at a module for this is an iptables modules This will try to
read out the rules from iptables for a specific table and chain.
It will go through the rules looking for ones with ""comment"" matches and will
use the comment as a base for the generated filename.

So basically looking for lines like
 $ iptables -t mangle -A incoming -p tcp -m comment --comment ""tcp""
will generate a iptables-incoming/tcp.rrd file from the byte counters

There used to also be an account iptables module but that seems to have been
neglected, which would generate /proc entries for specific rules, don't know
what would work better. Either way, this seems to work somewhat.",4451,data/crawl/collectd/hunk_455.cpp,,,data/crawl/collectd/old_hunk_455.cpp,data/crawl/collectd/new_hunk_455.cpp,-1,177,,"printf(""Flags: %02X\n"", e->ipv6.flags);","[""addLog""]","[[], [""printf"", ""Flags"", ""%02X\\n"", ""e"", ""ipv6"", ""flags""]]",[18612943448352921403],401
https://github.com/collectd/collectd/commit/863dfcdf274509e4e1836c2c8f1f10f09e1d13be,03 Mar 2007,"iptables plugin: Adds a plugin to collect iptables'-counters.

My first attempt at a module for this is an iptables modules This will try to
read out the rules from iptables for a specific table and chain.
It will go through the rules looking for ones with ""comment"" matches and will
use the comment as a base for the generated filename.

So basically looking for lines like
 $ iptables -t mangle -A incoming -p tcp -m comment --comment ""tcp""
will generate a iptables-incoming/tcp.rrd file from the byte counters

There used to also be an account iptables module but that seems to have been
neglected, which would generate /proc entries for specific rules, don't know
what would work better. Either way, this seems to work somewhat.",4451,data/crawl/collectd/hunk_455.cpp,,,data/crawl/collectd/old_hunk_455.cpp,data/crawl/collectd/new_hunk_455.cpp,-1,176,,"printf(""TOS: %u\n"", e->ipv6.tos);","[""addLog""]","[[], [""printf"", ""TOS"", ""%u\\n"", ""e"", ""ipv6"", ""tos""]]",[3899174871424496672],400
https://github.com/collectd/collectd/commit/863dfcdf274509e4e1836c2c8f1f10f09e1d13be,03 Mar 2007,"iptables plugin: Adds a plugin to collect iptables'-counters.

My first attempt at a module for this is an iptables modules This will try to
read out the rules from iptables for a specific table and chain.
It will go through the rules looking for ones with ""comment"" matches and will
use the comment as a base for the generated filename.

So basically looking for lines like
 $ iptables -t mangle -A incoming -p tcp -m comment --comment ""tcp""
will generate a iptables-incoming/tcp.rrd file from the byte counters

There used to also be an account iptables module but that seems to have been
neglected, which would generate /proc entries for specific rules, don't know
what would work better. Either way, this seems to work somewhat.",4451,data/crawl/collectd/hunk_455.cpp,,,data/crawl/collectd/old_hunk_455.cpp,data/crawl/collectd/new_hunk_455.cpp,-1,174,,"printf(""\nProtocol: %u\n"", e->ipv6.proto);","[""addLog""]","[[], [""printf"", ""\\nProtocol"", ""%u\\n"", ""e"", ""ipv6"", ""proto""]]",[7279940983753363405],399
https://github.com/collectd/collectd/commit/863dfcdf274509e4e1836c2c8f1f10f09e1d13be,03 Mar 2007,"iptables plugin: Adds a plugin to collect iptables'-counters.

My first attempt at a module for this is an iptables modules This will try to
read out the rules from iptables for a specific table and chain.
It will go through the rules looking for ones with ""comment"" matches and will
use the comment as a base for the generated filename.

So basically looking for lines like
 $ iptables -t mangle -A incoming -p tcp -m comment --comment ""tcp""
will generate a iptables-incoming/tcp.rrd file from the byte counters

There used to also be an account iptables module but that seems to have been
neglected, which would generate /proc entries for specific rules, don't know
what would work better. Either way, this seems to work somewhat.",4451,data/crawl/collectd/hunk_455.cpp,,,data/crawl/collectd/old_hunk_455.cpp,data/crawl/collectd/new_hunk_455.cpp,-1,173,,"printf(""%c"", e->ipv6.outiface_mask[i] ? 'X' : '.');","[""addLog""]","[[], [""printf"", ""%c"", ""e"", ""ipv6"", ""outiface_mask[i]"", ""X""]]",[-2239253335044659789],398
https://github.com/collectd/collectd/commit/863dfcdf274509e4e1836c2c8f1f10f09e1d13be,03 Mar 2007,"iptables plugin: Adds a plugin to collect iptables'-counters.

My first attempt at a module for this is an iptables modules This will try to
read out the rules from iptables for a specific table and chain.
It will go through the rules looking for ones with ""comment"" matches and will
use the comment as a base for the generated filename.

So basically looking for lines like
 $ iptables -t mangle -A incoming -p tcp -m comment --comment ""tcp""
will generate a iptables-incoming/tcp.rrd file from the byte counters

There used to also be an account iptables module but that seems to have been
neglected, which would generate /proc entries for specific rules, don't know
what would work better. Either way, this seems to work somewhat.",4451,data/crawl/collectd/hunk_455.cpp,,,data/crawl/collectd/old_hunk_455.cpp,data/crawl/collectd/new_hunk_455.cpp,-1,171,,"printf(""to `%s'/"", e->ipv6.outiface);","[""addLog""]","[[], [""printf"", ""to"", ""%s"", ""/"", ""e"", ""ipv6"", ""outiface""]]",[3962798391621517377],397
https://github.com/collectd/collectd/commit/863dfcdf274509e4e1836c2c8f1f10f09e1d13be,03 Mar 2007,"iptables plugin: Adds a plugin to collect iptables'-counters.

My first attempt at a module for this is an iptables modules This will try to
read out the rules from iptables for a specific table and chain.
It will go through the rules looking for ones with ""comment"" matches and will
use the comment as a base for the generated filename.

So basically looking for lines like
 $ iptables -t mangle -A incoming -p tcp -m comment --comment ""tcp""
will generate a iptables-incoming/tcp.rrd file from the byte counters

There used to also be an account iptables module but that seems to have been
neglected, which would generate /proc entries for specific rules, don't know
what would work better. Either way, this seems to work somewhat.",4451,data/crawl/collectd/hunk_455.cpp,,,data/crawl/collectd/old_hunk_455.cpp,data/crawl/collectd/new_hunk_455.cpp,-1,170,,"printf(""%c"", e->ipv6.iniface_mask[i] ? 'X' : '.');","[""addLog""]","[[], [""printf"", ""%c"", ""e"", ""ipv6"", ""iniface_mask[i]"", ""X""]]",[-2817574395782376193],396
https://github.com/collectd/collectd/commit/863dfcdf274509e4e1836c2c8f1f10f09e1d13be,03 Mar 2007,"iptables plugin: Adds a plugin to collect iptables'-counters.

My first attempt at a module for this is an iptables modules This will try to
read out the rules from iptables for a specific table and chain.
It will go through the rules looking for ones with ""comment"" matches and will
use the comment as a base for the generated filename.

So basically looking for lines like
 $ iptables -t mangle -A incoming -p tcp -m comment --comment ""tcp""
will generate a iptables-incoming/tcp.rrd file from the byte counters

There used to also be an account iptables module but that seems to have been
neglected, which would generate /proc entries for specific rules, don't know
what would work better. Either way, this seems to work somewhat.",4451,data/crawl/collectd/hunk_455.cpp,,,data/crawl/collectd/old_hunk_455.cpp,data/crawl/collectd/new_hunk_455.cpp,-1,168,,"printf(""Interface: `%s'/"", e->ipv6.iniface);","[""addLog""]","[[], [""printf"", ""Interface"", ""%s"", ""/"", ""e"", ""ipv6"", ""iniface""]]",[-4532852978845341820],395
https://github.com/collectd/collectd/commit/863dfcdf274509e4e1836c2c8f1f10f09e1d13be,03 Mar 2007,"iptables plugin: Adds a plugin to collect iptables'-counters.

My first attempt at a module for this is an iptables modules This will try to
read out the rules from iptables for a specific table and chain.
It will go through the rules looking for ones with ""comment"" matches and will
use the comment as a base for the generated filename.

So basically looking for lines like
 $ iptables -t mangle -A incoming -p tcp -m comment --comment ""tcp""
will generate a iptables-incoming/tcp.rrd file from the byte counters

There used to also be an account iptables module but that seems to have been
neglected, which would generate /proc entries for specific rules, don't know
what would work better. Either way, this seems to work somewhat.",4451,data/crawl/collectd/hunk_454.cpp,,,data/crawl/collectd/old_hunk_454.cpp,data/crawl/collectd/new_hunk_454.cpp,-1,162,,"printf(""verdict=%s\n"",
       pos == -NF_ACCEPT-1 ? ""NF_ACCEPT""
       : pos == -NF_DROP-1 ? ""NF_DROP""
       : pos == -NF_QUEUE-1 ? ""NF_QUEUE""
       : pos == RETURN ? ""RETURN""
       : ""UNKNOWN"");","[""addLog""]","[[], [""printf"", ""verdict"", ""%s\\n"", ""pos"", ""NF_ACCEPT"", ""1"", ""NF_ACCEPT"", ""pos"", ""NF_DROP"", ""1"", ""NF_DROP"", ""pos"", ""NF_QUEUE"", ""1"", ""NF_QUEUE"", ""pos"", ""RETURN"", ""RETURN"", ""UNKNOWN""]]",[30188398610879992484],394
https://github.com/collectd/collectd/commit/863dfcdf274509e4e1836c2c8f1f10f09e1d13be,03 Mar 2007,"iptables plugin: Adds a plugin to collect iptables'-counters.

My first attempt at a module for this is an iptables modules This will try to
read out the rules from iptables for a specific table and chain.
It will go through the rules looking for ones with ""comment"" matches and will
use the comment as a base for the generated filename.

So basically looking for lines like
 $ iptables -t mangle -A incoming -p tcp -m comment --comment ""tcp""
will generate a iptables-incoming/tcp.rrd file from the byte counters

There used to also be an account iptables module but that seems to have been
neglected, which would generate /proc entries for specific rules, don't know
what would work better. Either way, this seems to work somewhat.",4451,data/crawl/collectd/hunk_454.cpp,,,data/crawl/collectd/old_hunk_454.cpp,data/crawl/collectd/new_hunk_454.cpp,-1,147,,"printf(""Invflags: %02X\n"", e->ip.invflags);","[""addLog""]","[[], [""printf"", ""Invflags"", ""%02X\\n"", ""e"", ""ip"", ""invflags""]]",[3412099511869573089],393
https://github.com/collectd/collectd/commit/863dfcdf274509e4e1836c2c8f1f10f09e1d13be,03 Mar 2007,"iptables plugin: Adds a plugin to collect iptables'-counters.

My first attempt at a module for this is an iptables modules This will try to
read out the rules from iptables for a specific table and chain.
It will go through the rules looking for ones with ""comment"" matches and will
use the comment as a base for the generated filename.

So basically looking for lines like
 $ iptables -t mangle -A incoming -p tcp -m comment --comment ""tcp""
will generate a iptables-incoming/tcp.rrd file from the byte counters

There used to also be an account iptables module but that seems to have been
neglected, which would generate /proc entries for specific rules, don't know
what would work better. Either way, this seems to work somewhat.",4451,data/crawl/collectd/hunk_454.cpp,,,data/crawl/collectd/old_hunk_454.cpp,data/crawl/collectd/new_hunk_454.cpp,-1,146,,"printf(""Flags: %02X\n"", e->ip.flags);","[""addLog""]","[[], [""printf"", ""Flags"", ""%02X\\n"", ""e"", ""ip"", ""flags""]]",[25119119595609558413],392
https://github.com/collectd/collectd/commit/863dfcdf274509e4e1836c2c8f1f10f09e1d13be,03 Mar 2007,"iptables plugin: Adds a plugin to collect iptables'-counters.

My first attempt at a module for this is an iptables modules This will try to
read out the rules from iptables for a specific table and chain.
It will go through the rules looking for ones with ""comment"" matches and will
use the comment as a base for the generated filename.

So basically looking for lines like
 $ iptables -t mangle -A incoming -p tcp -m comment --comment ""tcp""
will generate a iptables-incoming/tcp.rrd file from the byte counters

There used to also be an account iptables module but that seems to have been
neglected, which would generate /proc entries for specific rules, don't know
what would work better. Either way, this seems to work somewhat.",4451,data/crawl/collectd/hunk_454.cpp,,,data/crawl/collectd/old_hunk_454.cpp,data/crawl/collectd/new_hunk_454.cpp,-1,145,,"printf(""\nProtocol: %u\n"", e->ip.proto);","[""addLog""]","[[], [""printf"", ""\\nProtocol"", ""%u\\n"", ""e"", ""ip"", ""proto""]]",[13786117131010000415],391
https://github.com/collectd/collectd/commit/863dfcdf274509e4e1836c2c8f1f10f09e1d13be,03 Mar 2007,"iptables plugin: Adds a plugin to collect iptables'-counters.

My first attempt at a module for this is an iptables modules This will try to
read out the rules from iptables for a specific table and chain.
It will go through the rules looking for ones with ""comment"" matches and will
use the comment as a base for the generated filename.

So basically looking for lines like
 $ iptables -t mangle -A incoming -p tcp -m comment --comment ""tcp""
will generate a iptables-incoming/tcp.rrd file from the byte counters

There used to also be an account iptables module but that seems to have been
neglected, which would generate /proc entries for specific rules, don't know
what would work better. Either way, this seems to work somewhat.",4451,data/crawl/collectd/hunk_454.cpp,,,data/crawl/collectd/old_hunk_454.cpp,data/crawl/collectd/new_hunk_454.cpp,-1,144,,"printf(""%c"", e->ip.outiface_mask[i] ? 'X' : '.');","[""addLog""]","[[], [""printf"", ""%c"", ""e"", ""ip"", ""outiface_mask[i]"", ""X""]]",[4266922812211977221],390
https://github.com/collectd/collectd/commit/863dfcdf274509e4e1836c2c8f1f10f09e1d13be,03 Mar 2007,"iptables plugin: Adds a plugin to collect iptables'-counters.

My first attempt at a module for this is an iptables modules This will try to
read out the rules from iptables for a specific table and chain.
It will go through the rules looking for ones with ""comment"" matches and will
use the comment as a base for the generated filename.

So basically looking for lines like
 $ iptables -t mangle -A incoming -p tcp -m comment --comment ""tcp""
will generate a iptables-incoming/tcp.rrd file from the byte counters

There used to also be an account iptables module but that seems to have been
neglected, which would generate /proc entries for specific rules, don't know
what would work better. Either way, this seems to work somewhat.",4451,data/crawl/collectd/hunk_454.cpp,,,data/crawl/collectd/old_hunk_454.cpp,data/crawl/collectd/new_hunk_454.cpp,-1,142,,"printf(""to `%s'/"", e->ip.outiface);","[""addLog""]","[[], [""printf"", ""to"", ""%s"", ""/"", ""e"", ""ip"", ""outiface""]]",[10468974538878154387],389
https://github.com/collectd/collectd/commit/863dfcdf274509e4e1836c2c8f1f10f09e1d13be,03 Mar 2007,"iptables plugin: Adds a plugin to collect iptables'-counters.

My first attempt at a module for this is an iptables modules This will try to
read out the rules from iptables for a specific table and chain.
It will go through the rules looking for ones with ""comment"" matches and will
use the comment as a base for the generated filename.

So basically looking for lines like
 $ iptables -t mangle -A incoming -p tcp -m comment --comment ""tcp""
will generate a iptables-incoming/tcp.rrd file from the byte counters

There used to also be an account iptables module but that seems to have been
neglected, which would generate /proc entries for specific rules, don't know
what would work better. Either way, this seems to work somewhat.",4451,data/crawl/collectd/hunk_454.cpp,,,data/crawl/collectd/old_hunk_454.cpp,data/crawl/collectd/new_hunk_454.cpp,-1,141,,"printf(""%c"", e->ip.iniface_mask[i] ? 'X' : '.');","[""addLog""]","[[], [""printf"", ""%c"", ""e"", ""ip"", ""iniface_mask[i]"", ""X""]]",[3688601751474260817],388
https://github.com/collectd/collectd/commit/863dfcdf274509e4e1836c2c8f1f10f09e1d13be,03 Mar 2007,"iptables plugin: Adds a plugin to collect iptables'-counters.

My first attempt at a module for this is an iptables modules This will try to
read out the rules from iptables for a specific table and chain.
It will go through the rules looking for ones with ""comment"" matches and will
use the comment as a base for the generated filename.

So basically looking for lines like
 $ iptables -t mangle -A incoming -p tcp -m comment --comment ""tcp""
will generate a iptables-incoming/tcp.rrd file from the byte counters

There used to also be an account iptables module but that seems to have been
neglected, which would generate /proc entries for specific rules, don't know
what would work better. Either way, this seems to work somewhat.",4451,data/crawl/collectd/hunk_454.cpp,,,data/crawl/collectd/old_hunk_454.cpp,data/crawl/collectd/new_hunk_454.cpp,-1,139,,"printf(""Interface: `%s'/"", e->ip.iniface);","[""addLog""]","[[], [""printf"", ""Interface"", ""%s"", ""/"", ""e"", ""ip"", ""iniface""]]",[1973323168411295190],387
https://github.com/collectd/collectd/commit/863dfcdf274509e4e1836c2c8f1f10f09e1d13be,03 Mar 2007,"iptables plugin: Adds a plugin to collect iptables'-counters.

My first attempt at a module for this is an iptables modules This will try to
read out the rules from iptables for a specific table and chain.
It will go through the rules looking for ones with ""comment"" matches and will
use the comment as a base for the generated filename.

So basically looking for lines like
 $ iptables -t mangle -A incoming -p tcp -m comment --comment ""tcp""
will generate a iptables-incoming/tcp.rrd file from the byte counters

There used to also be an account iptables module but that seems to have been
neglected, which would generate /proc entries for specific rules, don't know
what would work better. Either way, this seems to work somewhat.",4451,data/crawl/collectd/hunk_454.cpp,,,data/crawl/collectd/old_hunk_454.cpp,data/crawl/collectd/new_hunk_454.cpp,-1,137,,"printf(""DST IP: %u.%u.%u.%u/%u.%u.%u.%u\n"",
       IP_PARTS(e->ip.dst.s_addr),IP_PARTS(e->ip.dmsk.s_addr));","[""addLog""]","[[], [""printf"", ""DST"", ""IP"", ""%u"", ""%u"", ""%u"", ""%u/%u"", ""%u"", ""%u"", ""%u\\n"", ""IP_PARTS"", ""e"", ""ip"", ""dst"", ""s_addr"", ""IP_PARTS"", ""e"", ""ip"", ""dmsk"", ""s_addr""]]",[15227712094292342589],386
https://github.com/collectd/collectd/commit/863dfcdf274509e4e1836c2c8f1f10f09e1d13be,03 Mar 2007,"iptables plugin: Adds a plugin to collect iptables'-counters.

My first attempt at a module for this is an iptables modules This will try to
read out the rules from iptables for a specific table and chain.
It will go through the rules looking for ones with ""comment"" matches and will
use the comment as a base for the generated filename.

So basically looking for lines like
 $ iptables -t mangle -A incoming -p tcp -m comment --comment ""tcp""
will generate a iptables-incoming/tcp.rrd file from the byte counters

There used to also be an account iptables module but that seems to have been
neglected, which would generate /proc entries for specific rules, don't know
what would work better. Either way, this seems to work somewhat.",4451,data/crawl/collectd/hunk_454.cpp,,,data/crawl/collectd/old_hunk_454.cpp,data/crawl/collectd/new_hunk_454.cpp,-1,135,,"printf(""SRC IP: %u.%u.%u.%u/%u.%u.%u.%u\n"",
       IP_PARTS(e->ip.src.s_addr),IP_PARTS(e->ip.smsk.s_addr));","[""addLog""]","[[], [""printf"", ""SRC"", ""IP"", ""%u"", ""%u"", ""%u"", ""%u/%u"", ""%u"", ""%u"", ""%u\\n"", ""IP_PARTS"", ""e"", ""ip"", ""src"", ""s_addr"", ""IP_PARTS"", ""e"", ""ip"", ""smsk"", ""s_addr""]]",[25317834603374159630],385
https://github.com/collectd/collectd/commit/8de91034a0186feba7079b92711b0d140278ce7a,03 Mar 2007,"iptables plugin: Use a global `libiptc' if it exists.

Will likely not build under non-Linux systems yet.",4275,data/crawl/collectd/hunk_453.cpp,,,data/crawl/collectd/old_hunk_453.cpp,data/crawl/collectd/new_hunk_453.cpp,2180,-1,"fprintf(stderr,
""counters alignment incorrect! Mail rusty!\n"");",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""counters"", ""alignment"", ""incorrect"", ""Mail"", ""rusty"", ""\\n""], []]",[44807114627509024310],384
https://github.com/collectd/collectd/commit/39d723f4cb1d50b7ebb90c3251f0ebabad576412,26 Mar 2007,"Replace all calls to `strerror' with `sstrerror'

.. which internally uses the thread-safe function `strerror_r'.",822,data/crawl/collectd/hunk_440.cpp,,,data/crawl/collectd/old_hunk_440.cpp,data/crawl/collectd/new_hunk_440.cpp,3,4,"fprintf (stderr, ""fork: %s"", strerror (errno));","fprintf (stderr, ""fork: %s"",
sstrerror (errno, errbuf,
sizeof (errbuf)));","[""updateVariable"", ""addVariable""]","[[""strerror""], [""sstrerror"", ""errbuf"", ""sizeof"", ""errbuf""]]",[-31104396697301215144],383
https://github.com/collectd/collectd/commit/15fff44a08575748b6dd9f5f9c44f0d3c91f166d,26 Mar 2007,"stderr plugin: Add `File' config option to log to a certain file.

Also make the actual log-action thread-safe.",55,data/crawl/collectd/hunk_438.cpp,,,data/crawl/collectd/old_hunk_438.cpp,data/crawl/collectd/new_hunk_438.cpp,-1,24,,"fprintf (stderr, ""stderr plugin: fopen (%s) failed: %s\n"",
(log_file == NULL) ? ""<null>"" : log_file,
sstrerror (errno, errbuf, sizeof (errbuf)));","[""addLog""]","[[], [""fprintf"", ""stderr"", ""stderr"", ""plugin"", ""fopen"", ""%s"", ""failed"", ""%s\\n"", ""log_file"", ""NULL"", ""null"", ""log_file"", ""sstrerror"", ""errno"", ""errbuf"", ""sizeof"", ""errbuf""]]",[-38546475848651916835],382
https://github.com/collectd/collectd/commit/15fff44a08575748b6dd9f5f9c44f0d3c91f166d,26 Mar 2007,"stderr plugin: Add `File' config option to log to a certain file.

Also make the actual log-action thread-safe.",55,data/crawl/collectd/hunk_438.cpp,,,data/crawl/collectd/old_hunk_438.cpp,data/crawl/collectd/new_hunk_438.cpp,6,30,"fprintf (stderr, ""%s\n"", msg);","fprintf (fh, ""%s\n"", msg);","[""updateVariable""]","[[""stderr""], [""fh""]]",[8734572888573698402],381
https://github.com/collectd/collectd/commit/15fff44a08575748b6dd9f5f9c44f0d3c91f166d,26 Mar 2007,"stderr plugin: Add `File' config option to log to a certain file.

Also make the actual log-action thread-safe.",55,data/crawl/collectd/hunk_437.cpp,,,data/crawl/collectd/old_hunk_437.cpp,data/crawl/collectd/new_hunk_437.cpp,-1,11,,"fprintf (stderr, ""stderr plugin: Access to %s denied: %s\n"",
value, sstrerror (errno, errbuf, sizeof (errbuf)));","[""addLog""]","[[], [""fprintf"", ""stderr"", ""stderr"", ""plugin"", ""Access"", ""to"", ""%s"", ""denied"", ""%s\\n"", ""value"", ""sstrerror"", ""errno"", ""errbuf"", ""sizeof"", ""errbuf""]]",[-60540542818480411541],380
https://github.com/collectd/collectd/commit/f271d4b45ee7fffb6d55408c1138140f145df7cd,26 Mar 2007,Removed `utils_debug.[ch]' since debugging output is now handeled by the logging-statements.,234,data/crawl/collectd/hunk_436.cpp,,,data/crawl/collectd/old_hunk_436.cpp,data/crawl/collectd/new_hunk_436.cpp,51,-1,"fprintf(f, ""\n"");",,"[""removeLog""]","[[""fprintf"", ""f"", ""\\n""], []]",[5192362390505725581],379
https://github.com/collectd/collectd/commit/f271d4b45ee7fffb6d55408c1138140f145df7cd,26 Mar 2007,Removed `utils_debug.[ch]' since debugging output is now handeled by the logging-statements.,234,data/crawl/collectd/hunk_436.cpp,,,data/crawl/collectd/old_hunk_436.cpp,data/crawl/collectd/new_hunk_436.cpp,48,-1,"fprintf(f, ""%s:%d:%s(): "",
file, line, func);",,"[""removeLog""]","[[""fprintf"", ""f"", ""%s"", ""%d"", ""%s"", ""file"", ""line"", ""func""], []]",[237967817007964602],378
https://github.com/collectd/collectd/commit/d60759821fc7cfa47d279fe69307e80ec206ddf6,26 Mar 2007,unixsock plugin: Fixed many issues. `GETVAL' and `PUTVAL' are now mostly working as intended.,69,data/crawl/collectd/hunk_432.cpp,,,data/crawl/collectd/old_hunk_432.cpp,data/crawl/collectd/new_hunk_432.cpp,-1,5,,"fprintf (fh, ""-1 Wrong number of fields: Got %i, expected 3.\n"",
fields_num);","[""addLog""]","[[], [""fprintf"", ""fh"", ""1"", ""Wrong"", ""number"", ""of"", ""fields"", ""Got"", ""%i"", ""expected"", ""3"", ""\\n"", ""fields_num""]]",[4867053012781188156],377
https://github.com/collectd/collectd/commit/d60759821fc7cfa47d279fe69307e80ec206ddf6,26 Mar 2007,unixsock plugin: Fixed many issues. `GETVAL' and `PUTVAL' are now mostly working as intended.,69,data/crawl/collectd/hunk_431.cpp,,,data/crawl/collectd/old_hunk_431.cpp,data/crawl/collectd/new_hunk_431.cpp,-1,5,,"fprintf (fh, ""-1 Wrong number of fields: Got %i, expected 2.\n"",
fields_num);","[""addLog""]","[[], [""fprintf"", ""fh"", ""1"", ""Wrong"", ""number"", ""of"", ""fields"", ""Got"", ""%i"", ""expected"", ""2"", ""\\n"", ""fields_num""]]",[4867053012653187773],376
https://github.com/collectd/collectd/commit/55d30cc280696e7f7533c294961a44e246d812f0,27 Mar 2007,"logfile plugin: Don't use `access' when adding a logfile: It does not work as expected.

Of as advertised in the manpage, for that matter.",13,data/crawl/collectd/hunk_430.cpp,,,data/crawl/collectd/old_hunk_430.cpp,data/crawl/collectd/new_hunk_430.cpp,11,-1,"fprintf (stderr, ""logfile plugin: Access to %s denied: %s\n"",
value, sstrerror (errno, errbuf, sizeof (errbuf)));",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""logfile"", ""plugin"", ""Access"", ""to"", ""%s"", ""denied"", ""%s\\n"", ""value"", ""sstrerror"", ""errno"", ""errbuf"", ""sizeof"", ""errbuf""], []]",[42790886550579122096],375
https://github.com/collectd/collectd/commit/7c0bcfba668deb45426cf33b5ac721d5a444e8f2,19 Apr 2007,rrdtool plugin: Add a config option to configure the RRA-timespans at runtime.,61,data/crawl/collectd/hunk_427.cpp,,,data/crawl/collectd/old_hunk_427.cpp,data/crawl/collectd/new_hunk_427.cpp,-1,19,,"fprintf (stderr, ""rrdtool: realloc failed.\n"");","[""addLog""]","[[], [""fprintf"", ""stderr"", ""rrdtool"", ""realloc"", ""failed"", ""\\n""]]",[-20091449924340069475],374
https://github.com/collectd/collectd/commit/90885f2e932708b8596a71ec8861bcd5e1cf51a8,19 May 2007,"unixsock plugin: Return a message in any case.

This removes a fair amount of `FIXME's :)",22,data/crawl/collectd/hunk_426.cpp,,,data/crawl/collectd/old_hunk_426.cpp,data/crawl/collectd/new_hunk_426.cpp,3,3,"fprintf (fh, ""Unknown command: %s\n"", fields[0]);","fprintf (fh, ""-1 Unknown command: %s\n"", fields[0]);","[""updateContent""]","[[], [""1""]]",[6272018864],373
https://github.com/collectd/collectd/commit/90885f2e932708b8596a71ec8861bcd5e1cf51a8,19 May 2007,"unixsock plugin: Return a message in any case.

This removes a fair amount of `FIXME's :)",22,data/crawl/collectd/hunk_424.cpp,,,data/crawl/collectd/old_hunk_424.cpp,data/crawl/collectd/new_hunk_424.cpp,-1,3,,"fprintf (fh, ""-1 Number of values incorrect: Got %i, ""
""expected %i."", i, ds->ds_num);","[""addLog""]","[[], [""fprintf"", ""fh"", ""1"", ""Number"", ""of"", ""values"", ""incorrect"", ""Got"", ""%i"", ""expected"", ""%i"", ""i"", ""ds"", ""ds_num""]]",[-7727431879383168464],372
https://github.com/collectd/collectd/commit/90885f2e932708b8596a71ec8861bcd5e1cf51a8,19 May 2007,"unixsock plugin: Return a message in any case.

This removes a fair amount of `FIXME's :)",22,data/crawl/collectd/hunk_423.cpp,,,data/crawl/collectd/old_hunk_423.cpp,data/crawl/collectd/new_hunk_423.cpp,-1,5,,"fprintf (fh, ""-1 calloc failed."");","[""addLog""]","[[], [""fprintf"", ""fh"", ""1"", ""calloc"", ""failed""]]",[-17118112958572505307],371
https://github.com/collectd/collectd/commit/90885f2e932708b8596a71ec8861bcd5e1cf51a8,19 May 2007,"unixsock plugin: Return a message in any case.

This removes a fair amount of `FIXME's :)",22,data/crawl/collectd/hunk_420.cpp,,,data/crawl/collectd/old_hunk_420.cpp,data/crawl/collectd/new_hunk_420.cpp,-1,5,,"fprintf (fh, ""-1 format_name failed.\n"");","[""addLog""]","[[], [""fprintf"", ""fh"", ""1"", ""format_name"", ""failed"", ""\\n""]]",[-12894413264561192653],370
https://github.com/collectd/collectd/commit/fa9717086dd2591b99e138931ad716239578e415,06 Jun 2007,rrdtool plugin: Use the interval in the value lists to calculate the RRA sizes.,109,data/crawl/collectd/hunk_419.cpp,,,data/crawl/collectd/old_hunk_419.cpp,data/crawl/collectd/new_hunk_419.cpp,17,-1,"fprintf (stderr, ""rrdtool: `HeartBeat' must ""
""be greater than 0.\n"");",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""rrdtool"", ""HeartBeat"", ""must"", ""be"", ""greater"", ""than"", ""0"", ""\\n""], []]",[16081587207689144497],369
https://github.com/collectd/collectd/commit/fa9717086dd2591b99e138931ad716239578e415,06 Jun 2007,rrdtool plugin: Use the interval in the value lists to calculate the RRA sizes.,109,data/crawl/collectd/hunk_419.cpp,,,data/crawl/collectd/old_hunk_419.cpp,data/crawl/collectd/new_hunk_419.cpp,6,-1,"fprintf (stderr, ""rrdtool: `StepSize' must ""
""be greater than 0.\n"");",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""rrdtool"", ""StepSize"", ""must"", ""be"", ""greater"", ""than"", ""0"", ""\\n""], []]",[15556584065183962713],368
https://github.com/collectd/collectd/commit/c76c5061f8717a5045132e60804a03936dd35489,18 Jun 2007,"unixsock plugin: Implemented the `LISTVAL' command.

The LISTVAL command returnes a list of all available values and their timestamps.",75,data/crawl/collectd/hunk_417.cpp,,,data/crawl/collectd/old_hunk_417.cpp,data/crawl/collectd/new_hunk_417.cpp,-1,47,,"fputs (value_list[i], fh);","[""addLog""]","[[], [""fputs"", ""value_list[i]"", ""fh""]]",[1694655245285082419],367
https://github.com/collectd/collectd/commit/c76c5061f8717a5045132e60804a03936dd35489,18 Jun 2007,"unixsock plugin: Implemented the `LISTVAL' command.

The LISTVAL command returnes a list of all available values and their timestamps.",75,data/crawl/collectd/hunk_417.cpp,,,data/crawl/collectd/old_hunk_417.cpp,data/crawl/collectd/new_hunk_417.cpp,-1,45,,"fprintf (fh, ""%i Values found\n"", value_list_len);","[""addLog""]","[[], [""fprintf"", ""fh"", ""%i"", ""Values"", ""found\\n"", ""value_list_len""]]",[17225081589553645445],366
https://github.com/collectd/collectd/commit/c76c5061f8717a5045132e60804a03936dd35489,18 Jun 2007,"unixsock plugin: Implemented the `LISTVAL' command.

The LISTVAL command returnes a list of all available values and their timestamps.",75,data/crawl/collectd/hunk_417.cpp,,,data/crawl/collectd/old_hunk_417.cpp,data/crawl/collectd/new_hunk_417.cpp,-1,15,,"fprintf (fh, ""-1 Wrong number of fields: Got %i, expected 1.\n"",
fields_num);","[""addLog""]","[[], [""fprintf"", ""fh"", ""1"", ""Wrong"", ""number"", ""of"", ""fields"", ""Got"", ""%i"", ""expected"", ""1"", ""\\n"", ""fields_num""]]",[4867053012525187386],365
https://github.com/collectd/collectd/commit/c5bab65db542b276a776dc0643abcea91da60913,04 Jul 2007,collectd-nagios: Display performance data and generally be more verbose.,60,data/crawl/collectd/hunk_416.cpp,,,data/crawl/collectd/old_hunk_416.cpp,data/crawl/collectd/new_hunk_416.cpp,22,8,"printf (""OKAY: Average = %lf\n"",
(double) (total / total_num));","printf ("" %s=%lf;;;;"", values_names[i], values[i]);","[""updateVariable"", ""moveVariable"", ""removeVariable"", ""updateContent"", ""addVariable""]","[[""OKAY"", ""Average"", ""%lf\\n"", ""double"", ""total"", ""/"", ""total_num""], [""%s"", ""%lf"", ""values_names[i]"", ""values[i]""]]",[1711518549330162281],364
https://github.com/collectd/collectd/commit/c5bab65db542b276a776dc0643abcea91da60913,04 Jul 2007,collectd-nagios: Display performance data and generally be more verbose.,60,data/crawl/collectd/hunk_416.cpp,,,data/crawl/collectd/old_hunk_416.cpp,data/crawl/collectd/new_hunk_416.cpp,16,6,"printf (""WARNING: Average = %lf\n"",
(double) (total / total_num));","printf (""%lf average |"", average);","[""removeVariable"", ""updateContent"", ""addVariable""]","[[""WARNING"", ""Average"", ""%lf\\n"", ""double"", ""total"", ""/"", ""total_num""], [""%lf"", ""average"", ""average""]]",[-3224886824161169325],363
https://github.com/collectd/collectd/commit/c5bab65db542b276a776dc0643abcea91da60913,04 Jul 2007,collectd-nagios: Display performance data and generally be more verbose.,60,data/crawl/collectd/hunk_416.cpp,,,data/crawl/collectd/old_hunk_416.cpp,data/crawl/collectd/new_hunk_416.cpp,10,-1,"printf (""CRITICAL: Average = %lf\n"",
(double) (total / total_num));",,"[""removeLog""]","[[""printf"", ""CRITICAL"", ""Average"", ""%lf\\n"", ""double"", ""total"", ""/"", ""total_num""], []]",[-4624337150175339940],362
https://github.com/collectd/collectd/commit/c5bab65db542b276a776dc0643abcea91da60913,04 Jul 2007,collectd-nagios: Display performance data and generally be more verbose.,60,data/crawl/collectd/hunk_416.cpp,,,data/crawl/collectd/old_hunk_416.cpp,data/crawl/collectd/new_hunk_416.cpp,4,-1,"printf (""WARNING: No defined values found\n"");",,"[""removeLog""]","[[""printf"", ""WARNING"", ""No"", ""defined"", ""values"", ""found\\n""], []]",[-12626062080601662814],361
https://github.com/collectd/collectd/commit/c5bab65db542b276a776dc0643abcea91da60913,04 Jul 2007,collectd-nagios: Display performance data and generally be more verbose.,60,data/crawl/collectd/hunk_415.cpp,,,data/crawl/collectd/old_hunk_415.cpp,data/crawl/collectd/new_hunk_415.cpp,17,11,"printf (""OKAY: %i okay\n"", num_okay);","printf (""\n"");","[""removeVariable"", ""updateContent""]","[[""OKAY"", ""%i"", ""okay\\n"", ""num_okay""], [""\\n""]]",[3038055680120315921],360
https://github.com/collectd/collectd/commit/c5bab65db542b276a776dc0643abcea91da60913,04 Jul 2007,collectd-nagios: Display performance data and generally be more verbose.,60,data/crawl/collectd/hunk_415.cpp,,,data/crawl/collectd/old_hunk_415.cpp,data/crawl/collectd/new_hunk_415.cpp,11,-1,"printf (""WARNING: %i warning, %i okay\n"",
num_warning, num_okay);",,"[""removeLog""]","[[""printf"", ""WARNING"", ""%i"", ""warning"", ""%i"", ""okay\\n"", ""num_warning"", ""num_okay""], []]",[12015013627968114694],359
https://github.com/collectd/collectd/commit/c5bab65db542b276a776dc0643abcea91da60913,04 Jul 2007,collectd-nagios: Display performance data and generally be more verbose.,60,data/crawl/collectd/hunk_415.cpp,,,data/crawl/collectd/old_hunk_415.cpp,data/crawl/collectd/new_hunk_415.cpp,5,9,"printf (""CRITICAL: %i critical, %i warning, %i okay\n"",
num_critical, num_warning, num_okay);","printf ("" %s=%lf;;;;"", values_names[i], values[i]);","[""updateVariable"", ""moveVariable"", ""removeVariable"", ""updateContent"", ""addVariable""]","[[""CRITICAL"", ""%i"", ""critical"", ""%i"", ""warning"", ""%i"", ""okay\\n"", ""num_critical"", ""num_warning"", ""num_okay""], [""%s"", ""%lf"", ""values_names[i]"", ""values[i]""]]",[21432341596999727761],358
https://github.com/collectd/collectd/commit/6e779261c08a8996ed476d23638fc62ad867fa5f,23 Aug 2007,"exec and unixsock plugin: Move the shared `PUTVAL' code into src/utils_cmd_putval.[ch].

The putval code itself has been extended to allow `options' which can currently
be used to set the interval of the value-list(s) being submitted. Also,
submiting multiple value-lists in one command has been implemented. The
manpages should be up to date.",560,data/crawl/collectd/hunk_414.cpp,,,data/crawl/collectd/old_hunk_414.cpp,data/crawl/collectd/new_hunk_414.cpp,-1,130,,"fprintf (fh, ""-1 Wrong number of fields: Got %i, ""
""expected at least 3.\n"",
fields_num);","[""addLog""]","[[], [""fprintf"", ""fh"", ""1"", ""Wrong"", ""number"", ""of"", ""fields"", ""Got"", ""%i"", ""expected"", ""at"", ""least"", ""3"", ""\\n"", ""fields_num""]]",[11082183251415082751],357
https://github.com/collectd/collectd/commit/6e779261c08a8996ed476d23638fc62ad867fa5f,23 Aug 2007,"exec and unixsock plugin: Move the shared `PUTVAL' code into src/utils_cmd_putval.[ch].

The putval code itself has been extended to allow `options' which can currently
be used to set the interval of the value-list(s) being submitted. Also,
submiting multiple value-lists in one command has been implemented. The
manpages should be up to date.",560,data/crawl/collectd/hunk_414.cpp,,,data/crawl/collectd/old_hunk_414.cpp,data/crawl/collectd/new_hunk_414.cpp,-1,78,,"fprintf (fh, ""-1 Number of values incorrect: ""
""Got %i, expected %i.\n"",
       i, vl->values_len);","[""addLog""]","[[], [""fprintf"", ""fh"", ""1"", ""Number"", ""of"", ""values"", ""incorrect"", ""Got"", ""%i"", ""expected"", ""%i"", ""\\n"", ""i"", ""vl"", ""values_len""]]",[-1374601312888782737],356
https://github.com/collectd/collectd/commit/6e779261c08a8996ed476d23638fc62ad867fa5f,23 Aug 2007,"exec and unixsock plugin: Move the shared `PUTVAL' code into src/utils_cmd_putval.[ch].

The putval code itself has been extended to allow `options' which can currently
be used to set the interval of the value-list(s) being submitted. Also,
submiting multiple value-lists in one command has been implemented. The
manpages should be up to date.",560,data/crawl/collectd/hunk_413.cpp,,,data/crawl/collectd/old_hunk_413.cpp,data/crawl/collectd/new_hunk_413.cpp,140,-1,"fprintf (fh, ""0 Success\n"");",,"[""removeLog""]","[[""fprintf"", ""fh"", ""0"", ""Success\\n""], []]",[1294967653535268681],355
https://github.com/collectd/collectd/commit/6e779261c08a8996ed476d23638fc62ad867fa5f,23 Aug 2007,"exec and unixsock plugin: Move the shared `PUTVAL' code into src/utils_cmd_putval.[ch].

The putval code itself has been extended to allow `options' which can currently
be used to set the interval of the value-list(s) being submitted. Also,
submiting multiple value-lists in one command has been implemented. The
manpages should be up to date.",560,data/crawl/collectd/hunk_413.cpp,,,data/crawl/collectd/old_hunk_413.cpp,data/crawl/collectd/new_hunk_413.cpp,118,-1,"fprintf (fh, ""-1 malloc failed."");",,"[""removeLog""]","[[""fprintf"", ""fh"", ""1"", ""malloc"", ""failed""], []]",[17844596785343168817],354
https://github.com/collectd/collectd/commit/6e779261c08a8996ed476d23638fc62ad867fa5f,23 Aug 2007,"exec and unixsock plugin: Move the shared `PUTVAL' code into src/utils_cmd_putval.[ch].

The putval code itself has been extended to allow `options' which can currently
be used to set the interval of the value-list(s) being submitted. Also,
submiting multiple value-lists in one command has been implemented. The
manpages should be up to date.",560,data/crawl/collectd/hunk_413.cpp,,,data/crawl/collectd/old_hunk_413.cpp,data/crawl/collectd/new_hunk_413.cpp,107,-1,"fprintf (fh, ""-1 Number of values incorrect: Got %i, ""
""expected %i."", i, ds->ds_num);",,"[""removeLog""]","[[""fprintf"", ""fh"", ""1"", ""Number"", ""of"", ""values"", ""incorrect"", ""Got"", ""%i"", ""expected"", ""%i"", ""i"", ""ds"", ""ds_num""], []]",[7727431879383168464],353
https://github.com/collectd/collectd/commit/6e779261c08a8996ed476d23638fc62ad867fa5f,23 Aug 2007,"exec and unixsock plugin: Move the shared `PUTVAL' code into src/utils_cmd_putval.[ch].

The putval code itself has been extended to allow `options' which can currently
be used to set the interval of the value-list(s) being submitted. Also,
submiting multiple value-lists in one command has been implemented. The
manpages should be up to date.",560,data/crawl/collectd/hunk_413.cpp,,,data/crawl/collectd/old_hunk_413.cpp,data/crawl/collectd/new_hunk_413.cpp,80,-1,"fprintf (fh, ""-1 calloc failed."");",,"[""removeLog""]","[[""fprintf"", ""fh"", ""1"", ""calloc"", ""failed""], []]",[17118112958572505307],352
https://github.com/collectd/collectd/commit/6e779261c08a8996ed476d23638fc62ad867fa5f,23 Aug 2007,"exec and unixsock plugin: Move the shared `PUTVAL' code into src/utils_cmd_putval.[ch].

The putval code itself has been extended to allow `options' which can currently
be used to set the interval of the value-list(s) being submitted. Also,
submiting multiple value-lists in one command has been implemented. The
manpages should be up to date.",560,data/crawl/collectd/hunk_413.cpp,,,data/crawl/collectd/old_hunk_413.cpp,data/crawl/collectd/new_hunk_413.cpp,61,-1,"fprintf (fh, ""-1 No time found."");",,"[""removeLog""]","[[""fprintf"", ""fh"", ""1"", ""No"", ""time"", ""found""], []]",[-2189894988615169843],351
https://github.com/collectd/collectd/commit/6e779261c08a8996ed476d23638fc62ad867fa5f,23 Aug 2007,"exec and unixsock plugin: Move the shared `PUTVAL' code into src/utils_cmd_putval.[ch].

The putval code itself has been extended to allow `options' which can currently
be used to set the interval of the value-list(s) being submitted. Also,
submiting multiple value-lists in one command has been implemented. The
manpages should be up to date.",560,data/crawl/collectd/hunk_413.cpp,,,data/crawl/collectd/old_hunk_413.cpp,data/crawl/collectd/new_hunk_413.cpp,45,-1,"fprintf (fh, ""-1 Identifier too long."");",,"[""removeLog""]","[[""fprintf"", ""fh"", ""1"", ""Identifier"", ""too"", ""long""], []]",[-7926612238597679610],350
https://github.com/collectd/collectd/commit/6e779261c08a8996ed476d23638fc62ad867fa5f,23 Aug 2007,"exec and unixsock plugin: Move the shared `PUTVAL' code into src/utils_cmd_putval.[ch].

The putval code itself has been extended to allow `options' which can currently
be used to set the interval of the value-list(s) being submitted. Also,
submiting multiple value-lists in one command has been implemented. The
manpages should be up to date.",560,data/crawl/collectd/hunk_413.cpp,,,data/crawl/collectd/old_hunk_413.cpp,data/crawl/collectd/new_hunk_413.cpp,33,-1,"fprintf (fh, ""-1 Cannot parse identifier.\n"");",,"[""removeLog""]","[[""fprintf"", ""fh"", ""1"", ""Cannot"", ""parse"", ""identifier"", ""\\n""], []]",[2315965906722351118],349
https://github.com/collectd/collectd/commit/6e779261c08a8996ed476d23638fc62ad867fa5f,23 Aug 2007,"exec and unixsock plugin: Move the shared `PUTVAL' code into src/utils_cmd_putval.[ch].

The putval code itself has been extended to allow `options' which can currently
be used to set the interval of the value-list(s) being submitted. Also,
submiting multiple value-lists in one command has been implemented. The
manpages should be up to date.",560,data/crawl/collectd/hunk_413.cpp,,,data/crawl/collectd/old_hunk_413.cpp,data/crawl/collectd/new_hunk_413.cpp,21,-1,"fprintf (fh, ""-1 Wrong number of fields: Got %i, expected 3.\n"",
fields_num);",,"[""removeLog""]","[[""fprintf"", ""fh"", ""1"", ""Wrong"", ""number"", ""of"", ""fields"", ""Got"", ""%i"", ""expected"", ""3"", ""\\n"", ""fields_num""], []]",[-4867053012781188156],348
https://github.com/collectd/collectd/commit/5d99fadf9afc1de198576e1ce5f24ef423333f72,29 Aug 2007,"netlink plugin: Added a plugin for (very) enhanced Linux traffic statistics.

This plugin uses the netlink sockets provided by Linux 2.2 and later to get
information about the links, qdiscs, classes, and filters in the network stack
of a Linux system. With this plugin it's possible to get some _very_ detailed
statistics.

Still to do: Update the `types.db', `collectd.conf(5)', and `configure.conf.in'.",542,data/crawl/collectd/hunk_412.cpp,,,data/crawl/collectd/old_hunk_412.cpp,data/crawl/collectd/new_hunk_412.cpp,-1,261,,"printf (""=== qos_filter ===\n"");","[""addLog""]","[[], [""printf"", ""qos_filter"", ""\\n""]]",[12053690319845892833],347
https://github.com/collectd/collectd/commit/4ba48e6280455f0e3ab13584b5909d5aece1ad6a,30 Aug 2007,netlink plugin: Fix the submitted values.,8,data/crawl/collectd/hunk_411.cpp,,,data/crawl/collectd/old_hunk_411.cpp,data/crawl/collectd/new_hunk_411.cpp,3,-1,"printf (""=== qos_filter ===\n"");",,"[""removeLog""]","[[""printf"", ""qos_filter"", ""\\n""], []]",[-12053690319845892833],346
https://github.com/collectd/collectd/commit/3d8b009c04400cc4e7075e49da38774867b29102,12 Sep 2007,"plugin.c: Print lt_dlopen() error messages to STDERR as well.

This makes sure the user will get the message on the terminal in any case.

Signed-off-by: Sebastian Harl <sh@tokkee.org>
Signed-off-by: Florian Forster <octo@huhu.verplant.org>",5,data/crawl/collectd/hunk_410.cpp,,,data/crawl/collectd/old_hunk_410.cpp,data/crawl/collectd/new_hunk_410.cpp,-1,5,,"fprintf (stderr, ""Unable to load plugin %s.\n"", type);","[""addLog""]","[[], [""fprintf"", ""stderr"", ""Unable"", ""to"", ""load"", ""plugin"", ""%s"", ""\\n"", ""type""]]",[-7747979967148082457],345
https://github.com/collectd/collectd/commit/3d8b009c04400cc4e7075e49da38774867b29102,12 Sep 2007,"plugin.c: Print lt_dlopen() error messages to STDERR as well.

This makes sure the user will get the message on the terminal in any case.

Signed-off-by: Sebastian Harl <sh@tokkee.org>
Signed-off-by: Florian Forster <octo@huhu.verplant.org>",5,data/crawl/collectd/hunk_409.cpp,,,data/crawl/collectd/old_hunk_409.cpp,data/crawl/collectd/new_hunk_409.cpp,-1,3,,"fprintf (stderr, ""lt_dlopen failed: %s\n"", error);","[""addLog""]","[[], [""fprintf"", ""stderr"", ""lt_dlopen"", ""failed"", ""%s\\n"", ""error""]]",[-14142489869162513202],344
https://github.com/collectd/collectd/commit/1ff419f97e259936d93474a0e50551f4e05911a1,28 Sep 2007,"Added MyPlugin.pm to contrib/examples/.

This is a sample/template Perl plugin.

Signed-off-by: Sebastian Harl <sh@tokkee.org>
Signed-off-by: Florian Forster <octo@huhu.verplant.org>",125,data/crawl/collectd/hunk_408.cpp,,,data/crawl/collectd/old_hunk_408.cpp,data/crawl/collectd/new_hunk_408.cpp,-1,84,,"Collectd::plugin_log (Collectd::LOG_WARNING,
""DS number does not match values length"");","[""addLog""]","[[], [""Collectd"", ""plugin_log"", ""Collectd"", ""LOG_WARNING"", ""DS"", ""number"", ""does"", ""not"", ""match"", ""values"", ""length""]]",[-1606808393523459347],343
https://github.com/collectd/collectd/commit/ad52e3aa2f9fcc61bb3e999af11d162bc790921c,28 Sep 2007,"Added myplugin.c to contrib/examples/.

This is a sample/template C plugin.

Signed-off-by: Sebastian Harl <sh@tokkee.org>
Signed-off-by: Florian Forster <octo@huhu.verplant.org>",171,data/crawl/collectd/hunk_407.cpp,,,data/crawl/collectd/old_hunk_407.cpp,data/crawl/collectd/new_hunk_407.cpp,-1,143,,"printf (""LOG: %i - %s\n"", severity, msg);","[""addLog""]","[[], [""printf"", ""LOG"", ""%i"", ""%s\\n"", ""severity"", ""msg""]]",[33796373838836422159],342
https://github.com/collectd/collectd/commit/ad52e3aa2f9fcc61bb3e999af11d162bc790921c,28 Sep 2007,"Added myplugin.c to contrib/examples/.

This is a sample/template C plugin.

Signed-off-by: Sebastian Harl <sh@tokkee.org>
Signed-off-by: Florian Forster <octo@huhu.verplant.org>",171,data/crawl/collectd/hunk_407.cpp,,,data/crawl/collectd/old_hunk_407.cpp,data/crawl/collectd/new_hunk_407.cpp,-1,133,,"printf (""%lld\n"", vl->values[i].counter);","[""addLog""]","[[], [""printf"", ""%lld\\n"", ""vl"", ""values[i]"", ""counter""]]",[8985639646503058347],341
https://github.com/collectd/collectd/commit/ad52e3aa2f9fcc61bb3e999af11d162bc790921c,28 Sep 2007,"Added myplugin.c to contrib/examples/.

This is a sample/template C plugin.

Signed-off-by: Sebastian Harl <sh@tokkee.org>
Signed-off-by: Florian Forster <octo@huhu.verplant.org>",171,data/crawl/collectd/hunk_407.cpp,,,data/crawl/collectd/old_hunk_407.cpp,data/crawl/collectd/new_hunk_407.cpp,-1,131,,"printf (""%f\n"", vl->values[i].gauge);","[""addLog""]","[[], [""printf"", ""%f\\n"", ""vl"", ""values[i]"", ""gauge""]]",[11458884032333812788],340
https://github.com/collectd/collectd/commit/ad52e3aa2f9fcc61bb3e999af11d162bc790921c,28 Sep 2007,"Added myplugin.c to contrib/examples/.

This is a sample/template C plugin.

Signed-off-by: Sebastian Harl <sh@tokkee.org>
Signed-off-by: Florian Forster <octo@huhu.verplant.org>",171,data/crawl/collectd/hunk_407.cpp,,,data/crawl/collectd/old_hunk_407.cpp,data/crawl/collectd/new_hunk_407.cpp,-1,126,,"printf (""%s (%s) at %i: "", name,
(ds->ds->type == DS_TYPE_GAUGE) ? ""GAUGE"" : ""COUNTER"",
(int)vl->time);","[""addLog""]","[[], [""printf"", ""%s"", ""%s"", ""at"", ""%i"", ""name"", ""ds"", ""ds"", ""type"", ""DS_TYPE_GAUGE"", ""GAUGE"", ""COUNTER"", ""int"", ""vl"", ""time""]]",[-3243496208020266124],339
https://github.com/collectd/collectd/commit/ad52e3aa2f9fcc61bb3e999af11d162bc790921c,28 Sep 2007,"Added myplugin.c to contrib/examples/.

This is a sample/template C plugin.

Signed-off-by: Sebastian Harl <sh@tokkee.org>
Signed-off-by: Florian Forster <octo@huhu.verplant.org>",171,data/crawl/collectd/hunk_407.cpp,,,data/crawl/collectd/old_hunk_407.cpp,data/crawl/collectd/new_hunk_407.cpp,-1,113,,"plugin_log (LOG_WARNING, ""DS number does not match values length"");","[""addLog""]","[[], [""plugin_log"", ""LOG_WARNING"", ""DS"", ""number"", ""does"", ""not"", ""match"", ""values"", ""length""]]",[-907915692323360303],338
https://github.com/collectd/collectd/commit/7f27b191564dc366eab17f1515fc183b24911dbf,01 Oct 2007,"perl plugin: Reimplemented plugin_{,un}register() in plain Perl.

As this involves only Perl data structures, it makes more sense to write
the algorithms in plain Perl as well. I suppose the perl interpreter can
do a better job optimizing the code :-)

Signed-off-by: Sebastian Harl <sh@tokkee.org>",485,data/crawl/collectd/hunk_406.cpp,,,data/crawl/collectd/old_hunk_406.cpp,data/crawl/collectd/new_hunk_406.cpp,-1,3,,(SvIV (ST (0));,"[""addLog""]","[[], [""SvIV"", ""ST"", ""0""]]",[-1825664812929729794],337
https://github.com/collectd/collectd/commit/7f27b191564dc366eab17f1515fc183b24911dbf,01 Oct 2007,"perl plugin: Reimplemented plugin_{,un}register() in plain Perl.

As this involves only Perl data structures, it makes more sense to write
the algorithms in plain Perl as well. I suppose the perl interpreter can
do a better job optimizing the code :-)

Signed-off-by: Sebastian Harl <sh@tokkee.org>",485,data/crawl/collectd/hunk_406.cpp,,,data/crawl/collectd/old_hunk_406.cpp,data/crawl/collectd/new_hunk_406.cpp,5,-1,"plugin_log (SvIV (ST (0)), SvPV_nolen (ST (1)));",,"[""removeLog""]","[[""plugin_log"", ""SvIV"", ""ST"", ""0"", ""SvPV_nolen"", ""ST"", ""1""], []]",[8595347171521742895],336
https://github.com/collectd/collectd/commit/7f27b191564dc366eab17f1515fc183b24911dbf,01 Oct 2007,"perl plugin: Reimplemented plugin_{,un}register() in plain Perl.

As this involves only Perl data structures, it makes more sense to write
the algorithms in plain Perl as well. I suppose the perl interpreter can
do a better job optimizing the code :-)

Signed-off-by: Sebastian Harl <sh@tokkee.org>",485,data/crawl/collectd/hunk_405.cpp,,,data/crawl/collectd/old_hunk_405.cpp,data/crawl/collectd/new_hunk_405.cpp,-1,72,,"plugin_log ($lvl, $msg);","[""addLog""]","[[], [""plugin_log"", ""lvl"", ""msg""]]",[8034485849796544329],335
https://github.com/collectd/collectd/commit/f0f7f5cda17991d16b42c8a1e925595115825d7f,26 Oct 2007,logfile plugin: Implemented an option to prefix logged lines with a timestamp.,35,data/crawl/collectd/hunk_404.cpp,,,data/crawl/collectd/old_hunk_404.cpp,data/crawl/collectd/new_hunk_404.cpp,-1,4,,"fprintf (fh, ""[%s] %s\n"", timestamp_str, msg);","[""addLog""]","[[], [""fprintf"", ""fh"", ""[%s]"", ""%s\\n"", ""timestamp_str"", ""msg""]]",[22203721074873485231],334
https://github.com/collectd/collectd/commit/f69ce75eded538c77c7af468fe983139658d69aa,06 Nov 2007,"libvirtstats plugin: Added a plugin to collect virtual host statistics.

  - rebased to git
  - includes updates to the manpage
  - ignorelist code now fixed
  - removed debugging messages

Attached is a plugin allowing collectd to use libvirt to collect CPU, disk and
network statistics for domains.

Usage

Signed-off-by: Florian Forster <octo@huhu.verplant.org>",829,data/crawl/collectd/hunk_401.cpp,,,data/crawl/collectd/old_hunk_401.cpp,data/crawl/collectd/new_hunk_401.cpp,-1,227,,"fprintf (stderr, ""interface device %d %s:%s\n"",
                 i, virDomainGetName (interface_devices[i].dom),
                 interface_devices[i].path);","[""addLog""]","[[], [""fprintf"", ""stderr"", ""interface"", ""device"", ""%d"", ""%s"", ""%s\\n"", ""i"", ""virDomainGetName"", ""interface_devices[i]"", ""dom"", ""interface_devices[i]"", ""path""]]",[-22664881476684933613],333
https://github.com/collectd/collectd/commit/f69ce75eded538c77c7af468fe983139658d69aa,06 Nov 2007,"libvirtstats plugin: Added a plugin to collect virtual host statistics.

  - rebased to git
  - includes updates to the manpage
  - ignorelist code now fixed
  - removed debugging messages

Attached is a plugin allowing collectd to use libvirt to collect CPU, disk and
network statistics for domains.

Usage

Signed-off-by: Florian Forster <octo@huhu.verplant.org>",829,data/crawl/collectd/hunk_401.cpp,,,data/crawl/collectd/old_hunk_401.cpp,data/crawl/collectd/new_hunk_401.cpp,-1,223,,"fprintf  (stderr, ""block device %d %s:%s\n"",
                  i, virDomainGetName (block_devices[i].dom),
                  block_devices[i].path);","[""addLog""]","[[], [""fprintf"", ""stderr"", ""block"", ""device"", ""%d"", ""%s"", ""%s\\n"", ""i"", ""virDomainGetName"", ""block_devices[i]"", ""dom"", ""block_devices[i]"", ""path""]]",[-6368325521172541387],332
https://github.com/collectd/collectd/commit/f69ce75eded538c77c7af468fe983139658d69aa,06 Nov 2007,"libvirtstats plugin: Added a plugin to collect virtual host statistics.

  - rebased to git
  - includes updates to the manpage
  - ignorelist code now fixed
  - removed debugging messages

Attached is a plugin allowing collectd to use libvirt to collect CPU, disk and
network statistics for domains.

Usage

Signed-off-by: Florian Forster <octo@huhu.verplant.org>",829,data/crawl/collectd/hunk_401.cpp,,,data/crawl/collectd/old_hunk_401.cpp,data/crawl/collectd/new_hunk_401.cpp,-1,221,,"fprintf (stderr, ""domain %s\n"", virDomainGetName (domains[i]));","[""addLog""]","[[], [""fprintf"", ""stderr"", ""domain"", ""%s\\n"", ""virDomainGetName"", ""domains[i]""]]",[12736181715281540384],331
https://github.com/collectd/collectd/commit/69e5d982e7adf27a0eca6e6431f748f4913d80ac,04 Dec 2007,"collectdmon: Added a small daemon monitoring collectd.

This is a small ""wrapper"" daemon which starts and monitors the collectd
daemon. If collectd terminates it will automatically be restarted, unless
collectdmon was told to shut it down.

Current features:

 * restarting the daemon
 * logging to syslog
 * detection of quickly, repeatedly respawning processes
   (similar to SysV init)

collectdmon is similar to mysqld_safe.

Signed-off-by: Sebastian Harl <sh@tokkee.org>
Signed-off-by: Florian Forster <octo@huhu.verplant.org>",359,data/crawl/collectd/hunk_399.cpp,,,data/crawl/collectd/old_hunk_399.cpp,data/crawl/collectd/new_hunk_399.cpp,-1,281,,"fprintf (stderr, ""Out of memory."");","[""addLog""]","[[], [""fprintf"", ""stderr"", ""Out"", ""of"", ""memory""]]",[-2841409039053898551],330
https://github.com/collectd/collectd/commit/69e5d982e7adf27a0eca6e6431f748f4913d80ac,04 Dec 2007,"collectdmon: Added a small daemon monitoring collectd.

This is a small ""wrapper"" daemon which starts and monitors the collectd
daemon. If collectd terminates it will automatically be restarted, unless
collectdmon was told to shut it down.

Current features:

 * restarting the daemon
 * logging to syslog
 * detection of quickly, repeatedly respawning processes
   (similar to SysV init)

collectdmon is similar to mysqld_safe.

Signed-off-by: Sebastian Harl <sh@tokkee.org>
Signed-off-by: Florian Forster <octo@huhu.verplant.org>",359,data/crawl/collectd/hunk_399.cpp,,,data/crawl/collectd/old_hunk_399.cpp,data/crawl/collectd/new_hunk_399.cpp,-1,126,,"fprintf (stderr, ""Error: fork() failed: %s\n"", strerror (errno));","[""addLog""]","[[], [""fprintf"", ""stderr"", ""Error"", ""fork"", ""failed"", ""%s\\n"", ""strerror"", ""errno""]]",[3918413301129965626],329
https://github.com/collectd/collectd/commit/69e5d982e7adf27a0eca6e6431f748f4913d80ac,04 Dec 2007,"collectdmon: Added a small daemon monitoring collectd.

This is a small ""wrapper"" daemon which starts and monitors the collectd
daemon. If collectd terminates it will automatically be restarted, unless
collectdmon was told to shut it down.

Current features:

 * restarting the daemon
 * logging to syslog
 * detection of quickly, repeatedly respawning processes
   (similar to SysV init)

collectdmon is similar to mysqld_safe.

Signed-off-by: Sebastian Harl <sh@tokkee.org>
Signed-off-by: Florian Forster <octo@huhu.verplant.org>",359,data/crawl/collectd/hunk_399.cpp,,,data/crawl/collectd/old_hunk_399.cpp,data/crawl/collectd/new_hunk_399.cpp,-1,121,,"fprintf (stderr, ""Error: getrlimit() failed: %s\n"", strerror (errno));","[""addLog""]","[[], [""fprintf"", ""stderr"", ""Error"", ""getrlimit"", ""failed"", ""%s\\n"", ""strerror"", ""errno""]]",[7241720732809370804],328
https://github.com/collectd/collectd/commit/69e5d982e7adf27a0eca6e6431f748f4913d80ac,04 Dec 2007,"collectdmon: Added a small daemon monitoring collectd.

This is a small ""wrapper"" daemon which starts and monitors the collectd
daemon. If collectd terminates it will automatically be restarted, unless
collectdmon was told to shut it down.

Current features:

 * restarting the daemon
 * logging to syslog
 * detection of quickly, repeatedly respawning processes
   (similar to SysV init)

collectdmon is similar to mysqld_safe.

Signed-off-by: Sebastian Harl <sh@tokkee.org>
Signed-off-by: Florian Forster <octo@huhu.verplant.org>",359,data/crawl/collectd/hunk_399.cpp,,,data/crawl/collectd/old_hunk_399.cpp,data/crawl/collectd/new_hunk_399.cpp,-1,116,,"fprintf (stderr, ""Error: chdir() failed: %s\n"", strerror (errno));","[""addLog""]","[[], [""fprintf"", ""stderr"", ""Error"", ""chdir"", ""failed"", ""%s\\n"", ""strerror"", ""errno""]]",[7371683942388949597],327
https://github.com/collectd/collectd/commit/69e5d982e7adf27a0eca6e6431f748f4913d80ac,04 Dec 2007,"collectdmon: Added a small daemon monitoring collectd.

This is a small ""wrapper"" daemon which starts and monitors the collectd
daemon. If collectd terminates it will automatically be restarted, unless
collectdmon was told to shut it down.

Current features:

 * restarting the daemon
 * logging to syslog
 * detection of quickly, repeatedly respawning processes
   (similar to SysV init)

collectdmon is similar to mysqld_safe.

Signed-off-by: Sebastian Harl <sh@tokkee.org>
Signed-off-by: Florian Forster <octo@huhu.verplant.org>",359,data/crawl/collectd/hunk_399.cpp,,,data/crawl/collectd/old_hunk_399.cpp,data/crawl/collectd/new_hunk_399.cpp,-1,91,,"fprintf (file, ""%i\n"", (int)getpid ());","[""addLog""]","[[], [""fprintf"", ""file"", ""%i\\n"", ""int"", ""getpid""]]",[-3174148063786369369],326
https://github.com/collectd/collectd/commit/69e5d982e7adf27a0eca6e6431f748f4913d80ac,04 Dec 2007,"collectdmon: Added a small daemon monitoring collectd.

This is a small ""wrapper"" daemon which starts and monitors the collectd
daemon. If collectd terminates it will automatically be restarted, unless
collectdmon was told to shut it down.

Current features:

 * restarting the daemon
 * logging to syslog
 * detection of quickly, repeatedly respawning processes
   (similar to SysV init)

collectdmon is similar to mysqld_safe.

Signed-off-by: Sebastian Harl <sh@tokkee.org>
Signed-off-by: Florian Forster <octo@huhu.verplant.org>",359,data/crawl/collectd/hunk_399.cpp,,,data/crawl/collectd/old_hunk_399.cpp,data/crawl/collectd/new_hunk_399.cpp,-1,63,,"printf (""Usage: %s <options> [-- <collectd options>]\n""

""\nAvailable options:\n""
""  -h         Display this help and exit.\n""
""  -c <path>  Path to the collectd binary.\n""
""  -P <file>  PID-file.\n""

""\nFor <collectd options> see collectd.conf(5).\n""

""\n""PACKAGE"" ""VERSION"", http://collectd.org/\n""
""by Florian octo Forster <octo@verplant.org>\n""
""for contributions see `AUTHORS'\n"", name);","[""addLog""]","[[], [""printf"", ""Usage"", ""%s"", ""options"", ""["", ""collectd"", ""options"", ""]\\n"", ""\\nAvailable"", ""options"", ""\\n"", ""h"", ""Display"", ""this"", ""help"", ""and"", ""exit"", ""\\n"", ""c"", ""path"", ""Path"", ""to"", ""the"", ""collectd"", ""binary"", ""\\n"", ""P"", ""file"", ""PID"", ""file"", ""\\n"", ""\\nFor"", ""collectd"", ""options"", ""see"", ""collectd"", ""conf"", ""5"", ""\\n"", ""\\n"", ""PACKAGE"", ""VERSION"", ""http"", ""//collectd"", ""org/\\n"", ""by"", ""Florian"", ""octo"", ""Forster"", ""octo"", ""verplant"", ""org"", ""\\n"", ""for"", ""contributions"", ""see"", ""AUTHORS"", ""\\n"", ""name""]]",[16060801878405406906],325
https://github.com/collectd/collectd/commit/3e9c24b5cb8a0891b0daf49d6f574435afb3233d,04 Dec 2007,"examples/MyPlugin.pm: Updated for new version of the perl plugin.

 * use Collectd.pm and removed ""Collectd::"" prefix
 * pass callbacks by name to plugin_register()

Signed-off-by: Sebastian Harl <sh@tokkee.org>
Signed-off-by: Florian Forster <octo@huhu.verplant.org>",21,data/crawl/collectd/hunk_398.cpp,,,data/crawl/collectd/old_hunk_398.cpp,data/crawl/collectd/new_hunk_398.cpp,3,3,"Collectd::plugin_log (Collectd::LOG_WARNING,
""DS number does not match values length"");","plugin_log (LOG_WARNING,
""DS number does not match values length"");","[""addLog"", ""removeVariable"", ""addVariable"", ""removeLog""]","[[""Collectd"", ""Collectd""], []]",[698892701200099044],324
https://github.com/collectd/collectd/commit/c41e4859301c69b1489abcd9e2e7c7959d5ddf50,25 Dec 2007,exec plugin: Added the possibility to execute programs upon notifications (EXPERIMENTAL),205,data/crawl/collectd/hunk_396.cpp,,,data/crawl/collectd/old_hunk_396.cpp,data/crawl/collectd/new_hunk_396.cpp,-1,44,,"fprintf (fh, ""Severity: %s\n""
      ""Time: %u\n""
      ""Host: %s\n""
      ""Message: %s\n""
      ""\n"",
      severity, (unsigned int) n->time, n->host, n->message);","[""addLog""]","[[], [""fprintf"", ""fh"", ""Severity"", ""%s\\n"", ""Time"", ""%u\\n"", ""Host"", ""%s\\n"", ""Message"", ""%s\\n"", ""\\n"", ""severity"", ""unsigned"", ""int"", ""n"", ""time"", ""n"", ""host"", ""n"", ""message""]]",[24231486084458222248],323
https://github.com/collectd/collectd/commit/0e3895c00ea46efccac1a7cf27483b6556cf8741,23 Jan 2008,"collectd: Added ``associative'' members to the notification_t structure.

A notification does not need to be related to any performance data collected by
collectd, but now it *may* be related. This is used in the threshold stuff
already and passed via ExecNotification in the exec plugin, too.
The new `notification_init' function in `src/common.c' and the
`NOTIFICATION_INIT_VL' macro simplify the initialization of these new fields.",102,data/crawl/collectd/hunk_395.cpp,,,data/crawl/collectd/old_hunk_395.cpp,data/crawl/collectd/new_hunk_395.cpp,-1,16,,"fprintf (fh, ""TypeInstance: %s\n"", n->type_instance);","[""addLog""]","[[], [""fprintf"", ""fh"", ""TypeInstance"", ""%s\\n"", ""n"", ""type_instance""]]",[5075116577629106645],322
https://github.com/collectd/collectd/commit/0e3895c00ea46efccac1a7cf27483b6556cf8741,23 Jan 2008,"collectd: Added ``associative'' members to the notification_t structure.

A notification does not need to be related to any performance data collected by
collectd, but now it *may* be related. This is used in the threshold stuff
already and passed via ExecNotification in the exec plugin, too.
The new `notification_init' function in `src/common.c' and the
`NOTIFICATION_INIT_VL' macro simplify the initialization of these new fields.",102,data/crawl/collectd/hunk_395.cpp,,,data/crawl/collectd/old_hunk_395.cpp,data/crawl/collectd/new_hunk_395.cpp,-1,14,,"fprintf (fh, ""Type: %s\n"", n->type);","[""addLog""]","[[], [""fprintf"", ""fh"", ""Type"", ""%s\\n"", ""n"", ""type""]]",[5581959301849780229],321
https://github.com/collectd/collectd/commit/0e3895c00ea46efccac1a7cf27483b6556cf8741,23 Jan 2008,"collectd: Added ``associative'' members to the notification_t structure.

A notification does not need to be related to any performance data collected by
collectd, but now it *may* be related. This is used in the threshold stuff
already and passed via ExecNotification in the exec plugin, too.
The new `notification_init' function in `src/common.c' and the
`NOTIFICATION_INIT_VL' macro simplify the initialization of these new fields.",102,data/crawl/collectd/hunk_395.cpp,,,data/crawl/collectd/old_hunk_395.cpp,data/crawl/collectd/new_hunk_395.cpp,-1,12,,"fprintf (fh, ""PluginInstance: %s\n"", n->plugin_instance);","[""addLog""]","[[], [""fprintf"", ""fh"", ""PluginInstance"", ""%s\\n"", ""n"", ""plugin_instance""]]",[13730955409283958373],320
https://github.com/collectd/collectd/commit/0e3895c00ea46efccac1a7cf27483b6556cf8741,23 Jan 2008,"collectd: Added ``associative'' members to the notification_t structure.

A notification does not need to be related to any performance data collected by
collectd, but now it *may* be related. This is used in the threshold stuff
already and passed via ExecNotification in the exec plugin, too.
The new `notification_init' function in `src/common.c' and the
`NOTIFICATION_INIT_VL' macro simplify the initialization of these new fields.",102,data/crawl/collectd/hunk_395.cpp,,,data/crawl/collectd/old_hunk_395.cpp,data/crawl/collectd/new_hunk_395.cpp,-1,10,,"fprintf (fh, ""Plugin: %s\n"", n->plugin);","[""addLog""]","[[], [""fprintf"", ""fh"", ""Plugin"", ""%s\\n"", ""n"", ""plugin""]]",[-15601237181259921573],319
https://github.com/collectd/collectd/commit/0e3895c00ea46efccac1a7cf27483b6556cf8741,23 Jan 2008,"collectd: Added ``associative'' members to the notification_t structure.

A notification does not need to be related to any performance data collected by
collectd, but now it *may* be related. This is used in the threshold stuff
already and passed via ExecNotification in the exec plugin, too.
The new `notification_init' function in `src/common.c' and the
`NOTIFICATION_INIT_VL' macro simplify the initialization of these new fields.",102,data/crawl/collectd/hunk_395.cpp,,,data/crawl/collectd/old_hunk_395.cpp,data/crawl/collectd/new_hunk_395.cpp,-1,8,,"fprintf (fh, ""Host: %s\n"", n->host);","[""addLog""]","[[], [""fprintf"", ""fh"", ""Host"", ""%s\\n"", ""n"", ""host""]]",[16553056612838525745],318
https://github.com/collectd/collectd/commit/0e3895c00ea46efccac1a7cf27483b6556cf8741,23 Jan 2008,"collectd: Added ``associative'' members to the notification_t structure.

A notification does not need to be related to any performance data collected by
collectd, but now it *may* be related. This is used in the threshold stuff
already and passed via ExecNotification in the exec plugin, too.
The new `notification_init' function in `src/common.c' and the
`NOTIFICATION_INIT_VL' macro simplify the initialization of these new fields.",102,data/crawl/collectd/hunk_395.cpp,,,data/crawl/collectd/old_hunk_395.cpp,data/crawl/collectd/new_hunk_395.cpp,1,1,"fprintf (fh, ""Severity: %s\n""
      ""Time: %u\n""
      ""Host: %s\n""
      ""Message: %s\n""
      ""\n"",
      severity, (unsigned int) n->time, n->host, n->message);","fprintf (fh, ""Severity: %s\n""
      ""Time: %u\n""
      ""Message: %s\n"",
      severity, (unsigned int) n->time, n->message);","[""removeVariable"", ""removeContent""]","[[""Host"", ""%s\\n"", ""\\n"", ""host"", ""n""], []]",[-21755915079458385469],317
https://github.com/collectd/collectd/commit/963766d0bcbbcdaeb7ebf567046c613455133666,23 Jan 2008,"src/utils_cmd_putnotif.[ch]: Added a new module which handles parsing of notifications from some command line or similar.

Of course, this is similar to the `utils_cmd_putval' module.",202,data/crawl/collectd/hunk_394.cpp,,,data/crawl/collectd/old_hunk_394.cpp,data/crawl/collectd/new_hunk_394.cpp,-1,154,,"fprintf (fh, ""-1 No message or message of length 0 given.\n"");","[""addLog""]","[[], [""fprintf"", ""fh"", ""1"", ""No"", ""message"", ""or"", ""message"", ""of"", ""length"", ""0"", ""given"", ""\\n""]]",[-8126497245129044582],316
https://github.com/collectd/collectd/commit/963766d0bcbbcdaeb7ebf567046c613455133666,23 Jan 2008,"src/utils_cmd_putnotif.[ch]: Added a new module which handles parsing of notifications from some command line or similar.

Of course, this is similar to the `utils_cmd_putval' module.",202,data/crawl/collectd/hunk_394.cpp,,,data/crawl/collectd/old_hunk_394.cpp,data/crawl/collectd/new_hunk_394.cpp,-1,149,,"fprintf (fh, ""-1 Option `time' missing.\n"");","[""addLog""]","[[], [""fprintf"", ""fh"", ""1"", ""Option"", ""time"", ""missing"", ""\\n""]]",[3873181399525577623],315
https://github.com/collectd/collectd/commit/963766d0bcbbcdaeb7ebf567046c613455133666,23 Jan 2008,"src/utils_cmd_putnotif.[ch]: Added a new module which handles parsing of notifications from some command line or similar.

Of course, this is similar to the `utils_cmd_putval' module.",202,data/crawl/collectd/hunk_394.cpp,,,data/crawl/collectd/old_hunk_394.cpp,data/crawl/collectd/new_hunk_394.cpp,-1,144,,"fprintf (fh, ""-1 Option `severity' missing.\n"");","[""addLog""]","[[], [""fprintf"", ""fh"", ""1"", ""Option"", ""severity"", ""missing"", ""\\n""]]",[8068019375049724229],314
https://github.com/collectd/collectd/commit/963766d0bcbbcdaeb7ebf567046c613455133666,23 Jan 2008,"src/utils_cmd_putnotif.[ch]: Added a new module which handles parsing of notifications from some command line or similar.

Of course, this is similar to the `utils_cmd_putval' module.",202,data/crawl/collectd/hunk_394.cpp,,,data/crawl/collectd/old_hunk_394.cpp,data/crawl/collectd/new_hunk_394.cpp,-1,125,,"fprintf (fh, ""-1 Error parsing the message. Have you hit the ""
    ""limit of %u bytes?\n"", (unsigned int) sizeof (n.message));","[""addLog""]","[[], [""fprintf"", ""fh"", ""1"", ""Error"", ""parsing"", ""the"", ""message"", ""Have"", ""you"", ""hit"", ""the"", ""limit"", ""of"", ""%u"", ""bytes"", ""\\n"", ""unsigned"", ""int"", ""sizeof"", ""n"", ""message""]]",[-42425234343170099019],313
https://github.com/collectd/collectd/commit/963766d0bcbbcdaeb7ebf567046c613455133666,23 Jan 2008,"src/utils_cmd_putnotif.[ch]: Added a new module which handles parsing of notifications from some command line or similar.

Of course, this is similar to the `utils_cmd_putval' module.",202,data/crawl/collectd/hunk_394.cpp,,,data/crawl/collectd/old_hunk_394.cpp,data/crawl/collectd/new_hunk_394.cpp,-1,109,,"fprintf (fh, ""-1 Wrong number of fields: Got %i, expected at least 4.\n"",
fields_num);","[""addLog""]","[[], [""fprintf"", ""fh"", ""1"", ""Wrong"", ""number"", ""of"", ""fields"", ""Got"", ""%i"", ""expected"", ""at"", ""least"", ""4"", ""\\n"", ""fields_num""]]",[11082183251543083138],312
https://github.com/collectd/collectd/commit/f1a764777b71e54407293163aefb07586977b147,09 Feb 2008,"src/configfile.c: Extend the `Include' statement to handle directories, too.

Directories are included recursively. Files and directories begnning with a dot
are ignored. Symlinks are followed. You can crash collectd by looping the
symlinks.",256,data/crawl/collectd/hunk_393.cpp,,,data/crawl/collectd/old_hunk_393.cpp,data/crawl/collectd/new_hunk_393.cpp,-1,77,,"fprintf (stderr, ""cf_read_generic (path = %s, depth = %i);"", path, depth);","[""addLog""]","[[], [""fprintf"", ""stderr"", ""cf_read_generic"", ""path"", ""%s"", ""depth"", ""%i"", ""path"", ""depth""]]",[14520586115846437213],311
https://github.com/collectd/collectd/commit/94105804a59bf3e2a5d4b1320550f8aad1a0c288,09 Feb 2008,"contrib/examples/: Added an example for a notification callback.

Signed-off-by: Sebastian Harl <sh@tokkee.org>
Signed-off-by: Florian Forster <octo@huhu.verplant.org>",85,data/crawl/collectd/hunk_392.cpp,,,data/crawl/collectd/old_hunk_392.cpp,data/crawl/collectd/new_hunk_392.cpp,-1,37,,"printf (""%s\n"", notif->message);","[""addLog""]","[[], [""printf"", ""%s\\n"", ""notif"", ""message""]]",[12526287589860862510],310
https://github.com/collectd/collectd/commit/94105804a59bf3e2a5d4b1320550f8aad1a0c288,09 Feb 2008,"contrib/examples/: Added an example for a notification callback.

Signed-off-by: Sebastian Harl <sh@tokkee.org>
Signed-off-by: Florian Forster <octo@huhu.verplant.org>",85,data/crawl/collectd/hunk_392.cpp,,,data/crawl/collectd/old_hunk_392.cpp,data/crawl/collectd/new_hunk_392.cpp,-1,35,,"printf (""%s: "", notif->type_instance);","[""addLog""]","[[], [""printf"", ""%s"", ""notif"", ""type_instance""]]",[10318481952309490235],309
https://github.com/collectd/collectd/commit/94105804a59bf3e2a5d4b1320550f8aad1a0c288,09 Feb 2008,"contrib/examples/: Added an example for a notification callback.

Signed-off-by: Sebastian Harl <sh@tokkee.org>
Signed-off-by: Florian Forster <octo@huhu.verplant.org>",85,data/crawl/collectd/hunk_392.cpp,,,data/crawl/collectd/old_hunk_392.cpp,data/crawl/collectd/new_hunk_392.cpp,-1,32,,"printf (""%s: "", notif->type);","[""addLog""]","[[], [""printf"", ""%s"", ""notif"", ""type""]]",[15546730569227509244],308
https://github.com/collectd/collectd/commit/94105804a59bf3e2a5d4b1320550f8aad1a0c288,09 Feb 2008,"contrib/examples/: Added an example for a notification callback.

Signed-off-by: Sebastian Harl <sh@tokkee.org>
Signed-off-by: Florian Forster <octo@huhu.verplant.org>",85,data/crawl/collectd/hunk_392.cpp,,,data/crawl/collectd/old_hunk_392.cpp,data/crawl/collectd/new_hunk_392.cpp,-1,29,,"printf (""%s: "", notif->plugin_instance);","[""addLog""]","[[], [""printf"", ""%s"", ""notif"", ""plugin_instance""]]",[17732303089139328346],307
https://github.com/collectd/collectd/commit/94105804a59bf3e2a5d4b1320550f8aad1a0c288,09 Feb 2008,"contrib/examples/: Added an example for a notification callback.

Signed-off-by: Sebastian Harl <sh@tokkee.org>
Signed-off-by: Florian Forster <octo@huhu.verplant.org>",85,data/crawl/collectd/hunk_392.cpp,,,data/crawl/collectd/old_hunk_392.cpp,data/crawl/collectd/new_hunk_392.cpp,-1,26,,"printf (""%s: "", notif->plugin);","[""addLog""]","[[], [""printf"", ""%s"", ""notif"", ""plugin""]]",[4955132327672658343],306
https://github.com/collectd/collectd/commit/94105804a59bf3e2a5d4b1320550f8aad1a0c288,09 Feb 2008,"contrib/examples/: Added an example for a notification callback.

Signed-off-by: Sebastian Harl <sh@tokkee.org>
Signed-off-by: Florian Forster <octo@huhu.verplant.org>",85,data/crawl/collectd/hunk_392.cpp,,,data/crawl/collectd/old_hunk_392.cpp,data/crawl/collectd/new_hunk_392.cpp,-1,23,,"printf (""%s: "", notif->host);","[""addLog""]","[[], [""printf"", ""%s"", ""notif"", ""host""]]",[21032279224721882002],305
https://github.com/collectd/collectd/commit/94105804a59bf3e2a5d4b1320550f8aad1a0c288,09 Feb 2008,"contrib/examples/: Added an example for a notification callback.

Signed-off-by: Sebastian Harl <sh@tokkee.org>
Signed-off-by: Florian Forster <octo@huhu.verplant.org>",85,data/crawl/collectd/hunk_392.cpp,,,data/crawl/collectd/old_hunk_392.cpp,data/crawl/collectd/new_hunk_392.cpp,-1,20,,"printf (""NOTIF (%s): %i - "", time_str, notif->severity);","[""addLog""]","[[], [""printf"", ""NOTIF"", ""%s"", ""%i"", ""time_str"", ""notif"", ""severity""]]",[29355340637217045427],304
https://github.com/collectd/collectd/commit/660aebd9a5216d2f143d5f30c4e87bcfa4502ea6,11 Feb 2008,"exec plugin: Changed the format in which notifications are passed to the programs.

Using a `Message:' header field restricts us to one-line messages, which is
probably not very farsighted.",36,data/crawl/collectd/hunk_389.cpp,,,data/crawl/collectd/old_hunk_389.cpp,data/crawl/collectd/new_hunk_389.cpp,4,3,"fprintf (fh, ""\n"");","fprintf (fh, ""\n%s\n"", n->message);","[""updateContent"", ""addVariable""]","[[""\\n""], [""\\n%s\\n"", ""n"", ""message""]]",[-7727834219273790041],303
https://github.com/collectd/collectd/commit/660aebd9a5216d2f143d5f30c4e87bcfa4502ea6,11 Feb 2008,"exec plugin: Changed the format in which notifications are passed to the programs.

Using a `Message:' header field restricts us to one-line messages, which is
probably not very farsighted.",36,data/crawl/collectd/hunk_388.cpp,,,data/crawl/collectd/old_hunk_388.cpp,data/crawl/collectd/new_hunk_388.cpp,3,3,"fprintf (fh, ""Severity: %s\n""
      ""Time: %u\n""
      ""Message: %s\n"",
      severity, (unsigned int) n->time, n->message);","fprintf (fh,
      ""Severity: %s\n""
      ""Time: %u\n"",
      severity, (unsigned int) n->time);","[""removeVariable"", ""removeContent""]","[[""Message"", ""%s\\n"", ""n"", ""message""], []]",[7548302682935093163],302
https://github.com/collectd/collectd/commit/7aee817a090f1f825e68c3a0288a373c52e16e03,24 Mar 2008,"liboconfig: Include the filename in error messages.

As collectd now supports more than one config file, this is more
convenient.

A module-global variable is used for that purpose. If no filename is
available (e.g. if the user uses oconfig_parse_fh() directly), a string
like ""<fd#X>"" is used instead, where X is replaced by the file descriptor.

Signed-off-by: Sebastian Harl <sh@tokkee.org>
Signed-off-by: Florian Forster <octo@huhu.verplant.org>",34,data/crawl/collectd/hunk_387.cpp,,,data/crawl/collectd/old_hunk_387.cpp,data/crawl/collectd/new_hunk_387.cpp,3,10,"fprintf (stderr, ""Error in line %i near `%s': %s\n"", yylineno, yytext, s);","fprintf (stderr, ""Parse error in file `%s', line %i near `%s': %s\n"",
c_file, yylineno, text, s);","[""updateVariable"", ""updateContent"", ""addVariable""]","[[""Error"", ""yytext""], [""Parse"", ""error"", ""file"", ""%s"", ""c_file"", ""text""]]",[-2221524157054479242],301
https://github.com/collectd/collectd/commit/20d7c9833c8c11d4a1039b5bf0eab4ad8e8f5281,31 Mar 2008,"plugin.c: Tell the user if a plugin could not be found.

Up to now this error was silently ignored, letting the user believe that
everything went fine.

Signed-off-by: Sebastian Harl <sh@tokkee.org>
Signed-off-by: Florian Forster <octo@huhu.verplant.org>",5,data/crawl/collectd/hunk_378.cpp,,,data/crawl/collectd/old_hunk_378.cpp,data/crawl/collectd/new_hunk_378.cpp,-1,4,,"fprintf (stderr, ""Could not find plugin %s.\n"", type);","[""addLog""]","[[], [""fprintf"", ""stderr"", ""Could"", ""not"", ""find"", ""plugin"", ""%s"", ""\\n"", ""type""]]",[-7177194966955455902],300
https://github.com/collectd/collectd/commit/09c94b19a261e38a512fd6b59b2356160ea36977,12 Jun 2008,exec plugin: Added support for notification meta information.,20,data/crawl/collectd/hunk_375.cpp,,,data/crawl/collectd/old_hunk_375.cpp,data/crawl/collectd/new_hunk_375.cpp,-1,14,,"fprintf (fh, ""%s: %s\n"", meta->name,
  meta->value_boolean ? ""true"" : ""false"");","[""addLog""]","[[], [""fprintf"", ""fh"", ""%s"", ""%s\\n"", ""meta"", ""name"", ""meta"", ""value_boolean"", ""true"", ""false""]]",[-30976671817371088222],299
https://github.com/collectd/collectd/commit/09c94b19a261e38a512fd6b59b2356160ea36977,12 Jun 2008,exec plugin: Added support for notification meta information.,20,data/crawl/collectd/hunk_375.cpp,,,data/crawl/collectd/old_hunk_375.cpp,data/crawl/collectd/new_hunk_375.cpp,-1,12,,"fprintf (fh, ""%s: %e\n"", meta->name, meta->value_double);","[""addLog""]","[[], [""fprintf"", ""fh"", ""%s"", ""%e\\n"", ""meta"", ""name"", ""meta"", ""value_double""]]",[-25916809249916001822],298
https://github.com/collectd/collectd/commit/09c94b19a261e38a512fd6b59b2356160ea36977,12 Jun 2008,exec plugin: Added support for notification meta information.,20,data/crawl/collectd/hunk_375.cpp,,,data/crawl/collectd/old_hunk_375.cpp,data/crawl/collectd/new_hunk_375.cpp,-1,10,,"fprintf (fh, ""%s: %llu\n"", meta->name, meta->value_unsigned_int);","[""addLog""]","[[], [""fprintf"", ""fh"", ""%s"", ""%llu\\n"", ""meta"", ""name"", ""meta"", ""value_unsigned_int""]]",[-37279915123115930690],297
https://github.com/collectd/collectd/commit/09c94b19a261e38a512fd6b59b2356160ea36977,12 Jun 2008,exec plugin: Added support for notification meta information.,20,data/crawl/collectd/hunk_375.cpp,,,data/crawl/collectd/old_hunk_375.cpp,data/crawl/collectd/new_hunk_375.cpp,-1,8,,"fprintf (fh, ""%s: %lli\n"", meta->name, meta->value_signed_int);","[""addLog""]","[[], [""fprintf"", ""fh"", ""%s"", ""%lli\\n"", ""meta"", ""name"", ""meta"", ""value_signed_int""]]",[-37411992051688467485],296
https://github.com/collectd/collectd/commit/09c94b19a261e38a512fd6b59b2356160ea36977,12 Jun 2008,exec plugin: Added support for notification meta information.,20,data/crawl/collectd/hunk_375.cpp,,,data/crawl/collectd/old_hunk_375.cpp,data/crawl/collectd/new_hunk_375.cpp,-1,6,,"fprintf (fh, ""%s: %s\n"", meta->name, meta->value_string);","[""addLog""]","[[], [""fprintf"", ""fh"", ""%s"", ""%s\\n"", ""meta"", ""name"", ""meta"", ""value_string""]]",[-19525764249300723836],295
https://github.com/collectd/collectd/commit/33fc797e4095b55a815cc2fa755f384204583dd5,30 Jun 2008,"src/{exec,types_list,utils_cache}.c: Fix format strings.",8,data/crawl/collectd/hunk_374.cpp,,,data/crawl/collectd/old_hunk_374.cpp,data/crawl/collectd/new_hunk_374.cpp,5,5,"fprintf (fh, ""%s: %llu\n"", meta->name, meta->value_unsigned_int);","fprintf (fh, ""%s: %""PRIu64""\n"", meta->name, meta->value_unsigned_int);","[""updateContent"", ""addContent"", ""addVariable""]","[[""%llu\\n""], [""%"", ""PRIu64"", ""\\n""]]",[13644690794306992134],294
https://github.com/collectd/collectd/commit/33fc797e4095b55a815cc2fa755f384204583dd5,30 Jun 2008,"src/{exec,types_list,utils_cache}.c: Fix format strings.",8,data/crawl/collectd/hunk_374.cpp,,,data/crawl/collectd/old_hunk_374.cpp,data/crawl/collectd/new_hunk_374.cpp,3,3,"fprintf (fh, ""%s: %lli\n"", meta->name, meta->value_signed_int);","fprintf (fh, ""%s: %""PRIi64""\n"", meta->name, meta->value_signed_int);","[""updateContent"", ""addContent"", ""addVariable""]","[[""%lli\\n""], [""%"", ""PRIi64"", ""\\n""]]",[13644690794178991926],293
https://github.com/collectd/collectd/commit/3c4034226f6b8dd9846fa52903f93fa17f868e25,21 Aug 2008,src/plugin.c: Include the shared object when reporting errors with `lt_dlopen'.,6,data/crawl/collectd/hunk_369.cpp,,,data/crawl/collectd/old_hunk_369.cpp,data/crawl/collectd/new_hunk_369.cpp,4,4,"fprintf (stderr, ""lt_dlopen failed: %s\n"", error);","fprintf (stderr, ""lt_dlopen (%s) failed: %s\n"", file, error);","[""updateContent"", ""addVariable""]","[[], [""%s"", ""file""]]",[-504795354898740748],292
https://github.com/collectd/collectd/commit/ea90b50563a778907ea83ca031b7253905947798,22 Aug 2008,"rrdtool plugin: Implemented the `WritesPerSecond' option.

This option lets you slow down the `queue thread' within the rrdtool
plugin, so that the system stays responsive while writing all values
to disk. When FLUSH'ing values and during shutdown this limit is not
in effect.",277,data/crawl/collectd/hunk_368.cpp,,,data/crawl/collectd/old_hunk_368.cpp,data/crawl/collectd/new_hunk_368.cpp,-1,9,,"fprintf (stderr, ""rrdtool: `WritesPerSecond' must be ""
""greater than or equal to zero."");","[""addLog""]","[[], [""fprintf"", ""stderr"", ""rrdtool"", ""WritesPerSecond"", ""must"", ""be"", ""greater"", ""than"", ""or"", ""equal"", ""to"", ""zero""]]",[-15720487770334566632],291
https://github.com/collectd/collectd/commit/2e12aacc24a6765c17c2fc0e5909d2138c3a6114,03 Oct 2008,"libiptc: Updated from version 1.4.0 to 1.4.1.1.

This brings the library in sync with the latest stable upstream release. Now,
libiptc.c:standard_target_map() is declared static in the upstream sources, so
we no longer need to modify that ourselves.

The update includes, amongst others, fixes for a build failure with glibc 2.8,
some compiler warnings, an incorrect ruleset dump (netfilter issue #104) and a
scalability issue for chain list ""name"" searching.

Signed-off-by: Sebastian Harl <sh@tokkee.org>
Signed-off-by: Florian Forster <octo@huhu.verplant.org>",488,data/crawl/collectd/hunk_366.cpp,,,data/crawl/collectd/old_hunk_366.cpp,data/crawl/collectd/new_hunk_366.cpp,2,2,"printf(""libiptc v%s. %u bytes.\n"",
       IPTABLES_VERSION, handle->entries->size);","printf(""libiptc v%s. %u bytes.\n"",
       XTABLES_VERSION, handle->entries->size);","[""updateVariable""]","[[""IPTABLES_VERSION""], [""XTABLES_VERSION""]]",[7143584325870793092],290
https://github.com/collectd/collectd/commit/2e12aacc24a6765c17c2fc0e5909d2138c3a6114,03 Oct 2008,"libiptc: Updated from version 1.4.0 to 1.4.1.1.

This brings the library in sync with the latest stable upstream release. Now,
libiptc.c:standard_target_map() is declared static in the upstream sources, so
we no longer need to modify that ourselves.

The update includes, amongst others, fixes for a build failure with glibc 2.8,
some compiler warnings, an incorrect ruleset dump (netfilter issue #104) and a
scalability issue for chain list ""name"" searching.

Signed-off-by: Sebastian Harl <sh@tokkee.org>
Signed-off-by: Florian Forster <octo@huhu.verplant.org>",488,data/crawl/collectd/hunk_365.cpp,,,data/crawl/collectd/old_hunk_365.cpp,data/crawl/collectd/new_hunk_365.cpp,-1,189,,"fprintf(stderr, ""Chain index[%d].name: %s\n"",
i, h->chain_index[i]->name);","[""addLog""]","[[], [""fprintf"", ""stderr"", ""Chain"", ""index[%d]"", ""name"", ""%s\\n"", ""i"", ""h"", ""chain_index[i]"", ""name""]]",[-14815484398374098466],289
https://github.com/collectd/collectd/commit/2e12aacc24a6765c17c2fc0e5909d2138c3a6114,03 Oct 2008,"libiptc: Updated from version 1.4.0 to 1.4.1.1.

This brings the library in sync with the latest stable upstream release. Now,
libiptc.c:standard_target_map() is declared static in the upstream sources, so
we no longer need to modify that ourselves.

The update includes, amongst others, fixes for a build failure with glibc 2.8,
some compiler warnings, an incorrect ruleset dump (netfilter issue #104) and a
scalability issue for chain list ""name"" searching.

Signed-off-by: Sebastian Harl <sh@tokkee.org>
Signed-off-by: Florian Forster <octo@huhu.verplant.org>",488,data/crawl/collectd/hunk_365.cpp,,,data/crawl/collectd/old_hunk_365.cpp,data/crawl/collectd/new_hunk_365.cpp,-1,69,,"fprintf(stderr, ""ERROR: NULL pointer chain_index[%d]\n"", pos);","[""addLog""]","[[], [""fprintf"", ""stderr"", ""ERROR"", ""NULL"", ""pointer"", ""chain_index[%d]\\n"", ""pos""]]",[-13399286285098347347],288
https://github.com/collectd/collectd/commit/953bd0f881faa40c415a1f1a9d7e2da739d343ff,06 Oct 2008,"src/collectd-nagios.c: Improve handling of lines returned from `GETVAL'.

Then selecting only certain data sources with the `-d' option, the program
would try to read more lines from the server than the server reports, resulting
in the communication never finishing.

This patch resolves that problem and introduces a couple other error handling
blocks.

Thanks to Fabian Linzberger for pointing this out.",54,data/crawl/collectd/hunk_363.cpp,,,data/crawl/collectd/old_hunk_363.cpp,data/crawl/collectd/new_hunk_363.cpp,-1,34,,"fprintf (stderr, ""Could not parse buffer ""
""as number: %s\n"", value);","[""addLog""]","[[], [""fprintf"", ""stderr"", ""Could"", ""not"", ""parse"", ""buffer"", ""as"", ""number"", ""%s\\n"", ""value""]]",[-12155969823346260637],287
https://github.com/collectd/collectd/commit/953bd0f881faa40c415a1f1a9d7e2da739d343ff,06 Oct 2008,"src/collectd-nagios.c: Improve handling of lines returned from `GETVAL'.

Then selecting only certain data sources with the `-d' option, the program
would try to read more lines from the server than the server reports, resulting
in the communication never finishing.

This patch resolves that problem and introduces a couple other error handling
blocks.

Thanks to Fabian Linzberger for pointing this out.",54,data/crawl/collectd/hunk_363.cpp,,,data/crawl/collectd/old_hunk_363.cpp,data/crawl/collectd/new_hunk_363.cpp,-1,20,,"fprintf (stderr, ""Cannot parse line: %s\n"", buffer);","[""addLog""]","[[], [""fprintf"", ""stderr"", ""Cannot"", ""parse"", ""line"", ""%s\\n"", ""buffer""]]",[-5328537545198959679],286
https://github.com/collectd/collectd/commit/2090dc52cf05a0b05e5d31f1f47737a2be4006e5,08 Nov 2008,src/libcollectdclient: Add a library which abstracts talking to the `unixsock' plugin.,987,data/crawl/collectd/hunk_362.cpp,,,data/crawl/collectd/old_hunk_362.cpp,data/crawl/collectd/new_hunk_362.cpp,-1,207,,"fprintf (c->fh, ""%s\r\n"", command);","[""addLog""]","[[], [""fprintf"", ""c"", ""fh"", ""%s\\r\\n"", ""command""]]",[10871220967534225104],285
https://github.com/collectd/collectd/commit/d1125cb9d1bbe3bd77f90366bf64b44904f69e54,08 Nov 2008,"collectd-nagios: Use `libcollectdclient' and various improvements.

The improvements include:
- Copyright and license header.
- More consistent output.
- Frees some more memory that was allocated..
- Better standards compliance.
- Make all functions `static' (except `main', of course).
- Use `%g' instead of `%lf' to print floating point values.",416,data/crawl/collectd/hunk_361.cpp,,,data/crawl/collectd/old_hunk_361.cpp,data/crawl/collectd/new_hunk_361.cpp,6,6,"fprintf (stderr, ""strdup failed: %s\n"",
strerror (errno));","fprintf (stderr, ""cn_strdup failed: %s\n"",
strerror (errno));","[""updateContent""]","[[""strdup""], [""cn_strdup""]]",[11800427179911702525],284
https://github.com/collectd/collectd/commit/d1125cb9d1bbe3bd77f90366bf64b44904f69e54,08 Nov 2008,"collectd-nagios: Use `libcollectdclient' and various improvements.

The improvements include:
- Copyright and license header.
- More consistent output.
- Frees some more memory that was allocated..
- Better standards compliance.
- Make all functions `static' (except `main', of course).
- Use `%g' instead of `%lf' to print floating point values.",416,data/crawl/collectd/hunk_360.cpp,,,data/crawl/collectd/old_hunk_360.cpp,data/crawl/collectd/new_hunk_360.cpp,-1,67,,"printf (""ERROR: Retrieving values from the daemon failed: %s.\n"",
lcc_strerror (connection));","[""addLog""]","[[], [""printf"", ""ERROR"", ""Retrieving"", ""values"", ""from"", ""the"", ""daemon"", ""failed"", ""%s"", ""\\n"", ""lcc_strerror"", ""connection""]]",[1283486640664370102],283
https://github.com/collectd/collectd/commit/d1125cb9d1bbe3bd77f90366bf64b44904f69e54,08 Nov 2008,"collectd-nagios: Use `libcollectdclient' and various improvements.

The improvements include:
- Copyright and license header.
- More consistent output.
- Frees some more memory that was allocated..
- Better standards compliance.
- Make all functions `static' (except `main', of course).
- Use `%g' instead of `%lf' to print floating point values.",416,data/crawl/collectd/hunk_360.cpp,,,data/crawl/collectd/old_hunk_360.cpp,data/crawl/collectd/new_hunk_360.cpp,-1,57,,"printf (""ERROR: Creating an identifier failed: %s.\n"",
lcc_strerror (connection));","[""addLog""]","[[], [""printf"", ""ERROR"", ""Creating"", ""an"", ""identifier"", ""failed"", ""%s"", ""\\n"", ""lcc_strerror"", ""connection""]]",[11446187054191916138],282
https://github.com/collectd/collectd/commit/d1125cb9d1bbe3bd77f90366bf64b44904f69e54,08 Nov 2008,"collectd-nagios: Use `libcollectdclient' and various improvements.

The improvements include:
- Copyright and license header.
- More consistent output.
- Frees some more memory that was allocated..
- Better standards compliance.
- Make all functions `static' (except `main', of course).
- Use `%g' instead of `%lf' to print floating point values.",416,data/crawl/collectd/hunk_360.cpp,,,data/crawl/collectd/old_hunk_360.cpp,data/crawl/collectd/new_hunk_360.cpp,-1,19,,"printf ("" %s=%g;;;;"", values_names[i], values[i]);","[""addLog""]","[[], [""printf"", ""%s"", ""%g"", ""values_names[i]"", ""values[i]""]]",[12291512224328626044],281
https://github.com/collectd/collectd/commit/d1125cb9d1bbe3bd77f90366bf64b44904f69e54,08 Nov 2008,"collectd-nagios: Use `libcollectdclient' and various improvements.

The improvements include:
- Copyright and license header.
- More consistent output.
- Frees some more memory that was allocated..
- Better standards compliance.
- Make all functions `static' (except `main', of course).
- Use `%g' instead of `%lf' to print floating point values.",416,data/crawl/collectd/hunk_360.cpp,,,data/crawl/collectd/old_hunk_360.cpp,data/crawl/collectd/new_hunk_360.cpp,-1,17,,"printf (""%s: %g sum |"", status_str, total);","[""addLog""]","[[], [""printf"", ""%s"", ""%g"", ""sum"", ""status_str"", ""total""]]",[14601228010522600868],280
https://github.com/collectd/collectd/commit/d1125cb9d1bbe3bd77f90366bf64b44904f69e54,08 Nov 2008,"collectd-nagios: Use `libcollectdclient' and various improvements.

The improvements include:
- Copyright and license header.
- More consistent output.
- Frees some more memory that was allocated..
- Better standards compliance.
- Make all functions `static' (except `main', of course).
- Use `%g' instead of `%lf' to print floating point values.",416,data/crawl/collectd/hunk_360.cpp,,,data/crawl/collectd/old_hunk_360.cpp,data/crawl/collectd/new_hunk_360.cpp,28,48,"fputs (""ERROR: Cannot get values from daemon\n"", stdout);","printf (""ERROR: Connecting to daemon at %s failed.\n"",
socket_file_g);","[""updateVariable"", ""updateLog"", ""updateContent""]","[[""fputs"", ""Cannot"", ""get"", ""values"", ""from"", ""daemon\\n"", ""stdout""], [""printf"", ""Connecting"", ""to"", ""daemon"", ""at"", ""%s"", ""failed"", ""\\n"", ""socket_file_g""]]",[-8010771802535386411],279
https://github.com/collectd/collectd/commit/d1125cb9d1bbe3bd77f90366bf64b44904f69e54,08 Nov 2008,"collectd-nagios: Use `libcollectdclient' and various improvements.

The improvements include:
- Copyright and license header.
- More consistent output.
- Frees some more memory that was allocated..
- Better standards compliance.
- Make all functions `static' (except `main', of course).
- Use `%g' instead of `%lf' to print floating point values.",416,data/crawl/collectd/hunk_360.cpp,,,data/crawl/collectd/old_hunk_360.cpp,data/crawl/collectd/new_hunk_360.cpp,13,-1,"printf (""OKAY: Sum = %lf\n"", total);",,"[""removeLog""]","[[""printf"", ""OKAY"", ""Sum"", ""%lf\\n"", ""total""], []]",[-11945320714639408760],278
https://github.com/collectd/collectd/commit/d1125cb9d1bbe3bd77f90366bf64b44904f69e54,08 Nov 2008,"collectd-nagios: Use `libcollectdclient' and various improvements.

The improvements include:
- Copyright and license header.
- More consistent output.
- Frees some more memory that was allocated..
- Better standards compliance.
- Make all functions `static' (except `main', of course).
- Use `%g' instead of `%lf' to print floating point values.",416,data/crawl/collectd/hunk_360.cpp,,,data/crawl/collectd/old_hunk_360.cpp,data/crawl/collectd/new_hunk_360.cpp,8,-1,"printf (""WARNING: Sum = %lf\n"", total);",,"[""removeLog""]","[[""printf"", ""WARNING"", ""Sum"", ""%lf\\n"", ""total""], []]",[-7569237512138851399],277
https://github.com/collectd/collectd/commit/d1125cb9d1bbe3bd77f90366bf64b44904f69e54,08 Nov 2008,"collectd-nagios: Use `libcollectdclient' and various improvements.

The improvements include:
- Copyright and license header.
- More consistent output.
- Frees some more memory that was allocated..
- Better standards compliance.
- Make all functions `static' (except `main', of course).
- Use `%g' instead of `%lf' to print floating point values.",416,data/crawl/collectd/hunk_360.cpp,,,data/crawl/collectd/old_hunk_360.cpp,data/crawl/collectd/new_hunk_360.cpp,3,-1,"printf (""CRITICAL: Sum = %lf\n"", total);",,"[""removeLog""]","[[""printf"", ""CRITICAL"", ""Sum"", ""%lf\\n"", ""total""], []]",[-10764966033509964647],276
https://github.com/collectd/collectd/commit/d1125cb9d1bbe3bd77f90366bf64b44904f69e54,08 Nov 2008,"collectd-nagios: Use `libcollectdclient' and various improvements.

The improvements include:
- Copyright and license header.
- More consistent output.
- Frees some more memory that was allocated..
- Better standards compliance.
- Make all functions `static' (except `main', of course).
- Use `%g' instead of `%lf' to print floating point values.",416,data/crawl/collectd/hunk_359.cpp,,,data/crawl/collectd/old_hunk_359.cpp,data/crawl/collectd/new_hunk_359.cpp,6,26,"printf (""%lf average |"", average);","printf (""%s: %g average |"", status_str, average);","[""updateContent"", ""addVariable""]","[[""%lf""], [""%s"", ""%g"", ""status_str""]]",[5149624130535763164],275
https://github.com/collectd/collectd/commit/d1125cb9d1bbe3bd77f90366bf64b44904f69e54,08 Nov 2008,"collectd-nagios: Use `libcollectdclient' and various improvements.

The improvements include:
- Copyright and license header.
- More consistent output.
- Frees some more memory that was allocated..
- Better standards compliance.
- Make all functions `static' (except `main', of course).
- Use `%g' instead of `%lf' to print floating point values.",416,data/crawl/collectd/hunk_358.cpp,,,data/crawl/collectd/old_hunk_358.cpp,data/crawl/collectd/new_hunk_358.cpp,-1,24,,"printf (""%s: %i critical, %i warning, %i okay"", status_str,
num_critical, num_warning, num_okay);","[""addLog""]","[[], [""printf"", ""%s"", ""%i"", ""critical"", ""%i"", ""warning"", ""%i"", ""okay"", ""status_str"", ""num_critical"", ""num_warning"", ""num_okay""]]",[-8709852116704916000],274
https://github.com/collectd/collectd/commit/d1125cb9d1bbe3bd77f90366bf64b44904f69e54,08 Nov 2008,"collectd-nagios: Use `libcollectdclient' and various improvements.

The improvements include:
- Copyright and license header.
- More consistent output.
- Frees some more memory that was allocated..
- Better standards compliance.
- Make all functions `static' (except `main', of course).
- Use `%g' instead of `%lf' to print floating point values.",416,data/crawl/collectd/hunk_357.cpp,,,data/crawl/collectd/old_hunk_357.cpp,data/crawl/collectd/new_hunk_357.cpp,138,-1,"fprintf (stderr, ""strdup failed.\n"");",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""strdup"", ""failed"", ""\\n""], []]",[31898705550608075283],273
https://github.com/collectd/collectd/commit/d1125cb9d1bbe3bd77f90366bf64b44904f69e54,08 Nov 2008,"collectd-nagios: Use `libcollectdclient' and various improvements.

The improvements include:
- Copyright and license header.
- More consistent output.
- Frees some more memory that was allocated..
- Better standards compliance.
- Make all functions `static' (except `main', of course).
- Use `%g' instead of `%lf' to print floating point values.",416,data/crawl/collectd/hunk_357.cpp,,,data/crawl/collectd/old_hunk_357.cpp,data/crawl/collectd/new_hunk_357.cpp,130,-1,"fprintf (stderr, ""Could not parse buffer ""
""as number: %s\n"", value);",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""Could"", ""not"", ""parse"", ""buffer"", ""as"", ""number"", ""%s\\n"", ""value""], []]",[12155969823346260637],272
https://github.com/collectd/collectd/commit/d1125cb9d1bbe3bd77f90366bf64b44904f69e54,08 Nov 2008,"collectd-nagios: Use `libcollectdclient' and various improvements.

The improvements include:
- Copyright and license header.
- More consistent output.
- Frees some more memory that was allocated..
- Better standards compliance.
- Make all functions `static' (except `main', of course).
- Use `%g' instead of `%lf' to print floating point values.",416,data/crawl/collectd/hunk_357.cpp,,,data/crawl/collectd/old_hunk_357.cpp,data/crawl/collectd/new_hunk_357.cpp,116,-1,"fprintf (stderr, ""Cannot parse line: %s\n"", buffer);",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""Cannot"", ""parse"", ""line"", ""%s\\n"", ""buffer""], []]",[5328537545198959679],271
https://github.com/collectd/collectd/commit/d1125cb9d1bbe3bd77f90366bf64b44904f69e54,08 Nov 2008,"collectd-nagios: Use `libcollectdclient' and various improvements.

The improvements include:
- Copyright and license header.
- More consistent output.
- Frees some more memory that was allocated..
- Better standards compliance.
- Make all functions `static' (except `main', of course).
- Use `%g' instead of `%lf' to print floating point values.",416,data/crawl/collectd/hunk_357.cpp,,,data/crawl/collectd/old_hunk_357.cpp,data/crawl/collectd/new_hunk_357.cpp,65,-1,"fprintf (stderr, ""fgets failed: %s\n"",
strerror (errno));",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""fgets"", ""failed"", ""%s\\n"", ""strerror"", ""errno""], []]",[6804345028525243877],270
https://github.com/collectd/collectd/commit/d1125cb9d1bbe3bd77f90366bf64b44904f69e54,08 Nov 2008,"collectd-nagios: Use `libcollectdclient' and various improvements.

The improvements include:
- Copyright and license header.
- More consistent output.
- Frees some more memory that was allocated..
- Better standards compliance.
- Make all functions `static' (except `main', of course).
- Use `%g' instead of `%lf' to print floating point values.",416,data/crawl/collectd/hunk_357.cpp,,,data/crawl/collectd/old_hunk_357.cpp,data/crawl/collectd/new_hunk_357.cpp,60,-1,"fprintf (fh_out, ""GETVAL %s/%s\n"", hostname_g, value_string_g);",,"[""removeLog""]","[[""fprintf"", ""fh_out"", ""GETVAL"", ""%s/%s\\n"", ""hostname_g"", ""value_string_g""], []]",[-11401950063381852866],269
https://github.com/collectd/collectd/commit/d1125cb9d1bbe3bd77f90366bf64b44904f69e54,08 Nov 2008,"collectd-nagios: Use `libcollectdclient' and various improvements.

The improvements include:
- Copyright and license header.
- More consistent output.
- Frees some more memory that was allocated..
- Better standards compliance.
- Make all functions `static' (except `main', of course).
- Use `%g' instead of `%lf' to print floating point values.",416,data/crawl/collectd/hunk_357.cpp,,,data/crawl/collectd/old_hunk_357.cpp,data/crawl/collectd/new_hunk_357.cpp,37,-1,"fprintf (stderr, ""connect failed: %s\n"",
strerror (errno));",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""connect"", ""failed"", ""%s\\n"", ""strerror"", ""errno""], []]",[-214939432562746904],268
https://github.com/collectd/collectd/commit/d1125cb9d1bbe3bd77f90366bf64b44904f69e54,08 Nov 2008,"collectd-nagios: Use `libcollectdclient' and various improvements.

The improvements include:
- Copyright and license header.
- More consistent output.
- Frees some more memory that was allocated..
- Better standards compliance.
- Make all functions `static' (except `main', of course).
- Use `%g' instead of `%lf' to print floating point values.",416,data/crawl/collectd/hunk_357.cpp,,,data/crawl/collectd/old_hunk_357.cpp,data/crawl/collectd/new_hunk_357.cpp,24,-1,"fprintf (stderr, ""socket failed: %s\n"",
strerror (errno));",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""socket"", ""failed"", ""%s\\n"", ""strerror"", ""errno""], []]",[1759007772810939800],267
https://github.com/collectd/collectd/commit/05a85bbebdef9f8e7c1b0c09d5a2145c2f2d10af,02 Dec 2008,"src/plugin.[ch]: Don't use unnamed unions.

They're non-standard and cause a lot of trouble.",48,data/crawl/collectd/hunk_356.cpp,,,data/crawl/collectd/old_hunk_356.cpp,data/crawl/collectd/new_hunk_356.cpp,11,11,"fprintf (fh, ""%s: %s\n"", meta->name,
  meta->value_boolean ? ""true"" : ""false"");","fprintf (fh, ""%s: %s\n"", meta->name,
  meta->nm_value.nm_boolean ? ""true"" : ""false"");","[""updateVariable"", ""addVariable""]","[[""value_boolean""], [""nm_value"", ""nm_boolean""]]",[12186341692017891658],266
https://github.com/collectd/collectd/commit/05a85bbebdef9f8e7c1b0c09d5a2145c2f2d10af,02 Dec 2008,"src/plugin.[ch]: Don't use unnamed unions.

They're non-standard and cause a lot of trouble.",48,data/crawl/collectd/hunk_356.cpp,,,data/crawl/collectd/old_hunk_356.cpp,data/crawl/collectd/new_hunk_356.cpp,9,9,"fprintf (fh, ""%s: %e\n"", meta->name, meta->value_double);","fprintf (fh, ""%s: %e\n"", meta->name, meta->nm_value.nm_double);","[""updateVariable"", ""addVariable""]","[[""value_double""], [""nm_value"", ""nm_double""]]",[7390480926171266868],265
https://github.com/collectd/collectd/commit/05a85bbebdef9f8e7c1b0c09d5a2145c2f2d10af,02 Dec 2008,"src/plugin.[ch]: Don't use unnamed unions.

They're non-standard and cause a lot of trouble.",48,data/crawl/collectd/hunk_356.cpp,,,data/crawl/collectd/old_hunk_356.cpp,data/crawl/collectd/new_hunk_356.cpp,7,7,"fprintf (fh, ""%s: %""PRIu64""\n"", meta->name, meta->value_unsigned_int);","fprintf (fh, ""%s: %""PRIu64""\n"", meta->name, meta->nm_value.nm_unsigned_int);","[""updateVariable"", ""addVariable""]","[[""value_unsigned_int""], [""nm_value"", ""nm_unsigned_int""]]",[10466368728945079332],264
https://github.com/collectd/collectd/commit/05a85bbebdef9f8e7c1b0c09d5a2145c2f2d10af,02 Dec 2008,"src/plugin.[ch]: Don't use unnamed unions.

They're non-standard and cause a lot of trouble.",48,data/crawl/collectd/hunk_356.cpp,,,data/crawl/collectd/old_hunk_356.cpp,data/crawl/collectd/new_hunk_356.cpp,5,5,"fprintf (fh, ""%s: %""PRIi64""\n"", meta->name, meta->value_signed_int);","fprintf (fh, ""%s: %""PRIi64""\n"", meta->name, meta->nm_value.nm_signed_int);","[""updateVariable"", ""addVariable""]","[[""value_signed_int""], [""nm_value"", ""nm_signed_int""]]",[12242574365225673070],263
https://github.com/collectd/collectd/commit/05a85bbebdef9f8e7c1b0c09d5a2145c2f2d10af,02 Dec 2008,"src/plugin.[ch]: Don't use unnamed unions.

They're non-standard and cause a lot of trouble.",48,data/crawl/collectd/hunk_356.cpp,,,data/crawl/collectd/old_hunk_356.cpp,data/crawl/collectd/new_hunk_356.cpp,3,3,"fprintf (fh, ""%s: %s\n"", meta->name, meta->value_string);","fprintf (fh, ""%s: %s\n"", meta->name, meta->nm_value.nm_string);","[""updateVariable"", ""addVariable""]","[[""value_string""], [""nm_value"", ""nm_string""]]",[7595746716181078236],262
https://github.com/collectd/collectd/commit/cd3a0c6f7928a34da21f670f627e8e8a21943546,09 Dec 2008,"collectd-nagios: If DSs are specified, sort the values accordingly.

If a user specifies DSs on the command line, the order or the values might
matter (e.g. when using the upcoming ""percentage"" consolidation function). So,
in this case we now order the values according to the order of the specified
DSs.

This patch replaces the function ignore_ds() with filter_ds() which is called
once in do_check(). This removes the need to check for ignored values in all
consolidation function implementations.",90,data/crawl/collectd/hunk_352.cpp,,,data/crawl/collectd/old_hunk_352.cpp,data/crawl/collectd/new_hunk_352.cpp,-1,51,,"printf (""ERROR: DS `%s' is not available.\n"", new_names[i]);","[""addLog""]","[[], [""printf"", ""ERROR"", ""DS"", ""%s"", ""is"", ""not"", ""available"", ""\\n"", ""new_names[i]""]]",[18866713009680982247],261
https://github.com/collectd/collectd/commit/cd3a0c6f7928a34da21f670f627e8e8a21943546,09 Dec 2008,"collectd-nagios: If DSs are specified, sort the values accordingly.

If a user specifies DSs on the command line, the order or the values might
matter (e.g. when using the upcoming ""percentage"" consolidation function). So,
in this case we now order the values according to the order of the specified
DSs.

This patch replaces the function ignore_ds() with filter_ds() which is called
once in do_check(). This removes the need to check for ignored values in all
consolidation function implementations.",90,data/crawl/collectd/hunk_352.cpp,,,data/crawl/collectd/old_hunk_352.cpp,data/crawl/collectd/new_hunk_352.cpp,-1,37,,"fprintf (stderr, ""cn_strdup failed: %s\n"", strerror (errno));","[""addLog""]","[[], [""fprintf"", ""stderr"", ""cn_strdup"", ""failed"", ""%s\\n"", ""strerror"", ""errno""]]",[-1224682802868058950],260
https://github.com/collectd/collectd/commit/d324b71f4a80712261490d2c98bcca22a147c6c8,09 Dec 2008,"collectd-nagios: add new ""percentage"" aggregate function.

the percentage aggregate function takes exactly two values. it
computes the percentage of the first value versus the sum of the first
and the second value. very useful for checking df values like:

sudo collectd-nagios -s /var/run/collectd-unixsock -H localhost -n df/df-root -d used -d free -g percentage -w 20: -c 10:

which will warn if there is less than 20% free space.

Signed-off-by: Sebastian Harl <sh@tokkee.org>",38,data/crawl/collectd/hunk_351.cpp,,,data/crawl/collectd/old_hunk_351.cpp,data/crawl/collectd/new_hunk_351.cpp,-1,32,,"printf (""OKAY: percentage = %lf\n"", percentage);","[""addLog""]","[[], [""printf"", ""OKAY"", ""percentage"", ""%lf\\n"", ""percentage""]]",[-67384216025124057],259
https://github.com/collectd/collectd/commit/d324b71f4a80712261490d2c98bcca22a147c6c8,09 Dec 2008,"collectd-nagios: add new ""percentage"" aggregate function.

the percentage aggregate function takes exactly two values. it
computes the percentage of the first value versus the sum of the first
and the second value. very useful for checking df values like:

sudo collectd-nagios -s /var/run/collectd-unixsock -H localhost -n df/df-root -d used -d free -g percentage -w 20: -c 10:

which will warn if there is less than 20% free space.

Signed-off-by: Sebastian Harl <sh@tokkee.org>",38,data/crawl/collectd/hunk_351.cpp,,,data/crawl/collectd/old_hunk_351.cpp,data/crawl/collectd/new_hunk_351.cpp,-1,28,,"printf (""WARNING: percentage = %lf\n"", percentage);","[""addLog""]","[[], [""printf"", ""WARNING"", ""percentage"", ""%lf\\n"", ""percentage""]]",[-4443467418525681418],258
https://github.com/collectd/collectd/commit/d324b71f4a80712261490d2c98bcca22a147c6c8,09 Dec 2008,"collectd-nagios: add new ""percentage"" aggregate function.

the percentage aggregate function takes exactly two values. it
computes the percentage of the first value versus the sum of the first
and the second value. very useful for checking df values like:

sudo collectd-nagios -s /var/run/collectd-unixsock -H localhost -n df/df-root -d used -d free -g percentage -w 20: -c 10:

which will warn if there is less than 20% free space.

Signed-off-by: Sebastian Harl <sh@tokkee.org>",38,data/crawl/collectd/hunk_351.cpp,,,data/crawl/collectd/old_hunk_351.cpp,data/crawl/collectd/new_hunk_351.cpp,-1,23,,"printf (""CRITICAL: percentage = %lf\n"", percentage);","[""addLog""]","[[], [""printf"", ""CRITICAL"", ""percentage"", ""%lf\\n"", ""percentage""]]",[-1247738897154568170],257
https://github.com/collectd/collectd/commit/d324b71f4a80712261490d2c98bcca22a147c6c8,09 Dec 2008,"collectd-nagios: add new ""percentage"" aggregate function.

the percentage aggregate function takes exactly two values. it
computes the percentage of the first value versus the sum of the first
and the second value. very useful for checking df values like:

sudo collectd-nagios -s /var/run/collectd-unixsock -H localhost -n df/df-root -d used -d free -g percentage -w 20: -c 10:

which will warn if there is less than 20% free space.

Signed-off-by: Sebastian Harl <sh@tokkee.org>",38,data/crawl/collectd/hunk_351.cpp,,,data/crawl/collectd/old_hunk_351.cpp,data/crawl/collectd/new_hunk_351.cpp,-1,19,,"printf ("" %s=%lf;;;;"", values_names[i], values[i]);","[""addLog""]","[[], [""printf"", ""%s"", ""%lf"", ""values_names[i]"", ""values[i]""]]",[7516210380634946334],256
https://github.com/collectd/collectd/commit/d324b71f4a80712261490d2c98bcca22a147c6c8,09 Dec 2008,"collectd-nagios: add new ""percentage"" aggregate function.

the percentage aggregate function takes exactly two values. it
computes the percentage of the first value versus the sum of the first
and the second value. very useful for checking df values like:

sudo collectd-nagios -s /var/run/collectd-unixsock -H localhost -n df/df-root -d used -d free -g percentage -w 20: -c 10:

which will warn if there is less than 20% free space.

Signed-off-by: Sebastian Harl <sh@tokkee.org>",38,data/crawl/collectd/hunk_351.cpp,,,data/crawl/collectd/old_hunk_351.cpp,data/crawl/collectd/new_hunk_351.cpp,-1,17,,"printf (""%lf percentage |"", percentage);","[""addLog""]","[[], [""printf"", ""%lf"", ""percentage"", ""percentage""]]",[-2561101050677695113],255
https://github.com/collectd/collectd/commit/2ca211b327b5e1689937a93ac6a4d0b9754d3627,09 Dec 2008,"collectd-nagios: Generalized the ""percentage"" consolidation function.

Calculation of the percentage is not limited to two values any more but an
arbitrary number may be used now. This allows a more flexible usage.

Also, the documentation has been updated.",61,data/crawl/collectd/hunk_350.cpp,,,data/crawl/collectd/old_hunk_350.cpp,data/crawl/collectd/new_hunk_350.cpp,-1,25,,"printf (""WARNING: Values sum up to zero\n"");","[""addLog""]","[[], [""printf"", ""WARNING"", ""Values"", ""sum"", ""up"", ""to"", ""zero\\n""]]",[19003437692904949528],254
https://github.com/collectd/collectd/commit/2ca211b327b5e1689937a93ac6a4d0b9754d3627,09 Dec 2008,"collectd-nagios: Generalized the ""percentage"" consolidation function.

Calculation of the percentage is not limited to two values any more but an
arbitrary number may be used now. This allows a more flexible usage.

Also, the documentation has been updated.",61,data/crawl/collectd/hunk_350.cpp,,,data/crawl/collectd/old_hunk_350.cpp,data/crawl/collectd/new_hunk_350.cpp,-1,15,,"printf (""WARNING: The first value is not defined\n"");","[""addLog""]","[[], [""printf"", ""WARNING"", ""The"", ""first"", ""value"", ""is"", ""not"", ""defined\\n""]]",[-7076919509763990105],253
https://github.com/collectd/collectd/commit/2ca211b327b5e1689937a93ac6a4d0b9754d3627,09 Dec 2008,"collectd-nagios: Generalized the ""percentage"" consolidation function.

Calculation of the percentage is not limited to two values any more but an
arbitrary number may be used now. This allows a more flexible usage.

Also, the documentation has been updated.",61,data/crawl/collectd/hunk_350.cpp,,,data/crawl/collectd/old_hunk_350.cpp,data/crawl/collectd/new_hunk_350.cpp,32,-1,"printf (""OKAY: percentage = %lf\n"", percentage);",,"[""removeLog""]","[[""printf"", ""OKAY"", ""percentage"", ""%lf\\n"", ""percentage""], []]",[67384216025124057],252
https://github.com/collectd/collectd/commit/2ca211b327b5e1689937a93ac6a4d0b9754d3627,09 Dec 2008,"collectd-nagios: Generalized the ""percentage"" consolidation function.

Calculation of the percentage is not limited to two values any more but an
arbitrary number may be used now. This allows a more flexible usage.

Also, the documentation has been updated.",61,data/crawl/collectd/hunk_350.cpp,,,data/crawl/collectd/old_hunk_350.cpp,data/crawl/collectd/new_hunk_350.cpp,28,-1,"printf (""WARNING: percentage = %lf\n"", percentage);",,"[""removeLog""]","[[""printf"", ""WARNING"", ""percentage"", ""%lf\\n"", ""percentage""], []]",[4443467418525681418],251
https://github.com/collectd/collectd/commit/2ca211b327b5e1689937a93ac6a4d0b9754d3627,09 Dec 2008,"collectd-nagios: Generalized the ""percentage"" consolidation function.

Calculation of the percentage is not limited to two values any more but an
arbitrary number may be used now. This allows a more flexible usage.

Also, the documentation has been updated.",61,data/crawl/collectd/hunk_350.cpp,,,data/crawl/collectd/old_hunk_350.cpp,data/crawl/collectd/new_hunk_350.cpp,23,-1,"printf (""CRITICAL: percentage = %lf\n"", percentage);",,"[""removeLog""]","[[""printf"", ""CRITICAL"", ""percentage"", ""%lf\\n"", ""percentage""], []]",[1247738897154568170],250
https://github.com/collectd/collectd/commit/2ca211b327b5e1689937a93ac6a4d0b9754d3627,09 Dec 2008,"collectd-nagios: Generalized the ""percentage"" consolidation function.

Calculation of the percentage is not limited to two values any more but an
arbitrary number may be used now. This allows a more flexible usage.

Also, the documentation has been updated.",61,data/crawl/collectd/hunk_350.cpp,,,data/crawl/collectd/old_hunk_350.cpp,data/crawl/collectd/new_hunk_350.cpp,17,47,"printf (""%lf percentage |"", percentage);","printf (""%s: %lf percent |"", status_str, percentage);","[""updateContent"", ""addVariable""]","[[""percentage""], [""%s"", ""percent"", ""status_str""]]",[-1552080085531618064],249
https://github.com/collectd/collectd/commit/bc86995088a08d4d355517dd78d3d2b2027bc338,09 Dec 2008,collectd-nagios: Be more verbose before bailing out with usage().,7,data/crawl/collectd/hunk_349.cpp,,,data/crawl/collectd/old_hunk_349.cpp,data/crawl/collectd/new_hunk_349.cpp,-1,4,,"fprintf (stderr, ""Missing required arguments.\n"");","[""addLog""]","[[], [""fprintf"", ""stderr"", ""Missing"", ""required"", ""arguments"", ""\\n""]]",[-17151823657571118359],248
https://github.com/collectd/collectd/commit/bc86995088a08d4d355517dd78d3d2b2027bc338,09 Dec 2008,collectd-nagios: Be more verbose before bailing out with usage().,7,data/crawl/collectd/hunk_348.cpp,,,data/crawl/collectd/old_hunk_348.cpp,data/crawl/collectd/new_hunk_348.cpp,-1,4,,"fprintf (stderr, ""Unknown consolidation function `%s'.\n"",
optarg);","[""addLog""]","[[], [""fprintf"", ""stderr"", ""Unknown"", ""consolidation"", ""function"", ""%s"", ""\\n"", ""optarg""]]",[-16371434691299585195],247
https://github.com/collectd/collectd/commit/f5edd182195cb7a13fa32846ae869a8b8dcc1e3f,19 Dec 2008,"Do not use *printf() to report errors / debugging messages.

The only exception to that is during configuration (which is done before
daemonization) to let the user know about problems immediately.",29,data/crawl/collectd/hunk_347.cpp,,,data/crawl/collectd/old_hunk_347.cpp,data/crawl/collectd/new_hunk_347.cpp,3,3,"fprintf (stderr, ""unsupported data link type %d\n"",
    pcap_datalink(pcap_obj));","ERROR (""handle_pcap: unsupported data link type %d\n"",
    pcap_datalink(pcap_obj));","[""updateLog"", ""removeVariable"", ""updateContent""]","[[""fprintf"", ""stderr""], [""ERROR"", ""handle_pcap""]]",[21748478337538154347],246
https://github.com/collectd/collectd/commit/f5edd182195cb7a13fa32846ae869a8b8dcc1e3f,19 Dec 2008,"Do not use *printf() to report errors / debugging messages.

The only exception to that is during configuration (which is done before
daemonization) to let the user know about problems immediately.",29,data/crawl/collectd/hunk_346.cpp,,,data/crawl/collectd/old_hunk_346.cpp,data/crawl/collectd/new_hunk_346.cpp,3,3,"fprintf (stderr, ""handle_pcap (udata = %p, hdr = %p, pkt = %p): hdr->caplen = %i\n"",
    (void *) udata, (void *) hdr, (void *) pkt,
    hdr->caplen);","DEBUG (""handle_pcap (udata = %p, hdr = %p, pkt = %p): hdr->caplen = %i\n"",
    (void *) udata, (void *) hdr, (void *) pkt,
    hdr->caplen);","[""updateLog"", ""removeVariable""]","[[""fprintf"", ""stderr""], [""DEBUG""]]",[21637425830572660846],245
https://github.com/collectd/collectd/commit/f5edd182195cb7a13fa32846ae869a8b8dcc1e3f,19 Dec 2008,"Do not use *printf() to report errors / debugging messages.

The only exception to that is during configuration (which is done before
daemonization) to let the user know about problems immediately.",29,data/crawl/collectd/hunk_345.cpp,,,data/crawl/collectd/old_hunk_345.cpp,data/crawl/collectd/new_hunk_345.cpp,3,-1,"fprintf (stderr, ""Bytes 0, 1: 0x%04hx\n"", us);",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""Bytes"", ""0"", ""1"", ""0x%04hx\\n"", ""us""], []]",[18380210829333615289],244
https://github.com/collectd/collectd/commit/f5edd182195cb7a13fa32846ae869a8b8dcc1e3f,19 Dec 2008,"Do not use *printf() to report errors / debugging messages.

The only exception to that is during configuration (which is done before
daemonization) to let the user know about problems immediately.",29,data/crawl/collectd/hunk_338.cpp,,,data/crawl/collectd/old_hunk_338.cpp,data/crawl/collectd/new_hunk_338.cpp,3,3,"printf (""domain_connection_change_handler (domain = %p, err = %i, ""
      ""conn_num = %u, port_num = %u, still_connected = %i, ""
      ""user_data = %p);\n"",
      (void *) domain, err, conn_num, port_num, still_connected, user_data);","DEBUG (""domain_connection_change_handler (domain = %p, err = %i, ""
      ""conn_num = %u, port_num = %u, still_connected = %i, ""
      ""user_data = %p);\n"",
      (void *) domain, err, conn_num, port_num, still_connected, user_data);","[""updateLog""]","[[""printf""], [""DEBUG""]]",[474360991262646625],243
https://github.com/collectd/collectd/commit/f950fcd91292616b3c4d98cbc4f44e0b4f781d8b,17 Jan 2009,"csv plugin: Make it possible to write values to STDOUT.

Signed-off-by: Doug MacEachern <dougm@hyperic.com>
Signed-off-by: Florian Forster <octo@leeloo.lan.home.verplant.org>",22,data/crawl/collectd/hunk_335.cpp,,,data/crawl/collectd/old_hunk_335.cpp,data/crawl/collectd/new_hunk_335.cpp,-1,5,,"fprintf (use_stdio == 1 ? stdout : stderr,
 ""%s=%s\n"", filename, values);","[""addLog""]","[[], [""fprintf"", ""use_stdio"", ""1"", ""stdout"", ""stderr"", ""%s"", ""%s\\n"", ""filename"", ""values""]]",[-20317316820334878330],242
https://github.com/collectd/collectd/commit/a019b6c8144745db63c599680bd693ac02f11666,10 Feb 2009,"contrib/php-collection: Add a PHP frontend for graph generation.

Hi,

Attached is a patch with a set of PHP files for a complete graphing
environment for collectd-generated RRDs.
Before generating a graph with rrdtool it can tell collectd to flush
the RRDs that are about to be used.

The interface is built with dynamic HTML.
It provides following options:
 - host selection
 -> plugin selection
 --> plugin instance selection
 ---> type selection
 ----> type instance selection (or meta graph)
 - linear / logarithmic Y-scale
 - verbose / minimal legend
 - [Add Graph] [Remove all Graphs] [Refresh Graphs]
For each displayed graph:
 - Move above previous graph
 - Refresh graph
 - Remove graph
 - Move below following graph

I tested on following browsers:
- Firefox-3.0
- Safari-3.2 (Win32)
- Konqueror (KDE-4.1.3)
- Webkit (webkit-gtk-0_p40220)
- Internet Explorer (6, 7, 8rc - CSS layout issues with <8)

Dependencies:
- PHP-5 (might run with PHP-4)
  > GD suport for error images
  > Ability to execute rrdtool binary
  > Unix socket for FLUSH support
- RRDTool (rrdtool graph, rrdtool info)

TODO: complete/improve graph definitions in definitions.php
 though there is code to generate basic graph for any RRD of
 unknown type, so definitions are rather a matter of color,
 DS combination and stacking.

Bruno

File listing with short description:
- config.php
  (configuration)
- functions.php
  (common functions)
- definitions.php
  (graph definitions for most? types from types.db
   - based on collection.cgi)
- definitions.local.php
  (place for site-local graph definitions, e.g. for
   unixsock, tail, snmp generated RRDs)
- index.php
  (main page)
- graph.php
  (page returning the graph's PNG image)
- browser.js
  (whole bunch of Javascript logic to show/hide/update graphs)

Not included are a few images:
- collectd-logo.png
  (16x16, e.g. use collectd.org's favicon)
- favicon.png
  (e.g. use the one in share/collection*)
- refresh.png
- move-up.png
- move-down.png
- delete.png
  (16x16 take matching ones from your system's action-icons)",3809,data/crawl/collectd/hunk_334.cpp,,,data/crawl/collectd/old_hunk_334.cpp,data/crawl/collectd/new_hunk_334.cpp,-1,36,,"printf('  <option>%s</option>'.""\n"", htmlspecialchars($item));","[""addLog""]","[[], [""printf"", ""option"", ""%s"", ""/option"", ""\\n"", ""htmlspecialchars"", ""item""]]",[8965922022197444597],241
https://github.com/collectd/collectd/commit/a019b6c8144745db63c599680bd693ac02f11666,10 Feb 2009,"contrib/php-collection: Add a PHP frontend for graph generation.

Hi,

Attached is a patch with a set of PHP files for a complete graphing
environment for collectd-generated RRDs.
Before generating a graph with rrdtool it can tell collectd to flush
the RRDs that are about to be used.

The interface is built with dynamic HTML.
It provides following options:
 - host selection
 -> plugin selection
 --> plugin instance selection
 ---> type selection
 ----> type instance selection (or meta graph)
 - linear / logarithmic Y-scale
 - verbose / minimal legend
 - [Add Graph] [Remove all Graphs] [Refresh Graphs]
For each displayed graph:
 - Move above previous graph
 - Refresh graph
 - Remove graph
 - Move below following graph

I tested on following browsers:
- Firefox-3.0
- Safari-3.2 (Win32)
- Konqueror (KDE-4.1.3)
- Webkit (webkit-gtk-0_p40220)
- Internet Explorer (6, 7, 8rc - CSS layout issues with <8)

Dependencies:
- PHP-5 (might run with PHP-4)
  > GD suport for error images
  > Ability to execute rrdtool binary
  > Unix socket for FLUSH support
- RRDTool (rrdtool graph, rrdtool info)

TODO: complete/improve graph definitions in definitions.php
 though there is code to generate basic graph for any RRD of
 unknown type, so definitions are rather a matter of color,
 DS combination and stacking.

Bruno

File listing with short description:
- config.php
  (configuration)
- functions.php
  (common functions)
- definitions.php
  (graph definitions for most? types from types.db
   - based on collection.cgi)
- definitions.local.php
  (place for site-local graph definitions, e.g. for
   unixsock, tail, snmp generated RRDs)
- index.php
  (main page)
- graph.php
  (page returning the graph's PNG image)
- browser.js
  (whole bunch of Javascript logic to show/hide/update graphs)

Not included are a few images:
- collectd-logo.png
  (16x16, e.g. use collectd.org's favicon)
- favicon.png
  (e.g. use the one in share/collection*)
- refresh.png
- move-up.png
- move-down.png
- delete.png
  (16x16 take matching ones from your system's action-icons)",3809,data/crawl/collectd/hunk_333.cpp,,,data/crawl/collectd/old_hunk_333.cpp,data/crawl/collectd/new_hunk_333.cpp,-1,195,,"printf(""Would have executed:\n%s\n"", $rrd_cmd);","[""addLog""]","[[], [""printf"", ""Would"", ""have"", ""executed"", ""\\n%s\\n"", ""rrd_cmd""]]",[6242644316512683898],240
https://github.com/collectd/collectd/commit/08d2e13121e70afcf65d3925a16b4c8a6f41c915,18 Feb 2009,"src/liboconfig/oconfig.[ch]: Add `oconfig_clone'.

This new function clones an entire sub-tree, that can be free'd again
using `oconfig_free'.",98,data/crawl/collectd/hunk_331.cpp,,,data/crawl/collectd/old_hunk_331.cpp,data/crawl/collectd/new_hunk_331.cpp,-1,10,,"fprintf (stderr, ""malloc failed.\n"");","[""addLog""]","[[], [""fprintf"", ""stderr"", ""malloc"", ""failed"", ""\\n""]]",[-26567393609440779723],239
https://github.com/collectd/collectd/commit/5f19536990c9e5043c17ed2278b331102de88594,22 Feb 2009,java plugin: Expose `plugin_log' to Java plugins.,83,data/crawl/collectd/hunk_330.cpp,,,data/crawl/collectd/old_hunk_330.cpp,data/crawl/collectd/new_hunk_330.cpp,-1,20,,"plugin_log (severity, ""%s"", c_str);","[""addLog""]","[[], [""plugin_log"", ""severity"", ""%s"", ""c_str""]]",[1251804296042102141],238
https://github.com/collectd/collectd/commit/dd34a5b4e62b2fb9b60377d0c5da2f2bc2ef4532,12 Mar 2009,src/liboping/test_liboping.c: Remove legacy file.,59,data/crawl/collectd/hunk_328.cpp,,,data/crawl/collectd/old_hunk_328.cpp,data/crawl/collectd/new_hunk_328.cpp,51,-1,"printf (""host = %s, latency = %f\n"", host, latency);",,"[""removeLog""]","[[""printf"", ""host"", ""%s"", ""latency"", ""%f\\n"", ""host"", ""latency""], []]",[-36792594960319281754],237
https://github.com/collectd/collectd/commit/dd34a5b4e62b2fb9b60377d0c5da2f2bc2ef4532,12 Mar 2009,src/liboping/test_liboping.c: Remove legacy file.,59,data/crawl/collectd/hunk_328.cpp,,,data/crawl/collectd/old_hunk_328.cpp,data/crawl/collectd/new_hunk_328.cpp,39,-1,"fprintf (stderr, ""ping_send failed\n"");",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""ping_send"", ""failed\\n""], []]",[15265858480462441565],236
https://github.com/collectd/collectd/commit/dd34a5b4e62b2fb9b60377d0c5da2f2bc2ef4532,12 Mar 2009,src/liboping/test_liboping.c: Remove legacy file.,59,data/crawl/collectd/hunk_328.cpp,,,data/crawl/collectd/old_hunk_328.cpp,data/crawl/collectd/new_hunk_328.cpp,30,-1,"fprintf (stderr, ""ping_host_add (verplant.org) failed\n"");",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""ping_host_add"", ""verplant"", ""org"", ""failed\\n""], []]",[16687066397870636518],235
https://github.com/collectd/collectd/commit/dd34a5b4e62b2fb9b60377d0c5da2f2bc2ef4532,12 Mar 2009,src/liboping/test_liboping.c: Remove legacy file.,59,data/crawl/collectd/hunk_328.cpp,,,data/crawl/collectd/old_hunk_328.cpp,data/crawl/collectd/new_hunk_328.cpp,26,-1,"printf (""Adding host `%s'..\n"", argv[i]);",,"[""removeLog""]","[[""printf"", ""Adding"", ""host"", ""%s"", ""\\n"", ""argv[i]""], []]",[-7065638405185994760],234
https://github.com/collectd/collectd/commit/dd34a5b4e62b2fb9b60377d0c5da2f2bc2ef4532,12 Mar 2009,src/liboping/test_liboping.c: Remove legacy file.,59,data/crawl/collectd/hunk_328.cpp,,,data/crawl/collectd/old_hunk_328.cpp,data/crawl/collectd/new_hunk_328.cpp,20,-1,"fprintf (stderr, ""ping_construct failed\n"");",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""ping_construct"", ""failed\\n""], []]",[26986322679492551137],233
https://github.com/collectd/collectd/commit/dd34a5b4e62b2fb9b60377d0c5da2f2bc2ef4532,12 Mar 2009,src/liboping/test_liboping.c: Remove legacy file.,59,data/crawl/collectd/hunk_328.cpp,,,data/crawl/collectd/old_hunk_328.cpp,data/crawl/collectd/new_hunk_328.cpp,14,-1,"printf (""Usage: %s <host> [host [host [...]]]\n"", argv[0]);",,"[""removeLog""]","[[""printf"", ""Usage"", ""%s"", ""host"", ""[host"", ""[host"", ""["", ""]]]\\n"", ""argv[0]""], []]",[-23047795257242398380],232
https://github.com/collectd/collectd/commit/cc5c9640e4e5b766473e227d38ee24c123d9bea6,17 Mar 2009,"configfile, types_list: Improved error messages when handling ""TypesDB"".",13,data/crawl/collectd/hunk_327.cpp,,,data/crawl/collectd/old_hunk_327.cpp,data/crawl/collectd/new_hunk_327.cpp,-1,3,,"fprintf (stderr, ""Failed to open types database `%s': %s.\n"",
file, sstrerror (errno, errbuf, sizeof (errbuf)));","[""addLog""]","[[], [""fprintf"", ""stderr"", ""Failed"", ""to"", ""open"", ""types"", ""database"", ""%s"", ""%s"", ""\\n"", ""file"", ""sstrerror"", ""errno"", ""errbuf"", ""sizeof"", ""errbuf""]]",[-47151123933840124667],231
https://github.com/collectd/collectd/commit/d1e62aa4497458ed86d20f5ef1b6c00d50596da0,23 Apr 2009,"php-collection: add basic support for meta-selections

Add support for new meta selections allowing addition of graphs
with wildcard behavior.
This adds support for @all selection which matches any values
for the given identifier part.
In addition those types for which meta graphs exist now also list the
individual type instances in addition to the meta graph key for separate
graphing.

In order to support such new groups the lookup code has been refactored
to use a single scanning function which recursively traveses the
collectd RRD output directory for hosts, plugins, types and passing the
discovered data to callback functions for use. The callbacks returns
true to indicate traversal should continue on to next depth level and
false to tell it to continue with next element.
e.g. true on a host means it should look for plugins for given host,
false to continue with next host.

Signed-off-by: Florian Forster <octo@huhu.verplant.org>",458,data/crawl/collectd/hunk_324.cpp,,,data/crawl/collectd/old_hunk_324.cpp,data/crawl/collectd/new_hunk_324.cpp,-1,11,,"printf('  <graph host=""%s"" plugin=""%s"" plugin_instance=""%s"" type=""%s"" type_instance=""%s"" timespan=""%s"" logarithmic=""%d"" tinyLegend=""%d"" />'.""\n"",
       htmlspecialchars($graph['host']), htmlspecialchars($graph['plugin']), htmlspecialchars($graph['pinst']),
       htmlspecialchars($graph['type']), htmlspecialchars($graph['tinst']), htmlspecialchars($graph['timespan']),
       htmlspecialchars($graph['logarithmic']), htmlspecialchars($graph['tinyLegend']));","[""addLog""]","[[], [""printf"", ""graph"", ""host"", ""%s"", ""plugin"", ""%s"", ""plugin_instance"", ""%s"", ""type"", ""%s"", ""type_instance"", ""%s"", ""timespan"", ""%s"", ""logarithmic"", ""%d"", ""tinyLegend"", ""%d"", ""/"", ""\\n"", ""htmlspecialchars"", ""graph["", ""host"", ""]"", ""htmlspecialchars"", ""graph["", ""plugin"", ""]"", ""htmlspecialchars"", ""graph["", ""pinst"", ""]"", ""htmlspecialchars"", ""graph["", ""type"", ""]"", ""htmlspecialchars"", ""graph["", ""tinst"", ""]"", ""htmlspecialchars"", ""graph["", ""timespan"", ""]"", ""htmlspecialchars"", ""graph["", ""logarithmic"", ""]"", ""htmlspecialchars"", ""graph["", ""tinyLegend"", ""]""]]",[4429851485163603737],230
https://github.com/collectd/collectd/commit/f8b596a3e11e7afe2b69e72008d8e1de5d9fbc64,01 May 2009,"fscache plugin: Add new plugin for Linux' file-system based caching framework.

Tried to submit the patch via ""git send-mail"" but I don't think it worked if
you already have the patch disregard the attachment.

Looking forward to your feedback, I am sure there are a few issues its been a
few years since I programmed in C. I have been running this in my test lab at
work for a few days now with no issues.

With 62 metrics I would like to modify the code to group them by their
classification and possibly add configuration support. If the changes are
finished this weekend is it ok to send an updated patch?

Thanks
Edward

Signed-off-by: Edward ""Koko"" Konetzko <konetzed@quixoticagony.com>
Signed-off-by: Florian Forster <octo@leeloo.lan.home.verplant.org>",238,data/crawl/collectd/hunk_323.cpp,,,data/crawl/collectd/old_hunk_323.cpp,data/crawl/collectd/new_hunk_323.cpp,-1,214,,"printf(""cant open file\n"");","[""addLog""]","[[], [""printf"", ""cant"", ""open"", ""file\\n""]]",[17571917462838003355],229
https://github.com/collectd/collectd/commit/7fb680ede5c3190a2cd1e87a4062c0d5023d15c0,22 May 2009,"olsrd plugin: Send a line to the daemon, so it answers.",3,data/crawl/collectd/hunk_322.cpp,,,data/crawl/collectd/old_hunk_322.cpp,data/crawl/collectd/new_hunk_322.cpp,-1,3,,"fputs (""\r\n"", fh);","[""addLog""]","[[], [""fputs"", ""\\r\\n"", ""fh""]]",[-8649209317498359767],228
https://github.com/collectd/collectd/commit/fd48357ddeb1b58d5795015e845f3105a7ba3103,17 Aug 2009,"Random write timeout for rrdtool plugin

Hi,

i was thinking how to ""spread out"" writes to rrd files a bit, because
now its big spike every CacheTimeout or little smaller ""square"" on
graph if u use WritesPerSecond. So ive written little patch which
""spreads out"" writing by changing Cache timeout every time rrdtool
plugin finds data to save. Basically instead of moving data older than
CacheTimeout to write queue it moves it if its older than CacheTimeout
+- RandomTimeout. What it changes?

Without it, gathered data is ""synchronised"" with eachother, for
example (CacheTimeout = 600):
1.collectd starts
2. after 10 minutes, data from all plugins get ""too old"" and get
pushed into write queue and get saved
3. after another 10 minutes, same thing, all data ""ages"" at same time
and get saved in one big chunk

With it (RandomTimeout=300) it works like that
1. collectd starts
2. after 5 minutes some data (lets call it A) starts to go into write queue
3. after 10 minutes from start about 50% (on average) data is saved
(lets call it B)
4. finally, after 15 minutes, all ""leftover"" data gets saved (lets call it C)
5. next ""cycle""
6. data A ages first (cos it was put to disk first) and like before,
some of it gets writen earlier, some of it gets written later)
7. after that data B ages and like before writes are spread over 10 mins
8. same with C

so first cycle (looking at i/o) looks like sinus, next 10 minute cycle
is same sinus but flattened a bit and so on (looks like fading sinus),
and after few cycles it gives pretty much same amount on writes per
sec, no ugly spikes.
Effect looks like that:
http://img24.imageshack.us/img24/7294/drrawcgi.png
(after few more h it will be more ""smooth"")

Regards
Mariusz

Signed-off-by: Florian Forster <octo@huhu.verplant.org>",21,data/crawl/collectd/hunk_321.cpp,,,data/crawl/collectd/old_hunk_321.cpp,data/crawl/collectd/new_hunk_321.cpp,-1,8,,"fprintf (stderr, ""rrdtool: `RandomTimeout' must ""
 ""be greater than or equal to zero.\n"");","[""addLog""]","[[], [""fprintf"", ""stderr"", ""rrdtool"", ""RandomTimeout"", ""must"", ""be"", ""greater"", ""than"", ""or"", ""equal"", ""to"", ""zero"", ""\\n""]]",[-12026655847723700811],227
https://github.com/collectd/collectd/commit/86928d3feaa0ba8f85dc3cbe0d3c34219d201a33,21 Aug 2009,http plugin: Start in http plugin that can output csv to stdout,252,data/crawl/collectd/hunk_319.cpp,,,data/crawl/collectd/old_hunk_319.cpp,data/crawl/collectd/new_hunk_319.cpp,-1,230,,"fprintf (stdout,
      ""\""%s\"",%s,%s\n"",
      metric_name, timestamp, values);","[""addLog""]","[[], [""fprintf"", ""stdout"", ""\\"", ""%s\\"", ""%s"", ""%s\\n"", ""metric_name"", ""timestamp"", ""values""]]",[-11113559900437054923],226
https://github.com/collectd/collectd/commit/2b9ba6a970b33397dc3b58b22b4c84e39ab53378,21 Aug 2009,"http plugin: it works, i think",119,data/crawl/collectd/hunk_318.cpp,,,data/crawl/collectd/old_hunk_318.cpp,data/crawl/collectd/new_hunk_318.cpp,3,3,"fprintf (stdout,
      ""\""%s\"",%s,%s\n"",
      metric_name, timestamp, values);","ssnprintf (csv_buffer, 1536,
      ""\""%s\"",%s,%s\n"",
      metric_name, timestamp, values);","[""updateVariable"", ""updateLog"", ""addContent""]","[[""fprintf"", ""stdout""], [""ssnprintf"", ""csv_buffer"", ""1536""]]",[13022419012668896305],225
https://github.com/collectd/collectd/commit/968d1bd9a97944a52820b6d542089765b59f9bf2,21 Aug 2009,http plugin: Separate values into multiple lines,106,data/crawl/collectd/hunk_317.cpp,,,data/crawl/collectd/old_hunk_317.cpp,data/crawl/collectd/new_hunk_317.cpp,-1,47,,printf(csv_buffer);,"[""addLog""]","[[], [""printf"", ""csv_buffer""]]",[11722671752906202858],224
https://github.com/collectd/collectd/commit/c5f030fa12d743cbcf9d2d53f06e1621faa3a32d,21 Aug 2009,http plugin: POST when a 4K buffer is nearly full,67,data/crawl/collectd/hunk_316.cpp,,,data/crawl/collectd/old_hunk_316.cpp,data/crawl/collectd/new_hunk_316.cpp,-1,11,,"printf(""Fill: %i\n"", send_buffer_fill);","[""addLog""]","[[], [""printf"", ""Fill"", ""%i\\n"", ""send_buffer_fill""]]",[17588067867038092075],223
https://github.com/collectd/collectd/commit/c5f030fa12d743cbcf9d2d53f06e1621faa3a32d,21 Aug 2009,http plugin: POST when a 4K buffer is nearly full,67,data/crawl/collectd/hunk_316.cpp,,,data/crawl/collectd/old_hunk_316.cpp,data/crawl/collectd/new_hunk_316.cpp,-1,10,,printf(send_buffer);,"[""addLog""]","[[], [""printf"", ""send_buffer""]]",[9311991507713795775],222
https://github.com/collectd/collectd/commit/c5f030fa12d743cbcf9d2d53f06e1621faa3a32d,21 Aug 2009,http plugin: POST when a 4K buffer is nearly full,67,data/crawl/collectd/hunk_315.cpp,,,data/crawl/collectd/old_hunk_315.cpp,data/crawl/collectd/new_hunk_315.cpp,-1,13,,printf(buffer);,"[""addLog""]","[[], [""printf"", ""buffer""]]",[9497058554225519839],221
https://github.com/collectd/collectd/commit/c5f030fa12d743cbcf9d2d53f06e1621faa3a32d,21 Aug 2009,http plugin: POST when a 4K buffer is nearly full,67,data/crawl/collectd/hunk_315.cpp,,,data/crawl/collectd/old_hunk_315.cpp,data/crawl/collectd/new_hunk_315.cpp,-1,12,,"printf(""Sending: --------\n"");","[""addLog""]","[[], [""printf"", ""Sending"", ""\\n""]]",[5138734493734467696],220
https://github.com/collectd/collectd/commit/6fc85b952084c71e040bec17740b2811c5574f01,21 Aug 2009,http plugin: Remove some debugging info,8,data/crawl/collectd/hunk_314.cpp,,,data/crawl/collectd/old_hunk_314.cpp,data/crawl/collectd/new_hunk_314.cpp,4,-1,"printf(""Fill: %i\n"", send_buffer_fill);",,"[""removeLog""]","[[""printf"", ""Fill"", ""%i\\n"", ""send_buffer_fill""], []]",[-17588067867038092075],219
https://github.com/collectd/collectd/commit/6fc85b952084c71e040bec17740b2811c5574f01,21 Aug 2009,http plugin: Remove some debugging info,8,data/crawl/collectd/hunk_314.cpp,,,data/crawl/collectd/old_hunk_314.cpp,data/crawl/collectd/new_hunk_314.cpp,3,-1,printf(send_buffer);,,"[""removeLog""]","[[""printf"", ""send_buffer""], []]",[-9311991507713795775],218
https://github.com/collectd/collectd/commit/6fc85b952084c71e040bec17740b2811c5574f01,21 Aug 2009,http plugin: Remove some debugging info,8,data/crawl/collectd/hunk_313.cpp,,,data/crawl/collectd/old_hunk_313.cpp,data/crawl/collectd/new_hunk_313.cpp,4,-1,printf(buffer);,,"[""removeLog""]","[[""printf"", ""buffer""], []]",[-9497058554225519839],217
https://github.com/collectd/collectd/commit/6fc85b952084c71e040bec17740b2811c5574f01,21 Aug 2009,http plugin: Remove some debugging info,8,data/crawl/collectd/hunk_313.cpp,,,data/crawl/collectd/old_hunk_313.cpp,data/crawl/collectd/new_hunk_313.cpp,3,-1,"printf(""Sending: --------\n"");",,"[""removeLog""]","[[""printf"", ""Sending"", ""\\n""], []]",[-5138734493734467696],216
https://github.com/collectd/collectd/commit/5b5fff5bbdc5515d7f4c2a01df47373f4ac44847,30 Sep 2009,"unixsock plugin: Fix a (well hidden) race condition.

Within the client handling thread, fdopen is called twice on the file
descriptor passed to the thread. Later those file handles are closed like:

  fclose (fhin);
  fclose (fhout);

This is a race condition, because the first call to fclose will close the file
descriptor. The second call to fclose will try the same. Usually, it would fail
silently and all is well. On a busy machine, however, another thread may just
have opened a file or accepted a socket. In that case an arbitrary file
descriptor is closed. If the file descriptor is opened yet again fast enough,
data may even end up in a totally wrong location.

As a work-around the file descriptor is not dup'ed so each fdopen operates on
its own file descriptor. As an alternative the ""r+"" mode and a single file
handle may be suitable, too.

Many thanks to Sven Trenkel for pointing me into the right directioin :)",34,data/crawl/collectd/hunk_308.cpp,,,data/crawl/collectd/old_hunk_308.cpp,data/crawl/collectd/new_hunk_308.cpp,-1,5,,"fprintf (fhout, ""-1 Internal error\n"");","[""addLog""]","[[], [""fprintf"", ""fhout"", ""1"", ""Internal"", ""error\\n""]]",[-15268904978201652703],215
https://github.com/collectd/collectd/commit/67b914e6f0f5e6c51c01716e520326348ff0e8aa,12 Oct 2009,Added logging.,42,data/crawl/collectd/hunk_306.cpp,,,data/crawl/collectd/old_hunk_306.cpp,data/crawl/collectd/new_hunk_306.cpp,-1,35,,"plugin_log(LOG_DEBUG, ""%s"", text);","[""addLog""]","[[], [""plugin_log"", ""LOG_DEBUG"", ""%s"", ""text""]]",[-10815851512602886246],214
https://github.com/collectd/collectd/commit/67b914e6f0f5e6c51c01716e520326348ff0e8aa,12 Oct 2009,Added logging.,42,data/crawl/collectd/hunk_306.cpp,,,data/crawl/collectd/old_hunk_306.cpp,data/crawl/collectd/new_hunk_306.cpp,-1,27,,"plugin_log(LOG_INFO, ""%s"", text);","[""addLog""]","[[], [""plugin_log"", ""LOG_INFO"", ""%s"", ""text""]]",[-648803464682673864],213
https://github.com/collectd/collectd/commit/67b914e6f0f5e6c51c01716e520326348ff0e8aa,12 Oct 2009,Added logging.,42,data/crawl/collectd/hunk_306.cpp,,,data/crawl/collectd/old_hunk_306.cpp,data/crawl/collectd/new_hunk_306.cpp,-1,20,,"plugin_log(LOG_NOTICE, ""%s"", text);","[""addLog""]","[[], [""plugin_log"", ""LOG_NOTICE"", ""%s"", ""text""]]",[4248317944420059838],212
https://github.com/collectd/collectd/commit/67b914e6f0f5e6c51c01716e520326348ff0e8aa,12 Oct 2009,Added logging.,42,data/crawl/collectd/hunk_306.cpp,,,data/crawl/collectd/old_hunk_306.cpp,data/crawl/collectd/new_hunk_306.cpp,-1,13,,"plugin_log(LOG_WARNING, ""%s"", text);","[""addLog""]","[[], [""plugin_log"", ""LOG_WARNING"", ""%s"", ""text""]]",[-11590337005571144417],211
https://github.com/collectd/collectd/commit/67b914e6f0f5e6c51c01716e520326348ff0e8aa,12 Oct 2009,Added logging.,42,data/crawl/collectd/hunk_306.cpp,,,data/crawl/collectd/old_hunk_306.cpp,data/crawl/collectd/new_hunk_306.cpp,-1,6,,"plugin_log(LOG_ERR, ""%s"", text);","[""addLog""]","[[], [""plugin_log"", ""LOG_ERR"", ""%s"", ""text""]]",[-6412276407575987000],210
https://github.com/collectd/collectd/commit/f131f0347f58929bdb992ca4dabcb40120757ffc,17 Oct 2009,"Added a workaround to module loading to allow Python scripts to do imports.
Redid the python thread handling.
Added log callback.",165,data/crawl/collectd/hunk_305.cpp,,,data/crawl/collectd/old_hunk_305.cpp,data/crawl/collectd/new_hunk_305.cpp,31,-1,"plugin_log(LOG_INFO, ""%s"", text);",,"[""removeLog""]","[[""plugin_log"", ""LOG_INFO"", ""%s"", ""text""], []]",[648803464682673864],209
https://github.com/collectd/collectd/commit/f131f0347f58929bdb992ca4dabcb40120757ffc,17 Oct 2009,"Added a workaround to module loading to allow Python scripts to do imports.
Redid the python thread handling.
Added log callback.",165,data/crawl/collectd/hunk_305.cpp,,,data/crawl/collectd/old_hunk_305.cpp,data/crawl/collectd/new_hunk_305.cpp,24,-1,"plugin_log(LOG_NOTICE, ""%s"", text);",,"[""removeLog""]","[[""plugin_log"", ""LOG_NOTICE"", ""%s"", ""text""], []]",[-4248317944420059838],208
https://github.com/collectd/collectd/commit/f131f0347f58929bdb992ca4dabcb40120757ffc,17 Oct 2009,"Added a workaround to module loading to allow Python scripts to do imports.
Redid the python thread handling.
Added log callback.",165,data/crawl/collectd/hunk_305.cpp,,,data/crawl/collectd/old_hunk_305.cpp,data/crawl/collectd/new_hunk_305.cpp,17,-1,"plugin_log(LOG_WARNING, ""%s"", text);",,"[""removeLog""]","[[""plugin_log"", ""LOG_WARNING"", ""%s"", ""text""], []]",[11590337005571144417],207
https://github.com/collectd/collectd/commit/f131f0347f58929bdb992ca4dabcb40120757ffc,17 Oct 2009,"Added a workaround to module loading to allow Python scripts to do imports.
Redid the python thread handling.
Added log callback.",165,data/crawl/collectd/hunk_305.cpp,,,data/crawl/collectd/old_hunk_305.cpp,data/crawl/collectd/new_hunk_305.cpp,10,-1,"plugin_log(LOG_ERR, ""%s"", text);",,"[""removeLog""]","[[""plugin_log"", ""LOG_ERR"", ""%s"", ""text""], []]",[6412276407575987000],206
https://github.com/collectd/collectd/commit/c98b98bfaaeb26894229d7da66ad145c75fb9b69,27 Oct 2009,"Added new python class ""Values"". Only ""dispatch"" is implemented right now.",335,data/crawl/collectd/hunk_304.cpp,,,data/crawl/collectd/old_hunk_304.cpp,data/crawl/collectd/new_hunk_304.cpp,-1,145,,"PyErr_Format(PyExc_TypeError, ""Dataset %s not found"", new);","[""addLog""]","[[], [""PyErr_Format"", ""PyExc_TypeError"", ""Dataset"", ""%s"", ""not"", ""found"", ""new""]]",[22948892490398232916],205
https://github.com/collectd/collectd/commit/54c1aa1fb0fd0b5a1e8a1f13bd9c92a1de3d6445,03 Nov 2009,Added write callbacks.,132,data/crawl/collectd/hunk_303.cpp,,,data/crawl/collectd/old_hunk_303.cpp,data/crawl/collectd/new_hunk_303.cpp,9,15,"PyErr_SetString(PyExc_ValueError, ""No module name specified and ""
""callback function does not have a \""__module__\"" attribute."");","register_function(buf, handler, user_data);","[""updateVariable"", ""updateLog"", ""removeContent"", ""addVariable""]","[[""PyErr_SetString"", ""PyExc_ValueError"", ""No"", ""module"", ""name"", ""specified"", ""and"", ""callback"", ""function"", ""does"", ""not"", ""have"", ""a"", ""\\"", ""__module__\\"", ""attribute""], [""register_function"", ""buf"", ""handler"", ""user_data""]]",[5133778818430602661],204
https://github.com/collectd/collectd/commit/f96813067819f4a8d6752af11f741b599b3d1651,11 Nov 2009,Proper exception logging.,110,data/crawl/collectd/hunk_300.cpp,,,data/crawl/collectd/old_hunk_300.cpp,data/crawl/collectd/new_hunk_300.cpp,-1,3,,"cpy_log_exception(""loading module"");","[""addLog""]","[[], [""cpy_log_exception"", ""loading"", ""module""]]",[1574006102039165439],203
https://github.com/collectd/collectd/commit/f96813067819f4a8d6752af11f741b599b3d1651,11 Nov 2009,Proper exception logging.,110,data/crawl/collectd/hunk_295.cpp,,,data/crawl/collectd/old_hunk_295.cpp,data/crawl/collectd/new_hunk_295.cpp,-1,3,,"cpy_log_exception(""init callback"");","[""addLog""]","[[], [""cpy_log_exception"", ""init"", ""callback""]]",[-4950429426566633103],202
https://github.com/collectd/collectd/commit/f96813067819f4a8d6752af11f741b599b3d1651,11 Nov 2009,Proper exception logging.,110,data/crawl/collectd/hunk_294.cpp,,,data/crawl/collectd/old_hunk_294.cpp,data/crawl/collectd/new_hunk_294.cpp,-1,3,,"cpy_log_exception(""interactive session init"");","[""addLog""]","[[], [""cpy_log_exception"", ""interactive"", ""session"", ""init""]]",[-14821601419229765870],201
https://github.com/collectd/collectd/commit/f96813067819f4a8d6752af11f741b599b3d1651,11 Nov 2009,Proper exception logging.,110,data/crawl/collectd/hunk_293.cpp,,,data/crawl/collectd/old_hunk_293.cpp,data/crawl/collectd/new_hunk_293.cpp,-1,3,,"cpy_log_exception(""shutdown callback"");","[""addLog""]","[[], [""cpy_log_exception"", ""shutdown"", ""callback""]]",[10456442582389083733],200
https://github.com/collectd/collectd/commit/f96813067819f4a8d6752af11f741b599b3d1651,11 Nov 2009,Proper exception logging.,110,data/crawl/collectd/hunk_291.cpp,,,data/crawl/collectd/old_hunk_291.cpp,data/crawl/collectd/new_hunk_291.cpp,-1,3,,"cpy_log_exception(""value building for write callback"");","[""addLog""]","[[], [""cpy_log_exception"", ""value"", ""building"", ""for"", ""write"", ""callback""]]",[7074687208635086563],199
https://github.com/collectd/collectd/commit/f96813067819f4a8d6752af11f741b599b3d1651,11 Nov 2009,Proper exception logging.,110,data/crawl/collectd/hunk_289.cpp,,,data/crawl/collectd/old_hunk_289.cpp,data/crawl/collectd/new_hunk_289.cpp,-1,60,,"cpy_log_exception(""read callback"");","[""addLog""]","[[], [""cpy_log_exception"", ""read"", ""callback""]]",[-4452773398946273401],198
https://github.com/collectd/collectd/commit/e96f4a12d900bb76e7983e04ae42f7c74bd73c0c,15 Nov 2009,"Added flush and register_flush functions.
Also changed name generation.",102,data/crawl/collectd/hunk_286.cpp,,,data/crawl/collectd/old_hunk_286.cpp,data/crawl/collectd/new_hunk_286.cpp,8,-1,"PyErr_SetString(PyExc_ValueError, ""No module name specified and ""
""callback function does not have a \""__module__\"" attribute."");",,"[""removeLog""]","[[""PyErr_SetString"", ""PyExc_ValueError"", ""No"", ""module"", ""name"", ""specified"", ""and"", ""callback"", ""function"", ""does"", ""not"", ""have"", ""a"", ""\\"", ""__module__\\"", ""attribute""], []]",[8575006561073618198],197
https://github.com/collectd/collectd/commit/e96f4a12d900bb76e7983e04ae42f7c74bd73c0c,15 Nov 2009,"Added flush and register_flush functions.
Also changed name generation.",102,data/crawl/collectd/hunk_285.cpp,,,data/crawl/collectd/old_hunk_285.cpp,data/crawl/collectd/new_hunk_285.cpp,-1,14,,"cpy_log_exception(""flush callback"");","[""addLog""]","[[], [""cpy_log_exception"", ""flush"", ""callback""]]",[7595286712486270934],196
https://github.com/collectd/collectd/commit/a6ce5dbab98419162c5430f08261a4bc27bfe3a1,28 Nov 2009,Added notification support.,240,data/crawl/collectd/hunk_283.cpp,,,data/crawl/collectd/old_hunk_283.cpp,data/crawl/collectd/new_hunk_283.cpp,-1,92,,"PyErr_SetString(PyExc_RuntimeError, ""error dispatching notification, read the logs"");","[""addLog""]","[[], [""PyErr_SetString"", ""PyExc_RuntimeError"", ""error"", ""dispatching"", ""notification"", ""read"", ""the"", ""logs""]]",[-6343792642267913289],195
https://github.com/collectd/collectd/commit/a6ce5dbab98419162c5430f08261a4bc27bfe3a1,28 Nov 2009,Added notification support.,240,data/crawl/collectd/hunk_281.cpp,,,data/crawl/collectd/old_hunk_281.cpp,data/crawl/collectd/new_hunk_281.cpp,-1,13,,"cpy_log_exception(""notification callback"");","[""addLog""]","[[], [""cpy_log_exception"", ""notification"", ""callback""]]",[-770192900524097560],194
https://github.com/collectd/collectd/commit/da81fce3576301e1e7e9837aa0e91d692cfb177a,01 Dec 2009,Finished inline documentation.,221,data/crawl/collectd/hunk_280.cpp,,,data/crawl/collectd/old_hunk_280.cpp,data/crawl/collectd/new_hunk_280.cpp,3,3,"cpy_log_exception(""python initialization"");","cpy_log_exception(""importing module"");","[""updateContent""]","[[""python"", ""initialization""], [""importing"", ""module""]]",[21104596773223924756],193
https://github.com/collectd/collectd/commit/8df545ad514074ac26714cebfa6f3584811d3952,06 Dec 2009,Better unicode support.,25,data/crawl/collectd/hunk_277.cpp,,,data/crawl/collectd/old_hunk_277.cpp,data/crawl/collectd/new_hunk_277.cpp,-1,8,,"cpy_log_exception(""setting default encoding"");","[""addLog""]","[[], [""cpy_log_exception"", ""setting"", ""default"", ""encoding""]]",[7014134918494966128],192
https://github.com/collectd/collectd/commit/1f17cc084351bd1170385927d22fc9bd10ecd8d7,05 Jan 2010,Somewhat workable python3 support. This breaks python2 support and the __repr__ functions.,199,data/crawl/collectd/hunk_264.cpp,,,data/crawl/collectd/old_hunk_264.cpp,data/crawl/collectd/new_hunk_264.cpp,-1,8,,"PyErr_SetString(PyExc_TypeError, ""argument 1 must be str"");","[""addLog""]","[[], [""PyErr_SetString"", ""PyExc_TypeError"", ""argument"", ""1"", ""must"", ""be"", ""str""]]",[-17426226832890851325],191
https://github.com/collectd/collectd/commit/f7cf0dad2e933ac6066ca5f27645ee577f065710,29 Jan 2010,python: Full meta data support.,173,data/crawl/collectd/hunk_247.cpp,,,data/crawl/collectd/old_hunk_247.cpp,data/crawl/collectd/new_hunk_247.cpp,-1,3,,cpy_log_exception(const char *context);,"[""addLog""]","[[], [""cpy_log_exception"", ""const"", ""char"", ""*context""]]",[10208121809666521101],190
https://github.com/collectd/collectd/commit/b70741d312c381569444e65add2ca831b04d049c,10 Mar 2010,"Modbus plugin: Started working on a ""Modbus-TCP"" plugin for collectd.",419,data/crawl/collectd/hunk_245.cpp,,,data/crawl/collectd/old_hunk_245.cpp,data/crawl/collectd/new_hunk_245.cpp,-1,373,,"printf (""read_coil_status returned value %""PRIu16""\n"", values[0]);","[""addLog""]","[[], [""printf"", ""read_coil_status"", ""returned"", ""value"", ""%"", ""PRIu16"", ""\\n"", ""values[0]""]]",[3045409805095680345],189
https://github.com/collectd/collectd/commit/b70741d312c381569444e65add2ca831b04d049c,10 Mar 2010,"Modbus plugin: Started working on a ""Modbus-TCP"" plugin for collectd.",419,data/crawl/collectd/hunk_245.cpp,,,data/crawl/collectd/old_hunk_245.cpp,data/crawl/collectd/new_hunk_245.cpp,-1,368,,"printf (""read_coil_status returned value %g (hi %#""PRIx16"", lo %#""PRIx16"")\n"",
        value, values[0], values[1]);","[""addLog""]","[[], [""printf"", ""read_coil_status"", ""returned"", ""value"", ""%g"", ""hi"", ""%"", ""PRIx16"", ""lo"", ""%"", ""PRIx16"", ""\\n"", ""value"", ""values[0]"", ""values[1]""]]",[5338137627683375008],188
https://github.com/collectd/collectd/commit/b70741d312c381569444e65add2ca831b04d049c,10 Mar 2010,"Modbus plugin: Started working on a ""Modbus-TCP"" plugin for collectd.",419,data/crawl/collectd/hunk_245.cpp,,,data/crawl/collectd/old_hunk_245.cpp,data/crawl/collectd/new_hunk_245.cpp,-1,361,,"printf (""read_coil_status returned with status %i\n"", status);","[""addLog""]","[[], [""printf"", ""read_coil_status"", ""returned"", ""with"", ""status"", ""%i\\n"", ""status""]]",[-8193957736410623809],187
https://github.com/collectd/collectd/commit/b70741d312c381569444e65add2ca831b04d049c,10 Mar 2010,"Modbus plugin: Started working on a ""Modbus-TCP"" plugin for collectd.",419,data/crawl/collectd/hunk_245.cpp,,,data/crawl/collectd/old_hunk_245.cpp,data/crawl/collectd/new_hunk_245.cpp,-1,349,,"printf (""mb_read (addr = %i, float = %s);\n"", register_addr,
      is_float ? ""true"" : ""false"");","[""addLog""]","[[], [""printf"", ""mb_read"", ""addr"", ""%i"", ""float"", ""%s"", ""\\n"", ""register_addr"", ""is_float"", ""true"", ""false""]]",[21749289141916600673],186
https://github.com/collectd/collectd/commit/b70741d312c381569444e65add2ca831b04d049c,10 Mar 2010,"Modbus plugin: Started working on a ""Modbus-TCP"" plugin for collectd.",419,data/crawl/collectd/hunk_245.cpp,,,data/crawl/collectd/old_hunk_245.cpp,data/crawl/collectd/new_hunk_245.cpp,-1,306,,"printf (""mb_init: modbus_connect returned status %i\n"", status);","[""addLog""]","[[], [""printf"", ""mb_init"", ""modbus_connect"", ""returned"", ""status"", ""%i\\n"", ""status""]]",[8299279945282691444],185
https://github.com/collectd/collectd/commit/fb483e3c027045b44f9b78ad4e0787ed8f11f0a6,17 Mar 2010,modbus plugin: Actually get into a working state.,589,data/crawl/collectd/hunk_243.cpp,,,data/crawl/collectd/old_hunk_243.cpp,data/crawl/collectd/new_hunk_243.cpp,58,49,"printf (""mb_init: modbus_connect returned status %i\n"", status);",gai_strerror (status);,"[""updateLog"", ""removeContent""]","[[""printf"", ""mb_init"", ""modbus_connect"", ""returned"", ""%i\\n"", ""status""], [""gai_strerror""]]",[-19400594851053295211],184
https://github.com/collectd/collectd/commit/26be7bb8e6eaab8d1b24a721a634d273337185af,25 Apr 2010,"Timeout for missing values

Hi!

I attach here a patch which adds Timeout option in configuration file.
This option is global (i.e. at the same level as Interval) and it's
the max number of intervals that a package can be missed before a
missing notification would be raised. By dafault collectd wait 2
intervals and it's a hardcoded value AFAIK, if plugin cannot get data
for more than 2 intervals, then (if it's an interesting value),
collectd send a missing notification. Setting Timeout to an high value
you can be more tolerant with that missing.

It's usefull on large networks. In my case, the company LAN is
distributed on distant locations and sometimes (due to network issues)
UDP packages are lost, I use the Timeout to be more tolerant to this
networks fails. For example setting Internval to 10 and Timeout to 6,
a  missing notification will be raised only if none data was reported
in last 60s.

I hope that things explained well enough, and (who knows!) maybe this
could be usefull to anybody ;)

Regards,
  Andrés

Signed-off-by: Florian Forster <octo@huhu.verplant.org>",17,data/crawl/collectd/hunk_240.cpp,,,data/crawl/collectd/old_hunk_240.cpp,data/crawl/collectd/new_hunk_240.cpp,-1,9,,"fprintf (stderr, ""Cannot set the timeout to a correct value.\n""
""Please check your settings.\n"");","[""addLog""]","[[], [""fprintf"", ""stderr"", ""Cannot"", ""set"", ""the"", ""timeout"", ""to"", ""a"", ""correct"", ""value"", ""\\n"", ""Please"", ""check"", ""your"", ""settings"", ""\\n""]]",[-7578455123947810231],183
https://github.com/collectd/collectd/commit/35ad86ccb95a7808ad2cf7ad266292cb877c5eb8,06 Aug 2010,"Add collectd-flush command line utility.

collectd-flush is a small command-line utility which uses libcollectdclient
to flush collectd through the unixsock plugin. As far as I know, there is
no easy way to work with unix sockets from the shell, so if someone
wanted to flush collectd without this program, they would need to do it
through some other language (or restart the deamon).

I am no C wizard, so please bear with me if I have
done something a stupid way. :)
The code is based on/inspired by collectd-nagios.

If this message is not properly encoded as utf-8, something wrong must have
happened with my mailer. If that's the case, I'm sorry.  The only non-ascii character
in the patch is the second character of my name, which is an &aring;.

Signed-off-by: Håkon J Dugstad Johnsen <hakon-dugstad.johnsen@telenor.com>
Signed-off-by: Florian Forster <octo@huhu.verplant.org>",246,data/crawl/collectd/hunk_233.cpp,,,data/crawl/collectd/old_hunk_233.cpp,data/crawl/collectd/new_hunk_233.cpp,-1,147,,"fprintf (stderr, ""Could not get local hostname: %s"", strerror(errno));","[""addLog""]","[[], [""fprintf"", ""stderr"", ""Could"", ""not"", ""get"", ""local"", ""hostname"", ""%s"", ""strerror"", ""errno""]]",[10954894406413596782],182
https://github.com/collectd/collectd/commit/35ad86ccb95a7808ad2cf7ad266292cb877c5eb8,06 Aug 2010,"Add collectd-flush command line utility.

collectd-flush is a small command-line utility which uses libcollectdclient
to flush collectd through the unixsock plugin. As far as I know, there is
no easy way to work with unix sockets from the shell, so if someone
wanted to flush collectd without this program, they would need to do it
through some other language (or restart the deamon).

I am no C wizard, so please bear with me if I have
done something a stupid way. :)
The code is based on/inspired by collectd-nagios.

If this message is not properly encoded as utf-8, something wrong must have
happened with my mailer. If that's the case, I'm sorry.  The only non-ascii character
in the patch is the second character of my name, which is an &aring;.

Signed-off-by: Håkon J Dugstad Johnsen <hakon-dugstad.johnsen@telenor.com>
Signed-off-by: Florian Forster <octo@huhu.verplant.org>",246,data/crawl/collectd/hunk_233.cpp,,,data/crawl/collectd/old_hunk_233.cpp,data/crawl/collectd/new_hunk_233.cpp,-1,82,,"fprintf (stderr, ""Usage: %s [options]\n""
      ""\n""
      ""Valid options are:\n""
      ""  -h, --help               Display this help message.\n""
      ""  -s, --socket=<socket>    Path to collectd's UNIX socket. Default: /var/run/collectd-unixsock\n""
      ""  -p, --plugin=<plugin>    Plugin to flush _to_ (not from). Example: rrdtool\n""
      ""  -i, --identifier=<identifier>\n""
      ""                           Only flush data specified by <identifier>, which has the format: \n""
      ""\n""
      ""                             [<hostname>/]<plugin>[-<plugin_instance>]/<type>[-<type_instance>]\n""
      ""\n""
      ""                           Hostname defaults to the local hostname if omitted.\n""
      ""                           No error is returned if the specified identifier does not exist.\n""
      ""                           Examples: uptime/uptime\n""
      ""                                     somehost/cpu-0/cpu-wait\n""
      ""  -t, --timeout=<timeout>  Only flush values older than this timeout.\n"", name);","[""addLog""]","[[], [""fprintf"", ""stderr"", ""Usage"", ""%s"", ""[options]\\n"", ""\\n"", ""Valid"", ""options"", ""are"", ""\\n"", ""h"", ""help"", ""Display"", ""this"", ""help"", ""message"", ""\\n"", ""s"", ""socket"", ""socket"", ""Path"", ""to"", ""collectd"", ""s"", ""UNIX"", ""socket"", ""Default"", ""/var/run/collectd"", ""unixsock\\n"", ""p"", ""plugin"", ""plugin"", ""Plugin"", ""to"", ""flush"", ""_to_"", ""not"", ""from"", ""Example"", ""rrdtool\\n"", ""i"", ""identifier"", ""identifier"", ""\\n"", ""Only"", ""flush"", ""data"", ""specified"", ""by"", ""identifier"", ""which"", ""has"", ""the"", ""format"", ""\\n"", ""\\n"", ""["", ""hostname"", ""/]"", ""plugin"", ""["", ""plugin_instance"", ""]/"", ""type"", ""["", ""type_instance"", ""]\\n"", ""\\n"", ""Hostname"", ""defaults"", ""to"", ""the"", ""local"", ""hostname"", ""if"", ""omitted"", ""\\n"", ""No"", ""error"", ""is"", ""returned"", ""if"", ""the"", ""specified"", ""identifier"", ""does"", ""not"", ""exist"", ""\\n"", ""Examples"", ""uptime/uptime\\n"", ""somehost/cpu"", ""0/cpu"", ""wait\\n"", ""t"", ""timeout"", ""timeout"", ""Only"", ""flush"", ""values"", ""older"", ""than"", ""this"", ""timeout"", ""\\n"", ""name""]]",[84818938176224275647],181
https://github.com/collectd/collectd/commit/35ad86ccb95a7808ad2cf7ad266292cb877c5eb8,06 Aug 2010,"Add collectd-flush command line utility.

collectd-flush is a small command-line utility which uses libcollectdclient
to flush collectd through the unixsock plugin. As far as I know, there is
no easy way to work with unix sockets from the shell, so if someone
wanted to flush collectd without this program, they would need to do it
through some other language (or restart the deamon).

I am no C wizard, so please bear with me if I have
done something a stupid way. :)
The code is based on/inspired by collectd-nagios.

If this message is not properly encoded as utf-8, something wrong must have
happened with my mailer. If that's the case, I'm sorry.  The only non-ascii character
in the patch is the second character of my name, which is an &aring;.

Signed-off-by: Håkon J Dugstad Johnsen <hakon-dugstad.johnsen@telenor.com>
Signed-off-by: Florian Forster <octo@huhu.verplant.org>",246,data/crawl/collectd/hunk_233.cpp,,,data/crawl/collectd/old_hunk_233.cpp,data/crawl/collectd/new_hunk_233.cpp,-1,59,,"fprintf (stderr, ""ERROR: Creating and identifier failed: %s.\n"",
          lcc_strerror(connection));","[""addLog""]","[[], [""fprintf"", ""stderr"", ""ERROR"", ""Creating"", ""and"", ""identifier"", ""failed"", ""%s"", ""\\n"", ""lcc_strerror"", ""connection""]]",[-8276214130511111858],180
https://github.com/collectd/collectd/commit/35ad86ccb95a7808ad2cf7ad266292cb877c5eb8,06 Aug 2010,"Add collectd-flush command line utility.

collectd-flush is a small command-line utility which uses libcollectdclient
to flush collectd through the unixsock plugin. As far as I know, there is
no easy way to work with unix sockets from the shell, so if someone
wanted to flush collectd without this program, they would need to do it
through some other language (or restart the deamon).

I am no C wizard, so please bear with me if I have
done something a stupid way. :)
The code is based on/inspired by collectd-nagios.

If this message is not properly encoded as utf-8, something wrong must have
happened with my mailer. If that's the case, I'm sorry.  The only non-ascii character
in the patch is the second character of my name, which is an &aring;.

Signed-off-by: Håkon J Dugstad Johnsen <hakon-dugstad.johnsen@telenor.com>
Signed-off-by: Florian Forster <octo@huhu.verplant.org>",246,data/crawl/collectd/hunk_233.cpp,,,data/crawl/collectd/old_hunk_233.cpp,data/crawl/collectd/new_hunk_233.cpp,-1,49,,"fprintf (stderr, ""ERROR: Connecting to daemon at %s failed: %s.\n"",
address, strerror (errno));","[""addLog""]","[[], [""fprintf"", ""stderr"", ""ERROR"", ""Connecting"", ""to"", ""daemon"", ""at"", ""%s"", ""failed"", ""%s"", ""\\n"", ""address"", ""strerror"", ""errno""]]",[-15982592860142799569],179
https://github.com/collectd/collectd/commit/8856d7def89bebef924ef90d04a0baf088744bbc,07 Aug 2010,"collectd-flush: Do not use ‘getopt_long()’.

This is a GNU extension and, thus, not portable.

Also, pimped the usage output a bit.",110,data/crawl/collectd/hunk_228.cpp,,,data/crawl/collectd/old_hunk_228.cpp,data/crawl/collectd/new_hunk_228.cpp,3,3,"fprintf ((status == 0) ? stdout : stderr, ""Usage: %s [options]\n""
      ""\n""
      ""Valid options are:\n""
      ""  -h, --help               Display this help message.\n""
      ""  -s, --socket=<socket>    Path to collectd's UNIX socket. Default: /var/run/collectd-unixsock\n""
      ""  -p, --plugin=<plugin>    Plugin to flush _to_ (not from). Example: rrdtool\n""
      ""  -i, --identifier=<identifier>\n""
      ""                           Only flush data specified by <identifier>, which has the format: \n""
      ""\n""
      ""                             [<hostname>/]<plugin>[-<plugin_instance>]/<type>[-<type_instance>]\n""
      ""\n""
      ""                           Hostname defaults to the local hostname if omitted.\n""
      ""                           No error is returned if the specified identifier does not exist.\n""
      ""                           Examples: uptime/uptime\n""
      ""                                     somehost/cpu-0/cpu-wait\n""
      ""  -t, --timeout=<timeout>  Only flush values older than this timeout.\n"", name);","fprintf ((status == 0) ? stdout : stderr,
      ""Usage: %s [options]\n\n""

      ""Available options:\n""
      ""  -s             Path to collectd's UNIX socket.\n""
      ""                 Default: /var/run/collectd-unixsock\n""
      ""  -p <plugin>    Plugin to be flushed.\n""
      ""  -i <id>        Flush data identified by <id> only (see below).\n""
      ""  -t <seconds>   Flush values older than this value only.\n""

      ""\n  -h             Display this help and exit.\n""

      ""\nIdentfiers:\n\n""

      ""An identifier (as accepted by the -i option) has the following\n""
      ""format:\n\n""

      ""  [<hostname>/]<plugin>[-<plugin_instance>]/<type>[-<type_instance>]\n\n""

      ""Hostname defaults to the local hostname if omitted (e.g., uptime/uptime).\n""
      ""No error is returned if the specified identifier does not exist.\n""

      ""\nExample:\n\n""

      ""  collectd-flush -p rrdtool -i somehost/cpu-0/cpu-wait\n\n""

      ""Flushes all CPU wait RRD values of the first CPU of the local host.\n""
      ""I.e., writes all pending RRD updates of that data-source to disk.\n""
      , name);","[""updateContent"", ""addContent""]","[[""[options]\\n"", ""Valid"", ""are"", ""help"", ""message"", ""socket"", ""socket"", ""_to_"", ""from"", ""Example"", ""rrdtool\\n"", ""Only"", ""flush"", ""identifier"", ""which"", ""plugin"", ""]\\n"", ""specified"", ""identifier"", ""not"", ""Examples"", ""uptime/uptime\\n"", ""wait\\n"", ""timeout"", ""timeout"", ""Only"", ""flush"", ""timeout""], [""[options]\\n\\n"", ""Available"", ""be"", ""flushed"", ""id"", ""Flush"", ""identified"", ""id"", ""only"", ""see"", ""below"", ""seconds"", ""Flush"", ""value"", ""only"", ""and"", ""exit"", ""\\nIdentfiers"", ""\\n\\n"", ""An"", ""as"", ""accepted"", ""by"", ""i"", ""option"", ""following\\n"", ""\\n\\n"", ""]\\n\\n"", ""e"", ""g"", ""uptime/uptime"", ""the"", ""\\nExample"", ""\\n\\n"", ""collectd"", ""p"", ""rrdtool"", ""i"", ""wait\\n\\n"", ""Flushes"", ""all"", ""CPU"", ""wait"", ""RRD"", ""values"", ""of"", ""the"", ""first"", ""CPU"", ""of"", ""the"", ""local"", ""host"", ""I"", ""e"", ""writes"", ""all"", ""pending"", ""RRD"", ""updates"", ""of"", ""that"", ""data"", ""source"", ""to"", ""disk"", ""\\n""]]",[-49542808441240560326],178
https://github.com/collectd/collectd/commit/91c09b4a499872e92c845859b912dcc049fdf712,08 Aug 2010,"collectd-flush: Switched to a command based syntax.

Basically, the command line now looks similar to the ‘unixsock’ text protocol,
i.e., a command is specified as first non-option argument followed by any
options of that command as defined by the protocol.",247,data/crawl/collectd/hunk_227.cpp,,,data/crawl/collectd/old_hunk_227.cpp,data/crawl/collectd/new_hunk_227.cpp,-1,11,,"fprintf (stderr, ""%s: invalid command: %s\n"", argv[0], argv[optind]);","[""addLog""]","[[], [""fprintf"", ""stderr"", ""%s"", ""invalid"", ""command"", ""%s\\n"", ""argv[0]"", ""argv[optind]""]]",[-9892054947744691769],177
https://github.com/collectd/collectd/commit/91c09b4a499872e92c845859b912dcc049fdf712,08 Aug 2010,"collectd-flush: Switched to a command based syntax.

Basically, the command line now looks similar to the ‘unixsock’ text protocol,
i.e., a command is specified as first non-option argument followed by any
options of that command as defined by the protocol.",247,data/crawl/collectd/hunk_227.cpp,,,data/crawl/collectd/old_hunk_227.cpp,data/crawl/collectd/new_hunk_227.cpp,-1,4,,"fprintf (stderr, ""%s: missing command\n"", argv[0]);","[""addLog""]","[[], [""fprintf"", ""stderr"", ""%s"", ""missing"", ""command\\n"", ""argv[0]""]]",[-5499133434053048834],176
https://github.com/collectd/collectd/commit/91c09b4a499872e92c845859b912dcc049fdf712,08 Aug 2010,"collectd-flush: Switched to a command based syntax.

Basically, the command line now looks similar to the ‘unixsock’ text protocol,
i.e., a command is specified as first non-option argument followed by any
options of that command as defined by the protocol.",247,data/crawl/collectd/hunk_226.cpp,,,data/crawl/collectd/old_hunk_226.cpp,data/crawl/collectd/new_hunk_226.cpp,12,-1,"fprintf (stderr, ""Could not get local hostname: %s"", strerror (errno));",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""Could"", ""not"", ""get"", ""local"", ""hostname"", ""%s"", ""strerror"", ""errno""], []]",[-10954894406413596782],175
https://github.com/collectd/collectd/commit/91c09b4a499872e92c845859b912dcc049fdf712,08 Aug 2010,"collectd-flush: Switched to a command based syntax.

Basically, the command line now looks similar to the ‘unixsock’ text protocol,
i.e., a command is specified as first non-option argument followed by any
options of that command as defined by the protocol.",247,data/crawl/collectd/hunk_225.cpp,,,data/crawl/collectd/old_hunk_225.cpp,data/crawl/collectd/new_hunk_225.cpp,-1,87,,"fprintf (stderr, ""ERROR: Failed to parse identifier ``%s'': %s.\n"",
            ident_str, lcc_strerror(connection));","[""addLog""]","[[], [""fprintf"", ""stderr"", ""ERROR"", ""Failed"", ""to"", ""parse"", ""identifier"", ""%s"", ""%s"", ""\\n"", ""ident_str"", ""lcc_strerror"", ""connection""]]",[-7217415480749151189],174
https://github.com/collectd/collectd/commit/91c09b4a499872e92c845859b912dcc049fdf712,08 Aug 2010,"collectd-flush: Switched to a command based syntax.

Basically, the command line now looks similar to the ‘unixsock’ text protocol,
i.e., a command is specified as first non-option argument followed by any
options of that command as defined by the protocol.",247,data/crawl/collectd/hunk_225.cpp,,,data/crawl/collectd/old_hunk_225.cpp,data/crawl/collectd/new_hunk_225.cpp,-1,53,,"fprintf (stderr, ""WARNING: Ignoring trailing garbage after timeout: ""
            ""%s.\n"", endptr);","[""addLog""]","[[], [""fprintf"", ""stderr"", ""WARNING"", ""Ignoring"", ""trailing"", ""garbage"", ""after"", ""timeout"", ""%s"", ""\\n"", ""endptr""]]",[-33830701263418330870],173
https://github.com/collectd/collectd/commit/91c09b4a499872e92c845859b912dcc049fdf712,08 Aug 2010,"collectd-flush: Switched to a command based syntax.

Basically, the command line now looks similar to the ‘unixsock’ text protocol,
i.e., a command is specified as first non-option argument followed by any
options of that command as defined by the protocol.",247,data/crawl/collectd/hunk_225.cpp,,,data/crawl/collectd/old_hunk_225.cpp,data/crawl/collectd/new_hunk_225.cpp,-1,48,,"fprintf (stderr, ""ERROR: Failed to parse timeout as number: %s.\n"",
            value);","[""addLog""]","[[], [""fprintf"", ""stderr"", ""ERROR"", ""Failed"", ""to"", ""parse"", ""timeout"", ""as"", ""number"", ""%s"", ""\\n"", ""value""]]",[-30747075427449045812],172
https://github.com/collectd/collectd/commit/91c09b4a499872e92c845859b912dcc049fdf712,08 Aug 2010,"collectd-flush: Switched to a command based syntax.

Basically, the command line now looks similar to the ‘unixsock’ text protocol,
i.e., a command is specified as first non-option argument followed by any
options of that command as defined by the protocol.",247,data/crawl/collectd/hunk_225.cpp,,,data/crawl/collectd/old_hunk_225.cpp,data/crawl/collectd/new_hunk_225.cpp,-1,35,,"fprintf (stderr, ""ERROR: Invalid option ``%s''.\n"", argv[i]);","[""addLog""]","[[], [""fprintf"", ""stderr"", ""ERROR"", ""Invalid"", ""option"", ""%s"", ""\\n"", ""argv[i]""]]",[-10726965021697629070],171
https://github.com/collectd/collectd/commit/91c09b4a499872e92c845859b912dcc049fdf712,08 Aug 2010,"collectd-flush: Switched to a command based syntax.

Basically, the command line now looks similar to the ‘unixsock’ text protocol,
i.e., a command is specified as first non-option argument followed by any
options of that command as defined by the protocol.",247,data/crawl/collectd/hunk_224.cpp,,,data/crawl/collectd/old_hunk_224.cpp,data/crawl/collectd/new_hunk_224.cpp,51,-1,"fprintf (stderr, ""ERROR: Flushing failed: %s.\n"",
        lcc_strerror (connection));",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""ERROR"", ""Flushing"", ""failed"", ""%s"", ""\\n"", ""lcc_strerror"", ""connection""], []]",[23189516226270906044],170
https://github.com/collectd/collectd/commit/91c09b4a499872e92c845859b912dcc049fdf712,08 Aug 2010,"collectd-flush: Switched to a command based syntax.

Basically, the command line now looks similar to the ‘unixsock’ text protocol,
i.e., a command is specified as first non-option argument followed by any
options of that command as defined by the protocol.",247,data/crawl/collectd/hunk_224.cpp,,,data/crawl/collectd/old_hunk_224.cpp,data/crawl/collectd/new_hunk_224.cpp,40,-1,"fprintf (stderr, ""ERROR: Creating and identifier failed: %s.\n"",
          lcc_strerror(connection));",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""ERROR"", ""Creating"", ""and"", ""identifier"", ""failed"", ""%s"", ""\\n"", ""lcc_strerror"", ""connection""], []]",[8276214130511111858],169
https://github.com/collectd/collectd/commit/91c09b4a499872e92c845859b912dcc049fdf712,08 Aug 2010,"collectd-flush: Switched to a command based syntax.

Basically, the command line now looks similar to the ‘unixsock’ text protocol,
i.e., a command is specified as first non-option argument followed by any
options of that command as defined by the protocol.",247,data/crawl/collectd/hunk_224.cpp,,,data/crawl/collectd/old_hunk_224.cpp,data/crawl/collectd/new_hunk_224.cpp,31,-1,"fprintf (stderr, ""ERROR: Connecting to daemon at %s failed: %s.\n"",
        address, strerror (errno));",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""ERROR"", ""Connecting"", ""to"", ""daemon"", ""at"", ""%s"", ""failed"", ""%s"", ""\\n"", ""address"", ""strerror"", ""errno""], []]",[15982592860142799569],168
https://github.com/collectd/collectd/commit/677cdefc79b8317c0013521f7f9e3eff7af7c282,08 Aug 2010,collectd-flush: Moved connection handling out of ‘flush()’.,38,data/crawl/collectd/hunk_221.cpp,,,data/crawl/collectd/old_hunk_221.cpp,data/crawl/collectd/new_hunk_221.cpp,6,-1,"fprintf (stderr, ""ERROR: Failed to connect to daemon at %s: %s.\n"",
        address, strerror (errno));",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""ERROR"", ""Failed"", ""to"", ""connect"", ""to"", ""daemon"", ""at"", ""%s"", ""%s"", ""\\n"", ""address"", ""strerror"", ""errno""], []]",[14130893810876939967],167
https://github.com/collectd/collectd/commit/dfdde4f67574cc6c02ca4bb26a1b54b3b7250fcd,08 Aug 2010,collectd-flush: Added support for the ‘getval’ command.,124,data/crawl/collectd/hunk_219.cpp,,,data/crawl/collectd/old_hunk_219.cpp,data/crawl/collectd/new_hunk_219.cpp,29,-1,"fprintf (stderr, ""ERROR: Failed to parse identifier ``%s'': %s.\n"",
            ident_str, lcc_strerror(c));",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""ERROR"", ""Failed"", ""to"", ""parse"", ""identifier"", ""%s"", ""%s"", ""\\n"", ""ident_str"", ""lcc_strerror"", ""c""], []]",[9452700041076765669],166
https://github.com/collectd/collectd/commit/dfdde4f67574cc6c02ca4bb26a1b54b3b7250fcd,08 Aug 2010,collectd-flush: Added support for the ‘getval’ command.,124,data/crawl/collectd/hunk_219.cpp,,,data/crawl/collectd/old_hunk_219.cpp,data/crawl/collectd/new_hunk_219.cpp,13,5,"fprintf (stderr, ""ERROR: Failed to get local hostname: %s"",
              strerror (errno));","memset (&ident, 0, sizeof (ident));","[""updateVariable"", ""updateLog"", ""removeVariable"", ""updateContent"", ""addVariable""]","[[""fprintf"", ""stderr"", ""ERROR"", ""Failed"", ""to"", ""get"", ""local"", ""hostname"", ""%s"", ""strerror"", ""errno""], [""memset"", ""&ident"", ""0"", ""sizeof"", ""ident""]]",[15178291479150956198],165
https://github.com/collectd/collectd/commit/dfdde4f67574cc6c02ca4bb26a1b54b3b7250fcd,08 Aug 2010,collectd-flush: Added support for the ‘getval’ command.,124,data/crawl/collectd/hunk_218.cpp,,,data/crawl/collectd/old_hunk_218.cpp,data/crawl/collectd/new_hunk_218.cpp,3,3,"fprintf (stderr, ""ERROR: Invalid option ``%s''.\n"", argv[i]);","fprintf (stderr, ""ERROR: flush: Invalid option ``%s''.\n"", argv[i]);","[""updateContent""]","[[], [""flush""]]",[6052990072570388119],164
https://github.com/collectd/collectd/commit/dfdde4f67574cc6c02ca4bb26a1b54b3b7250fcd,08 Aug 2010,collectd-flush: Added support for the ‘getval’ command.,124,data/crawl/collectd/hunk_217.cpp,,,data/crawl/collectd/old_hunk_217.cpp,data/crawl/collectd/new_hunk_217.cpp,-1,83,,"printf (""%s=%e\n"", ret_values_names[i], ret_values[i]);","[""addLog""]","[[], [""printf"", ""%s"", ""%e\\n"", ""ret_values_names[i]"", ""ret_values[i]""]]",[8057832602900500142],163
https://github.com/collectd/collectd/commit/dfdde4f67574cc6c02ca4bb26a1b54b3b7250fcd,08 Aug 2010,collectd-flush: Added support for the ‘getval’ command.,124,data/crawl/collectd/hunk_217.cpp,,,data/crawl/collectd/old_hunk_217.cpp,data/crawl/collectd/new_hunk_217.cpp,-1,55,,"fprintf (stderr, ""ERROR: getval: Missing identifier.\n"");","[""addLog""]","[[], [""fprintf"", ""stderr"", ""ERROR"", ""getval"", ""Missing"", ""identifier"", ""\\n""]]",[11413313819159487106],162
https://github.com/collectd/collectd/commit/dfdde4f67574cc6c02ca4bb26a1b54b3b7250fcd,08 Aug 2010,collectd-flush: Added support for the ‘getval’ command.,124,data/crawl/collectd/hunk_217.cpp,,,data/crawl/collectd/old_hunk_217.cpp,data/crawl/collectd/new_hunk_217.cpp,-1,34,,"fprintf (stderr, ""ERROR: Failed to parse identifier ``%s'': %s.\n"",
        ident_str, lcc_strerror(c));","[""addLog""]","[[], [""fprintf"", ""stderr"", ""ERROR"", ""Failed"", ""to"", ""parse"", ""identifier"", ""%s"", ""%s"", ""\\n"", ""ident_str"", ""lcc_strerror"", ""c""]]",[-9452700041076765669],161
https://github.com/collectd/collectd/commit/1252d60cdbd86328ecb815e978dbfa380c29b385,08 Aug 2010,collectdctl: Added ‘listval’ command.,47,data/crawl/collectd/hunk_215.cpp,,,data/crawl/collectd/old_hunk_215.cpp,data/crawl/collectd/new_hunk_215.cpp,-1,38,,"fprintf (stderr, ""ERROR: listval: Failed to convert returned ""
          ""identifier to a string.\n"");","[""addLog""]","[[], [""fprintf"", ""stderr"", ""ERROR"", ""listval"", ""Failed"", ""to"", ""convert"", ""returned"", ""identifier"", ""to"", ""a"", ""string"", ""\\n""]]",[-11334811314542396451],160
https://github.com/collectd/collectd/commit/1252d60cdbd86328ecb815e978dbfa380c29b385,08 Aug 2010,collectdctl: Added ‘listval’ command.,47,data/crawl/collectd/hunk_215.cpp,,,data/crawl/collectd/old_hunk_215.cpp,data/crawl/collectd/new_hunk_215.cpp,-1,17,,"fprintf (stderr, ""ERROR: listval: Does not accept any arguments.\n"");","[""addLog""]","[[], [""fprintf"", ""stderr"", ""ERROR"", ""listval"", ""Does"", ""not"", ""accept"", ""any"", ""arguments"", ""\\n""]]",[-11661322499302916754],159
https://github.com/collectd/collectd/commit/5b4655df8b9d8e60d0502b0c6ecdcb05e99f7fc7,08 Aug 2010,collectdctl: Improved error reporting.,10,data/crawl/collectd/hunk_214.cpp,,,data/crawl/collectd/old_hunk_214.cpp,data/crawl/collectd/new_hunk_214.cpp,11,13,"fprintf (stderr, ""ERROR: listval: Failed to convert returned ""
          ""identifier to a string.\n"");","fprintf (stderr, ""ERROR: listval: Failed to convert returned ""
          ""identifier to a string: %s\n"", lcc_strerror (c));","[""updateContent"", ""addVariable""]","[[""\\n""], [""%s\\n"", ""lcc_strerror"", ""c""]]",[1417051709032017968],158
https://github.com/collectd/collectd/commit/d0d5d5fa42cd77042d4c3077bb67cfeb8c9cd701,09 Aug 2010,"collectdctl: ‘flush’ now supports multiple plugins/identifiers.

… just like the ‘unixsock’ plugin does.",108,data/crawl/collectd/hunk_212.cpp,,,data/crawl/collectd/old_hunk_212.cpp,data/crawl/collectd/new_hunk_212.cpp,-1,57,,"fprintf (stderr, ""ERROR: Failed to flush plugin `%s', ""
              ""identifier `%s': %s.\n"",
              (plugins[i] == NULL) ? ""(all)"" : plugins[i],
              id, lcc_strerror (c));","[""addLog""]","[[], [""fprintf"", ""stderr"", ""ERROR"", ""Failed"", ""to"", ""flush"", ""plugin"", ""%s"", ""identifier"", ""%s"", ""%s"", ""\\n"", ""plugins[i]"", ""NULL"", ""all"", ""plugins[i]"", ""id"", ""lcc_strerror"", ""c""]]",[-4467512052364425092],157
https://github.com/collectd/collectd/commit/d0d5d5fa42cd77042d4c3077bb67cfeb8c9cd701,09 Aug 2010,"collectdctl: ‘flush’ now supports multiple plugins/identifiers.

… just like the ‘unixsock’ plugin does.",108,data/crawl/collectd/hunk_212.cpp,,,data/crawl/collectd/old_hunk_212.cpp,data/crawl/collectd/new_hunk_212.cpp,-1,45,,"fprintf (stderr, ""ERROR: Failed to flush plugin `%s': %s.\n"",
            (plugins[i] == NULL) ? ""(all)"" : plugins[i], lcc_strerror (c));","[""addLog""]","[[], [""fprintf"", ""stderr"", ""ERROR"", ""Failed"", ""to"", ""flush"", ""plugin"", ""%s"", ""%s"", ""\\n"", ""plugins[i]"", ""NULL"", ""all"", ""plugins[i]"", ""lcc_strerror"", ""c""]]",[-13127570398809346554],156
https://github.com/collectd/collectd/commit/d0d5d5fa42cd77042d4c3077bb67cfeb8c9cd701,09 Aug 2010,"collectdctl: ‘flush’ now supports multiple plugins/identifiers.

… just like the ‘unixsock’ plugin does.",108,data/crawl/collectd/hunk_212.cpp,,,data/crawl/collectd/old_hunk_212.cpp,data/crawl/collectd/new_hunk_212.cpp,26,56,"fprintf (stderr, ""ERROR: Flushing failed: %s.\n"",
        lcc_strerror (c));","lcc_identifier_to_string (c, id, sizeof (id), identifiers + j);","[""updateVariable"", ""updateLog"", ""removeVariable"", ""removeContent"", ""addVariable""]","[[""fprintf"", ""stderr"", ""ERROR"", ""Flushing"", ""failed"", ""%s"", ""\\n"", ""lcc_strerror""], [""lcc_identifier_to_string"", ""id"", ""sizeof"", ""id"", ""identifiers"", ""j""]]",[11371721440756777864],155
https://github.com/collectd/collectd/commit/d0d5d5fa42cd77042d4c3077bb67cfeb8c9cd701,09 Aug 2010,"collectdctl: ‘flush’ now supports multiple plugins/identifiers.

… just like the ‘unixsock’ plugin does.",108,data/crawl/collectd/hunk_209.cpp,,,data/crawl/collectd/old_hunk_209.cpp,data/crawl/collectd/new_hunk_209.cpp,-1,11,,"fprintf (stderr, ""ERROR: Failed to allocate memory.\n"");","[""addLog""]","[[], [""fprintf"", ""stderr"", ""ERROR"", ""Failed"", ""to"", ""allocate"", ""memory"", ""\\n""]]",[-2951538778328145337],154
https://github.com/collectd/collectd/commit/666394e4a4fe8efe6a98266b9dbac32e30064f45,09 Aug 2010,collectdctl: Added support for the ‘putval’ command.,182,data/crawl/collectd/hunk_207.cpp,,,data/crawl/collectd/old_hunk_207.cpp,data/crawl/collectd/new_hunk_207.cpp,-1,147,,"fprintf (stderr, ""ERROR: putval: Missing value list(s).\n"");","[""addLog""]","[[], [""fprintf"", ""stderr"", ""ERROR"", ""putval"", ""Missing"", ""value"", ""list"", ""s"", ""\\n""]]",[-7390014257440985054],153
https://github.com/collectd/collectd/commit/666394e4a4fe8efe6a98266b9dbac32e30064f45,09 Aug 2010,collectdctl: Added support for the ‘putval’ command.,182,data/crawl/collectd/hunk_207.cpp,,,data/crawl/collectd/old_hunk_207.cpp,data/crawl/collectd/new_hunk_207.cpp,-1,128,,"fprintf (stderr, ""ERROR: Garbage after value: %s.\n"", endptr);","[""addLog""]","[[], [""fprintf"", ""stderr"", ""ERROR"", ""Garbage"", ""after"", ""value"", ""%s"", ""\\n"", ""endptr""]]",[-34413314167008286373],152
https://github.com/collectd/collectd/commit/666394e4a4fe8efe6a98266b9dbac32e30064f45,09 Aug 2010,collectdctl: Added support for the ‘putval’ command.,182,data/crawl/collectd/hunk_207.cpp,,,data/crawl/collectd/old_hunk_207.cpp,data/crawl/collectd/new_hunk_207.cpp,-1,123,,"fprintf (stderr, ""ERROR: Failed to parse value as number: %s.\n"",
              argv[i]);","[""addLog""]","[[], [""fprintf"", ""stderr"", ""ERROR"", ""Failed"", ""to"", ""parse"", ""value"", ""as"", ""number"", ""%s"", ""\\n"", ""argv[i]""]]",[-33527568525203887234],151
https://github.com/collectd/collectd/commit/666394e4a4fe8efe6a98266b9dbac32e30064f45,09 Aug 2010,collectdctl: Added support for the ‘putval’ command.,182,data/crawl/collectd/hunk_207.cpp,,,data/crawl/collectd/old_hunk_207.cpp,data/crawl/collectd/new_hunk_207.cpp,-1,90,,"fprintf (stderr, ""ERROR: Garbage after time: %s.\n"", endptr);","[""addLog""]","[[], [""fprintf"", ""stderr"", ""ERROR"", ""Garbage"", ""after"", ""time"", ""%s"", ""\\n"", ""endptr""]]",[-24134043253088431132],150
https://github.com/collectd/collectd/commit/666394e4a4fe8efe6a98266b9dbac32e30064f45,09 Aug 2010,collectdctl: Added support for the ‘putval’ command.,182,data/crawl/collectd/hunk_207.cpp,,,data/crawl/collectd/old_hunk_207.cpp,data/crawl/collectd/new_hunk_207.cpp,-1,85,,"fprintf (stderr, ""ERROR: Failed to parse time as number: %s.\n"",
              argv[i]);","[""addLog""]","[[], [""fprintf"", ""stderr"", ""ERROR"", ""Failed"", ""to"", ""parse"", ""time"", ""as"", ""number"", ""%s"", ""\\n"", ""argv[i]""]]",[-23248297611284031993],149
https://github.com/collectd/collectd/commit/666394e4a4fe8efe6a98266b9dbac32e30064f45,09 Aug 2010,collectdctl: Added support for the ‘putval’ command.,182,data/crawl/collectd/hunk_207.cpp,,,data/crawl/collectd/old_hunk_207.cpp,data/crawl/collectd/new_hunk_207.cpp,-1,68,,"fprintf (stderr, ""ERROR: putval: Invalid value list: %s.\n"",
            argv[i]);","[""addLog""]","[[], [""fprintf"", ""stderr"", ""ERROR"", ""putval"", ""Invalid"", ""value"", ""list"", ""%s"", ""\\n"", ""argv[i]""]]",[-19226672361421508195],148
https://github.com/collectd/collectd/commit/666394e4a4fe8efe6a98266b9dbac32e30064f45,09 Aug 2010,collectdctl: Added support for the ‘putval’ command.,182,data/crawl/collectd/hunk_207.cpp,,,data/crawl/collectd/old_hunk_207.cpp,data/crawl/collectd/new_hunk_207.cpp,-1,58,,"fprintf (stderr, ""ERROR: putval: Unknown option `%s'.\n"", key);","[""addLog""]","[[], [""fprintf"", ""stderr"", ""ERROR"", ""putval"", ""Unknown"", ""option"", ""%s"", ""\\n"", ""key""]]",[-3494540571884353999],147
https://github.com/collectd/collectd/commit/666394e4a4fe8efe6a98266b9dbac32e30064f45,09 Aug 2010,collectdctl: Added support for the ‘putval’ command.,182,data/crawl/collectd/hunk_207.cpp,,,data/crawl/collectd/old_hunk_207.cpp,data/crawl/collectd/new_hunk_207.cpp,-1,53,,"fprintf (stderr, ""WARNING: Ignoring trailing garbage after ""
              ""interval: %s.\n"", endptr);","[""addLog""]","[[], [""fprintf"", ""stderr"", ""WARNING"", ""Ignoring"", ""trailing"", ""garbage"", ""after"", ""interval"", ""%s"", ""\\n"", ""endptr""]]",[-43846562285088827777],146
https://github.com/collectd/collectd/commit/666394e4a4fe8efe6a98266b9dbac32e30064f45,09 Aug 2010,collectdctl: Added support for the ‘putval’ command.,182,data/crawl/collectd/hunk_207.cpp,,,data/crawl/collectd/old_hunk_207.cpp,data/crawl/collectd/new_hunk_207.cpp,-1,48,,"fprintf (stderr, ""ERROR: Failed to parse interval as number: %s.\n"",
              value);","[""addLog""]","[[], [""fprintf"", ""stderr"", ""ERROR"", ""Failed"", ""to"", ""parse"", ""interval"", ""as"", ""number"", ""%s"", ""\\n"", ""value""]]",[-40762936449119542719],145
https://github.com/collectd/collectd/commit/666394e4a4fe8efe6a98266b9dbac32e30064f45,09 Aug 2010,collectdctl: Added support for the ‘putval’ command.,182,data/crawl/collectd/hunk_207.cpp,,,data/crawl/collectd/old_hunk_207.cpp,data/crawl/collectd/new_hunk_207.cpp,-1,18,,"fprintf (stderr, ""ERROR: putval: Missing identifier ""
        ""and/or value list.\n"");","[""addLog""]","[[], [""fprintf"", ""stderr"", ""ERROR"", ""putval"", ""Missing"", ""identifier"", ""and/or"", ""value"", ""list"", ""\\n""]]",[-5898789421711600562],144
https://github.com/collectd/collectd/commit/4da9a97a7024960ef8210e10b76204ef2fdaf979,09 Aug 2010,collectdctl: Improved error reporting.,4,data/crawl/collectd/hunk_206.cpp,,,data/crawl/collectd/old_hunk_206.cpp,data/crawl/collectd/new_hunk_206.cpp,-1,4,,"fprintf (stderr, ""ERROR: flush: Unknown option `%s'.\n"", key);","[""addLog""]","[[], [""fprintf"", ""stderr"", ""ERROR"", ""flush"", ""Unknown"", ""option"", ""%s"", ""\\n"", ""key""]]",[6775783063008293426],143
https://github.com/collectd/collectd/commit/a63ec989fa64dc13da40fc9b96b4c3bc73fdfbc1,09 Feb 2011,"src/plugin.c: Print a more verbose error message if lt_dlopen() fails.

Since the Debian package doesn't depend on the libraries used by the
collectd plugins, some plugins may fail to load. ltdl reports this with
the very confusing error message ""file not found"". Since the plugin is
in fact available, many users don't realize a dependency is missing and
assume collectd is looking in the wrong directory -- and they are hardly
to blame for this.

This commit introduces a lengthy error message which hopefully points
users into the right direction.",24,data/crawl/collectd/hunk_203.cpp,,,data/crawl/collectd/old_hunk_203.cpp,data/crawl/collectd/new_hunk_203.cpp,13,24,"fprintf (stderr, ""lt_dlopen (%s) failed: %s\n"", file, error);","fprintf (stderr, ""ERROR: %s\n"", errbuf);","[""updateVariable"", ""removeVariable"", ""updateContent""]","[[""lt_dlopen"", ""%s"", ""failed"", ""file"", ""error""], [""ERROR"", ""errbuf""]]",[8158896791232222279],142
https://github.com/collectd/collectd/commit/99364c70a7039ed496dbe429fb86ee41e464fc76,03 Apr 2011,"iptables plugin: Remove the shipped version of libiptc.

Since libiptc is now publicly available as a shared library, we don't really
have any need to ship it with collectd anymore.",5264,data/crawl/collectd/hunk_202.cpp,,,data/crawl/collectd/old_hunk_202.cpp,data/crawl/collectd/new_hunk_202.cpp,1357,-1,"printf(""Underflows: pre/in/fwd/out/post = %u/%u/%u/%u/%u\n"",
       handle->info.underflow[HOOK_PRE_ROUTING],
       handle->info.underflow[HOOK_LOCAL_IN],
       handle->info.underflow[HOOK_FORWARD],
       handle->info.underflow[HOOK_LOCAL_OUT],
       handle->info.underflow[HOOK_POST_ROUTING]);",,"[""removeLog""]","[[""printf"", ""Underflows"", ""pre/in/fwd/out/post"", ""%u/%u/%u/%u/%u\\n"", ""handle"", ""info"", ""underflow[HOOK_PRE_ROUTING]"", ""handle"", ""info"", ""underflow[HOOK_LOCAL_IN]"", ""handle"", ""info"", ""underflow[HOOK_FORWARD]"", ""handle"", ""info"", ""underflow[HOOK_LOCAL_OUT]"", ""handle"", ""info"", ""underflow[HOOK_POST_ROUTING]""], []]",[-23659300332358054310],141
https://github.com/collectd/collectd/commit/99364c70a7039ed496dbe429fb86ee41e464fc76,03 Apr 2011,"iptables plugin: Remove the shipped version of libiptc.

Since libiptc is now publicly available as a shared library, we don't really
have any need to ship it with collectd anymore.",5264,data/crawl/collectd/hunk_202.cpp,,,data/crawl/collectd/old_hunk_202.cpp,data/crawl/collectd/new_hunk_202.cpp,1351,-1,"printf(""Hooks: pre/in/fwd/out/post = %u/%u/%u/%u/%u\n"",
       handle->info.hook_entry[HOOK_PRE_ROUTING],
       handle->info.hook_entry[HOOK_LOCAL_IN],
       handle->info.hook_entry[HOOK_FORWARD],
       handle->info.hook_entry[HOOK_LOCAL_OUT],
       handle->info.hook_entry[HOOK_POST_ROUTING]);",,"[""removeLog""]","[[""printf"", ""Hooks"", ""pre/in/fwd/out/post"", ""%u/%u/%u/%u/%u\\n"", ""handle"", ""info"", ""hook_entry[HOOK_PRE_ROUTING]"", ""handle"", ""info"", ""hook_entry[HOOK_LOCAL_IN]"", ""handle"", ""info"", ""hook_entry[HOOK_FORWARD]"", ""handle"", ""info"", ""hook_entry[HOOK_LOCAL_OUT]"", ""handle"", ""info"", ""hook_entry[HOOK_POST_ROUTING]""], []]",[20218955162888178367],140
https://github.com/collectd/collectd/commit/99364c70a7039ed496dbe429fb86ee41e464fc76,03 Apr 2011,"iptables plugin: Remove the shipped version of libiptc.

Since libiptc is now publicly available as a shared library, we don't really
have any need to ship it with collectd anymore.",5264,data/crawl/collectd/hunk_202.cpp,,,data/crawl/collectd/old_hunk_202.cpp,data/crawl/collectd/new_hunk_202.cpp,1350,-1,"printf(""Table `%s'\n"", handle->info.name);",,"[""removeLog""]","[[""printf"", ""Table"", ""%s"", ""\\n"", ""handle"", ""info"", ""name""], []]",[-2445844101809374479],139
https://github.com/collectd/collectd/commit/99364c70a7039ed496dbe429fb86ee41e464fc76,03 Apr 2011,"iptables plugin: Remove the shipped version of libiptc.

Since libiptc is now publicly available as a shared library, we don't really
have any need to ship it with collectd anymore.",5264,data/crawl/collectd/hunk_202.cpp,,,data/crawl/collectd/old_hunk_202.cpp,data/crawl/collectd/new_hunk_202.cpp,1348,-1,"printf(""libiptc v%s. %u bytes.\n"",
       XTABLES_VERSION, handle->entries->size);",,"[""removeLog""]","[[""printf"", ""libiptc"", ""v%s"", ""%u"", ""bytes"", ""\\n"", ""XTABLES_VERSION"", ""handle"", ""entries"", ""size""], []]",[-19487926870209907269],138
https://github.com/collectd/collectd/commit/99364c70a7039ed496dbe429fb86ee41e464fc76,03 Apr 2011,"iptables plugin: Remove the shipped version of libiptc.

Since libiptc is now publicly available as a shared library, we don't really
have any need to ship it with collectd anymore.",5264,data/crawl/collectd/hunk_202.cpp,,,data/crawl/collectd/old_hunk_202.cpp,data/crawl/collectd/new_hunk_202.cpp,477,-1,"fprintf(stderr, ""Chain index[%d].name: %s\n"",
i, h->chain_index[i]->name);",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""Chain"", ""index[%d]"", ""name"", ""%s\\n"", ""i"", ""h"", ""chain_index[i]"", ""name""], []]",[14815484398374098466],137
https://github.com/collectd/collectd/commit/99364c70a7039ed496dbe429fb86ee41e464fc76,03 Apr 2011,"iptables plugin: Remove the shipped version of libiptc.

Since libiptc is now publicly available as a shared library, we don't really
have any need to ship it with collectd anymore.",5264,data/crawl/collectd/hunk_202.cpp,,,data/crawl/collectd/old_hunk_202.cpp,data/crawl/collectd/new_hunk_202.cpp,357,-1,"fprintf(stderr, ""ERROR: NULL pointer chain_index[%d]\n"", pos);",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""ERROR"", ""NULL"", ""pointer"", ""chain_index[%d]\\n"", ""pos""], []]",[13399286285098347347],136
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,525,,"printf("" fragment reassemble"");","[""addLog""]","[[], [""printf"", ""fragment"", ""reassemble""]]",[5359813009275612060],135
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,523,,"printf("" fragment crop"");","[""addLog""]","[[], [""printf"", ""fragment"", ""crop""]]",[5019525875915414509],134
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,521,,"printf("" fragment drop-ovl"");","[""addLog""]","[[], [""printf"", ""fragment"", ""drop"", ""ovl""]]",[-5137479438499221592],133
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,311,,"printf("" fastroute"");","[""addLog""]","[[], [""printf"", ""fastroute""]]",[3736076314455258635],132
https://github.com/collectd/collectd/commit/7a0995fb1e8355ef8e89f32d1d50f6382a6c66e8,16 Apr 2011,pf plugin: copy print_rule from /usr/src/sbin/pfctl to pfutils,1013,data/crawl/collectd/hunk_198.cpp,,,data/crawl/collectd/old_hunk_198.cpp,data/crawl/collectd/new_hunk_198.cpp,-1,227,,"printf("" pass"");","[""addLog""]","[[], [""printf"", ""pass""]]",[11379959328703410606],131
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,609,,"printf(""%s"", pool->ifname);","[""addLog""]","[[], [""printf"", ""%s"", ""pool"", ""ifname""]]",[9869060658688677645],130
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,584,,"printf ("" rdr-to "");","[""addLog""]","[[], [""printf"", ""rdr"", ""to""]]",[8009137734445763119],129
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,579,,"printf ("" nat-to "");","[""addLog""]","[[], [""printf"", ""nat"", ""to""]]",[12513359784470194430],128
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,577,,"printf("" divert-packet port %u"", ntohs(r->divert_packet.port));","[""addLog""]","[[], [""printf"", ""divert"", ""packet"", ""port"", ""%u"", ""ntohs"", ""r"", ""divert_packet"", ""port""]]",[-10414038281181982359],127
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,504,,"printf("" scrub ("");","[""addLog""]","[[], [""printf"", ""scrub""]]",[4124677731169990875],126
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,327,,"printf("" received-on %s"", r->rcv_ifname);","[""addLog""]","[[], [""printf"", ""received"", ""on"", ""%s"", ""r"", ""rcv_ifname""]]",[10311921358941423284],125
https://github.com/collectd/collectd/commit/6ea5e41d656b162d8614cc1af3efd50ed5424950,17 Apr 2011,pf plugin: also support OpenBSD 4.9/Current,1038,data/crawl/collectd/hunk_197.cpp,,,data/crawl/collectd/old_hunk_197.cpp,data/crawl/collectd/new_hunk_197.cpp,-1,287,,"printf(""%smatches"", count++ ? "", "" : """");","[""addLog""]","[[], [""printf"", ""%smatches"", ""count""]]",[16334068949674584937],124
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,609,-1,"printf(""%s"", pool->ifname);",,"[""removeLog""]","[[""printf"", ""%s"", ""pool"", ""ifname""], []]",[-9869060658688677645],123
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,584,-1,"printf ("" rdr-to "");",,"[""removeLog""]","[[""printf"", ""rdr"", ""to""], []]",[-8009137734445763119],122
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,579,-1,"printf ("" nat-to "");",,"[""removeLog""]","[[""printf"", ""nat"", ""to""], []]",[-12513359784470194430],121
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,577,-1,"printf("" divert-packet port %u"", ntohs(r->divert_packet.port));",,"[""removeLog""]","[[""printf"", ""divert"", ""packet"", ""port"", ""%u"", ""ntohs"", ""r"", ""divert_packet"", ""port""], []]",[10414038281181982359],120
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,504,-1,"printf("" scrub ("");",,"[""removeLog""]","[[""printf"", ""scrub""], []]",[-4124677731169990875],119
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,327,-1,"printf("" received-on %s"", r->rcv_ifname);",,"[""removeLog""]","[[""printf"", ""received"", ""on"", ""%s"", ""r"", ""rcv_ifname""], []]",[-10311921358941423284],118
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_194.cpp,,,data/crawl/collectd/old_hunk_194.cpp,data/crawl/collectd/new_hunk_194.cpp,287,-1,"printf(""%smatches"", count++ ? "", "" : """");",,"[""removeLog""]","[[""printf"", ""%smatches"", ""count""], []]",[-16334068949674584937],117
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,525,-1,"printf("" fragment reassemble"");",,"[""removeLog""]","[[""printf"", ""fragment"", ""reassemble""], []]",[-5359813009275612060],116
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,523,-1,"printf("" fragment crop"");",,"[""removeLog""]","[[""printf"", ""fragment"", ""crop""], []]",[-5019525875915414509],115
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,521,-1,"printf("" fragment drop-ovl"");",,"[""removeLog""]","[[""printf"", ""fragment"", ""drop"", ""ovl""], []]",[5137479438499221592],114
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,311,-1,"printf("" fastroute"");",,"[""removeLog""]","[[""printf"", ""fastroute""], []]",[-3736076314455258635],113
https://github.com/collectd/collectd/commit/3e394c1f397de774d4b33e9c29aab5676e5d8832,22 Apr 2011,pf plugin: define generation new/old depend on OpenBSD Version,2100,data/crawl/collectd/hunk_193.cpp,,,data/crawl/collectd/old_hunk_193.cpp,data/crawl/collectd/new_hunk_193.cpp,227,-1,"printf("" pass"");",,"[""removeLog""]","[[""printf"", ""pass""], []]",[-11379959328703410606],112
https://github.com/collectd/collectd/commit/03326eeaf8819d87786b132b80a0e772a9c5e2b0,16 May 2011,collectd-nagios: Let '-n LIST' list all available datasets.,76,data/crawl/collectd/hunk_192.cpp,,,data/crawl/collectd/old_hunk_192.cpp,data/crawl/collectd/new_hunk_192.cpp,-1,16,,"printf (""ERROR: Connecting to daemon at %s failed.\n"",
socket_file_g);","[""addLog""]","[[], [""printf"", ""ERROR"", ""Connecting"", ""to"", ""daemon"", ""at"", ""%s"", ""failed"", ""\\n"", ""socket_file_g""]]",[-3956001045342876052],111
https://github.com/collectd/collectd/commit/03326eeaf8819d87786b132b80a0e772a9c5e2b0,16 May 2011,collectd-nagios: Let '-n LIST' list all available datasets.,76,data/crawl/collectd/hunk_191.cpp,,,data/crawl/collectd/old_hunk_191.cpp,data/crawl/collectd/new_hunk_191.cpp,26,-1,"printf (""ERROR: Connecting to daemon at %s failed.\n"",
socket_file_g);",,"[""removeLog""]","[[""printf"", ""ERROR"", ""Connecting"", ""to"", ""daemon"", ""at"", ""%s"", ""failed"", ""\\n"", ""socket_file_g""], []]",[3956001045342876052],110
https://github.com/collectd/collectd/commit/03326eeaf8819d87786b132b80a0e772a9c5e2b0,16 May 2011,collectd-nagios: Let '-n LIST' list all available datasets.,76,data/crawl/collectd/hunk_190.cpp,,,data/crawl/collectd/old_hunk_190.cpp,data/crawl/collectd/new_hunk_190.cpp,-1,25,,"printf (""ERROR: listval: Failed to convert returned ""
""identifier to a string: %s\n"",
lcc_strerror (connection));","[""addLog""]","[[], [""printf"", ""ERROR"", ""listval"", ""Failed"", ""to"", ""convert"", ""returned"", ""identifier"", ""to"", ""a"", ""string"", ""%s\\n"", ""lcc_strerror"", ""connection""]]",[13480589794127250218],109
https://github.com/collectd/collectd/commit/36d3cd820b5f977fcd349250a22a932f5af5a062,16 May 2011,"collectd-nagios: Sort LISTVAL output.

Also, output the data for each host in a separate ""section"", printing the
hostname as the heading and leaving it out from any further output.

This way, the strings may directly be used as options for -H and -n.",24,data/crawl/collectd/hunk_188.cpp,,,data/crawl/collectd/old_hunk_188.cpp,data/crawl/collectd/new_hunk_188.cpp,-1,22,,"printf (""Host: %s\n"", hostname);","[""addLog""]","[[], [""printf"", ""Host"", ""%s\\n"", ""hostname""]]",[27659622791857449542],108
https://github.com/collectd/collectd/commit/66bdee8d4c974e893826335977e1cc52410380eb,02 Sep 2011,"irq plugin: Implement collection of non-numeric interrupts.

Hi all!

I've created a patch that enables collectd to collect all irqs present in
/proc/interrupts, with numeric and string names (NMI, LOC, RES, etc).

Two notices:
a) Unfortunately I was unable to build collectd from git repo (build.sh
   failures), therefore I created this patch for latest stable release: 4.10.1
b) I am fairly unexperienced in C programming, so please inform me gently of my
   mistakes:) But I am already using a patched version and it works fine.

Any feedback on code quality or recommendations are welcome.

Change-Id: Ia17bd953921051dfe53e838b76672adbef9e73c3
Signed-off-by: Florian Forster <octo@collectd.org>",81,data/crawl/collectd/hunk_187.cpp,,,data/crawl/collectd/old_hunk_187.cpp,data/crawl/collectd/new_hunk_187.cpp,9,-1,"fprintf (stderr, ""irq plugin: Irq value is not a ""
""number: `%s'\n"", value);",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""irq"", ""plugin"", ""Irq"", ""value"", ""is"", ""not"", ""a"", ""number"", ""%s"", ""\\n"", ""value""], []]",[55172052945397077820],107
https://github.com/collectd/collectd/commit/bda3bcdf4eeddb0198cfbaac8f682bf651be7a7e,02 Sep 2011,"irq plugin: Use the standard ignorelist for filtering interrupts.

Change-Id: I7d15318c3c1d519d5e7bc715566a9b298f087bcc",64,data/crawl/collectd/hunk_185.cpp,,,data/crawl/collectd/old_hunk_185.cpp,data/crawl/collectd/new_hunk_185.cpp,22,-1,"fprintf (stderr, ""irq plugin: Cannot allocate more memory.\n"");",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""irq"", ""plugin"", ""Cannot"", ""allocate"", ""more"", ""memory"", ""\\n""], []]",[27698694319667427440],106
https://github.com/collectd/collectd/commit/e1da538180881c6dcc1d686e504128327a1f56b9,14 Oct 2012,python: Fix memory leaks.,228,data/crawl/collectd/hunk_178.cpp,,,data/crawl/collectd/old_hunk_178.cpp,data/crawl/collectd/new_hunk_178.cpp,9,21,"PyErr_Format(PyExc_TypeError, ""Dataset %s not found"", type);","PyErr_Format(PyExc_TypeError, ""Dataset %s not found"", notification.type);","[""removeVariable"", ""addVariable""]","[[], [""notification""]]",[-2312489540439980375],105
https://github.com/collectd/collectd/commit/fbb3f791c3b072dc09e8ecd339f6e4808fdd8299,25 Oct 2012,"oconfig: Allow empty statement lists (in blocks and files).

This allows to use empty blocks (which is useful during development and
testing) and empty files (which may happen when including config directories,
cf. Debian #592881).

In order not to generate a shift/reduce error, rather than allowing a
'statement_list' to be empty, this has been implemented by explicitly allowing
empty blocks and an empty 'entire_file'.",20,data/crawl/collectd/hunk_163.cpp,,,data/crawl/collectd/old_hunk_163.cpp,data/crawl/collectd/new_hunk_163.cpp,-1,7,,"printf (""block_begin = %s; block_end = %s;\n"", $1.key, $2);","[""addLog""]","[[], [""printf"", ""block_begin"", ""%s"", ""block_end"", ""%s"", ""\\n"", ""1"", ""key"", ""2""]]",[24951990257298917462],104
https://github.com/collectd/collectd/commit/9cb2694409620ae217ede92f78fe45c9eba83504,15 Nov 2012,"src/configfile.[ch]: Implement the cf_get_default_interval() function.

This should be able to replace ""interval_g"" in a global (i.e. non-plugin)
context, such as the interval in which timeouts are being checked.

The default value (10 seconds) is also configurable at compile time using
a define.",81,data/crawl/collectd/hunk_162.cpp,,,data/crawl/collectd/old_hunk_162.cpp,data/crawl/collectd/new_hunk_162.cpp,17,-1,"fprintf (stderr, ""Cannot set the interval to a ""
""correct value.\n""
""Please check your settings.\n"");",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""Cannot"", ""set"", ""the"", ""interval"", ""to"", ""a"", ""correct"", ""value"", ""\\n"", ""Please"", ""check"", ""your"", ""settings"", ""\\n""], []]",[17594316145618307138],103
https://github.com/collectd/collectd/commit/2c23a06de59e9cdb91ad9f72dc379733970e7a33,17 Nov 2012,libcollectdclient: Update to the high-resolution time format.,77,data/crawl/collectd/hunk_161.cpp,,,data/crawl/collectd/old_hunk_161.cpp,data/crawl/collectd/new_hunk_161.cpp,-1,24,,"fprintf (stderr, ""Garbage after end of value: \""%s\""\n"", str);","[""addLog""]","[[], [""fprintf"", ""stderr"", ""Garbage"", ""after"", ""end"", ""of"", ""value"", ""\\"", ""%s\\"", ""\\n"", ""str""]]",[-43841367507950421140],102
https://github.com/collectd/collectd/commit/2c23a06de59e9cdb91ad9f72dc379733970e7a33,17 Nov 2012,libcollectdclient: Update to the high-resolution time format.,77,data/crawl/collectd/hunk_161.cpp,,,data/crawl/collectd/old_hunk_161.cpp,data/crawl/collectd/new_hunk_161.cpp,-1,19,,"fprintf (stderr, ""Unable to parse option as a number: \""%s\""\n"", str);","[""addLog""]","[[], [""fprintf"", ""stderr"", ""Unable"", ""to"", ""parse"", ""option"", ""as"", ""a"", ""number"", ""\\"", ""%s\\"", ""\\n"", ""str""]]",[-22486489810519965992],101
https://github.com/collectd/collectd/commit/2c23a06de59e9cdb91ad9f72dc379733970e7a33,17 Nov 2012,libcollectdclient: Update to the high-resolution time format.,77,data/crawl/collectd/hunk_161.cpp,,,data/crawl/collectd/old_hunk_161.cpp,data/crawl/collectd/new_hunk_161.cpp,-1,13,,"fprintf (stderr, ""Unable to parse option as a number: \""%s\"": %s\n"",
        str, strerror (errno));","[""addLog""]","[[], [""fprintf"", ""stderr"", ""Unable"", ""to"", ""parse"", ""option"", ""as"", ""a"", ""number"", ""\\"", ""%s\\"", ""%s\\n"", ""str"", ""strerror"", ""errno""]]",[-3612894242691652184],100
https://github.com/collectd/collectd/commit/f990546f248a34c6f8c175db2025ce405ddab307,21 Jan 2013,"src/plugin.c: Improve error messages in plugin_load().

Fixes Github issue #237.",26,data/crawl/collectd/hunk_160.cpp,,,data/crawl/collectd/old_hunk_160.cpp,data/crawl/collectd/new_hunk_160.cpp,36,41,"fprintf (stderr, ""Could not find plugin %s.\n"", type);","ERROR (""plugin_load: Could not find plugin \""%s\"" in %s"",
type, dir);","[""updateLog"", ""removeVariable"", ""addContent"", ""removeContent"", ""addVariable""]","[[""fprintf"", ""stderr"", ""\\n""], [""ERROR"", ""plugin_load"", ""\\"", ""%s\\"", ""in"", ""dir""]]",[11545219509968616581],99
https://github.com/collectd/collectd/commit/f990546f248a34c6f8c175db2025ce405ddab307,21 Jan 2013,"src/plugin.c: Improve error messages in plugin_load().

Fixes Github issue #237.",26,data/crawl/collectd/hunk_160.cpp,,,data/crawl/collectd/old_hunk_160.cpp,data/crawl/collectd/new_hunk_160.cpp,29,33,"fprintf (stderr, ""Unable to load plugin %s.\n"", type);","ERROR (""plugin_load: Load plugin \""%s\"" failed with ""
""status %i."", type, status);","[""updateLog"", ""removeVariable"", ""addContent"", ""removeContent"", ""addVariable""]","[[""fprintf"", ""stderr"", ""Unable"", ""to"", ""load"", ""%s"", ""\\n""], [""ERROR"", ""plugin_load"", ""Load"", ""\\"", ""%s\\"", ""failed"", ""with"", ""status"", ""%i"", ""status""]]",[-16625360985636112257],98
https://github.com/collectd/collectd/commit/e9689629670c2cf9969f9105fb64e53fed9051c0,06 Apr 2013,initial commit of volume.c,77,data/crawl/collectd/hunk_158.cpp,,,data/crawl/collectd/old_hunk_158.cpp,data/crawl/collectd/new_hunk_158.cpp,-1,60,,"fprintf(stderr, ""lvm_list_vg_names() failed\n"");","[""addLog""]","[[], [""fprintf"", ""stderr"", ""lvm_list_vg_names"", ""failed\\n""]]",[-14366666422153084749],97
https://github.com/collectd/collectd/commit/e9689629670c2cf9969f9105fb64e53fed9051c0,06 Apr 2013,initial commit of volume.c,77,data/crawl/collectd/hunk_158.cpp,,,data/crawl/collectd/old_hunk_158.cpp,data/crawl/collectd/new_hunk_158.cpp,-1,55,,"fprintf(stderr, ""lvm_init() failed\n"");","[""addLog""]","[[], [""fprintf"", ""stderr"", ""lvm_init"", ""failed\\n""]]",[-27226063794011305057],96
https://github.com/collectd/collectd/commit/c7d196de1e4a8329b60b32004f93743bcf9b143d,07 Apr 2013,"added the use of df_complex and changed fprintf to ERROR for error
messages.  Also changed variable names to follow recommended standard
from the website.",37,data/crawl/collectd/hunk_157.cpp,,,data/crawl/collectd/old_hunk_157.cpp,data/crawl/collectd/new_hunk_157.cpp,13,16,"fprintf(stderr, ""lvm_list_vg_names() failed\n"");","ERROR(""volume plugin lvm_list_vg_name failed %s"", lvm_errmsg(lvm));","[""updateLog"", ""removeVariable"", ""addContent"", ""removeContent"", ""addVariable""]","[[""fprintf"", ""stderr"", ""lvm_list_vg_names"", ""failed\\n""], [""ERROR"", ""volume"", ""plugin"", ""lvm_list_vg_name"", ""failed"", ""%s"", ""lvm_errmsg"", ""lvm""]]",[7932582617612487728],95
https://github.com/collectd/collectd/commit/c7d196de1e4a8329b60b32004f93743bcf9b143d,07 Apr 2013,"added the use of df_complex and changed fprintf to ERROR for error
messages.  Also changed variable names to follow recommended standard
from the website.",37,data/crawl/collectd/hunk_157.cpp,,,data/crawl/collectd/old_hunk_157.cpp,data/crawl/collectd/new_hunk_157.cpp,8,10,"fprintf(stderr, ""lvm_init() failed\n"");","ERROR(""volume plugin: lvm_init failed: %s"", lvm_errmsg(lvm));","[""updateLog"", ""removeVariable"", ""addContent"", ""removeContent"", ""addVariable""]","[[""fprintf"", ""stderr"", ""failed\\n""], [""ERROR"", ""volume"", ""plugin"", ""failed"", ""%s"", ""lvm_errmsg"", ""lvm""]]",[11726860183871913874],94
https://github.com/collectd/collectd/commit/07a084327b6fa7e54a5101f1e9a23fee7e0721ce,26 Jul 2013,sigrok plugin,441,data/crawl/collectd/hunk_156.cpp,,,data/crawl/collectd/old_hunk_156.cpp,data/crawl/collectd/new_hunk_156.cpp,-1,61,,"plugin_log(LOG_INFO, ""sigrok: %s"", s);","[""addLog""]","[[], [""plugin_log"", ""LOG_INFO"", ""sigrok"", ""%s"", ""s""]]",[5559758499278844532],93
https://github.com/collectd/collectd/commit/5fb890c2735d16034fc3fb3ca7467e9d13d8f450,07 Aug 2013,"sigrok plugin: Ensure consistent logging prefix.

* Make sure all logging is using the ""sigrok plugin: "" prefix.
* Improved logging when handling the ""LogLevel"" option.
* Renamed free_drvopts() to sigrok_free_drvopts(). All functions now use the
  ""sigrok_"" prefix.
* Don't abort parsing a ""Device"" block when encountering an incorrect number of
  arguments. The cf_util_* functions will complain about that.",79,data/crawl/collectd/hunk_155.cpp,,,data/crawl/collectd/old_hunk_155.cpp,data/crawl/collectd/new_hunk_155.cpp,3,3,"plugin_log(LOG_INFO, ""sigrok: %s"", s);","plugin_log(LOG_INFO, ""sigrok plugin: %s"", s);","[""updateContent""]","[[], [""plugin""]]",[-8277560019441459993],92
https://github.com/collectd/collectd/commit/8f9558f46fc372a015e719ed83f4ea1103ca7d44,24 Jul 2014,make kafka logs go through collectd's logging,8,data/crawl/collectd/hunk_154.cpp,,,data/crawl/collectd/old_hunk_154.cpp,data/crawl/collectd/new_hunk_154.cpp,-1,8,,"plugin_log(level, ""%s"", msg);","[""addLog""]","[[], [""plugin_log"", ""level"", ""%s"", ""msg""]]",[6728741877024156309],91
https://github.com/collectd/collectd/commit/ad459d91bd8d24dc02737f398943b325cd446d48,25 Jul 2014,forgotten printf,1,data/crawl/collectd/hunk_153.cpp,,,data/crawl/collectd/old_hunk_153.cpp,data/crawl/collectd/new_hunk_153.cpp,3,-1,"printf(""parsed log level: %d\n"", log_level);",,"[""removeLog""]","[[""printf"", ""parsed"", ""log"", ""level"", ""%d\\n"", ""log_level""], []]",[-27006786427158336321],90
https://github.com/collectd/collectd/commit/855ba3880b50bc4a774a8c8d23612bba3550b3e7,28 Jul 2014,src/common_test.c: Add some tests for files in src/common.c.,411,data/crawl/collectd/hunk_152.cpp,,,data/crawl/collectd/old_hunk_152.cpp,data/crawl/collectd/new_hunk_152.cpp,-1,38,,"printf (""plugin_log (%i, \""%s\"");\n"", level, buffer);","[""addLog""]","[[], [""printf"", ""plugin_log"", ""%i"", ""\\"", ""%s\\"", ""\\n"", ""level"", ""buffer""]]",[5079853045511824706],89
https://github.com/collectd/collectd/commit/b9ebf85bd59b7b314b2b37c8a3357ab51b534581,23 Oct 2014,"Add get_dataset() as a way to get the definition of a dataset from python.
https://github.com/collectd/collectd/issues/771",52,data/crawl/collectd/hunk_146.cpp,,,data/crawl/collectd/old_hunk_146.cpp,data/crawl/collectd/new_hunk_146.cpp,-1,20,,"PyErr_Format(PyExc_TypeError, ""Dataset %s not found"", name);","[""addLog""]","[[], [""PyErr_Format"", ""PyExc_TypeError"", ""Dataset"", ""%s"", ""not"", ""found"", ""name""]]",[13521211862847036160],88
https://github.com/collectd/collectd/commit/304b23aceb3f78f29afeb143f4f66462e2d1b956,28 Feb 2015,Add sources for new turbostat plugin,2042,data/crawl/collectd/hunk_140.cpp,,,data/crawl/collectd/old_hunk_140.cpp,data/crawl/collectd/new_hunk_140.cpp,-1,1282,,"fprintf(stderr, ""cpu%d NOT PRESENT\n"", i);","[""addLog""]","[[], [""fprintf"", ""stderr"", ""cpu%d"", ""NOT"", ""PRESENT\\n"", ""i""]]",[-5430920218288890264],87
https://github.com/collectd/collectd/commit/aa5f0f3fdce6e92fd7f9654fda72e039852a1693,28 Feb 2015,Turbostat: fix some WARNING/ERROR calls,27,data/crawl/collectd/hunk_138.cpp,,,data/crawl/collectd/old_hunk_138.cpp,data/crawl/collectd/new_hunk_138.cpp,4,3,"fprintf(stderr, ""cpu%d NOT PRESENT\n"", i);","WARNING(""cpu%d NOT PRESENT"", i);","[""updateLog"", ""removeVariable"", ""updateContent""]","[[""fprintf"", ""stderr"", ""PRESENT\\n""], [""WARNING"", ""PRESENT""]]",[10347144707432109701],86
https://github.com/collectd/collectd/commit/710586ae652d56ddeaafd530621e129a580fb780,03 Jul 2015,"src/utils_ignorelist.c: Reimplement ignorelist_append_regex().

There's a signed / unsigned conversion in that function ...
... aaaaand it's fully rewritten. Oops.",93,data/crawl/collectd/hunk_132.cpp,,,data/crawl/collectd/old_hunk_132.cpp,data/crawl/collectd/new_hunk_132.cpp,36,21,"fprintf (stderr, ""Cannot compile regex %s: %i"",
entry, rcompile);","regerror (status, re, errbuf, sizeof (errbuf));","[""updateVariable"", ""updateLog"", ""removeContent"", ""addVariable""]","[[""fprintf"", ""stderr"", ""Cannot"", ""compile"", ""regex"", ""%s"", ""%i"", ""entry"", ""rcompile""], [""regerror"", ""status"", ""re"", ""errbuf"", ""sizeof"", ""errbuf""]]",[-15353644958525080234],85
https://github.com/collectd/collectd/commit/95e71d0a6659875380fdb5d2c8c75d18d8e1692c,15 Jul 2015,"src/utils_latency_test.c: Log result of  DOUBLE_TO_CDTIME_T() conversion.

The test fails on some i386 architectures. Time for some printf debugging.",2,data/crawl/collectd/hunk_127.cpp,,,data/crawl/collectd/old_hunk_127.cpp,data/crawl/collectd/new_hunk_127.cpp,-1,3,,"printf (""# case %zu: DOUBLE_TO_CDTIME_T(%g) = %""PRIu64""\n"",
        i, cases[i].val, DOUBLE_TO_CDTIME_T (cases[i].val));","[""addLog""]","[[], [""printf"", ""case"", ""%zu"", ""DOUBLE_TO_CDTIME_T"", ""%g"", ""%"", ""PRIu64"", ""\\n"", ""i"", ""cases[i]"", ""val"", ""DOUBLE_TO_CDTIME_T"", ""cases[i]"", ""val""]]",[-10079511731356141780],84
https://github.com/collectd/collectd/commit/26314b8c3fb08e1f0017ee9a6277b7fe370bf2a0,10 Nov 2015,Initial support of GPSd in collectd.,368,data/crawl/collectd/hunk_121.cpp,,,data/crawl/collectd/old_hunk_121.cpp,data/crawl/collectd/new_hunk_121.cpp,-1,173,,"printf (""gps: will use %s:%s with timeout %d.\n"", gps_data_config.host, gps_data_config.port, gps_data_config.timeout);","[""addLog""]","[[], [""printf"", ""gps"", ""will"", ""use"", ""%s"", ""%s"", ""with"", ""timeout"", ""%d"", ""\\n"", ""gps_data_config"", ""host"", ""gps_data_config"", ""port"", ""gps_data_config"", ""timeout""]]",[8735683726329314245],83
https://github.com/collectd/collectd/commit/26314b8c3fb08e1f0017ee9a6277b7fe370bf2a0,10 Nov 2015,Initial support of GPSd in collectd.,368,data/crawl/collectd/hunk_121.cpp,,,data/crawl/collectd/old_hunk_121.cpp,data/crawl/collectd/new_hunk_121.cpp,-1,136,,"printf (""gps: hdop=%1.3f, vdop=%1.3f, sat=%02d.\n"", 
    gps_data_read.hdop,
    gps_data_read.vdop,
    gps_data_read.satellites
  );","[""addLog""]","[[], [""printf"", ""gps"", ""hdop"", ""%1"", ""3f"", ""vdop"", ""%1"", ""3f"", ""sat"", ""%02d"", ""\\n"", ""gps_data_read"", ""hdop"", ""gps_data_read"", ""vdop"", ""gps_data_read"", ""satellites""]]",[2035150724841120997],82
https://github.com/collectd/collectd/commit/26314b8c3fb08e1f0017ee9a6277b7fe370bf2a0,10 Nov 2015,Initial support of GPSd in collectd.,368,data/crawl/collectd/hunk_121.cpp,,,data/crawl/collectd/old_hunk_121.cpp,data/crawl/collectd/new_hunk_121.cpp,-1,59,,"printf (""cannot connect to: %s:%s"", gps_data_config.host, gps_data_config.port);","[""addLog""]","[[], [""printf"", ""cannot"", ""connect"", ""to"", ""%s"", ""%s"", ""gps_data_config"", ""host"", ""gps_data_config"", ""port""]]",[20668987801781337121],81
https://github.com/collectd/collectd/commit/9fd3d670c4e85d840e618647c15b64d728a3f193,11 Dec 2015,"src/utils_ignorelist.c: Refactoring / code style fixes.

One of the goals was to remove uses of smalloc().",111,data/crawl/collectd/hunk_114.cpp,,,data/crawl/collectd/old_hunk_114.cpp,data/crawl/collectd/new_hunk_114.cpp,34,-1,"fprintf (stderr, ""Cannot compile regex %s: %i"",
entry, rcompile);",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""Cannot"", ""compile"", ""regex"", ""%s"", ""%i"", ""entry"", ""rcompile""], []]",[16958954629611116755],80
https://github.com/collectd/collectd/commit/8a7ec0cfb7aaab52e53fbb21cdc887cee4cccd6d,28 Jul 2016,"dpdkstat: enable a plugin for DPDK stats

This patch enables support to retrieve statistics for DPDK
interfaces. An overview of the threading is as follows:
1. collectd init() or read() calls dpdk_helper_spawn() to retrieve
   the required size of xstats to allocate.
   1.1. DPDK counts ports, stats and length, writing them to
        shared-memory (SHM).
   1.2. DPDK helper (secondary) process quits, allowing cleanup of
        the shared memory.
2. collectd resizes shared-memory to size of stats as provided by
   DPDK.
3. collectd respawns the DPDK helper.
   3.1. Helper blocks on a semaphore until told to read the stats
        from DPDK and write them to SHM.
4. collectd dispatches statistics
   4.1. Thread blocks on semaphore until stats are available.
This threading model is required to allow the plugin to detect when
the DPDK primary process/application has been killed/reset, and to avoid
the plugin from stopping another DPDK primary process from starting.
Some extra housekeeping is in place to ensure collectd is never
stalled by using sem_timedwait() with a timeout. If collectd dies, the
helper process will automatically quit after a timeout, as it detects
its ppid has changed.

Signed-off-by: Harry van Haaren <harry.van.haaren@intel.com>
Signed-off-by: Maryam Tahhan <maryam.tahhan@intel.com>",1020,data/crawl/collectd/hunk_108.cpp,,,data/crawl/collectd/old_hunk_108.cpp,data/crawl/collectd/new_hunk_108.cpp,-1,418,,"printf(""dpdkstat: EAL arguments: "");","[""addLog""]","[[], [""printf"", ""dpdkstat"", ""EAL"", ""arguments""]]",[-2188034332198371542],79
https://github.com/collectd/collectd/commit/8a7ec0cfb7aaab52e53fbb21cdc887cee4cccd6d,28 Jul 2016,"dpdkstat: enable a plugin for DPDK stats

This patch enables support to retrieve statistics for DPDK
interfaces. An overview of the threading is as follows:
1. collectd init() or read() calls dpdk_helper_spawn() to retrieve
   the required size of xstats to allocate.
   1.1. DPDK counts ports, stats and length, writing them to
        shared-memory (SHM).
   1.2. DPDK helper (secondary) process quits, allowing cleanup of
        the shared memory.
2. collectd resizes shared-memory to size of stats as provided by
   DPDK.
3. collectd respawns the DPDK helper.
   3.1. Helper blocks on a semaphore until told to read the stats
        from DPDK and write them to SHM.
4. collectd dispatches statistics
   4.1. Thread blocks on semaphore until stats are available.
This threading model is required to allow the plugin to detect when
the DPDK primary process/application has been killed/reset, and to avoid
the plugin from stopping another DPDK primary process from starting.
Some extra housekeeping is in place to ensure collectd is never
stalled by using sem_timedwait() with a timeout. If collectd dies, the
helper process will automatically quit after a timeout, as it detects
its ppid has changed.

Signed-off-by: Harry van Haaren <harry.van.haaren@intel.com>
Signed-off-by: Maryam Tahhan <maryam.tahhan@intel.com>",1020,data/crawl/collectd/hunk_108.cpp,,,data/crawl/collectd/old_hunk_108.cpp,data/crawl/collectd/new_hunk_108.cpp,-1,417,,"printf(""dpdkstat: ERROR initializing EAL ret = %d\n"", ret);","[""addLog""]","[[], [""printf"", ""dpdkstat"", ""ERROR"", ""initializing"", ""EAL"", ""ret"", ""%d\\n"", ""ret""]]",[13678511512666771420],78
https://github.com/collectd/collectd/commit/023092323ca617c8ff95b1efd4a055c29b1aaa3b,12 Aug 2016,Add a Lua plugin for Collectd,1045,data/crawl/collectd/hunk_101.cpp,,,data/crawl/collectd/old_hunk_101.cpp,data/crawl/collectd/new_hunk_101.cpp,-1,245,,"plugin_log(LOG_WARNING, ""%s"", msg);","[""addLog""]","[[], [""plugin_log"", ""LOG_WARNING"", ""%s"", ""msg""]]",[-7517237574622178738],77
https://github.com/collectd/collectd/commit/023092323ca617c8ff95b1efd4a055c29b1aaa3b,12 Aug 2016,Add a Lua plugin for Collectd,1045,data/crawl/collectd/hunk_101.cpp,,,data/crawl/collectd/old_hunk_101.cpp,data/crawl/collectd/new_hunk_101.cpp,-1,238,,"plugin_log(LOG_NOTICE, ""%s"", msg);","[""addLog""]","[[], [""plugin_log"", ""LOG_NOTICE"", ""%s"", ""msg""]]",[8321417375369025517],76
https://github.com/collectd/collectd/commit/023092323ca617c8ff95b1efd4a055c29b1aaa3b,12 Aug 2016,Add a Lua plugin for Collectd,1045,data/crawl/collectd/hunk_101.cpp,,,data/crawl/collectd/old_hunk_101.cpp,data/crawl/collectd/new_hunk_101.cpp,-1,231,,"plugin_log(LOG_INFO, ""%s"", msg);","[""addLog""]","[[], [""plugin_log"", ""LOG_INFO"", ""%s"", ""msg""]]",[3424295966266291815],75
https://github.com/collectd/collectd/commit/023092323ca617c8ff95b1efd4a055c29b1aaa3b,12 Aug 2016,Add a Lua plugin for Collectd,1045,data/crawl/collectd/hunk_101.cpp,,,data/crawl/collectd/old_hunk_101.cpp,data/crawl/collectd/new_hunk_101.cpp,-1,224,,"plugin_log(LOG_ERR, ""%s"", msg);","[""addLog""]","[[], [""plugin_log"", ""LOG_ERR"", ""%s"", ""msg""]]",[-2339176976627021321],74
https://github.com/collectd/collectd/commit/023092323ca617c8ff95b1efd4a055c29b1aaa3b,12 Aug 2016,Add a Lua plugin for Collectd,1045,data/crawl/collectd/hunk_101.cpp,,,data/crawl/collectd/old_hunk_101.cpp,data/crawl/collectd/new_hunk_101.cpp,-1,217,,"plugin_log(LOG_DEBUG, ""%s"", msg);","[""addLog""]","[[], [""plugin_log"", ""LOG_DEBUG"", ""%s"", ""msg""]]",[-6742752081653920567],73
https://github.com/collectd/collectd/commit/46a35862cb9ff3caddad1fc01e02141b6e0a9f72,22 Aug 2016,"python plugin: Fixing possible problems with the GIL.

If AfterFork is called after threads have been initialized.
Also handle SIGTERM while reading from an interactive session slightly more gracefully.",55,data/crawl/collectd/hunk_98.cpp,,,data/crawl/collectd/old_hunk_98.cpp,data/crawl/collectd/new_hunk_98.cpp,-1,9,,"printf(""close collectd and avoid this problem in the future.\n"");","[""addLog""]","[[], [""printf"", ""close"", ""collectd"", ""and"", ""avoid"", ""this"", ""problem"", ""in"", ""the"", ""future"", ""\\n""]]",[35331232531469937350],72
https://github.com/collectd/collectd/commit/46a35862cb9ff3caddad1fc01e02141b6e0a9f72,22 Aug 2016,"python plugin: Fixing possible problems with the GIL.

If AfterFork is called after threads have been initialized.
Also handle SIGTERM while reading from an interactive session slightly more gracefully.",55,data/crawl/collectd/hunk_98.cpp,,,data/crawl/collectd/old_hunk_98.cpp,data/crawl/collectd/new_hunk_98.cpp,-1,8,,"printf(""You can press Ctrl+D in the interactive session to\n"");","[""addLog""]","[[], [""printf"", ""You"", ""can"", ""press"", ""Ctrl"", ""D"", ""in"", ""the"", ""interactive"", ""session"", ""to\\n""]]",[-6989694734662376494],71
https://github.com/collectd/collectd/commit/46a35862cb9ff3caddad1fc01e02141b6e0a9f72,22 Aug 2016,"python plugin: Fixing possible problems with the GIL.

If AfterFork is called after threads have been initialized.
Also handle SIGTERM while reading from an interactive session slightly more gracefully.",55,data/crawl/collectd/hunk_98.cpp,,,data/crawl/collectd/old_hunk_98.cpp,data/crawl/collectd/new_hunk_98.cpp,-1,7,,"printf(""Run the command \""reset\"" to get it back into a usable state.\n"");","[""addLog""]","[[], [""printf"", ""Run"", ""the"", ""command"", ""\\"", ""reset\\"", ""to"", ""get"", ""it"", ""back"", ""into"", ""a"", ""usable"", ""state"", ""\\n""]]",[1832760529562522179],70
https://github.com/collectd/collectd/commit/46a35862cb9ff3caddad1fc01e02141b6e0a9f72,22 Aug 2016,"python plugin: Fixing possible problems with the GIL.

If AfterFork is called after threads have been initialized.
Also handle SIGTERM while reading from an interactive session slightly more gracefully.",55,data/crawl/collectd/hunk_98.cpp,,,data/crawl/collectd/old_hunk_98.cpp,data/crawl/collectd/new_hunk_98.cpp,-1,6,,"printf(""probably leave your terminal in a mess.\n"");","[""addLog""]","[[], [""printf"", ""probably"", ""leave"", ""your"", ""terminal"", ""in"", ""a"", ""mess"", ""\\n""]]",[6919442973726519620],69
https://github.com/collectd/collectd/commit/46a35862cb9ff3caddad1fc01e02141b6e0a9f72,22 Aug 2016,"python plugin: Fixing possible problems with the GIL.

If AfterFork is called after threads have been initialized.
Also handle SIGTERM while reading from an interactive session slightly more gracefully.",55,data/crawl/collectd/hunk_98.cpp,,,data/crawl/collectd/old_hunk_98.cpp,data/crawl/collectd/new_hunk_98.cpp,-1,5,,"printf(""collectd shutdown while running an interactive session. This will\n"");","[""addLog""]","[[], [""printf"", ""collectd"", ""shutdown"", ""while"", ""running"", ""an"", ""interactive"", ""session"", ""This"", ""will\\n""]]",[-5956757603506934288],68
https://github.com/collectd/collectd/commit/a656aa08957763edbb36300688393382c7f7056a,19 Sep 2016,"dpdkstat: Addressed PR comments

1) Added missing option description
2) Replaced strerror with sstrerror
3) Do not return from helper code
4) Use generic collectd Interval implementation
5) Removed ""\n"" from log messages

Signed-off-by: Taras Chornyi <tarasx.chornyi@intel.com>",586,data/crawl/collectd/hunk_97.cpp,,,data/crawl/collectd/old_hunk_97.cpp,data/crawl/collectd/new_hunk_97.cpp,6,-1,"printf(""%s "", argp[i]);",,"[""removeLog""]","[[""printf"", ""%s"", ""argp[i]""], []]",[-9980646000730281435],67
https://github.com/collectd/collectd/commit/a656aa08957763edbb36300688393382c7f7056a,19 Sep 2016,"dpdkstat: Addressed PR comments

1) Added missing option description
2) Replaced strerror with sstrerror
3) Do not return from helper code
4) Use generic collectd Interval implementation
5) Removed ""\n"" from log messages

Signed-off-by: Taras Chornyi <tarasx.chornyi@intel.com>",586,data/crawl/collectd/hunk_97.cpp,,,data/crawl/collectd/old_hunk_97.cpp,data/crawl/collectd/new_hunk_97.cpp,4,-1,"printf(""dpdkstat: EAL arguments: "");",,"[""removeLog""]","[[""printf"", ""dpdkstat"", ""EAL"", ""arguments""], []]",[2188034332198371542],66
https://github.com/collectd/collectd/commit/a656aa08957763edbb36300688393382c7f7056a,19 Sep 2016,"dpdkstat: Addressed PR comments

1) Added missing option description
2) Replaced strerror with sstrerror
3) Do not return from helper code
4) Use generic collectd Interval implementation
5) Removed ""\n"" from log messages

Signed-off-by: Taras Chornyi <tarasx.chornyi@intel.com>",586,data/crawl/collectd/hunk_97.cpp,,,data/crawl/collectd/old_hunk_97.cpp,data/crawl/collectd/new_hunk_97.cpp,3,-1,"printf(""dpdkstat: ERROR initializing EAL ret = %d\n"", ret);",,"[""removeLog""]","[[""printf"", ""dpdkstat"", ""ERROR"", ""initializing"", ""EAL"", ""ret"", ""%d\\n"", ""ret""], []]",[-13678511512666771420],65
https://github.com/collectd/collectd/commit/3090a8852788aaca0d8063fdf9ac4ba66f048cd8,25 Sep 2016,"Add a generic interface for parsing the text protocol.

Implement it for PUTVAL for now.

The text protocol is used in multiple places and the parser will avoid code
duplication in client programs which can, instead, use it to generate the
respective requests.

Use the 'cmd_' prefix for public functions related to command handling.",484,data/crawl/collectd/hunk_95.cpp,,,data/crawl/collectd/old_hunk_95.cpp,data/crawl/collectd/new_hunk_95.cpp,-1,117,,"(fprintf (fh, ""%i %s\n"", code, buf);","[""addLog""]","[[], [""fprintf"", ""fh"", ""%i"", ""%s\\n"", ""code"", ""buf""]]",[6759023386938186177],64
https://github.com/collectd/collectd/commit/3090a8852788aaca0d8063fdf9ac4ba66f048cd8,25 Sep 2016,"Add a generic interface for parsing the text protocol.

Implement it for PUTVAL for now.

The text protocol is used in multiple places and the parser will avoid code
duplication in client programs which can, instead, use it to generate the
respective requests.

Use the 'cmd_' prefix for public functions related to command handling.",484,data/crawl/collectd/hunk_95.cpp,,,data/crawl/collectd/old_hunk_95.cpp,data/crawl/collectd/new_hunk_95.cpp,-1,81,,"cmd_error (CMD_UNKNOWN_COMMAND, err,
""Unknown command `%s'."", command);","[""addLog""]","[[], [""cmd_error"", ""CMD_UNKNOWN_COMMAND"", ""err"", ""Unknown"", ""command"", ""%s"", ""command""]]",[4479117877028090521],63
https://github.com/collectd/collectd/commit/3090a8852788aaca0d8063fdf9ac4ba66f048cd8,25 Sep 2016,"Add a generic interface for parsing the text protocol.

Implement it for PUTVAL for now.

The text protocol is used in multiple places and the parser will avoid code
duplication in client programs which can, instead, use it to generate the
respective requests.

Use the 'cmd_' prefix for public functions related to command handling.",484,data/crawl/collectd/hunk_95.cpp,,,data/crawl/collectd/old_hunk_95.cpp,data/crawl/collectd/new_hunk_95.cpp,-1,66,,"cmd_error (CMD_PARSE_ERROR, err,
""Failed to extract command from `%s'."", buffer);","[""addLog""]","[[], [""cmd_error"", ""CMD_PARSE_ERROR"", ""err"", ""Failed"", ""to"", ""extract"", ""command"", ""from"", ""%s"", ""buffer""]]",[-9929656790707241564],62
https://github.com/collectd/collectd/commit/3090a8852788aaca0d8063fdf9ac4ba66f048cd8,25 Sep 2016,"Add a generic interface for parsing the text protocol.

Implement it for PUTVAL for now.

The text protocol is used in multiple places and the parser will avoid code
duplication in client programs which can, instead, use it to generate the
respective requests.

Use the 'cmd_' prefix for public functions related to command handling.",484,data/crawl/collectd/hunk_95.cpp,,,data/crawl/collectd/old_hunk_95.cpp,data/crawl/collectd/new_hunk_95.cpp,-1,60,,"cmd_error (CMD_ERROR, err, ""Invalid arguments to cmd_parse."");","[""addLog""]","[[], [""cmd_error"", ""CMD_ERROR"", ""err"", ""Invalid"", ""arguments"", ""to"", ""cmd_parse""]]",[-29975485752312941893],61
https://github.com/collectd/collectd/commit/3090a8852788aaca0d8063fdf9ac4ba66f048cd8,25 Sep 2016,"Add a generic interface for parsing the text protocol.

Implement it for PUTVAL for now.

The text protocol is used in multiple places and the parser will avoid code
duplication in client programs which can, instead, use it to generate the
respective requests.

Use the 'cmd_' prefix for public functions related to command handling.",484,data/crawl/collectd/hunk_94.cpp,,,data/crawl/collectd/old_hunk_94.cpp,data/crawl/collectd/new_hunk_94.cpp,-1,80,,"cmd_error (CMD_OK, &err, ""Success: %i %s been dispatched."",
(int)cmd.cmd.putval.vl_num,
(cmd.cmd.putval.vl_num == 1) ? ""value has"" : ""values have"");","[""addLog""]","[[], [""cmd_error"", ""CMD_OK"", ""&err"", ""Success"", ""%i"", ""%s"", ""been"", ""dispatched"", ""int"", ""cmd"", ""cmd"", ""putval"", ""vl_num"", ""cmd"", ""cmd"", ""putval"", ""vl_num"", ""1"", ""value"", ""has"", ""values"", ""have""]]",[-27948142485663038514],60
https://github.com/collectd/collectd/commit/3090a8852788aaca0d8063fdf9ac4ba66f048cd8,25 Sep 2016,"Add a generic interface for parsing the text protocol.

Implement it for PUTVAL for now.

The text protocol is used in multiple places and the parser will avoid code
duplication in client programs which can, instead, use it to generate the
respective requests.

Use the 'cmd_' prefix for public functions related to command handling.",484,data/crawl/collectd/hunk_94.cpp,,,data/crawl/collectd/old_hunk_94.cpp,data/crawl/collectd/new_hunk_94.cpp,-1,12,,"cmd_error (CMD_PARSE_ERROR, err, ""Parsing the values string failed."");","[""addLog""]","[[], [""cmd_error"", ""CMD_PARSE_ERROR"", ""err"", ""Parsing"", ""the"", ""values"", ""string"", ""failed""]]",[-22676071929298793381],59
https://github.com/collectd/collectd/commit/3090a8852788aaca0d8063fdf9ac4ba66f048cd8,25 Sep 2016,"Add a generic interface for parsing the text protocol.

Implement it for PUTVAL for now.

The text protocol is used in multiple places and the parser will avoid code
duplication in client programs which can, instead, use it to generate the
respective requests.

Use the 'cmd_' prefix for public functions related to command handling.",484,data/crawl/collectd/hunk_94.cpp,,,data/crawl/collectd/old_hunk_94.cpp,data/crawl/collectd/new_hunk_94.cpp,-1,3,,"cmd_error (CMD_PARSE_ERROR, err, ""Misformatted value."");","[""addLog""]","[[], [""cmd_error"", ""CMD_PARSE_ERROR"", ""err"", ""Misformatted"", ""value""]]",[-12133403015533564451],58
https://github.com/collectd/collectd/commit/3090a8852788aaca0d8063fdf9ac4ba66f048cd8,25 Sep 2016,"Add a generic interface for parsing the text protocol.

Implement it for PUTVAL for now.

The text protocol is used in multiple places and the parser will avoid code
duplication in client programs which can, instead, use it to generate the
respective requests.

Use the 'cmd_' prefix for public functions related to command handling.",484,data/crawl/collectd/hunk_93.cpp,,,data/crawl/collectd/old_hunk_93.cpp,data/crawl/collectd/new_hunk_93.cpp,-1,3,,"cmd_error (CMD_PARSE_ERROR, err, ""Misformatted option."");","[""addLog""]","[[], [""cmd_error"", ""CMD_PARSE_ERROR"", ""err"", ""Misformatted"", ""option""]]",[-1879983912532638796],57
https://github.com/collectd/collectd/commit/3090a8852788aaca0d8063fdf9ac4ba66f048cd8,25 Sep 2016,"Add a generic interface for parsing the text protocol.

Implement it for PUTVAL for now.

The text protocol is used in multiple places and the parser will avoid code
duplication in client programs which can, instead, use it to generate the
respective requests.

Use the 'cmd_' prefix for public functions related to command handling.",484,data/crawl/collectd/hunk_91.cpp,,,data/crawl/collectd/old_hunk_91.cpp,data/crawl/collectd/new_hunk_91.cpp,-1,5,,"cmd_error (CMD_PARSE_ERROR, err, ""1 Type `%s' isn't defined."", type);","[""addLog""]","[[], [""cmd_error"", ""CMD_PARSE_ERROR"", ""err"", ""1"", ""Type"", ""%s"", ""isn"", ""t"", ""defined"", ""type""]]",[-19028706108139607840],56
https://github.com/collectd/collectd/commit/3090a8852788aaca0d8063fdf9ac4ba66f048cd8,25 Sep 2016,"Add a generic interface for parsing the text protocol.

Implement it for PUTVAL for now.

The text protocol is used in multiple places and the parser will avoid code
duplication in client programs which can, instead, use it to generate the
respective requests.

Use the 'cmd_' prefix for public functions related to command handling.",484,data/crawl/collectd/hunk_90.cpp,,,data/crawl/collectd/old_hunk_90.cpp,data/crawl/collectd/new_hunk_90.cpp,-1,3,,"cmd_error (CMD_PARSE_ERROR, err, ""Identifier too long."");","[""addLog""]","[[], [""cmd_error"", ""CMD_PARSE_ERROR"", ""err"", ""Identifier"", ""too"", ""long""]]",[2457581412172934726],55
https://github.com/collectd/collectd/commit/3090a8852788aaca0d8063fdf9ac4ba66f048cd8,25 Sep 2016,"Add a generic interface for parsing the text protocol.

Implement it for PUTVAL for now.

The text protocol is used in multiple places and the parser will avoid code
duplication in client programs which can, instead, use it to generate the
respective requests.

Use the 'cmd_' prefix for public functions related to command handling.",484,data/crawl/collectd/hunk_89.cpp,,,data/crawl/collectd/old_hunk_89.cpp,data/crawl/collectd/new_hunk_89.cpp,-1,5,,"cmd_error (CMD_PARSE_ERROR, err, ""Cannot parse identifier `%s'."",
identifier);","[""addLog""]","[[], [""cmd_error"", ""CMD_PARSE_ERROR"", ""err"", ""Cannot"", ""parse"", ""identifier"", ""%s"", ""identifier""]]",[849845461804597919],54
https://github.com/collectd/collectd/commit/3090a8852788aaca0d8063fdf9ac4ba66f048cd8,25 Sep 2016,"Add a generic interface for parsing the text protocol.

Implement it for PUTVAL for now.

The text protocol is used in multiple places and the parser will avoid code
duplication in client programs which can, instead, use it to generate the
respective requests.

Use the 'cmd_' prefix for public functions related to command handling.",484,data/crawl/collectd/hunk_88.cpp,,,data/crawl/collectd/old_hunk_88.cpp,data/crawl/collectd/new_hunk_88.cpp,-1,30,,"cmd_error (CMD_PARSE_ERROR, err, ""Cannot parse identifier."");","[""addLog""]","[[], [""cmd_error"", ""CMD_PARSE_ERROR"", ""err"", ""Cannot"", ""parse"", ""identifier""]]",[-7796772803895202362],53
https://github.com/collectd/collectd/commit/1aa4295ba6875ceb02a7383237bc2485ffab9c1e,25 Sep 2016,"command parser: Add a vector-based interface.

The new interface expects a parsed list of fields. Parsing of input buffers
is now done centrally in the generic code and the existing parser is a
wrapper around this and the new vector-based parser. The actual command
parsers (PUTVAL for now) receive the parsed list of fields.

As a side-effect, this changes the parser behavior a little:

 - ""foo=a string with spaces or \\ special characters"" is now valid syntax
   for specifying options in addition to foo=""value with spaces, etc."".
 - foo= is now a valid option even without quotes around the empty value.",308,data/crawl/collectd/hunk_86.cpp,,,data/crawl/collectd/old_hunk_86.cpp,data/crawl/collectd/new_hunk_86.cpp,-1,11,,"cmd_error (CMD_ERROR, err, ""Invalid argument to cmd_parse_option."");","[""addLog""]","[[], [""cmd_error"", ""CMD_ERROR"", ""err"", ""Invalid"", ""argument"", ""to"", ""cmd_parse_option""]]",[-24463222726844918306],52
https://github.com/collectd/collectd/commit/1aa4295ba6875ceb02a7383237bc2485ffab9c1e,25 Sep 2016,"command parser: Add a vector-based interface.

The new interface expects a parsed list of fields. Parsing of input buffers
is now done centrally in the generic code and the existing parser is a
wrapper around this and the new vector-based parser. The actual command
parsers (PUTVAL for now) receive the parsed list of fields.

As a side-effect, this changes the parser behavior a little:

 - ""foo=a string with spaces or \\ special characters"" is now valid syntax
   for specifying options in addition to foo=""value with spaces, etc."".
 - foo= is now a valid option even without quotes around the empty value.",308,data/crawl/collectd/hunk_85.cpp,,,data/crawl/collectd/old_hunk_85.cpp,data/crawl/collectd/new_hunk_85.cpp,18,-1,"cmd_error (CMD_PARSE_ERROR, err,
""Failed to extract command from `%s'."", buffer);",,"[""removeLog""]","[[""cmd_error"", ""CMD_PARSE_ERROR"", ""err"", ""Failed"", ""to"", ""extract"", ""command"", ""from"", ""%s"", ""buffer""], []]",[9929656790707241564],51
https://github.com/collectd/collectd/commit/1aa4295ba6875ceb02a7383237bc2485ffab9c1e,25 Sep 2016,"command parser: Add a vector-based interface.

The new interface expects a parsed list of fields. Parsing of input buffers
is now done centrally in the generic code and the existing parser is a
wrapper around this and the new vector-based parser. The actual command
parsers (PUTVAL for now) receive the parsed list of fields.

As a side-effect, this changes the parser behavior a little:

 - ""foo=a string with spaces or \\ special characters"" is now valid syntax
   for specifying options in addition to foo=""value with spaces, etc."".
 - foo= is now a valid option even without quotes around the empty value.",308,data/crawl/collectd/hunk_85.cpp,,,data/crawl/collectd/old_hunk_85.cpp,data/crawl/collectd/new_hunk_85.cpp,12,11,"cmd_error (CMD_ERROR, err, ""Invalid arguments to cmd_parse."");","cmd_error (CMD_ERROR, err, ""Missing command."");","[""updateContent""]","[[""Invalid"", ""arguments"", ""to"", ""cmd_parse""], [""Missing"", ""command""]]",[28867302553868886058],50
https://github.com/collectd/collectd/commit/1aa4295ba6875ceb02a7383237bc2485ffab9c1e,25 Sep 2016,"command parser: Add a vector-based interface.

The new interface expects a parsed list of fields. Parsing of input buffers
is now done centrally in the generic code and the existing parser is a
wrapper around this and the new vector-based parser. The actual command
parsers (PUTVAL for now) receive the parsed list of fields.

As a side-effect, this changes the parser behavior a little:

 - ""foo=a string with spaces or \\ special characters"" is now valid syntax
   for specifying options in addition to foo=""value with spaces, etc."".
 - foo= is now a valid option even without quotes around the empty value.",308,data/crawl/collectd/hunk_84.cpp,,,data/crawl/collectd/old_hunk_84.cpp,data/crawl/collectd/new_hunk_84.cpp,-1,127,,"cmd_error (CMD_PARSE_ERROR, err, ""Unterminated quoted string."");","[""addLog""]","[[], [""cmd_error"", ""CMD_PARSE_ERROR"", ""err"", ""Unterminated"", ""quoted"", ""string""]]",[-23754653660518733135],49
https://github.com/collectd/collectd/commit/1aa4295ba6875ceb02a7383237bc2485ffab9c1e,25 Sep 2016,"command parser: Add a vector-based interface.

The new interface expects a parsed list of fields. Parsing of input buffers
is now done centrally in the generic code and the existing parser is a
wrapper around this and the new vector-based parser. The actual command
parsers (PUTVAL for now) receive the parsed list of fields.

As a side-effect, this changes the parser behavior a little:

 - ""foo=a string with spaces or \\ special characters"" is now valid syntax
   for specifying options in addition to foo=""value with spaces, etc."".
 - foo= is now a valid option even without quotes around the empty value.",308,data/crawl/collectd/hunk_84.cpp,,,data/crawl/collectd/old_hunk_84.cpp,data/crawl/collectd/new_hunk_84.cpp,-1,107,,"cmd_error (CMD_PARSE_ERROR, err,
""Backslash at end of string."");","[""addLog""]","[[], [""cmd_error"", ""CMD_PARSE_ERROR"", ""err"", ""Backslash"", ""at"", ""end"", ""of"", ""string""]]",[-17742673951056360612],48
https://github.com/collectd/collectd/commit/1aa4295ba6875ceb02a7383237bc2485ffab9c1e,25 Sep 2016,"command parser: Add a vector-based interface.

The new interface expects a parsed list of fields. Parsing of input buffers
is now done centrally in the generic code and the existing parser is a
wrapper around this and the new vector-based parser. The actual command
parsers (PUTVAL for now) receive the parsed list of fields.

As a side-effect, this changes the parser behavior a little:

 - ""foo=a string with spaces or \\ special characters"" is now valid syntax
   for specifying options in addition to foo=""value with spaces, etc."".
 - foo= is now a valid option even without quotes around the empty value.",308,data/crawl/collectd/hunk_83.cpp,,,data/crawl/collectd/old_hunk_83.cpp,data/crawl/collectd/new_hunk_83.cpp,55,-1,"cmd_error (CMD_PARSE_ERROR, err, ""Misformatted value."");",,"[""removeLog""]","[[""cmd_error"", ""CMD_PARSE_ERROR"", ""err"", ""Misformatted"", ""value""], []]",[12133403015533564451],47
https://github.com/collectd/collectd/commit/1aa4295ba6875ceb02a7383237bc2485ffab9c1e,25 Sep 2016,"command parser: Add a vector-based interface.

The new interface expects a parsed list of fields. Parsing of input buffers
is now done centrally in the generic code and the existing parser is a
wrapper around this and the new vector-based parser. The actual command
parsers (PUTVAL for now) receive the parsed list of fields.

As a side-effect, this changes the parser behavior a little:

 - ""foo=a string with spaces or \\ special characters"" is now valid syntax
   for specifying options in addition to foo=""value with spaces, etc."".
 - foo= is now a valid option even without quotes around the empty value.",308,data/crawl/collectd/hunk_83.cpp,,,data/crawl/collectd/old_hunk_83.cpp,data/crawl/collectd/new_hunk_83.cpp,38,-1,"cmd_error (CMD_PARSE_ERROR, err, ""Misformatted option."");",,"[""removeLog""]","[[""cmd_error"", ""CMD_PARSE_ERROR"", ""err"", ""Misformatted"", ""option""], []]",[1879983912532638796],46
https://github.com/collectd/collectd/commit/1aa4295ba6875ceb02a7383237bc2485ffab9c1e,25 Sep 2016,"command parser: Add a vector-based interface.

The new interface expects a parsed list of fields. Parsing of input buffers
is now done centrally in the generic code and the existing parser is a
wrapper around this and the new vector-based parser. The actual command
parsers (PUTVAL for now) receive the parsed list of fields.

As a side-effect, this changes the parser behavior a little:

 - ""foo=a string with spaces or \\ special characters"" is now valid syntax
   for specifying options in addition to foo=""value with spaces, etc."".
 - foo= is now a valid option even without quotes around the empty value.",308,data/crawl/collectd/hunk_82.cpp,,,data/crawl/collectd/old_hunk_82.cpp,data/crawl/collectd/new_hunk_82.cpp,25,25,"cmd_error (CMD_PARSE_ERROR, err, ""Cannot parse identifier `%s'."",
identifier);","cmd_error (CMD_PARSE_ERROR, err, ""Cannot parse identifier `%s'."",
identifier_copy);","[""updateVariable""]","[[""identifier""], [""identifier_copy""]]",[-14633210055624258831],45
https://github.com/collectd/collectd/commit/1aa4295ba6875ceb02a7383237bc2485ffab9c1e,25 Sep 2016,"command parser: Add a vector-based interface.

The new interface expects a parsed list of fields. Parsing of input buffers
is now done centrally in the generic code and the existing parser is a
wrapper around this and the new vector-based parser. The actual command
parsers (PUTVAL for now) receive the parsed list of fields.

As a side-effect, this changes the parser behavior a little:

 - ""foo=a string with spaces or \\ special characters"" is now valid syntax
   for specifying options in addition to foo=""value with spaces, etc."".
 - foo= is now a valid option even without quotes around the empty value.",308,data/crawl/collectd/hunk_82.cpp,,,data/crawl/collectd/old_hunk_82.cpp,data/crawl/collectd/new_hunk_82.cpp,9,7,"cmd_error (CMD_PARSE_ERROR, err, ""Cannot parse identifier."");","cmd_error (CMD_PARSE_ERROR, err,
""Missing identifier and/or value-list."");","[""updateContent""]","[[""Cannot"", ""parse""], [""Missing"", ""and/or"", ""value"", ""list""]]",[1083944157179346785],44
https://github.com/collectd/collectd/commit/938471bee8cc86d32615144c5037f17338b19e70,25 Sep 2016,"command parser: Add support for the FLUSH command.

That is, implement the generic interface for FLUSH and switch the FLUSH
implementation to use the generic interface.",230,data/crawl/collectd/hunk_81.cpp,,,data/crawl/collectd/old_hunk_81.cpp,data/crawl/collectd/new_hunk_81.cpp,-1,3,,"cmd_error (CMD_OK, &err, ""Done: %i successful, %i errors"",
success, error);","[""addLog""]","[[], [""cmd_error"", ""CMD_OK"", ""&err"", ""Done"", ""%i"", ""successful"", ""%i"", ""errors"", ""success"", ""error""]]",[-9060488939206807108],43
https://github.com/collectd/collectd/commit/938471bee8cc86d32615144c5037f17338b19e70,25 Sep 2016,"command parser: Add support for the FLUSH command.

That is, implement the generic interface for FLUSH and switch the FLUSH
implementation to use the generic interface.",230,data/crawl/collectd/hunk_80.cpp,,,data/crawl/collectd/old_hunk_80.cpp,data/crawl/collectd/new_hunk_80.cpp,-1,84,,"cmd_error (CMD_PARSE_ERROR, err,
""Cannot parse option `%s'."", opt_key);","[""addLog""]","[[], [""cmd_error"", ""CMD_PARSE_ERROR"", ""err"", ""Cannot"", ""parse"", ""option"", ""%s"", ""opt_key""]]",[-22791825134253727086],42
https://github.com/collectd/collectd/commit/938471bee8cc86d32615144c5037f17338b19e70,25 Sep 2016,"command parser: Add support for the FLUSH command.

That is, implement the generic interface for FLUSH and switch the FLUSH
implementation to use the generic interface.",230,data/crawl/collectd/hunk_80.cpp,,,data/crawl/collectd/old_hunk_80.cpp,data/crawl/collectd/new_hunk_80.cpp,-1,71,,"cmd_error (CMD_PARSE_ERROR, err,
""Invalid value for option `timeout': %s"",
opt_value);","[""addLog""]","[[], [""cmd_error"", ""CMD_PARSE_ERROR"", ""err"", ""Invalid"", ""value"", ""for"", ""option"", ""timeout"", ""%s"", ""opt_value""]]",[-19930962908895361789],41
https://github.com/collectd/collectd/commit/938471bee8cc86d32615144c5037f17338b19e70,25 Sep 2016,"command parser: Add support for the FLUSH command.

That is, implement the generic interface for FLUSH and switch the FLUSH
implementation to use the generic interface.",230,data/crawl/collectd/hunk_80.cpp,,,data/crawl/collectd/old_hunk_80.cpp,data/crawl/collectd/new_hunk_80.cpp,-1,54,,"cmd_error (CMD_PARSE_ERROR, err,
""Invalid identifier `%s'."", opt_value);","[""addLog""]","[[], [""cmd_error"", ""CMD_PARSE_ERROR"", ""err"", ""Invalid"", ""identifier"", ""%s"", ""opt_value""]]",[-4953792072712927825],40
https://github.com/collectd/collectd/commit/938471bee8cc86d32615144c5037f17338b19e70,25 Sep 2016,"command parser: Add support for the FLUSH command.

That is, implement the generic interface for FLUSH and switch the FLUSH
implementation to use the generic interface.",230,data/crawl/collectd/hunk_80.cpp,,,data/crawl/collectd/old_hunk_80.cpp,data/crawl/collectd/new_hunk_80.cpp,-1,25,,"cmd_error (CMD_PARSE_ERROR, err,
""Invalid option string `%s'."", argv[i]);","[""addLog""]","[[], [""cmd_error"", ""CMD_PARSE_ERROR"", ""err"", ""Invalid"", ""option"", ""string"", ""%s"", ""argv[i]""]]",[-24926256691439273946],39
https://github.com/collectd/collectd/commit/938471bee8cc86d32615144c5037f17338b19e70,25 Sep 2016,"command parser: Add support for the FLUSH command.

That is, implement the generic interface for FLUSH and switch the FLUSH
implementation to use the generic interface.",230,data/crawl/collectd/hunk_80.cpp,,,data/crawl/collectd/old_hunk_80.cpp,data/crawl/collectd/new_hunk_80.cpp,-1,9,,"cmd_error (CMD_ERROR, err, ""Invalid arguments to cmd_parse_flush."");","[""addLog""]","[[], [""cmd_error"", ""CMD_ERROR"", ""err"", ""Invalid"", ""arguments"", ""to"", ""cmd_parse_flush""]]",[-30747849619741560142],38
https://github.com/collectd/collectd/commit/6108316e4008edce45c6d861b49e339c1360181f,25 Sep 2016,"command parser: Add support for the LISTVAL command.

Implement the generic interface for LISTVAL and switch the LISTVAL
implementation to use the generic interface.",85,data/crawl/collectd/hunk_79.cpp,,,data/crawl/collectd/old_hunk_79.cpp,data/crawl/collectd/new_hunk_79.cpp,-1,34,,"cmd_error (CMD_ERROR, &err, ""uc_get_names failed."");","[""addLog""]","[[], [""cmd_error"", ""CMD_ERROR"", ""&err"", ""uc_get_names"", ""failed""]]",[-32363738651515361720],37
https://github.com/collectd/collectd/commit/6108316e4008edce45c6d861b49e339c1360181f,25 Sep 2016,"command parser: Add support for the LISTVAL command.

Implement the generic interface for LISTVAL and switch the LISTVAL
implementation to use the generic interface.",85,data/crawl/collectd/hunk_78.cpp,,,data/crawl/collectd/old_hunk_78.cpp,data/crawl/collectd/new_hunk_78.cpp,-1,9,,"cmd_error (CMD_PARSE_ERROR, err,
""Garbage after end of command: `%s'."", argv[0]);","[""addLog""]","[[], [""cmd_error"", ""CMD_PARSE_ERROR"", ""err"", ""Garbage"", ""after"", ""end"", ""of"", ""command"", ""%s"", ""argv[0]""]]",[-19228918585515321857],36
https://github.com/collectd/collectd/commit/6e6c1eecf05ac8bc9e59b0967cb87e578253d5a0,25 Sep 2016,"command parser: Add support for the GETVAL command.

Implement the generic interface for GETVAL and switch the GETVAL
implementation to use the generic interface.",182,data/crawl/collectd/hunk_76.cpp,,,data/crawl/collectd/old_hunk_76.cpp,data/crawl/collectd/new_hunk_76.cpp,-1,104,,"cmd_error (CMD_ERROR, &err, ""Error reading value from cache."");","[""addLog""]","[[], [""cmd_error"", ""CMD_ERROR"", ""&err"", ""Error"", ""reading"", ""value"", ""from"", ""cache""]]",[-30636879534099840634],35
https://github.com/collectd/collectd/commit/6e6c1eecf05ac8bc9e59b0967cb87e578253d5a0,25 Sep 2016,"command parser: Add support for the GETVAL command.

Implement the generic interface for GETVAL and switch the GETVAL
implementation to use the generic interface.",182,data/crawl/collectd/hunk_76.cpp,,,data/crawl/collectd/old_hunk_76.cpp,data/crawl/collectd/new_hunk_76.cpp,-1,94,,"cmd_error (CMD_ERROR, &err, ""No such value."");","[""addLog""]","[[], [""cmd_error"", ""CMD_ERROR"", ""&err"", ""No"", ""such"", ""value""]]",[-27956705743948522619],34
https://github.com/collectd/collectd/commit/6e6c1eecf05ac8bc9e59b0967cb87e578253d5a0,25 Sep 2016,"command parser: Add support for the GETVAL command.

Implement the generic interface for GETVAL and switch the GETVAL
implementation to use the generic interface.",182,data/crawl/collectd/hunk_76.cpp,,,data/crawl/collectd/old_hunk_76.cpp,data/crawl/collectd/new_hunk_76.cpp,-1,83,,"cmd_error (CMD_ERROR, &err, ""Type `%s' is unknown.\n"",
cmd.cmd.getval.identifier.type);","[""addLog""]","[[], [""cmd_error"", ""CMD_ERROR"", ""&err"", ""Type"", ""%s"", ""is"", ""unknown"", ""\\n"", ""cmd"", ""cmd"", ""getval"", ""identifier"", ""type""]]",[-7094065732335093456],33
https://github.com/collectd/collectd/commit/6e6c1eecf05ac8bc9e59b0967cb87e578253d5a0,25 Sep 2016,"command parser: Add support for the GETVAL command.

Implement the generic interface for GETVAL and switch the GETVAL
implementation to use the generic interface.",182,data/crawl/collectd/hunk_76.cpp,,,data/crawl/collectd/old_hunk_76.cpp,data/crawl/collectd/new_hunk_76.cpp,-1,29,,"cmd_error (CMD_PARSE_ERROR, err,
""Cannot parse identifier `%s'."", identifier_copy);","[""addLog""]","[[], [""cmd_error"", ""CMD_PARSE_ERROR"", ""err"", ""Cannot"", ""parse"", ""identifier"", ""%s"", ""identifier_copy""]]",[-13783364593819660912],32
https://github.com/collectd/collectd/commit/6e6c1eecf05ac8bc9e59b0967cb87e578253d5a0,25 Sep 2016,"command parser: Add support for the GETVAL command.

Implement the generic interface for GETVAL and switch the GETVAL
implementation to use the generic interface.",182,data/crawl/collectd/hunk_76.cpp,,,data/crawl/collectd/old_hunk_76.cpp,data/crawl/collectd/new_hunk_76.cpp,-1,14,,"cmd_error (CMD_PARSE_ERROR, err,
  ""Garbage after identifier: `%s'."", argv[1]);","[""addLog""]","[[], [""cmd_error"", ""CMD_PARSE_ERROR"", ""err"", ""Garbage"", ""after"", ""identifier"", ""%s"", ""argv[1]""]]",[-15060660674644017358],31
https://github.com/collectd/collectd/commit/6e6c1eecf05ac8bc9e59b0967cb87e578253d5a0,25 Sep 2016,"command parser: Add support for the GETVAL command.

Implement the generic interface for GETVAL and switch the GETVAL
implementation to use the generic interface.",182,data/crawl/collectd/hunk_76.cpp,,,data/crawl/collectd/old_hunk_76.cpp,data/crawl/collectd/new_hunk_76.cpp,-1,12,,"cmd_error (CMD_PARSE_ERROR, err, ""Missing identifier."");","[""addLog""]","[[], [""cmd_error"", ""CMD_PARSE_ERROR"", ""err"", ""Missing"", ""identifier""]]",[2432000106285631658],30
https://github.com/collectd/collectd/commit/7535ee83bf0b12a168cee3c70e5fb97ed6dfc96c,25 Sep 2016,utils_cmds_test: Add various unit tests for the command parser.,298,data/crawl/collectd/hunk_75.cpp,,,data/crawl/collectd/old_hunk_75.cpp,data/crawl/collectd/new_hunk_75.cpp,-1,36,,"printf (""ERROR[%d]: "", status);","[""addLog""]","[[], [""printf"", ""ERROR[%d]"", ""status""]]",[-1373681262665446135],29
https://github.com/collectd/collectd/commit/f5fdf24ccec9318baf11eec25d6dba881dc77332,25 Sep 2016,"command parser: Add support for parser options.

These can be used to tune the parser behavior. For now, there's an option to
specify the default hostname in an identifier.",177,data/crawl/collectd/hunk_72.cpp,,,data/crawl/collectd/old_hunk_72.cpp,data/crawl/collectd/new_hunk_72.cpp,-1,6,,"cmd_error (CMD_ERROR, err, ""Invalid arguments to cmd_parse_putval."");","[""addLog""]","[[], [""cmd_error"", ""CMD_ERROR"", ""err"", ""Invalid"", ""arguments"", ""to"", ""cmd_parse_putval""]]",[-31561218057260050751],28
https://github.com/collectd/collectd/commit/f5fdf24ccec9318baf11eec25d6dba881dc77332,25 Sep 2016,"command parser: Add support for parser options.

These can be used to tune the parser behavior. For now, there's an option to
specify the default hostname in an identifier.",177,data/crawl/collectd/hunk_71.cpp,,,data/crawl/collectd/old_hunk_71.cpp,data/crawl/collectd/new_hunk_71.cpp,-1,12,,"cmd_error (CMD_ERROR, err, ""Invalid arguments to cmd_parse_getval."");","[""addLog""]","[[], [""cmd_error"", ""CMD_ERROR"", ""err"", ""Invalid"", ""arguments"", ""to"", ""cmd_parse_getval""]]",[-17729321356626788452],27
https://github.com/collectd/collectd/commit/9515f607aa5d401e288b26d64e2f90f6ea4dd6fe,27 Nov 2016,+ utils_latency: Added latency_counter_get_rate(),240,data/crawl/collectd/hunk_68.cpp,,,data/crawl/collectd/old_hunk_68.cpp,data/crawl/collectd/new_hunk_68.cpp,-1,95,,"printf(""b: %.15g\n"",sum);","[""addLog""]","[[], [""printf"", ""b"", ""%"", ""15g\\n"", ""sum""]]",[14330229123389562826],26
https://github.com/collectd/collectd/commit/8c61dbce195987d352034663204d5df32776e9cb,27 Nov 2016,"src/utils_latency.[ch]: Improve accuracy, update unit test.",262,data/crawl/collectd/hunk_67.cpp,,,data/crawl/collectd/old_hunk_67.cpp,data/crawl/collectd/new_hunk_67.cpp,95,101,"printf(""b: %.15g\n"",sum);",DOUBLE_TO_CDTIME_T(999999);,"[""updateLog"", ""removeVariable"", ""updateContent""]","[[""printf"", ""b"", ""%"", ""15g\\n"", ""sum""], [""DOUBLE_TO_CDTIME_T"", ""999999""]]",[-20898387463718633913],25
https://github.com/collectd/collectd/commit/1e8a95944f39cf4d552f2afed8e26b93febd50ec,31 Dec 2016,"dpdkstat plugin rework

This patch contains rework of existing dpdkstat plugin. Changes are focused on
extracting common dpdk related features into utils file that could be reused by
other DPDK plugins. Also some related structural changes are introduced.

List of changes:
- introduction of new utils_dpdk.c that handles child process spawning,
  and terminating, messaging between parent and child, DPDK configuration
  and initialization and DPDK commands execution
- DPDK EAL specific options put into separate subsection of
  dpdkstat configuration
- documentation update

Those changes are preparatory steps for upstreaming dpdkevent plugin
that is going to collect DPDK ports and logical cores status info.

Signed-off-by: Krzysztof Matczak <krzysztofx.matczak@intel.com>",2068,data/crawl/collectd/hunk_54.cpp,,,data/crawl/collectd/old_hunk_54.cpp,data/crawl/collectd/new_hunk_54.cpp,-1,516,,"printf(""dpdk_helper_eal_init: EAL arguments: "");","[""addLog""]","[[], [""printf"", ""dpdk_helper_eal_init"", ""EAL"", ""arguments""]]",[10544205910517454851],24
https://github.com/collectd/collectd/commit/10d95b0cf8d2ffe1472cc65a4d403c9c1ca4118d,13 Apr 2017,"libcollectdclient: Implement server code.

The implementation is intentionally similar to the Golang implementation.
Security features (signing, encryption) are still missing.",1085,data/crawl/collectd/hunk_47.cpp,,,data/crawl/collectd/old_hunk_47.cpp,data/crawl/collectd/new_hunk_47.cpp,-1,417,,"printf(""libcollectdclient/server_test.c\n"");","[""addLog""]","[[], [""printf"", ""libcollectdclient/server_test"", ""c\\n""]]",[63777970201486563],23
https://github.com/collectd/collectd/commit/10d95b0cf8d2ffe1472cc65a4d403c9c1ca4118d,13 Apr 2017,"libcollectdclient: Implement server code.

The implementation is intentionally similar to the Golang implementation.
Security features (signing, encryption) are still missing.",1085,data/crawl/collectd/hunk_47.cpp,,,data/crawl/collectd/old_hunk_47.cpp,data/crawl/collectd/new_hunk_47.cpp,-1,403,,"fprintf(stderr, ""parse_values(): vl.values[2] = %g, want NaN\n"",
            vl.values[2].gauge);","[""addLog""]","[[], [""fprintf"", ""stderr"", ""parse_values"", ""vl"", ""values[2]"", ""%g"", ""want"", ""NaN\\n"", ""vl"", ""values[2]"", ""gauge""]]",[-30491116924444238430],22
https://github.com/collectd/collectd/commit/10d95b0cf8d2ffe1472cc65a4d403c9c1ca4118d,13 Apr 2017,"libcollectdclient: Implement server code.

The implementation is intentionally similar to the Golang implementation.
Security features (signing, encryption) are still missing.",1085,data/crawl/collectd/hunk_47.cpp,,,data/crawl/collectd/old_hunk_47.cpp,data/crawl/collectd/new_hunk_47.cpp,-1,398,,"fprintf(stderr, ""parse_values(): vl.values[1] = %"" PRIu64 "", want 31337\n"",
            vl.values[1].derive);","[""addLog""]","[[], [""fprintf"", ""stderr"", ""parse_values"", ""vl"", ""values[1]"", ""%"", ""PRIu64"", ""want"", ""31337\\n"", ""vl"", ""values[1]"", ""derive""]]",[-10133395283375631419],21
https://github.com/collectd/collectd/commit/10d95b0cf8d2ffe1472cc65a4d403c9c1ca4118d,13 Apr 2017,"libcollectdclient: Implement server code.

The implementation is intentionally similar to the Golang implementation.
Security features (signing, encryption) are still missing.",1085,data/crawl/collectd/hunk_47.cpp,,,data/crawl/collectd/old_hunk_47.cpp,data/crawl/collectd/new_hunk_47.cpp,-1,393,,"fprintf(stderr, ""parse_values(): vl.values[0] = %g, want 42\n"",
            vl.values[0].gauge);","[""addLog""]","[[], [""fprintf"", ""stderr"", ""parse_values"", ""vl"", ""values[0]"", ""%g"", ""want"", ""42\\n"", ""vl"", ""values[0]"", ""gauge""]]",[-29358487712234593090],20
https://github.com/collectd/collectd/commit/10d95b0cf8d2ffe1472cc65a4d403c9c1ca4118d,13 Apr 2017,"libcollectdclient: Implement server code.

The implementation is intentionally similar to the Golang implementation.
Security features (signing, encryption) are still missing.",1085,data/crawl/collectd/hunk_47.cpp,,,data/crawl/collectd/old_hunk_47.cpp,data/crawl/collectd/new_hunk_47.cpp,-1,386,,"fprintf(stderr, ""parse_values(): vl.values_types[%zu] = %d, want %d\n"", i,
              vl.values_types[i], want_types[i]);","[""addLog""]","[[], [""fprintf"", ""stderr"", ""parse_values"", ""vl"", ""values_types[%zu]"", ""%d"", ""want"", ""%d\\n"", ""i"", ""vl"", ""values_types[i]"", ""want_types[i]""]]",[-12997706149359800321],19
https://github.com/collectd/collectd/commit/10d95b0cf8d2ffe1472cc65a4d403c9c1ca4118d,13 Apr 2017,"libcollectdclient: Implement server code.

The implementation is intentionally similar to the Golang implementation.
Security features (signing, encryption) are still missing.",1085,data/crawl/collectd/hunk_47.cpp,,,data/crawl/collectd/old_hunk_47.cpp,data/crawl/collectd/new_hunk_47.cpp,-1,378,,"fprintf(stderr, ""parse_values(): vl.values_len = %zu, want 3\n"",
            vl.values_len);","[""addLog""]","[[], [""fprintf"", ""stderr"", ""parse_values"", ""vl"", ""values_len"", ""%zu"", ""want"", ""3\\n"", ""vl"", ""values_len""]]",[-24972603222482039159],18
https://github.com/collectd/collectd/commit/10d95b0cf8d2ffe1472cc65a4d403c9c1ca4118d,13 Apr 2017,"libcollectdclient: Implement server code.

The implementation is intentionally similar to the Golang implementation.
Security features (signing, encryption) are still missing.",1085,data/crawl/collectd/hunk_47.cpp,,,data/crawl/collectd/old_hunk_47.cpp,data/crawl/collectd/new_hunk_47.cpp,-1,373,,"fprintf(stderr, ""parse_values() = %d, want 0\n"", status);","[""addLog""]","[[], [""fprintf"", ""stderr"", ""parse_values"", ""%d"", ""want"", ""0\\n"", ""status""]]",[-29547000895143273008],17
https://github.com/collectd/collectd/commit/10d95b0cf8d2ffe1472cc65a4d403c9c1ca4118d,13 Apr 2017,"libcollectdclient: Implement server code.

The implementation is intentionally similar to the Golang implementation.
Security features (signing, encryption) are still missing.",1085,data/crawl/collectd/hunk_47.cpp,,,data/crawl/collectd/old_hunk_47.cpp,data/crawl/collectd/new_hunk_47.cpp,-1,347,,"fprintf(stderr, ""parse_string() = (\""%s\"", 0), want (\""%s\"", 0)\n"", got,
                cases[i].want);","[""addLog""]","[[], [""fprintf"", ""stderr"", ""parse_string"", ""\\"", ""%s\\"", ""0"", ""want"", ""\\"", ""%s\\"", ""0"", ""\\n"", ""got"", ""cases[i]"", ""want""]]",[-41620726302175321876],16
https://github.com/collectd/collectd/commit/10d95b0cf8d2ffe1472cc65a4d403c9c1ca4118d,13 Apr 2017,"libcollectdclient: Implement server code.

The implementation is intentionally similar to the Golang implementation.
Security features (signing, encryption) are still missing.",1085,data/crawl/collectd/hunk_47.cpp,,,data/crawl/collectd/old_hunk_47.cpp,data/crawl/collectd/new_hunk_47.cpp,-1,344,,"fprintf(stderr, ""parse_string() = %d, want 0\n"", status);","[""addLog""]","[[], [""fprintf"", ""stderr"", ""parse_string"", ""%d"", ""want"", ""0\\n"", ""status""]]",[-25269990489684578015],15
https://github.com/collectd/collectd/commit/10d95b0cf8d2ffe1472cc65a4d403c9c1ca4118d,13 Apr 2017,"libcollectdclient: Implement server code.

The implementation is intentionally similar to the Golang implementation.
Security features (signing, encryption) are still missing.",1085,data/crawl/collectd/hunk_47.cpp,,,data/crawl/collectd/old_hunk_47.cpp,data/crawl/collectd/new_hunk_47.cpp,-1,339,,"fprintf(stderr, ""parse_string() = (\""%s\"", 0), want error\n"", got);","[""addLog""]","[[], [""fprintf"", ""stderr"", ""parse_string"", ""\\"", ""%s\\"", ""0"", ""want"", ""error\\n"", ""got""]]",[-36537525548420359144],14
https://github.com/collectd/collectd/commit/10d95b0cf8d2ffe1472cc65a4d403c9c1ca4118d,13 Apr 2017,"libcollectdclient: Implement server code.

The implementation is intentionally similar to the Golang implementation.
Security features (signing, encryption) are still missing.",1085,data/crawl/collectd/hunk_47.cpp,,,data/crawl/collectd/old_hunk_47.cpp,data/crawl/collectd/new_hunk_47.cpp,-1,309,,"fprintf(stderr, ""parse_time(%"" PRIu64 "") = (%.9f, %d), want (%.9f, 0)\n"",
              cases_hr[i].in, vl.time, status, cases_hr[i].want);","[""addLog""]","[[], [""fprintf"", ""stderr"", ""parse_time"", ""%"", ""PRIu64"", ""%"", ""9f"", ""%d"", ""want"", ""%"", ""9f"", ""0"", ""\\n"", ""cases_hr[i]"", ""in"", ""vl"", ""time"", ""status"", ""cases_hr[i]"", ""want""]]",[-31261440039107384199],13
https://github.com/collectd/collectd/commit/10d95b0cf8d2ffe1472cc65a4d403c9c1ca4118d,13 Apr 2017,"libcollectdclient: Implement server code.

The implementation is intentionally similar to the Golang implementation.
Security features (signing, encryption) are still missing.",1085,data/crawl/collectd/hunk_47.cpp,,,data/crawl/collectd/old_hunk_47.cpp,data/crawl/collectd/new_hunk_47.cpp,-1,288,,"fprintf(stderr, ""parse_time(%"" PRIu64 "") = (%.0f, %d), want (%.0f, 0)\n"",
              cases[i].in, vl.time, status, cases[i].want);","[""addLog""]","[[], [""fprintf"", ""stderr"", ""parse_time"", ""%"", ""PRIu64"", ""%"", ""0f"", ""%d"", ""want"", ""%"", ""0f"", ""0"", ""\\n"", ""cases[i]"", ""in"", ""vl"", ""time"", ""status"", ""cases[i]"", ""want""]]",[-29014490228442220289],12
https://github.com/collectd/collectd/commit/10d95b0cf8d2ffe1472cc65a4d403c9c1ca4118d,13 Apr 2017,"libcollectdclient: Implement server code.

The implementation is intentionally similar to the Golang implementation.
Security features (signing, encryption) are still missing.",1085,data/crawl/collectd/hunk_47.cpp,,,data/crawl/collectd/old_hunk_47.cpp,data/crawl/collectd/new_hunk_47.cpp,-1,264,,"printf(""ok - lcc_network_parse(raw_packet_data[%zu])\n"", i);","[""addLog""]","[[], [""printf"", ""ok"", ""lcc_network_parse"", ""raw_packet_data[%zu]"", ""\\n"", ""i""]]",[-1869405200455500997],11
https://github.com/collectd/collectd/commit/10d95b0cf8d2ffe1472cc65a4d403c9c1ca4118d,13 Apr 2017,"libcollectdclient: Implement server code.

The implementation is intentionally similar to the Golang implementation.
Security features (signing, encryption) are still missing.",1085,data/crawl/collectd/hunk_47.cpp,,,data/crawl/collectd/old_hunk_47.cpp,data/crawl/collectd/new_hunk_47.cpp,-1,259,,"fprintf(stderr, ""lcc_network_parse(raw_packet_data[%zu]) = %d, want 0\n"",
              i, status);","[""addLog""]","[[], [""fprintf"", ""stderr"", ""lcc_network_parse"", ""raw_packet_data[%zu]"", ""%d"", ""want"", ""0\\n"", ""i"", ""status""]]",[-31154454815582148230],10
https://github.com/collectd/collectd/commit/10d95b0cf8d2ffe1472cc65a4d403c9c1ca4118d,13 Apr 2017,"libcollectdclient: Implement server code.

The implementation is intentionally similar to the Golang implementation.
Security features (signing, encryption) are still missing.",1085,data/crawl/collectd/hunk_47.cpp,,,data/crawl/collectd/old_hunk_47.cpp,data/crawl/collectd/new_hunk_47.cpp,-1,250,,"fprintf(
          stderr,
          ""lcc_network_parse(raw_packet_data[%zu]): decoding string failed\n"",
          i);","[""addLog""]","[[], [""fprintf"", ""stderr"", ""lcc_network_parse"", ""raw_packet_data[%zu]"", ""decoding"", ""string"", ""failed\\n"", ""i""]]",[-43219243252872824749],9
https://github.com/collectd/collectd/commit/c3eb1f9dd670b0d112820ed2894e6d5ecb09c286,13 Apr 2017,libcollectdclient: Implement parsing of signed and encrypted network data.,348,data/crawl/collectd/hunk_45.cpp,,,data/crawl/collectd/old_hunk_45.cpp,data/crawl/collectd/new_hunk_45.cpp,-1,65,,"fprintf(stderr, ""decrypt_aes256() = \""%s\"", want \""%s\""\n"", got, want);","[""addLog""]","[[], [""fprintf"", ""stderr"", ""decrypt_aes256"", ""\\"", ""%s\\"", ""want"", ""\\"", ""%s\\"", ""\\n"", ""got"", ""want""]]",[-28742386372071869289],8
https://github.com/collectd/collectd/commit/c3eb1f9dd670b0d112820ed2894e6d5ecb09c286,13 Apr 2017,libcollectdclient: Implement parsing of signed and encrypted network data.,348,data/crawl/collectd/hunk_45.cpp,,,data/crawl/collectd/old_hunk_45.cpp,data/crawl/collectd/new_hunk_45.cpp,-1,57,,"fprintf(stderr, ""decrypt_aes256() = %d, want 0\n"", status);","[""addLog""]","[[], [""fprintf"", ""stderr"", ""decrypt_aes256"", ""%d"", ""want"", ""0\\n"", ""status""]]",[-14667923190519443054],7
https://github.com/collectd/collectd/commit/c3eb1f9dd670b0d112820ed2894e6d5ecb09c286,13 Apr 2017,libcollectdclient: Implement parsing of signed and encrypted network data.,348,data/crawl/collectd/hunk_45.cpp,,,data/crawl/collectd/old_hunk_45.cpp,data/crawl/collectd/new_hunk_45.cpp,-1,45,,"fprintf(stderr, ""test_decrypt_aes256: decode_string failed.\n"");","[""addLog""]","[[], [""fprintf"", ""stderr"", ""test_decrypt_aes256"", ""decode_string"", ""failed"", ""\\n""]]",[-24245928258235179668],6
https://github.com/collectd/collectd/commit/c3eb1f9dd670b0d112820ed2894e6d5ecb09c286,13 Apr 2017,libcollectdclient: Implement parsing of signed and encrypted network data.,348,data/crawl/collectd/hunk_45.cpp,,,data/crawl/collectd/old_hunk_45.cpp,data/crawl/collectd/new_hunk_45.cpp,-1,26,,"fprintf(stderr, ""verify_sha256() = %d, want 1\n"", status);","[""addLog""]","[[], [""fprintf"", ""stderr"", ""verify_sha256"", ""%d"", ""want"", ""1\\n"", ""status""]]",[-20323860687674020529],5
https://github.com/collectd/collectd/commit/c3eb1f9dd670b0d112820ed2894e6d5ecb09c286,13 Apr 2017,libcollectdclient: Implement parsing of signed and encrypted network data.,348,data/crawl/collectd/hunk_45.cpp,,,data/crawl/collectd/old_hunk_45.cpp,data/crawl/collectd/new_hunk_45.cpp,-1,14,,"fprintf(stderr, ""verify_sha256() = %d, want 0\n"", status);","[""addLog""]","[[], [""fprintf"", ""stderr"", ""verify_sha256"", ""%d"", ""want"", ""0\\n"", ""status""]]",[-19197805175041162280],4
https://github.com/collectd/collectd/commit/a21477bc160169035f250724d7fa027fe3da1106,13 Apr 2017,libcollectdclient: Separate module for lcc_network_parse().,1263,data/crawl/collectd/hunk_41.cpp,,,data/crawl/collectd/old_hunk_41.cpp,data/crawl/collectd/new_hunk_41.cpp,333,-1,"fprintf(stderr, ""sizeof(iv) = %zu\n"", sizeof(iv));",,"[""removeLog""]","[[""fprintf"", ""stderr"", ""sizeof"", ""iv"", ""%zu\\n"", ""sizeof"", ""iv""], []]",[25565438479868675511],3
https://github.com/collectd/collectd/commit/619adc097bbc8f26e846db9a6cdfcb0322ba9944,12 May 2017,"src/utils_cmd_putval.c: Fix multi-value PUTVAL.

vl.values was allocated outside of the loop and then copied into each
ret_putval->vl[]. This means that later values overwrote the values
stored in previous ret_putval->vl[].",36,data/crawl/collectd/hunk_37.cpp,,,data/crawl/collectd/old_hunk_37.cpp,data/crawl/collectd/new_hunk_37.cpp,6,-1,"cmd_error(CMD_ERROR, err, ""malloc failed."");",,"[""removeLog""]","[[""cmd_error"", ""CMD_ERROR"", ""err"", ""malloc"", ""failed""], []]",[25722487241109501475],2
https://github.com/collectd/collectd/commit/970765372717ce052a85c06d2d626f466ffaa0b6,05 Jul 2017,Add CollectdError exception which can be thrown without causing a stacktrace to be logged.,93,data/crawl/collectd/hunk_34.cpp,,,data/crawl/collectd/old_hunk_34.cpp,data/crawl/collectd/new_hunk_34.cpp,-1,5,,"PyErr_NewException(""collectd.CollectdError"", NULL, errordict);","[""addLog""]","[[], [""PyErr_NewException"", ""collectd"", ""CollectdError"", ""NULL"", ""errordict""]]",[-4488324244103465561],1
https://github.com/collectd/collectd/commit/689b59231ea00f607fd27b0feaf0bd79bff0fb80,07 Oct 2017,"ipmi plugin: Implemented IPMI LAN connection and plugin improved

* Added instances support
* Removed the sensor removal in case of reading errors
* Added the lock to do not request new readings until previous reading is complete
* Disabled SDRs local cache
* Added the check for sensors 'is readable' flag
* Added the check for sensor event reading type (if sensor is discrete or not)
* Added checks for sensor states 'scanning disabled' and 'initial update in progress'
* Changes in error reporting",842,data/crawl/collectd/hunk_30.cpp,,,data/crawl/collectd/old_hunk_30.cpp,data/crawl/collectd/new_hunk_30.cpp,-1,28,,"fprintf(stderr, ""ipmi plugin: %s\n"", msg);","[""addLog""]","[[], [""fprintf"", ""stderr"", ""ipmi"", ""plugin"", ""%s\\n"", ""msg""]]",[-16163828477948361948],0
