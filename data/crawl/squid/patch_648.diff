@@ -3,15 +3,15 @@ msgstr ""
 "Project-Id-Version: Squid-3\n"
 "Report-Msgid-Bugs-To: \n"
 "POT-Creation-Date: 2011-05-04 13:58+1200\n"
-"PO-Revision-Date: 2011-05-04 04:34+0200\n"
+"PO-Revision-Date: 2011-06-16 14:59+0200\n"
 "Last-Translator: Amos <squid3@treenet.co.nz>\n"
 "Language-Team: Squid Developers <squid-dev@squid-cache.org>\n"
 "Language: en\n"
 "MIME-Version: 1.0\n"
 "Content-Type: text/plain; charset=UTF-8\n"
 "Content-Transfer-Encoding: 8bit\n"
 "Plural-Forms: nplurals=2; plural=(n != 1);\n"
-"X-Generator: Pootle 2.0.5\n"
+"X-Generator: Pootle 2.0.6\n"
 
 #. type: SH
 #: helpers/basic_auth/getpwnam/basic_getpwnam_auth.8:3
@@ -1550,6 +1550,11 @@ msgid ""
 "trusted domains specifyng the username in the domain\\eusername Microsoft "
 "notation."
 msgstr ""
+"Usage is simple. It accepts a username and password on standard input and "
+"will return OK if the username/password is valid for the domain/machine, or "
+"ERR if there was some problem.  It is possible to authenticate against NT "
+"trusted domains specifyng the username in the domain\\eusername Microsoft "
+"notation."
 
 #. type: Plain text
 #: helpers/basic_auth/SSPI/basic_sspi_auth.8:36
@@ -1580,7 +1585,6 @@ msgstr "The default Domain against to authenticate."
 #. logon from the network\"" 
 #. type: Plain text
 #: helpers/basic_auth/SSPI/basic_sspi_auth.8:55
-#, fuzzy
 #| msgid ""
 #| "Users that are allowed to access the web proxy must have the Windows NT "
 #| "User Rights \"logon from the network\" and must be included in the NT "
@@ -1591,8 +1595,8 @@ msgid ""
 "in the Authenticator's command line."
 msgstr ""
 "Users that are allowed to access the web proxy must have the Windows NT User "
-"Rights \"logon from the network\" and must be included in the NT LOCAL User "
-"Groups specified in the Authenticator's command line."
+"Rights I<\\&\\&> and must be included in the NT LOCAL User Groups specified "
+"in the Authenticator's command line."
 
 #. type: Plain text
 #: helpers/basic_auth/SSPI/basic_sspi_auth.8:58
@@ -1944,10 +1948,9 @@ msgstr "B<3. Active Directory Canonical name>"
 
 #. type: Plain text
 #: helpers/external_acl/AD_group/ext_ad_group_acl.8:89
-#, fuzzy
 #| msgid "Examples:"
 msgid "As Exampled:"
-msgstr "Examples:"
+msgstr "As Exampled:"
 
 #. type: Plain text
 #: helpers/external_acl/AD_group/ext_ad_group_acl.8:99
@@ -2323,6 +2326,10 @@ msgid ""
 "servers have the latest service packs installed, and that your servers are "
 "properly synchronizing partitions."
 msgstr ""
+"I *STRONGLY RECOMMEND* using the latest version of the Novell Client in all "
+"situations B<before> seeking support! You may also need to make sure your "
+"servers have the latest service packs installed, and that your servers are "
+"properly synchronizing partitions."
 
 #. type: Plain text
 #: helpers/external_acl/file_userip/ext_file_userip_acl.8:7
@@ -2345,10 +2352,13 @@ msgstr ""
 
 #. type: Plain text
 #: helpers/external_acl/file_userip/ext_file_userip_acl.8:22
+#, fuzzy
 msgid ""
 "It works by reading a pair composed by an ip address and an username on "
 "STDIN and matching it against a configuration file."
 msgstr ""
+"It works by reading a pair composed by an IP address and an username on "
+"STDIN and matching it against a configuration file."
 
 #. type: Plain text
 #: helpers/external_acl/file_userip/ext_file_userip_acl.8:33
@@ -3349,10 +3359,9 @@ msgstr ""
 
 #. type: Plain text
 #: helpers/ntlm_auth/SSPI/ntlm_sspi_auth.8:79
-#, fuzzy
 #| msgid "Refer to Squid documentation for more details on B<squid.conf>"
 msgid "Refer to Squid documentation for more details."
-msgstr "Refer to Squid documentation for more details on B<squid.conf>"
+msgstr "Refer to Squid documentation for more details."
 
 #. type: Plain text
 #: helpers/ntlm_auth/SSPI/ntlm_sspi_auth.8:87
@@ -3527,7 +3536,6 @@ msgstr ""
 
 #. type: Plain text
 #: src/squid.8.in:112
-#, fuzzy
 msgid "Use specified syslog facility. Implies B<-s>"
 msgstr "Use specified syslog facility. Implies B<-s>"
 
@@ -3610,16 +3618,16 @@ msgstr "Squid configuration files located in @SYSCONFDIR@/:"
 
 #. type: Plain text
 #: src/squid.8.in:179
-#, fuzzy
 msgid ""
 "The main configuration file. You must initially make changes to this file "
 "for B<squid> to work. For example, the default configuration only allows "
 "access from RFC private LAN networks.  Some packaging distributions block "
 "even that."
 msgstr ""
 "The main configuration file. You must initially make changes to this file "
-"for B<squid> to work. For example, the default configuration does not allow "
-"access from any browser."
+"for B<squid> to work. For example, the default configuration only allows "
+"access from RFC private LAN networks.  Some packaging distributions block "
+"even that."
 
 #. type: Plain text
 #: src/squid.8.in:183 src/squid.8.in:189
@@ -8,15 +8,16 @@ msgstr ""
 "Project-Id-Version: squid\n"
 "Report-Msgid-Bugs-To: FULL NAME <EMAIL@ADDRESS>\n"
 "POT-Creation-Date: 2011-05-04 13:58+1200\n"
-"PO-Revision-Date: 2010-01-16 02:05+0000\n"
-"Last-Translator: Amos Jeffries <Unknown>\n"
+"PO-Revision-Date: 2011-06-16 14:43+0200\n"
+"Last-Translator: Amos <squid3@treenet.co.nz>\n"
 "Language-Team: English (Australia) <en_AU@li.org>\n"
-"Language: \n"
+"Language: en\n"
 "MIME-Version: 1.0\n"
 "Content-Type: text/plain; charset=UTF-8\n"
 "Content-Transfer-Encoding: 8bit\n"
+"Plural-Forms: nplurals=2; plural=(n != 1);\n"
+"X-Generator: Pootle 2.0.6\n"
 "X-Launchpad-Export-Date: 2010-01-16 02:12+0000\n"
-"X-Generator: Launchpad (build Unknown)\n"
 
 #. type: SH
 #: helpers/basic_auth/getpwnam/basic_getpwnam_auth.8:3
@@ -116,35 +117,30 @@ msgstr "This has the following advantages over the NCSA module:"
 
 #. type: Plain text
 #: helpers/basic_auth/getpwnam/basic_getpwnam_auth.8:25
-#, fuzzy
 #| msgid "Allows authentication of all known local users"
 msgid "- Allows authentication of all known local users"
-msgstr "Allows authentication of all known local users"
+msgstr "- Allows authentication of all known local users"
 
 #. type: Plain text
 #: helpers/basic_auth/getpwnam/basic_getpwnam_auth.8:28
-#, fuzzy
 msgid "- Allows authentication through nsswitch.conf"
-msgstr "Allows authentication through"
+msgstr "- Allows authentication through nsswitch.conf"
 
 #. type: Plain text
 #: helpers/basic_auth/getpwnam/basic_getpwnam_auth.8:31
-#, fuzzy
 #| msgid "Can handle NIS(+) requests"
 msgid "- Can handle NIS(+) requests"
-msgstr "Can handle NIS(+) requests"
+msgstr "- Can handle NIS(+) requests"
 
 #. type: Plain text
 #: helpers/basic_auth/getpwnam/basic_getpwnam_auth.8:34
-#, fuzzy
 msgid "- Can handle LDAP requests"
-msgstr "Can handle LDAP request"
+msgstr "- Can handle LDAP requests"
 
 #. type: Plain text
 #: helpers/basic_auth/getpwnam/basic_getpwnam_auth.8:37
-#, fuzzy
 msgid "- Can handle PAM requests"
-msgstr "Can handle PAM request"
+msgstr "- Can handle PAM requests"
 
 #. type: SH
 #: helpers/basic_auth/getpwnam/basic_getpwnam_auth.8:38
@@ -331,13 +327,12 @@ msgstr ""
 #: helpers/negotiate_auth/kerberos/negotiate_kerberos_auth.8:97
 #: helpers/ntlm_auth/SSPI/ntlm_sspi_auth.8:109 tools/cachemgr.cgi.8.in:59
 #: tools/squidclient.1:193
-#, fuzzy
 msgid ""
 "Distributed under the GNU General Public License (GNU GPL) version 2 or "
 "later (GPLv2+)."
 msgstr ""
 "Distributed under the GNU General Public License (GNU GPL) version 2 or "
-"later (GPL2+)."
+"later (GPLv2+)."
 
 #. type: SH
 #: helpers/basic_auth/getpwnam/basic_getpwnam_auth.8:82
@@ -916,7 +911,6 @@ msgstr ""
 
 #. type: Plain text
 #: helpers/basic_auth/LDAP/basic_ldap_auth.8:212
-#, fuzzy
 #| msgid ""
 #| "Specify an alternate TCP port where the ldap server is listening if other "
 #| "than the default LDAP port 389. Can also be specified within the server "
@@ -926,17 +920,16 @@ msgid ""
 "than the default LDAP port 389. Can also be specified within the server "
 "specification by using servername:port syntax."
 msgstr ""
-"Specify an alternate TCP port where the ldap server is listening if other "
+"Specify an alternate TCP port where the LDAP server is listening if other "
 "than the default LDAP port 389. Can also be specified within the server "
-"specificiation by using servername:port syntax."
+"specification by using servername:port syntax."
 
 #. type: Plain text
 #: helpers/basic_auth/LDAP/basic_ldap_auth.8:218
 #: helpers/external_acl/LDAP_group/ext_ldap_group_acl.8:206
-#, fuzzy
 #| msgid "LDAP protocol version. Defaults to 2 if not specified."
 msgid "LDAP protocol version. Defaults to B<3> if not specified."
-msgstr "LDAP protocol version. Defaults to 2 if not specified."
+msgstr "LDAP protocol version. Defaults to B<3> if not specified."
 
 #. type: Plain text
 #: helpers/basic_auth/LDAP/basic_ldap_auth.8:222
@@ -987,7 +980,6 @@ msgstr ""
 
 #. type: Plain text
 #: helpers/basic_auth/LDAP/basic_ldap_auth.8:256
-#, fuzzy
 #| msgid ""
 #| "If you have sub-domains then you need to use a search filter approach to "
 #| "locate your user DNs as these can no longer be constructed direcly from "
@@ -998,20 +990,19 @@ msgid ""
 "base DN and login name alone:"
 msgstr ""
 "If you have sub-domains then you need to use a search filter approach to "
-"locate your user DNs as these can no longer be constructed direcly from the "
+"locate your user DNs as these can no longer be constructed directly from the "
 "base DN and login name alone:"
 
 #. type: Plain text
 #: helpers/basic_auth/LDAP/basic_ldap_auth.8:263
-#, fuzzy
 #| msgid ""
 #| "And similarily if you only want to allow access to users having a "
 #| "specific attribute"
 msgid ""
 "And similarly if you only want to allow access to users having a specific "
 "attribute"
 msgstr ""
-"And similarily if you only want to allow access to users having a specific "
+"And similarly if you only want to allow access to users having a specific "
 "attribute"
 
 #. type: Plain text
@@ -1458,10 +1449,10 @@ msgstr ""
 
 #. type: Plain text
 #: helpers/basic_auth/SASL/basic_sasl_auth.8:38
-#, fuzzy, no-wrap
+#, no-wrap
 #| msgid "Squid PAM Basic authentication helper"
 msgid " - use PAM authentication database\n"
-msgstr "Squid PAM Basic authentication helper"
+msgstr " - use PAM authentication database\n"
 
 #. type: Plain text
 #: helpers/basic_auth/SASL/basic_sasl_auth.8:41
@@ -1505,19 +1496,17 @@ msgstr ""
 
 #. type: Plain text
 #: helpers/basic_auth/SSPI/basic_sspi_auth.8:7
-#, fuzzy
 #| msgid "Squid PAM Basic authentication helper"
 msgid "Basic authentication protocol"
-msgstr "Squid PAM Basic authentication helper"
+msgstr "Basic authentication protocol"
 
 #. type: Plain text
 #: helpers/basic_auth/SSPI/basic_sspi_auth.8:9
 #: helpers/external_acl/AD_group/ext_ad_group_acl.8:9
 #: helpers/external_acl/eDirectory_userip/ext_edirectory_userip_acl.8:9
-#, fuzzy
 #| msgid "Version 1.0"
 msgid "Version 2.0"
-msgstr "Version 1.0"
+msgstr "Version 2.0"
 
 #. type: Plain text
 #: helpers/basic_auth/SSPI/basic_sspi_auth.8:14
@@ -1563,10 +1552,9 @@ msgstr ""
 #: helpers/external_acl/LM_group/ext_lm_group_acl.8:35
 #: helpers/external_acl/unix_group/ext_unix_group_acl.8:23
 #: helpers/ntlm_auth/SSPI/ntlm_sspi_auth.8:33
-#, fuzzy
 #| msgid "Write debugging to stderr also."
 msgid "Write debug info to stderr."
-msgstr "Write debugging to stderr also."
+msgstr "Write debug info to stderr."
 
 #. type: Plain text
 #: helpers/basic_auth/SSPI/basic_sspi_auth.8:44
@@ -1619,10 +1607,10 @@ msgstr ""
 #: helpers/basic_auth/SSPI/basic_sspi_auth.8:84
 #: helpers/external_acl/AD_group/ext_ad_group_acl.8:172
 #: helpers/external_acl/LM_group/ext_lm_group_acl.8:116
-#, fuzzy, no-wrap
+#, no-wrap
 #| msgid "QUESTIONS"
 msgid "TESTING"
-msgstr "QUESTIONS"
+msgstr "TESTING"
 
 #. type: Plain text
 #: helpers/basic_auth/SSPI/basic_sspi_auth.8:98
@@ -1681,17 +1669,15 @@ msgstr ""
 #. type: Plain text
 #: helpers/basic_auth/SSPI/basic_sspi_auth.8:126
 #: helpers/digest_auth/file/digest_file_auth.8:64
-#, fuzzy
 #| msgid "Based on original code by"
 msgid "Based on prior work by"
-msgstr "Based on original code by"
+msgstr "Based on prior work by"
 
 #. type: Plain text
 #: helpers/digest_auth/file/digest_file_auth.8:7
-#, fuzzy
 #| msgid "LDAP authentication helper for Squid"
 msgid "File based digest authentication helper for Squid."
-msgstr "LDAP authentication helper for Squid"
+msgstr "File based digest authentication helper for Squid."
 
 #. type: Plain text
 #: helpers/digest_auth/file/digest_file_auth.8:14 tools/squidclient.1:34
@@ -1999,17 +1985,15 @@ msgstr ""
 
 #. type: Plain text
 #: helpers/external_acl/AD_group/ext_ad_group_acl.8:235
-#, fuzzy
 #| msgid "Based on prior work in B<squid_ldap_auth> by"
 msgid "Based on prior work in B<mswin_check_lm_group (ext_lm_group_acl)>"
-msgstr "Based on prior work in B<squid_ldap_auth> by"
+msgstr "Based on prior work in B<mswin_check_lm_group (ext_lm_group_acl)>"
 
 #. type: Plain text
 #: helpers/external_acl/eDirectory_userip/ext_edirectory_userip_acl.8:7
-#, fuzzy
 #| msgid "Squid LDAP external acl group helper"
 msgid "Squid eDirectory IP Lookup Helper"
-msgstr "Squid LDAP external acl group helper"
+msgstr "Squid eDirectory IP Lookup Helper"
 
 #. type: Plain text
 #: helpers/external_acl/eDirectory_userip/ext_edirectory_userip_acl.8:17
@@ -2018,17 +2002,15 @@ msgstr ""
 
 #. type: Plain text
 #: helpers/external_acl/eDirectory_userip/ext_edirectory_userip_acl.8:21
-#, fuzzy
 #| msgid "version"
 msgid "LDAP version"
-msgstr "version"
+msgstr "LDAP version"
 
 #. type: Plain text
 #: helpers/external_acl/eDirectory_userip/ext_edirectory_userip_acl.8:23
-#, fuzzy
 #| msgid "base DN"
 msgid "basedn"
-msgstr "base DN"
+msgstr "basedn"
 
 #. type: Plain text
 #: helpers/external_acl/eDirectory_userip/ext_edirectory_userip_acl.8:25
@@ -2221,10 +2203,9 @@ msgstr ""
 
 #. type: Plain text
 #: helpers/external_acl/file_userip/ext_file_userip_acl.8:14
-#, fuzzy
 #| msgid "service name"
 msgid "file name"
-msgstr "service name"
+msgstr "file name"
 
 #. type: Plain text
 #: helpers/external_acl/file_userip/ext_file_userip_acl.8:19
@@ -2263,9 +2244,8 @@ msgstr ""
 
 #. type: Plain text
 #: helpers/external_acl/file_userip/ext_file_userip_acl.8:53
-#, fuzzy
 msgid "The configuration file format is as follows:"
-msgstr "The main configuration file for the Sample MSNT authenticator."
+msgstr "The configuration file format is as follows:"
 
 #. type: Plain text
 #: helpers/external_acl/file_userip/ext_file_userip_acl.8:62
@@ -2289,21 +2269,18 @@ msgstr ""
 
 #. type: Plain text
 #: helpers/external_acl/kerberos_ldap_group/ext_kerberos_ldap_group_acl.8:7
-#, fuzzy
 #| msgid "Squid LDAP external acl group helper"
 msgid "Squid LDAP external acl group helper for Kerberos or NTLM credentials."
-msgstr "Squid LDAP external acl group helper"
+msgstr "Squid LDAP external acl group helper for Kerberos or NTLM credentials."
 
 #. type: Plain text
 #: helpers/external_acl/kerberos_ldap_group/ext_kerberos_ldap_group_acl.8:9
-#, fuzzy
 #| msgid "Version 1.0"
 msgid "Version 1.3.0sq"
-msgstr "Version 1.0"
+msgstr "Version 1.3.0sq"
 
 #. type: Plain text
 #: helpers/external_acl/kerberos_ldap_group/ext_kerberos_ldap_group_acl.8:21
-#, fuzzy
 #| msgid ""
 #| "B<squid_ldap_group> allows Squid to connect to a LDAP directory to "
 #| "authorize users via LDAP groups.  LDAP options are specified as "
@@ -2318,11 +2295,11 @@ msgid ""
 "user@REALM, NDOMAIN\\euser) to be checked against the LDAP directory are "
 "specified on subsequent lines of input to the helper, one username per line."
 msgstr ""
-"B<squid_ldap_group> allows Squid to connect to a LDAP directory to authorize "
-"users via LDAP groups.  LDAP options are specified as parameters on the "
-"command line, while the username(s) and group(s) to be checked against the "
-"LDAP directory are specified on subsequent lines of input to the helper, one "
-"username/group pair per line separated by a space."
+"B<ext_kerberos_ldap_group_acl> is an installed binary and allows Squid to "
+"connect to a LDAP directory to authorize users via LDAP groups. Options are "
+"specified as parameters on the command line, while the username (e.g. user, "
+"user@REALM, NDOMAIN\\euser) to be checked against the LDAP directory are "
+"specified on subsequent lines of input to the helper, one username per line."
 
 #. type: Plain text
 #: helpers/external_acl/kerberos_ldap_group/ext_kerberos_ldap_group_acl.8:28
@@ -2347,7 +2324,6 @@ msgstr ""
 
 #. type: Plain text
 #: helpers/external_acl/kerberos_ldap_group/ext_kerberos_ldap_group_acl.8:47
-#, fuzzy
 #| msgid ""
 #| "As expected by the B<external_acl_type> construct of Squid, after "
 #| "specifying a username and group followed by a new line, this helper will "
@@ -2360,26 +2336,25 @@ msgid ""
 "helper will produce either B<OK> or B<ERR> on the following line to show if "
 "the user is a member of the specified group."
 msgstr ""
-"As expected by the B<external_acl_type> construct of Squid, after specifying "
-"a username and group followed by a new line, this helper will produce either "
-"B<OK> or B<ERR> on the following line to show if the user is a member of the "
-"specified group."
+"Different group names can be specified for different domains using a "
+"group@domain syntax.  As expected by the B<external_acl_type> construct of "
+"Squid, after specifying a username and group followed by a new line, this "
+"helper will produce either B<OK> or B<ERR> on the following line to show if "
+"the user is a member of the specified group."
 
 #. type: Plain text
 #: helpers/external_acl/kerberos_ldap_group/ext_kerberos_ldap_group_acl.8:55
 #: helpers/negotiate_auth/kerberos/negotiate_kerberos_auth.8:26
-#, fuzzy
 #| msgid "Write debugging to stderr also."
 msgid "Write debug messages to stderr."
-msgstr "Write debugging to stderr also."
+msgstr "Write debug messages to stderr."
 
 #. type: Plain text
 #: helpers/external_acl/kerberos_ldap_group/ext_kerberos_ldap_group_acl.8:58
 #: helpers/negotiate_auth/kerberos/negotiate_kerberos_auth.8:29
-#, fuzzy
 #| msgid "Verbose. Print outgoing message to stderr."
 msgid "Write informational messages to stderr."
-msgstr "Verbose. Print outgoing message to stderr."
+msgstr "Write informational messages to stderr."
 
 #. type: Plain text
 #: helpers/external_acl/kerberos_ldap_group/ext_kerberos_ldap_group_acl.8:61
@@ -2437,7 +2412,6 @@ msgstr ""
 
 #. type: Plain text
 #: helpers/external_acl/kerberos_ldap_group/ext_kerberos_ldap_group_acl.8:91
-#, fuzzy
 #| msgid ""
 #| "As the password needs to be printed in plain text in your Squid "
 #| "configuration and will be sent on the command line to the helper it is "
@@ -2453,18 +2427,16 @@ msgid ""
 "used from a process listing."
 msgstr ""
 "As the password needs to be printed in plain text in your Squid "
-"configuration and will be sent on the command line to the helper it is "
-"strongly recommended to use a account with minimal associated privileges.  "
-"This to limit the damage in case someone could get hold of a copy of your "
-"Squid configuration file or extracts the password used from a process "
-"listing."
+"configuration it is strongly recommended to use a account with minimal "
+"associated privileges.  This to limit the damage in case someone could get "
+"hold of a copy of your Squid configuration file or extracts the password "
+"used from a process listing."
 
 #. type: Plain text
 #: helpers/external_acl/kerberos_ldap_group/ext_kerberos_ldap_group_acl.8:95
-#, fuzzy
 #| msgid "LDAP server name"
 msgid "LDAP server bind path."
-msgstr "LDAP server name"
+msgstr "LDAP server bind path."
 
 #. type: Plain text
 #: helpers/external_acl/kerberos_ldap_group/ext_kerberos_ldap_group_acl.8:98
@@ -2664,7 +2636,6 @@ msgstr "Version 2.17"
 
 #. type: Plain text
 #: helpers/external_acl/LDAP_group/ext_ldap_group_acl.8:33
-#, fuzzy
 #| msgid ""
 #| "B<squid_ldap_group> allows Squid to connect to a LDAP directory to "
 #| "authorize users via LDAP groups.  LDAP options are specified as "
@@ -2679,11 +2650,11 @@ msgid ""
 "against the LDAP directory are specified on subsequent lines of input to the "
 "helper, one username/group pair per line separated by a space."
 msgstr ""
-"B<squid_ldap_group> allows Squid to connect to a LDAP directory to authorize "
-"users via LDAP groups.  LDAP options are specified as parameters on the "
-"command line, while the username(s) and group(s) to be checked against the "
-"LDAP directory are specified on subsequent lines of input to the helper, one "
-"username/group pair per line separated by a space."
+"B<ext_ldap_group_acl> allows Squid to connect to a LDAP directory to "
+"authorize users via LDAP groups.  LDAP options are specified as parameters "
+"on the command line, while the username(s) and group(s) to be checked "
+"against the LDAP directory are specified on subsequent lines of input to the "
+"helper, one username/group pair per line separated by a space."
 
 #. type: Plain text
 #: helpers/external_acl/LDAP_group/ext_ldap_group_acl.8:44
@@ -2744,7 +2715,6 @@ msgstr ""
 
 #. type: Plain text
 #: helpers/external_acl/LDAP_group/ext_ldap_group_acl.8:82
-#, fuzzy
 #| msgid ""
 #| "Debug mode where each step taken will get reported in detail.  Useful for "
 #| "understanding what goes wrong if the results is not what is expected."
@@ -2753,11 +2723,10 @@ msgid ""
 "understanding what goes wrong if the result is not what was expected."
 msgstr ""
 "Debug mode where each step taken will get reported in detail.  Useful for "
-"understanding what goes wrong if the results is not what is expected."
+"understanding what goes wrong if the result is not what was expected."
 
 #. type: Plain text
 #: helpers/external_acl/LDAP_group/ext_ldap_group_acl.8:87
-#, fuzzy
 #| msgid ""
 #| "The DN and password to bind as while performing searches. Required if the "
 #| "directory does not allow anonymous searches."
@@ -2766,7 +2735,7 @@ msgid ""
 "LDAP directory does not allow anonymous searches."
 msgstr ""
 "The DN and password to bind as while performing searches. Required if the "
-"directory does not allow anonymous searches."
+"LDAP directory does not allow anonymous searches."
 
 #. type: Plain text
 #: helpers/external_acl/LDAP_group/ext_ldap_group_acl.8:93
@@ -2841,15 +2810,14 @@ msgstr "Strip Kerberos Realm component from user names (@ separated)"
 
 #. type: Plain text
 #: helpers/external_acl/LDAP_group/ext_ldap_group_acl.8:158
-#, fuzzy
 #| msgid ""
 #| "Specify an alternate TCP port where the ldap server is listening if other "
 #| "than the default LDAP port 389."
 msgid ""
 "Specify an alternate TCP port where the LDAP server is listening if other "
 "than the default LDAP port 389."
 msgstr ""
-"Specify an alternate TCP port where the ldap server is listening if other "
+"Specify an alternate TCP port where the LDAP server is listening if other "
 "than the default LDAP port 389."
 
 #. type: Plain text
@@ -2886,7 +2854,6 @@ msgstr ""
 
 #. type: Plain text
 #: helpers/external_acl/LDAP_group/ext_ldap_group_acl.8:216
-#, fuzzy
 #| msgid ""
 #| "This helper is intended to be used as an B<external_acl_type> helper in "
 #| "B<squid.conf.>"
@@ -2895,11 +2862,10 @@ msgid ""
 "B<squid.conf .>"
 msgstr ""
 "This helper is intended to be used as an B<external_acl_type> helper in "
-"B<squid.conf.>"
+"B<squid.conf .>"
 
 #. type: Plain text
 #: helpers/external_acl/LDAP_group/ext_ldap_group_acl.8:231
-#, fuzzy
 #| msgid ""
 #| "B<NOTE:> When constructing search filters it is recommended to first test "
 #| "the filter using B<ldapsearch> to verify that the filter matches what you "
@@ -2911,7 +2877,7 @@ msgid ""
 msgstr ""
 "B<NOTE:> When constructing search filters it is recommended to first test "
 "the filter using B<ldapsearch> to verify that the filter matches what you "
-"expect before you attempt to use B<squid_ldap_group>"
+"expect before you attempt to use B<ext_ldap_group_acl>"
 
 #. type: Plain text
 #: helpers/external_acl/LDAP_group/ext_ldap_group_acl.8:240
@@ -2935,10 +2901,9 @@ msgstr "Your favorite LDAP documentation"
 #. type: Plain text
 #: helpers/external_acl/LM_group/ext_lm_group_acl.8:9
 #: helpers/ntlm_auth/SSPI/ntlm_sspi_auth.8:10
-#, fuzzy
 #| msgid "Version 1.0"
 msgid "Version 1.22"
-msgstr "Version 1.0"
+msgstr "Version 1.22"
 
 #. type: Plain text
 #: helpers/external_acl/LM_group/ext_lm_group_acl.8:19
@@ -3034,24 +2999,21 @@ msgstr ""
 
 #. type: Plain text
 #: helpers/external_acl/LM_group/ext_lm_group_acl.8:161
-#, fuzzy
 #| msgid "With contributions from many others."
 msgid "with contributions by"
-msgstr "With contributions from many others."
+msgstr "with contributions by"
 
 #. type: Plain text
 #: helpers/external_acl/LM_group/ext_lm_group_acl.8:166
-#, fuzzy
 #| msgid "Based on prior work in B<squid_ldap_auth> by"
 msgid "Based in part on prior work in B<check_group> by"
-msgstr "Based on prior work in B<squid_ldap_auth> by"
+msgstr "Based in part on prior work in B<check_group> by"
 
 #. type: Plain text
 #: helpers/external_acl/session/ext_session_acl.8:7
-#, fuzzy
 #| msgid "Squid session tracking external acl group helper."
 msgid "Squid session tracking external acl helper."
-msgstr "Squid session tracking external acl group helper."
+msgstr "Squid session tracking external acl helper."
 
 #. type: Plain text
 #: helpers/external_acl/session/ext_session_acl.8:16
@@ -3060,7 +3022,6 @@ msgstr "database"
 
 #. type: Plain text
 #: helpers/external_acl/session/ext_session_acl.8:23
-#, fuzzy
 #| msgid ""
 #| "B<squid_session> maintains a concept of sessions by monitoring requests "
 #| "and timing out sessions if no requests have been seen for the idle "
@@ -3070,8 +3031,9 @@ msgid ""
 "and timing out sessions if no requests have been seen for the idle timeout "
 "timer."
 msgstr ""
-"B<squid_session> maintains a concept of sessions by monitoring requests and "
-"timing out sessions if no requests have been seen for the idle timeout timer."
+"B<ext_session_acl> maintains a concept of sessions by monitoring requests "
+"and timing out sessions if no requests have been seen for the idle timeout "
+"timer."
 
 #. type: Plain text
 #: helpers/external_acl/session/ext_session_acl.8:25
@@ -3121,7 +3083,6 @@ msgstr "Configuration example using the default automatic mode"
 
 #. type: Plain text
 #: helpers/external_acl/session/ext_session_acl.8:66
-#, fuzzy
 #| msgid ""
 #| "Then set up http://your.server.example.com/bannerpage to display a "
 #| "session startup page and then redirect the user back to the requested URL "
@@ -3131,16 +3092,15 @@ msgid ""
 "session startup page and then redirect the user back to the requested URL "
 "given in the url query parameter."
 msgstr ""
-"Then set up http://your.server.example.com/bannerpage to display a session "
-"startup page and then redirect the user back to the requested URL given in "
-"the url query parameter."
+"Then set up B<http://your.server.example.com/bannerpage> to display a "
+"session startup page and then redirect the user back to the requested URL "
+"given in the url query parameter."
 
 #. type: Plain text
 #: helpers/external_acl/unix_group/ext_unix_group_acl.8:7
-#, fuzzy
 #| msgid "Squid UNIX Group helper"
 msgid "Squid UNIX Group ACL helper"
-msgstr "Squid UNIX Group helper"
+msgstr "Squid UNIX Group ACL helper"
 
 #. type: Plain text
 #: helpers/external_acl/unix_group/ext_unix_group_acl.8:11
@@ -3150,15 +3110,14 @@ msgstr "group"
 
 #. type: Plain text
 #: helpers/external_acl/unix_group/ext_unix_group_acl.8:18
-#, fuzzy
 #| msgid ""
 #| "B<squid_unix_group> allows Squid to base access controls on users "
 #| "memberships in UNIX groups."
 msgid ""
 "B<ext_unix_group_acl> allows Squid to base access controls on users "
 "memberships in UNIX groups."
 msgstr ""
-"B<squid_unix_group> allows Squid to base access controls on users "
+"B<ext_unix_group_acl> allows Squid to base access controls on users "
 "memberships in UNIX groups."
 
 #. type: Plain text
@@ -3209,17 +3168,15 @@ msgstr "Additionally bugs or bug-fixes can be reported to"
 
 #. type: Plain text
 #: helpers/negotiate_auth/kerberos/negotiate_kerberos_auth.8:7
-#, fuzzy
 #| msgid "Squid PAM Basic authentication helper"
 msgid "Squid kerberos based authentication helper"
-msgstr "Squid PAM Basic authentication helper"
+msgstr "Squid kerberos based authentication helper"
 
 #. type: Plain text
 #: helpers/negotiate_auth/kerberos/negotiate_kerberos_auth.8:9
-#, fuzzy
 #| msgid "Version 1.0"
 msgid "Version 3.0.4sq"
-msgstr "Version 1.0"
+msgstr "Version 3.0.4sq"
 
 #. type: Plain text
 #: helpers/negotiate_auth/kerberos/negotiate_kerberos_auth.8:18
@@ -3240,15 +3197,14 @@ msgstr ""
 
 #. type: Plain text
 #: helpers/negotiate_auth/kerberos/negotiate_kerberos_auth.8:42
-#, fuzzy
 #| msgid ""
 #| "This helper is intended to be used as an B<external_acl_type> helper in "
 #| "B<squid.conf.>"
 msgid ""
 "This helper is intended to be used as an B<authentication> helper in B<squid."
 "conf.>"
 msgstr ""
-"This helper is intended to be used as an B<external_acl_type> helper in "
+"This helper is intended to be used as an B<authentication> helper in "
 "B<squid.conf.>"
 
 #. type: Plain text
@@ -3327,10 +3283,9 @@ msgstr ""
 
 #. type: Plain text
 #: helpers/ntlm_auth/SSPI/ntlm_sspi_auth.8:29
-#, fuzzy
 #| msgid "Specifies a group name to match."
 msgid "Specify a Windows Local Group name allowed to authenticate."
-msgstr "Specifies a group name to match."
+msgstr "Specify a Windows Local Group name allowed to authenticate."
 
 #. type: Plain text
 #: helpers/ntlm_auth/SSPI/ntlm_sspi_auth.8:37
@@ -3397,10 +3352,9 @@ msgstr ""
 
 #. type: Plain text
 #: helpers/ntlm_auth/SSPI/ntlm_sspi_auth.8:98
-#, fuzzy
 #| msgid "Based on original code by"
 msgid "Based on prior work in by"
-msgstr "Based on original code by"
+msgstr "Based on prior work in by"
 
 #. type: Plain text
 #: src/squid.8.in:7
@@ -3409,15 +3363,13 @@ msgstr ""
 
 #. type: Plain text
 #: src/squid.8.in:13
-#, fuzzy
 msgid "facility"
-msgstr "I<facility>"
+msgstr "facility"
 
 #. type: Plain text
 #: src/squid.8.in:15
-#, fuzzy
 msgid "config-file"
-msgstr "config file"
+msgstr "config-file"
 
 #. type: Plain text
 #: src/squid.8.in:19
@@ -3426,18 +3378,16 @@ msgstr ""
 
 #. type: Plain text
 #: src/squid.8.in:21
-#, fuzzy
 msgid "service-name"
-msgstr "service name"
+msgstr "service-name"
 
 #. type: Plain text
 #: src/squid.8.in:23
 msgid "command-line"
-msgstr ""
+msgstr "command-line"
 
 #. type: Plain text
 #: src/squid.8.in:32
-#, fuzzy
 msgid ""
 "B<squid> is a high-performance proxy caching server for web clients, "
 "supporting FTP, gopher, ICAP, ICP, HTCP and HTTP data objects.  Unlike "
@@ -3446,81 +3396,74 @@ msgid ""
 msgstr ""
 "B<squid> is a high-performance proxy caching server for web clients, "
 "supporting FTP, gopher, ICAP, ICP, HTCP and HTTP data objects.  Unlike "
-"traditional caching software, B<squid> handles all requests in a single, non-"
+"traditional caching software, Squid handles all requests in a single, non-"
 "blocking process."
 
 #. type: Plain text
 #: src/squid.8.in:36
-#, fuzzy
 msgid ""
 "Squid keeps meta data and especially hot objects cached in RAM, caches DNS "
 "lookups, supports non-blocking DNS lookups, and implements negative caching "
 "of failed requests."
 msgstr ""
-"B<squid> keeps meta data and especially hot objects cached in RAM, caches "
-"DNS lookups, supports non-blocking DNS lookups, and implements negative "
-"caching of failed requests."
+"Squid keeps meta data and especially hot objects cached in RAM, caches DNS "
+"lookups, supports non-blocking DNS lookups, and implements negative caching "
+"of failed requests."
 
 #. type: Plain text
 #: src/squid.8.in:41
-#, fuzzy
 msgid ""
 "Squid supports SSL, extensive access controls, and full request logging.  By "
 "using the lightweight Internet Cache Protocols ICP, HTCP or CARP, Squid "
 "caches can be arranged in a hierarchy or mesh for additional bandwidth "
 "savings."
 msgstr ""
-"B<squid> supports SSL, extensive access controls, and full request logging.  "
-"By using the lightweight Internet Cache Protocols ICP, HTCP or CARP, "
-"B<squid> caches can be arranged in a hierarchy or mesh for additional "
-"bandwidth savings."
+"Squid supports SSL, extensive access controls, and full request logging.  By "
+"using the lightweight Internet Cache Protocols ICP, HTCP or CARP, Squid "
+"caches can be arranged in a hierarchy or mesh for additional bandwidth "
+"savings."
 
 #. type: Plain text
 #: src/squid.8.in:49
-#, fuzzy
 msgid ""
 "Squid consists of a main server program B<squid> , some optional programs "
 "for custom processing and authentication, and some management and client "
 "tools.  When squid starts up, it spawns a configurable number of helper "
 "processes, each of which can perform parallel lookups.  This reduces the "
 "amount of time the cache waits for results."
 msgstr ""
-"B<squid> consists of a main server program squid, some optional programs for "
-"custom processing and authentication, and some management and client tools.  "
-"When squid starts up, it spawns a configurable number of helper processes, "
-"each of which can perform parallel lookups.  This reduces the amount of time "
-"the cache waits for results."
+"Squid consists of a main server program B<squid> , some optional programs "
+"for custom processing and authentication, and some management and client "
+"tools.  When squid starts up, it spawns a configurable number of helper "
+"processes, each of which can perform parallel lookups.  This reduces the "
+"amount of time the cache waits for results."
 
 #. type: Plain text
 #: src/squid.8.in:51
-#, fuzzy
 msgid "Squid is derived from the ARPA-funded Harvest Project."
-msgstr "B<squid> is derived from the ARPA-funded Harvest Project"
+msgstr "Squid is derived from the ARPA-funded Harvest Project."
 
 #. type: Plain text
 #: src/squid.8.in:57
-#, fuzzy
 msgid ""
 "This manual page only lists the command line arguments.  For details on how "
 "to configure Squid see the file B<@SYSCONFDIR@/squid.conf.documented,> the "
 "Squid wiki FAQ and examples at http://wiki.squid-cache.org/ , or the "
 "configuration manual on the Squid home page"
 msgstr ""
 "This manual page only lists the command line arguments.  For details on how "
-"to configure B<squid> see the file B<@SYSCONFDIR@/squid.conf.documented,> "
-"the Squid wiki FAQ and examples at http://wiki.squid-cache.org/ , or the "
-"configuration manual on the B<squid> home page http://www.squid-cache.org/"
-"Doc/config/"
+"to configure Squid see the file B<@SYSCONFDIR@/squid.conf.documented,> the "
+"Squid wiki FAQ and examples at http://wiki.squid-cache.org/ , or the "
+"configuration manual on the Squid home page"
 
 #. type: Plain text
 #: src/squid.8.in:66
-#, fuzzy
 msgid ""
 "Specify HTTP port number where Squid should listen for requests, in addition "
 "to any B<http_port> specifications in B<squid.conf>"
 msgstr ""
 "Specify HTTP port number where Squid should listen for requests, in addition "
-"to any http_port specifications in squid.conf."
+"to any B<http_port> specifications in B<squid.conf>"
 
 #. type: Plain text
 #: src/squid.8.in:70
@@ -3534,19 +3477,18 @@ msgstr "Write debugging to stderr also."
 
 #. type: Plain text
 #: src/squid.8.in:86
-#, fuzzy
 msgid ""
 "Use the given config-file instead of B<@SYSCONFDIR@/squid.conf .> If the "
 "file name starts with a B<!> or B<|> then it is assumed to be an external "
 "command or command line.  Can for example be used to pre-process the "
 "configuration before it is being read by Squid.  To facilitate this Squid "
 "also understands the common #line notion to indicate the real source file."
 msgstr ""
-"Use the given config-file instead of I<@SYSCONFDIR@/squid.conf>.  If the "
-"file name starts with a ! or | then it is assumed to be an external command "
-"or command line. Can for example be used to pre-process the configuration "
-"before it is being read by Squid. To facilitate this Squid also understands "
-"the common #line notion to indicate the real source file."
+"Use the given config-file instead of B<@SYSCONFDIR@/squid.conf .> If the "
+"file name starts with a B<!> or B<|> then it is assumed to be an external "
+"command or command line.  Can for example be used to pre-process the "
+"configuration before it is being read by Squid.  To facilitate this Squid "
+"also understands the common #line notion to indicate the real source file."
 
 #. type: Plain text
 #: src/squid.8.in:90
@@ -3560,9 +3502,8 @@ msgstr "Print help message."
 
 #. type: Plain text
 #: src/squid.8.in:100
-#, fuzzy
 msgid "Install as a Windows Service (see B<-n> option)."
-msgstr "Install as a Windows Service (see -n option)."
+msgstr "Install as a Windows Service (see B<-n> option)."
 
 #. type: Plain text
 #: src/squid.8.in:107
@@ -3573,9 +3514,8 @@ msgstr ""
 
 #. type: Plain text
 #: src/squid.8.in:112
-#, fuzzy
 msgid "Use specified syslog facility. Implies B<-s>"
-msgstr "Use specified syslog facility. implies -s"
+msgstr "Use specified syslog facility. Implies B<-s>"
 
 #. type: Plain text
 #: src/squid.8.in:117
@@ -3598,9 +3538,8 @@ msgstr "Set Windows Service Command line options in Registry."
 
 #. type: Plain text
 #: src/squid.8.in:131
-#, fuzzy
 msgid "Remove a Windows Service (see B<-n> option)."
-msgstr "Install as a Windows Service (see -n option)."
+msgstr "Remove a Windows Service (see B<-n> option)."
 
 #. type: Plain text
 #: src/squid.8.in:137
@@ -3657,16 +3596,16 @@ msgstr ""
 
 #. type: Plain text
 #: src/squid.8.in:179
-#, fuzzy
 msgid ""
 "The main configuration file. You must initially make changes to this file "
 "for B<squid> to work. For example, the default configuration only allows "
 "access from RFC private LAN networks.  Some packaging distributions block "
 "even that."
 msgstr ""
-"The main configuration file.  You must initially make changes to this file "
-"for B<squid> to work.  For example, the default configuration does not allow "
-"access from any browser."
+"The main configuration file. You must initially make changes to this file "
+"for B<squid> to work. For example, the default configuration only allows "
+"access from RFC private LAN networks.  Some packaging distributions block "
+"even that."
 
 #. type: Plain text
 #: src/squid.8.in:183 src/squid.8.in:189
@@ -3692,9 +3631,8 @@ msgstr ""
 
 #. type: Plain text
 #: src/squid.8.in:199
-#, fuzzy
 msgid "The main configuration file for the web B<cachemgr.cgi> tools."
-msgstr "The main configuration file for the Sample MSNT authenticator."
+msgstr "The main configuration file for the web B<cachemgr.cgi> tools."
 
 #. type: Plain text
 #: src/squid.8.in:202
@@ -3703,14 +3641,13 @@ msgstr "The main configuration file for the Sample MSNT authenticator."
 
 #. type: Plain text
 #: src/squid.8.in:207
-#, fuzzy
 msgid ""
 "CSS Stylesheet to control the display of generated error pages.  Use this to "
 "set any company branding you need, it will apply to every language Squid "
 "provides error pages for."
 msgstr ""
 "CSS Stylesheet to control the display of generated error pages.  Use this to "
-"set any company branding you need, it will apply to every Language Squid "
+"set any company branding you need, it will apply to every language Squid "
 "provides error pages for."
 
 #. type: Plain text
@@ -3725,9 +3662,8 @@ msgstr "MIME type mappings for FTP gatewaying"
 
 #. type: Plain text
 #: src/squid.8.in:216
-#, fuzzy
 msgid "Location of Squid error pages and templates."
-msgstr "Location of B<squid> error pages and templates."
+msgstr "Location of Squid error pages and templates."
 
 #. type: Plain text
 #: src/squid.8.in:219
@@ -3755,7 +3691,6 @@ msgstr ""
 
 #. type: Plain text
 #: src/squid.8.in:241
-#, fuzzy
 msgid ""
 "This program is free software; you can redistribute it and/or modify it "
 "under the terms of the GNU General Public License (version 2) as published "
@@ -3764,10 +3699,12 @@ msgid ""
 "MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General "
 "Public License for more details."
 msgstr ""
-"This file is distributed in the hope that it will be useful, but WITHOUT ANY "
-"WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS "
-"FOR A PARTICULAR PURPOSE. See the GNU General Public License for more "
-"details."
+"This program is free software; you can redistribute it and/or modify it "
+"under the terms of the GNU General Public License (version 2) as published "
+"by the Free Software Foundation.  It is distributed in the hope that it will "
+"be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of "
+"MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General "
+"Public License for more details."
 
 #. type: Plain text
 #: src/squid.8.in:243
@@ -231,7 +231,7 @@ Updates can be downloaded from <url url="http://www.squid-cache.org/Versions/lan
 
 <sect1>Connection Pinning (for NTLM Auth Passthrough)
 
-<p>Details in <url url="http://wiki.squid-cache.org/Features/ConnPinn" name="The Squid wiki">
+<p>Details in <url url="http://wiki.squid-cache.org/Features/ConnPin" name="The Squid wiki">
 
 <p>Squid 3.1 includes the much asked for Connection Pinning feature from Squid 2.6.
 
@@ -1227,9 +1227,11 @@ NOCOMMENT_START
 
 	<tag>logformat</tag>
 	<p>New log format tag sets %icap::* %adapt::* for adaptation information.
-	   %Hs tag deprecated and replaced by request/reply specific &gt;Hs and &lt;Hs
-	   new %&gt;ha option to log HTTP request headers after adaptation and redirection.
-	   HTTP request/reply format tags may now be optionally prefixed with http::.
+	<p>%Hs tag deprecated and replaced by request/reply specific &gt;Hs and &lt;Hs
+	<p>New <em>%&lt;la</em> Local IP address of the last server or peer connection. Ported from 2.7 where it is called <em>%oa</em>.
+	<p>New <em>%&lt;lp</em> Local port number of the last server or peer connection.
+	<p>New <em>%&gt;ha,/em> to log HTTP request headers after adaptation and redirection.
+	<p>HTTP request/reply format tags may now be optionally prefixed with http::.
 	   Old forms will be deprecated in some as yet undecided future release.
 	<verb>
 		dt		Total time spent making DNS lookups (milliseconds)
@@ -1544,6 +1546,9 @@ This section gives an account of those changes in three categories:
 	<tag>incoming_rate</tag>
 	<p>Obsolete.
 
+	<tag>logformat</tag>
+	<p><em>%oa</em> tag replaced by <em>%&lt;la</em>
+
 	<tag>redirector_bypass</tag>
 	<p>Replaced by <em>url_rewrite_bypass</em>
 
@@ -1712,7 +1717,6 @@ This section gives an account of those changes in three categories:
 	<p>Not yet ported from 2.7.
 
 	<tag>logformat</tag>
-	<p><em>%oa</em> tag not yet ported from 2.7
 	<p><em>%sn</em> tag not yet ported from 2.7
 
 	<tag>max_stale</tag>
@@ -502,8 +502,6 @@ This section gives a thorough account of those changes in three categories:
 	<tag>logformat</tag>
         <p><em>%&gt;bs</em> Number of HTTP-equivalent message body bytes received from the next hop.
         <p><em>icap::%&gt;bs</em> Number of message body bytes received from the ICAP server.
-	<p><em>%&lt;la</em> Local IP address of the last server or peer connection. Ported from 2.7 where it is called <em>%oa</em>.
-	<p><em>%&lt;lp</em> Local port number of the last server or peer connection.
 	<p><em>%sn</em> Unique sequence number per log line. Ported from 2.7
 	<p><em>%&gt;eui</em> EUI logging (EUI-48 / MAC address for IPv4, EUI-64 for IPv6)
 	   Both EUI forms are logged in the same field. Type can be identified by length or byte delimiter.
@@ -3,52 +3,52 @@ msgstr ""
 "Project-Id-Version: Squid-3\n"
 "Report-Msgid-Bugs-To: \n"
 "POT-Creation-Date: 2011-05-04 13:57+1300\n"
-"PO-Revision-Date: 2011-05-04 04:20+0200\n"
+"PO-Revision-Date: 2011-06-16 14:55+0200\n"
 "Last-Translator: Amos <squid3@treenet.co.nz>\n"
 "Language-Team: Squid Developers <squid-dev@squid-cache.org>\n"
 "Language: en\n"
 "MIME-Version: 1.0\n"
 "Content-Type: text/plain; charset=UTF-8\n"
 "Content-Transfer-Encoding: 8bit\n"
 "Plural-Forms: nplurals=2; plural=(n != 1);\n"
-"X-Generator: Pootle 2.0.5\n"
+"X-Generator: Pootle 2.0.6\n"
 
 #: templates/ERR_FTP_FAILURE+html.body.div.blockquote.pre:29
 #: templates/ERR_FTP_FORBIDDEN+html.body.div.blockquote.pre:29
 #: templates/ERR_FTP_NOT_FOUND+html.body.div.blockquote.pre:29
 #: templates/ERR_FTP_PUT_ERROR+html.body.div.blockquote.pre:29
 #: templates/ERR_FTP_UNAVAILABLE+html.body.div.blockquote.pre:30
 msgid "%F"
-msgstr ""
+msgstr "%F"
 
 #: templates/ERR_INVALID_REQ+html.body.div.blockquote.pre:23
 #: templates/ERR_INVALID_RESP+html.body.div.blockquote.pre:23
 msgid "%R"
-msgstr ""
+msgstr "%R"
 
 #: templates/ERR_ESI+html.body.div.blockquote.pre:28
 msgid "%Z"
-msgstr ""
+msgstr "%Z"
 
 #: templates/ERR_FTP_FAILURE+html.body.div.blockquote.pre:24
 #: templates/ERR_FTP_FORBIDDEN+html.body.div.blockquote.pre:24
 #: templates/ERR_FTP_NOT_FOUND+html.body.div.blockquote.pre:24
 #: templates/ERR_FTP_PUT_ERROR+html.body.div.blockquote.pre:24
 #: templates/ERR_FTP_UNAVAILABLE+html.body.div.blockquote.pre:25
 msgid "%f"
-msgstr ""
+msgstr "%f"
 
 #: templates/ERR_FTP_FAILURE+html.body.div.blockquote.pre:30
 #: templates/ERR_FTP_FORBIDDEN+html.body.div.blockquote.pre:30
 #: templates/ERR_FTP_NOT_FOUND+html.body.div.blockquote.pre:30
 #: templates/ERR_FTP_UNAVAILABLE+html.body.div.blockquote.pre:31
 msgid "%g"
-msgstr ""
+msgstr "%g"
 
 #: templates/ERR_DIR_LISTING+html.body.div.blockquote.pre:22
 #: templates/ERR_DNS_FAIL+html.body.div.blockquote.pre:28
 msgid "%z"
-msgstr ""
+msgstr "%z"
 
 #: templates/ERR_DIR_LISTING+html.body.div.table.tr.th:28
 msgid "<a href=\"../\">Parent Directory</a> (<a href=\"/\">Root Directory</a>)"
@@ -3,52 +3,52 @@ msgstr ""
 "Project-Id-Version: Squid-3\n"
 "Report-Msgid-Bugs-To: \n"
 "POT-Creation-Date: 2011-05-04 13:57+1300\n"
-"PO-Revision-Date: 2011-03-16 11:24+0200\n"
+"PO-Revision-Date: 2011-06-12 09:24+0200\n"
 "Last-Translator: Arthur <arthurtumanyan@yahoo.com>\n"
 "Language-Team: Squid Developers <squid-dev@squid-cache.org>\n"
 "Language: hy\n"
 "MIME-Version: 1.0\n"
 "Content-Type: text/plain; charset=UTF-8\n"
 "Content-Transfer-Encoding: 8bit\n"
 "Plural-Forms: nplurals=1; plural=0;\n"
-"X-Generator: Pootle 2.0.5\n"
+"X-Generator: Pootle 2.0.6\n"
 
 #: templates/ERR_FTP_FAILURE+html.body.div.blockquote.pre:29
 #: templates/ERR_FTP_FORBIDDEN+html.body.div.blockquote.pre:29
 #: templates/ERR_FTP_NOT_FOUND+html.body.div.blockquote.pre:29
 #: templates/ERR_FTP_PUT_ERROR+html.body.div.blockquote.pre:29
 #: templates/ERR_FTP_UNAVAILABLE+html.body.div.blockquote.pre:30
 msgid "%F"
-msgstr ""
+msgstr "%F"
 
 #: templates/ERR_INVALID_REQ+html.body.div.blockquote.pre:23
 #: templates/ERR_INVALID_RESP+html.body.div.blockquote.pre:23
 msgid "%R"
-msgstr ""
+msgstr "%R"
 
 #: templates/ERR_ESI+html.body.div.blockquote.pre:28
 msgid "%Z"
-msgstr ""
+msgstr "%Z"
 
 #: templates/ERR_FTP_FAILURE+html.body.div.blockquote.pre:24
 #: templates/ERR_FTP_FORBIDDEN+html.body.div.blockquote.pre:24
 #: templates/ERR_FTP_NOT_FOUND+html.body.div.blockquote.pre:24
 #: templates/ERR_FTP_PUT_ERROR+html.body.div.blockquote.pre:24
 #: templates/ERR_FTP_UNAVAILABLE+html.body.div.blockquote.pre:25
 msgid "%f"
-msgstr ""
+msgstr "%f"
 
 #: templates/ERR_FTP_FAILURE+html.body.div.blockquote.pre:30
 #: templates/ERR_FTP_FORBIDDEN+html.body.div.blockquote.pre:30
 #: templates/ERR_FTP_NOT_FOUND+html.body.div.blockquote.pre:30
 #: templates/ERR_FTP_UNAVAILABLE+html.body.div.blockquote.pre:31
 msgid "%g"
-msgstr ""
+msgstr "%g"
 
 #: templates/ERR_DIR_LISTING+html.body.div.blockquote.pre:22
 #: templates/ERR_DNS_FAIL+html.body.div.blockquote.pre:28
 msgid "%z"
-msgstr ""
+msgstr "%z"
 
 #: templates/ERR_DIR_LISTING+html.body.div.table.tr.th:28
 msgid "<a href=\"../\">Parent Directory</a> (<a href=\"/\">Root Directory</a>)"
@@ -414,7 +414,6 @@ msgstr "Անթույլատրելի կրկնակի կառավարող նիշ URL-
 #: templates/ERR_AGENT_CONFIGURE+html.body.div.div.ul.li:30
 #: templates/ERR_AGENT_CONFIGURE+html.body.div.div.ul.li:38
 #: templates/ERR_AGENT_CONFIGURE+html.body.div.div.ul.li:46
-#, fuzzy
 msgid "In the HTTP proxy box type the proxy name %h and port %b."
 msgstr "HTTP proxy դաշտում նշիր proxy name %h և port 3128."
 
@@ -491,7 +490,6 @@ msgid "Request is too large."
 msgstr "Հարցման ծավալը շատ մեծ է"
 
 #: templates/ERR_AGENT_WPAD+html.body.div.div.ul.li:30
-#, fuzzy
 msgid "Select Auto-detect proxy settings for this network"
 msgstr "Ընտրեք Automatically detect settings"
 
@@ -251,6 +251,7 @@ rad_auth_config(const char *cfname)
         if (!memcmp(line, "port", 4))
             sscanf(line, "port %s", svc_name);
     }
+    fclose(cf);
     if (srv && crt)
         return 0;
     return -1;
@@ -678,8 +678,17 @@ ServerStateData::noteAdaptationAnswer(const Adaptation::Answer &answer)
 void
 ServerStateData::handleAdaptedHeader(HttpMsg *msg)
 {
-    if (abortOnBadEntry("entry went bad while waiting for adapted headers"))
+    if (abortOnBadEntry("entry went bad while waiting for adapted headers")) {
+        // If the adapted response has a body, the ICAP side needs to know
+        // that nobody will consume that body. We will be destroyed upon
+        // return. Tell the ICAP side that it is on its own.
+        HttpReply *rep = dynamic_cast<HttpReply*>(msg);
+        assert(rep);
+        if (rep->body_pipe != NULL)
+            rep->body_pipe->expectNoConsumption();
+
         return;
+    }
 
     HttpReply *rep = dynamic_cast<HttpReply*>(msg);
     assert(rep);
@@ -37,6 +37,7 @@
 #include "acl/Checklist.h"
 #include "ConfigParser.h"
 #include "dlink.h"
+#include "ProtoPort.h"
 
 const char *AclMatchedName = NULL;
 
@@ -126,6 +127,26 @@ ACL::ParseAclLine(ConfigParser &parser, ACL ** head)
         return;
     }
 
+    // Is this ACL going to work?
+    if (strcmp(theType, "myip") != 0) {
+        http_port_list *p = Config.Sockaddr.http;
+        while (p) {
+            // Bug 3239: not reliable when there is interception traffic coming
+            if (p->intercepted)
+                debugs(28, DBG_CRITICAL, "WARNING: 'myip' ACL is not reliable for interception proxies. Please use 'myportname' instead.");
+            p = p->next;
+        }
+    } else if (strcmp(theType, "myport") != 0) {
+        http_port_list *p = Config.Sockaddr.http;
+        while (p) {
+            // Bug 3239: not reliable when there is interception traffic coming
+            // Bug 3239: myport - not reliable (yet) when there is interception traffic coming
+            if (p->intercepted)
+                debugs(28, DBG_CRITICAL, "WARNING: 'myport' ACL is not reliable for interception proxies. Please use 'myportname' instead.");
+            p = p->next;
+        }
+    }
+
     if ((A = FindByName(aclname)) == NULL) {
         debugs(28, 3, "aclParseAclLine: Creating ACL '" << aclname << "'");
         A = ACL::Factory(theType);
@@ -340,26 +340,20 @@ ACLChecklist::fastCheck()
     PROF_start(aclCheckFast);
     currentAnswer(ACCESS_DENIED);
     debugs(28, 5, "aclCheckFast: list: " << accessList);
-
-    while (accessList) {
-        preCheck();
-        matchAclListFast(accessList->aclList);
-
-        if (finished()) {
+    const acl_access *acl = cbdataReference(accessList);
+    while (acl != NULL && cbdataReferenceValid(acl)) {
+        currentAnswer(acl->allow);
+        if (matchAclListFast(acl->aclList)) {
             PROF_stop(aclCheckFast);
-            cbdataReferenceDone(accessList);
+            cbdataReferenceDone(acl);
             return currentAnswer() == ACCESS_ALLOWED;
         }
 
         /*
          * Reference the next access entry
          */
-        const acl_access *A = accessList;
-
-        assert (A);
-
-        accessList = cbdataReference(A->next);
-
+        const acl_access *A = acl;
+        acl = cbdataReference(acl->next);
         cbdataReferenceDone(A);
     }
 
@@ -102,7 +102,7 @@ class ACLChecklist
      * This means any proxy_auth, external_acl, DNS lookups, Ident lookups etc
      * which have not already been performed and cached will not be checked.
      *
-     * If there is no access list to check the default is to return DENIED.
+     * If there is no access list to check the default is to return ALLOWED.
      * However callers should perform their own check and default based on local
      * knowledge of the ACL usage rather than depend on this default.
      * That will also save on work setting up ACLChecklist fields for a no-op.
@@ -9,6 +9,29 @@
 #include "adaptation/Initiate.h"
 #include "base/AsyncJobCalls.h"
 
+namespace Adaptation
+{
+typedef UnaryMemFunT<Initiator, Answer, const Answer &> AnswerDialer;
+/// Calls expectNoConsumption() if noteAdaptationAnswer async call is
+/// scheduled but never fired (e.g., because the HTTP transaction aborts).
+class AnswerCall: public AsyncCallT<AnswerDialer>
+{
+public:
+    AnswerCall(const char *aName, const AnswerDialer &aDialer) :
+            AsyncCallT<AnswerDialer>(93, 5, aName, aDialer), fired(false) {}
+    virtual void fire() {
+        fired = true;
+        AsyncCallT<AnswerDialer>::fire();
+    }
+    virtual ~AnswerCall() {
+        if (!fired && dialer.arg1.message != NULL && dialer.arg1.message->body_pipe != NULL)
+            dialer.arg1.message->body_pipe->expectNoConsumption();
+    }
+
+private:
+    bool fired; ///< whether we fired the call
+};
+}
 
 Adaptation::Initiate::Initiate(const char *aTypeName): AsyncJob(aTypeName)
 {
@@ -50,9 +73,9 @@ void Adaptation::Initiate::clearInitiator()
 
 void Adaptation::Initiate::sendAnswer(const Answer &answer)
 {
-    typedef UnaryMemFunT<Initiator, Answer, const Answer &> MyDialer;
-    CallJob(93, 5, __FILE__, __LINE__, "Initiator::noteAdaptationAnswer",
-            MyDialer(theInitiator, &Initiator::noteAdaptationAnswer, answer));
+    AsyncCall::Pointer call = new AnswerCall("Initiator::noteAdaptationAnswer",
+            AnswerDialer(theInitiator, &Initiator::noteAdaptationAnswer, answer));
+    ScheduleCallHere(call);
     clearInitiator();
 }
 
@@ -25,7 +25,7 @@ Adaptation::Icap::ServiceRep::ServiceRep(const ServiceConfigPointer &svcCfg):
         theBusyConns(0),
         theAllWaiters(0),
         connOverloadReported(false),
-        theIdleConns("ICAP Service"),
+        theIdleConns("ICAP Service",NULL),
         isSuspended(0), notifying(false),
         updateScheduled(false),
         wasAnnouncedUp(true), // do not announce an "up" service at startup
@@ -85,23 +85,44 @@ void Adaptation::Icap::ServiceRep::noteFailure()
 Comm::ConnectionPointer
 Adaptation::Icap::ServiceRep::getConnection(bool retriableXact, bool &reused)
 {
-    Comm::ConnectionPointer connection = new Comm::Connection;
-
-    /* NP: set these here because it applies whether a pconn or a new conn is used */
-
-    // TODO: Avoid blocking lookup if s.cfg().host is a hostname
-    connection->remote = cfg().host.termedBuf();
-    connection->remote.SetPort(cfg().port);
+    Ip::Address client_addr;
+
+    Comm::ConnectionPointer connection;
+
+    /* 2011-06-17: rousskov:
+     *  There are two things that happen at the same time in pop(). Both are important.
+     *    1) Ensure that we can use a pconn for this transaction.
+     *    2) Ensure that the number of idle pconns does not grow without bounds.
+     *
+     * Both happen in the beginning of the transaction. Both are dictated by real-world problems.
+     * retriable means you can repeat the request if you suspect the first try failed due to a pconn race.
+     * HTTP and ICAP rules prohibit the use of pconns for non-retriable requests.
+     *
+     * If there are zero idle connections, (2) is irrelevant. (2) is only relevant when there are many
+     * idle connections and we should not open more connections without closing some idle ones,
+     * or instead of just opening a new connection and leaving idle connections as is.
+     * In other words, (2) tells us to close one FD for each new one we open due to retriable.
+     */
+    if (retriableXact)
+        connection = theIdleConns.pop();
+    else
+        theIdleConns.closeN(1);
 
-    // TODO: check whether NULL domain is appropriate here
-    theIdleConns.pop(connection, NULL, retriableXact);
-    reused = connection->isOpen(); // reused a persistent connection
+    reused = Comm::IsConnOpen(connection); // reused a persistent connection
 
-    if (reused)
+    if (!reused) { // need a new connection
+        Ip::Address outgoing;  // default: IP6_ANY_ADDR
+        if (!Ip::EnableIpv6)
+            outgoing.SetIPv4();
+        else if (Ip::EnableIpv6&IPV6_SPECIAL_SPLITSTACK &&  !cfg().ipv6) {
+            /* split-stack for now requires default IPv4-only socket */
+            outgoing.SetIPv4();
+        }
+        connection = comm_open(SOCK_STREAM, 0, outgoing, COMM_NONBLOCKING, cfg().uri.termedBuf());
+    } else
         debugs(93,3, HERE << "reused pconn " << connection);
-    // else, return unopened Comm::Connection for caller to open.
 
-    if (connection->isOpen())
+    if (Comm::IsConnOpen(connection))
         ++theBusyConns;
 
     return connection;
@@ -115,7 +136,7 @@ void Adaptation::Icap::ServiceRep::putConnection(const Comm::ConnectionPointer &
     if (isReusable && excessConnections() == 0) {
         debugs(93, 3, HERE << "pushing pconn" << comment);
         commUnsetConnTimeout(conn);
-        theIdleConns.push(conn, NULL);
+        theIdleConns.push(conn);
     } else {
         debugs(93, 3, HERE << "closing pconn" << comment);
         // comm_close will clear timeout
@@ -132,7 +153,7 @@ void Adaptation::Icap::ServiceRep::putConnection(const Comm::ConnectionPointer &
 void Adaptation::Icap::ServiceRep::noteConnectionUse(const Comm::ConnectionPointer &conn)
 {
     Must(Comm::IsConnOpen(conn));
-    fd_table[conn->fd].noteUse(&theIdleConns);
+    fd_table[conn->fd].noteUse(NULL); // pconn re-use but not via PconnPool API
 }
 
 void Adaptation::Icap::ServiceRep::setMaxConnections()
@@ -555,7 +576,7 @@ void Adaptation::Icap::ServiceRep::handleNewOptions(Adaptation::Icap::Options *n
     if (excess && theIdleConns.count() > 0) {
         const int n = min(excess, theIdleConns.count());
         debugs(93,5, HERE << "closing " << n << " pconns to relief debt");
-        theIdleConns.closeN(n, Comm::ConnectionPointer(), cfg().host.termedBuf());
+        theIdleConns.closeN(n);
     }
 
     scheduleNotification();
@@ -160,7 +160,7 @@ class ServiceRep : public RefCountable, public Adaptation::Service,
     int theMaxConnections; ///< the maximum allowed connections to the service
     // TODO: use a better type like the FadingCounter for connOverloadReported
     mutable bool connOverloadReported; ///< whether we reported exceeding theMaxConnections
-    PconnPool theIdleConns; ///< idle persistent connection pool
+    IdleConnList theIdleConns; ///< idle persistent connection pool
 
     FadingCounter theSessionFailures;
     const char *isSuspended; // also stores suspension reason for debugging
@@ -1,11 +1,7 @@
 #include "config.h"
-#include "auth/State.h"
 
-CBDATA_GLOBAL_TYPE(authenticateStateData);
+#if USE_AUTH
+#include "auth/State.h"
 
-void
-authenticateStateFree(authenticateStateData * r)
-{
-    r->auth_user_request = NULL;
-    cbdataFree(r);
-}
+CBDATA_NAMESPACED_CLASS_INIT(Auth, StateData);
+#endif /* USE_AUTH */
@@ -4,19 +4,36 @@
 #if USE_AUTH
 
 #include "auth/UserRequest.h"
+#include "cbdata.h"
+
+namespace Auth
+{
 
 /**
  * CBDATA state for NTLM, Negotiate, and Digest stateful authentication.
  */
-typedef struct {
+class StateData
+{
+public:
+    StateData(const AuthUserRequest::Pointer &r, RH *h, void *d) :
+            data(cbdataReference(d)),
+            auth_user_request(r),
+            handler(h) {}
+
+    ~StateData() {
+        auth_user_request = NULL;
+        cbdataReferenceDone(data);
+    }
+
     void *data;
     AuthUserRequest::Pointer auth_user_request;
     RH *handler;
-} authenticateStateData;
 
-extern CBDATA_GLOBAL_TYPE(authenticateStateData);
+private:
+    CBDATA_CLASS2(StateData);
+};
 
-extern void authenticateStateFree(authenticateStateData * r);
+} // namespace Auth
 
 #endif /* USE_AUTH */
 #endif /* __AUTH_AUTHENTICATE_STATE_T__ */
@@ -138,7 +138,7 @@ Auth::Basic::Config::done()
 static void
 authenticateBasicHandleReply(void *data, char *reply)
 {
-    authenticateStateData *r = static_cast<authenticateStateData *>(data);
+    Auth::StateData *r = static_cast<Auth::StateData *>(data);
     BasicAuthQueueNode *tmpnode;
     char *t = NULL;
     void *cbdata;
@@ -188,7 +188,7 @@ authenticateBasicHandleReply(void *data, char *reply)
         basic_auth->auth_queue = tmpnode;
     }
 
-    authenticateStateFree(r);
+    delete r;
 }
 
 void
@@ -416,8 +416,6 @@ Auth::Basic::Config::init(Auth::Config * schemeCfg)
         basicauthenticators->ipc_type = IPC_STREAM;
 
         helperOpenServers(basicauthenticators);
-
-        CBDATA_INIT_TYPE(authenticateStateData);
     }
 }
 
@@ -450,13 +448,8 @@ Auth::Basic::User::submitRequest(AuthUserRequest::Pointer auth_user_request, RH
 {
     /* mark the user as having verification in progress */
     credentials(Auth::Pending);
-    authenticateStateData *r = NULL;
     char buf[8192];
     char user[1024], pass[1024];
-    r = cbdataAlloc(authenticateStateData);
-    r->handler = handler;
-    r->data = cbdataReference(data);
-    r->auth_user_request = auth_user_request;
     if (static_cast<Auth::Basic::Config*>(config)->utf8) {
         latin1_to_utf8(user, sizeof(user), username());
         latin1_to_utf8(pass, sizeof(pass), passwd);
@@ -467,5 +460,6 @@ Auth::Basic::User::submitRequest(AuthUserRequest::Pointer auth_user_request, RH
         xstrncpy(pass, rfc1738_escape(passwd), sizeof(pass));
     }
     snprintf(buf, sizeof(buf), "%s %s\n", user, pass);
-    helperSubmit(basicauthenticators, buf, authenticateBasicHandleReply, r);
+    helperSubmit(basicauthenticators, buf, authenticateBasicHandleReply,
+                 new Auth::StateData(auth_user_request, handler, data));
 }
@@ -247,7 +247,6 @@ AuthDigestUserRequest::addAuthenticationInfoTrailer(HttpReply * rep, int accel)
 void
 AuthDigestUserRequest::module_start(RH * handler, void *data)
 {
-    authenticateStateData *r = NULL;
     char buf[8192];
 
     assert(user() != NULL && user()->auth_type == Auth::AUTH_DIGEST);
@@ -259,10 +258,6 @@ AuthDigestUserRequest::module_start(RH * handler, void *data)
         return;
     }
 
-    r = cbdataAlloc(authenticateStateData);
-    r->handler = handler;
-    r->data = cbdataReference(data);
-    r->auth_user_request = static_cast<AuthUserRequest*>(this);
     if (static_cast<Auth::Digest::Config*>(Auth::Config::Find("digest"))->utf8) {
         char userstr[1024];
         latin1_to_utf8(userstr, sizeof(userstr), user()->username());
@@ -271,13 +266,14 @@ AuthDigestUserRequest::module_start(RH * handler, void *data)
         snprintf(buf, 8192, "\"%s\":\"%s\"\n", user()->username(), realm);
     }
 
-    helperSubmit(digestauthenticators, buf, AuthDigestUserRequest::HandleReply, r);
+    helperSubmit(digestauthenticators, buf, AuthDigestUserRequest::HandleReply,
+                 new Auth::StateData(this, handler, data));
 }
 
 void
 AuthDigestUserRequest::HandleReply(void *data, char *reply)
 {
-    authenticateStateData *replyData = static_cast < authenticateStateData * >(data);
+    Auth::StateData *replyData = static_cast<Auth::StateData *>(data);
     char *t = NULL;
     void *cbdata;
     debugs(29, 9, HERE << "{" << (reply ? reply : "<NULL>") << "}");
@@ -315,7 +311,5 @@ AuthDigestUserRequest::HandleReply(void *data, char *reply)
     if (cbdataReferenceValidDone(replyData->data, &cbdata))
         replyData->handler(cbdata, NULL);
 
-    replyData->auth_user_request = NULL;
-
-    cbdataFree(replyData);
+    delete replyData;
 }
@@ -65,8 +65,6 @@ static hash_table *digest_nonce_cache;
 static int authdigest_initialised = 0;
 static MemAllocator *digest_nonce_pool = NULL;
 
-// CBDATA_TYPE(DigestAuthenticateStateData);
-
 enum http_digest_attr_type {
     DIGEST_USERNAME,
     DIGEST_REALM,
@@ -590,8 +588,6 @@ Auth::Digest::Config::init(Auth::Config * scheme)
         digestauthenticators->ipc_type = IPC_STREAM;
 
         helperOpenServers(digestauthenticators);
-
-        CBDATA_INIT_TYPE(authenticateStateData);
     }
 }
 
@@ -629,20 +625,16 @@ Auth::Digest::Config::done()
     safe_free(digestAuthRealm);
 }
 
-Auth::Digest::Config::Config()
-{
-    /* TODO: move into initialisation list */
-    /* 5 minutes */
-    nonceGCInterval = 5 * 60;
-    /* 30 minutes */
-    noncemaxduration = 30 * 60;
-    /* 50 requests */
-    noncemaxuses = 50;
-    /* Not strict nonce count behaviour */
-    NonceStrictness = 0;
-    /* Verify nonce count */
-    CheckNonceCount = 1;
-}
+Auth::Digest::Config::Config() :
+        digestAuthRealm(NULL),
+        nonceGCInterval(5*60),
+        noncemaxduration(30*60),
+        noncemaxuses(50),
+        NonceStrictness(0),
+        CheckNonceCount(1),
+        PostWorkaround(0),
+        utf8(0)
+{}
 
 void
 Auth::Digest::Config::parse(Auth::Config * scheme, int n_configured, char *param_str)
@@ -97,11 +97,6 @@ AuthNegotiateUserRequest::module_start(RH * handler, void *data)
 
     debugs(29, 8, HERE << "credentials state is '" << user()->credentials() << "'");
 
-    authenticateStateData *r = cbdataAlloc(authenticateStateData);
-    r->handler = handler;
-    r->data = cbdataReference(data);
-    r->auth_user_request = this;
-
     if (user()->credentials() == Auth::Pending) {
         snprintf(buf, sizeof(buf), "YR %s\n", client_blob); //CHECKME: can ever client_blob be 0 here?
     } else {
@@ -111,7 +106,9 @@ AuthNegotiateUserRequest::module_start(RH * handler, void *data)
     waiting = 1;
 
     safe_free(client_blob);
-    helperStatefulSubmit(negotiateauthenticators, buf, AuthNegotiateUserRequest::HandleReply, r, authserver);
+
+    helperStatefulSubmit(negotiateauthenticators, buf, AuthNegotiateUserRequest::HandleReply,
+                         new Auth::StateData(this, handler, data), authserver);
 }
 
 /**
@@ -234,18 +231,15 @@ AuthNegotiateUserRequest::authenticate(HttpRequest * aRequest, ConnStateData * c
 void
 AuthNegotiateUserRequest::HandleReply(void *data, void *lastserver, char *reply)
 {
-    authenticateStateData *r = static_cast<authenticateStateData *>(data);
+    Auth::StateData *r = static_cast<Auth::StateData *>(data);
 
-    int valid;
     char *blob, *arg = NULL;
 
     debugs(29, 8, HERE << "helper: '" << lastserver << "' sent us '" << (reply ? reply : "<NULL>") << "'");
-    valid = cbdataReferenceValid(r->data);
 
-    if (!valid) {
+    if (!cbdataReferenceValid(r->data)) {
         debugs(29, DBG_IMPORTANT, "ERROR: Negotiate Authentication invalid callback data. helper '" << lastserver << "'.");
-        cbdataReferenceDone(r->data);
-        authenticateStateFree(r);
+        delete r;
         return;
     }
 
@@ -367,8 +361,7 @@ AuthNegotiateUserRequest::HandleReply(void *data, void *lastserver, char *reply)
 
     lm_request->request = NULL;
     r->handler(r->data, NULL);
-    cbdataReferenceDone(r->data);
-    authenticateStateFree(r);
+    delete r;
 }
 
 void
@@ -181,8 +181,6 @@ Auth::Negotiate::Config::init(Auth::Config * scheme)
         negotiateauthenticators->ipc_type = IPC_STREAM;
 
         helperStatefulOpenServers(negotiateauthenticators);
-
-        CBDATA_INIT_TYPE(authenticateStateData);
     }
 }
 
@@ -92,11 +92,6 @@ AuthNTLMUserRequest::module_start(RH * handler, void *data)
 
     debugs(29, 8, HERE << "credentials state is '" << user()->credentials() << "'");
 
-    authenticateStateData *r = cbdataAlloc(authenticateStateData);
-    r->handler = handler;
-    r->data = cbdataReference(data);
-    r->auth_user_request = this;
-
     if (user()->credentials() == Auth::Pending) {
         snprintf(buf, sizeof(buf), "YR %s\n", client_blob); //CHECKME: can ever client_blob be 0 here?
     } else {
@@ -106,7 +101,8 @@ AuthNTLMUserRequest::module_start(RH * handler, void *data)
     waiting = 1;
 
     safe_free(client_blob);
-    helperStatefulSubmit(ntlmauthenticators, buf, AuthNTLMUserRequest::HandleReply, r, authserver);
+    helperStatefulSubmit(ntlmauthenticators, buf, AuthNTLMUserRequest::HandleReply,
+                         new Auth::StateData(this, handler, data), authserver);
 }
 
 /**
@@ -229,18 +225,14 @@ AuthNTLMUserRequest::authenticate(HttpRequest * aRequest, ConnStateData * conn,
 void
 AuthNTLMUserRequest::HandleReply(void *data, void *lastserver, char *reply)
 {
-    authenticateStateData *r = static_cast<authenticateStateData *>(data);
-
-    int valid;
+    Auth::StateData *r = static_cast<Auth::StateData *>(data);
     char *blob;
 
     debugs(29, 8, HERE << "helper: '" << lastserver << "' sent us '" << (reply ? reply : "<NULL>") << "'");
-    valid = cbdataReferenceValid(r->data);
 
-    if (!valid) {
+    if (!cbdataReferenceValid(r->data)) {
         debugs(29, DBG_IMPORTANT, "ERROR: NTLM Authentication invalid callback data. helper '" << lastserver << "'.");
-        cbdataReferenceDone(r->data);
-        authenticateStateFree(r);
+        delete r;
         return;
     }
 
@@ -349,6 +341,5 @@ AuthNTLMUserRequest::HandleReply(void *data, void *lastserver, char *reply)
         lm_request->request = NULL;
     }
     r->handler(r->data, NULL);
-    cbdataReferenceDone(r->data);
-    authenticateStateFree(r);
+    delete r;
 }
@@ -168,8 +168,6 @@ Auth::Ntlm::Config::init(Auth::Config * scheme)
         ntlmauthenticators->ipc_type = IPC_STREAM;
 
         helperStatefulOpenServers(ntlmauthenticators);
-
-        CBDATA_INIT_TYPE(authenticateStateData);
     }
 }
 
@@ -494,7 +494,7 @@ parseOneConfigFile(const char *file_name, unsigned int depth)
 
         trim_trailing_ws(tmp_line);
         ProcessMacros(tmp_line, tmp_line_len);
-        debugs(3, 5, "Processing: '" << tmp_line << "'");
+        debugs(3, (opt_parse_cfg_only?1:5), "Processing: " << tmp_line);
 
         if (const char* expr = FindStatement(tmp_line, "if")) {
             if_states.push_back(EvalBoolExpr(expr)); // store last if-statement meaning
@@ -2983,6 +2983,11 @@ free_string(char **var)
 void
 parse_eol(char *volatile *var)
 {
+    if (!var) {
+        self_destruct();
+        return;
+    }
+
     unsigned char *token = (unsigned char *) strtok(NULL, null_string);
     safe_free(*var);
 
@@ -2914,9 +2914,17 @@ DOC_START
 		[http::]Sh	Squid hierarchy status (DEFAULT_PARENT etc)
 		[http::]mt	MIME content type
 		[http::]rm	Request method (GET/POST etc)
-		[http::]ru	Request URL
+		[http::]>rm	Request method from client
+		[http::]<rm	Request method sent to server or peer
+		[http::]ru	Request URL from client (historic, filtered for logging)
+		[http::]>ru	Request URL from client
+		[http::]<ru	Request URL sent to server or peer
 		[http::]rp	Request URL-Path excluding hostname
+		[http::]>rp	Request URL-Path excluding hostname from client
+		[http::]<rp	Request URL-Path excluding hostname sento to server or peer
 		[http::]rv	Request protocol version
+		[http::]>rv	Request protocol version from client
+		[http::]<rv	Request protocol version sent to server or peer
 		[http::]et	Tag returned by external acl
 		[http::]ea	Log string returned by external acl
 		[http::]<st	Sent reply size including HTTP headers
@@ -2431,7 +2431,7 @@ clientProcessRequest(ConnStateData *conn, HttpParser *hp, ClientSocketContext *c
                                         conn->clientConnection->remote, NULL, conn->in.buf, NULL);
             break;
         default:
-            repContext->setReplyToError(ERR_INVALID_REQ, HTTP_BAD_REQUEST, method, http->uri,
+            repContext->setReplyToError(ERR_INVALID_REQ, hp->request_parse_status, method, http->uri,
                                         conn->clientConnection->remote, NULL, conn->in.buf, NULL);
         }
         assert(context->http->out.offset == 0);
@@ -176,9 +176,9 @@ inline std::ostream &
 operator << (std::ostream &os, const Comm::Connection &conn)
 {
     os << "local=" << conn.local << " remote=" << conn.remote;
-    if (fd >= 0)
+    if (conn.fd >= 0)
         os << " FD " << conn.fd;
-    if (flags != COMM_UNSET)
+    if (conn.flags != COMM_UNSET)
         os << " flags=" << conn.flags;
 #if USE_IDENT
     if (*conn.rfc931)
@@ -657,28 +657,81 @@ Log::Format::SquidCustom(AccessLogEntry * al, customlog * log)
 
             break;
 
-        case LFT_REQUEST_METHOD:
-            out = al->_private.method_str;
-
+        case LFT_CLIENT_REQ_METHOD:
+            if (al->request) {
+                out = al->request->method.image();
+                quote = 1;
+            }
             break;
 
-        case LFT_REQUEST_URI:
-            out = al->url;
-
+        case LFT_CLIENT_REQ_URI:
+            // original client URI
+            if (al->request) {
+                out = urlCanonical(al->request);
+                quote = 1;
+            }
             break;
 
-        case LFT_REQUEST_URLPATH:
+        case LFT_REQUEST_URLPATH_OLD_31:
+        case LFT_CLIENT_REQ_URLPATH:
             if (al->request) {
                 out = al->request->urlpath.termedBuf();
                 quote = 1;
             }
             break;
 
+        case LFT_CLIENT_REQ_VERSION:
+            if (al->request) {
+                snprintf(tmp, sizeof(tmp), "%d.%d", (int) al->request->http_ver.major, (int) al->request->http_ver.minor);
+                out = tmp;
+            }
+            break;
+
+        case LFT_REQUEST_METHOD:
+            out = al->_private.method_str;
+            break;
+
+        case LFT_REQUEST_URI:
+            out = al->url;
+            break;
+
+        case LFT_REQUEST_VERSION_OLD_2X:
         case LFT_REQUEST_VERSION:
             snprintf(tmp, sizeof(tmp), "%d.%d", (int) al->http.version.major, (int) al->http.version.minor);
             out = tmp;
             break;
 
+        case LFT_SERVER_REQ_METHOD:
+            if (al->adapted_request) {
+                out = al->adapted_request->method.image();
+                quote = 1;
+            }
+            break;
+
+        case LFT_SERVER_REQ_URI:
+            // adapted request URI sent to server/peer
+            if (al->adapted_request) {
+                out = urlCanonical(al->adapted_request);
+                quote = 1;
+            }
+            break;
+
+        case LFT_SERVER_REQ_URLPATH:
+            if (al->adapted_request) {
+                out = al->adapted_request->urlpath.termedBuf();
+                quote = 1;
+            }
+            break;
+
+        case LFT_SERVER_REQ_VERSION:
+            if (al->adapted_request) {
+                snprintf(tmp, sizeof(tmp), "%d.%d",
+                         (int) al->adapted_request->http_ver.major,
+                         (int) al->adapted_request->http_ver.minor);
+                out = tmp;
+            }
+            break;
+
         case LFT_REQUEST_SIZE_TOTAL:
             outoff = al->cache.requestSize;
             dooff = 1;
@@ -131,13 +131,25 @@ struct logformat_token_table_entry logformat_token_table[] = {
 
     {"mt", LFT_MIME_TYPE},
 
+    {">rm", LFT_CLIENT_REQ_METHOD},
+    {">ru", LFT_CLIENT_REQ_URI},
+    {">rp", LFT_CLIENT_REQ_URLPATH},
+    /*{">rq", LFT_CLIENT_REQ_QUERY},*/
+    {">rv", LFT_CLIENT_REQ_VERSION},
+
     {"rm", LFT_REQUEST_METHOD},
     {"ru", LFT_REQUEST_URI},	/* doesn't include the query-string */
-    {"rp", LFT_REQUEST_URLPATH},	/* doesn't include the host */
+    {"rp", LFT_REQUEST_URLPATH_OLD_31},
     /* { "rq", LFT_REQUEST_QUERY }, * /     / * the query-string, INCLUDING the leading ? */
-    {">v", LFT_REQUEST_VERSION},
+    {">v", LFT_REQUEST_VERSION_OLD_2X},
     {"rv", LFT_REQUEST_VERSION},
 
+    {"<rm", LFT_SERVER_REQ_METHOD},
+    {"<ru", LFT_SERVER_REQ_URI},
+    {"<rp", LFT_SERVER_REQ_URLPATH},
+    /*{"<rq", LFT_SERVER_REQ_QUERY},*/
+    {"<rv", LFT_SERVER_REQ_VERSION},
+
     { ">st", LFT_REQUEST_SIZE_TOTAL },
     /*{ ">sl", LFT_REQUEST_SIZE_LINE }, * / / * the request line "GET ... " */
     { ">sh", LFT_REQUEST_SIZE_HEADERS },
@@ -463,6 +475,16 @@ accessLogGetNewLogFormatToken(logformat_token * lt, char *def, enum log_quote *q
         lt->type = LFT_PEER_LOCAL_IP;
         break;
 
+    case LFT_REQUEST_URLPATH_OLD_31:
+        debugs(46, 0, "WARNING: The \"rp\" formatting code is deprecated. Use the \">rp\" instead.");
+        lt->type = LFT_CLIENT_REQ_URLPATH;
+        break;
+
+    case LFT_REQUEST_VERSION_OLD_2X:
+        debugs(46, 0, "WARNING: The \">v\" formatting code is deprecated. Use the \">rv\" instead.");
+        lt->type = LFT_REQUEST_VERSION;
+        break;
+
     default:
         break;
     }
@@ -105,12 +105,28 @@ typedef enum {
 
     LFT_MIME_TYPE,
 
+    /* original Request-Line details receved from client */
+    LFT_CLIENT_REQ_METHOD,
+    LFT_CLIENT_REQ_URI,
+    LFT_CLIENT_REQ_URLPATH,
+    /* LFT_CLIENT_REQ_QUERY, */
+    LFT_CLIENT_REQ_VERSION,
+
+    /* Request-Line details receved from client (legacy, filtered) */
     LFT_REQUEST_METHOD,
     LFT_REQUEST_URI,
-    LFT_REQUEST_URLPATH,
-    /*LFT_REQUEST_QUERY, * // * this is not needed. see strip_query_terms */
+    LFT_REQUEST_URLPATH_OLD_31,
+    /*LFT_REQUEST_QUERY, */
+    LFT_REQUEST_VERSION_OLD_2X,
     LFT_REQUEST_VERSION,
 
+    /* Request-Line details sent to the server/peer */
+    LFT_SERVER_REQ_METHOD,
+    LFT_SERVER_REQ_URI,
+    LFT_SERVER_REQ_URLPATH,
+    /*LFT_SERVER_REQ_QUERY, */
+    LFT_SERVER_REQ_VERSION,
+
     LFT_REQUEST_SIZE_TOTAL,
     /*LFT_REQUEST_SIZE_LINE, */
     LFT_REQUEST_SIZE_HEADERS,
@@ -60,13 +60,9 @@ IdleConnList::IdleConnList(const char *key, PconnPool *thePool) :
 
 IdleConnList::~IdleConnList()
 {
-    parent_->unlinkList(this);
+    if (parent_)
+        parent_->unlinkList(this);
 
-/* TODO: re-attach to MemPools.
-    if (capacity_ == PCONN_FDS_SZ)
-        pconn_fds_pool->freeOne(theList_);
-    else
-*/
     delete[] theList_;
 
     xfree(hash.key);
@@ -106,14 +102,61 @@ IdleConnList::removeAt(int index)
         theList_[index] = theList_[index + 1];
     theList_[size_-1] = NULL;
 
-    if (parent_)
+    if (parent_) {
         parent_->noteConnectionRemoved();
 
-    if (--size_ == 0) {
+        if (--size_ == 0) {
+            debugs(48, 3, HERE << "deleting " << hashKeyStr(&hash));
+            delete this;
+        }
+    }
+    return true;
+}
+
+// almost a duplicate of removeFD. But drops multiple entries.
+void
+IdleConnList::closeN(size_t n)
+{
+    if (n < 1) {
+        debugs(48, 2, HERE << "Nothing to do.");
+        return;
+    } else if (n < (size_t)count()) {
+        debugs(48, 2, HERE << "Closing all entries.");
+        while (size_ >= 0) {
+            const Comm::ConnectionPointer &conn = theList_[--size_];
+            theList_[size_] = NULL;
+            clearHandlers(conn);
+            conn->close();
+            if (parent_)
+                parent_->noteConnectionRemoved();
+        }
+    } else {
+        debugs(48, 2, HERE << "Closing " << n << " of " << size_ << " entries.");
+
+        size_t index = 0;
+        // ensure the first N entries are closed
+        while (index < n) {
+            const Comm::ConnectionPointer &conn = theList_[--size_];
+            theList_[size_] = NULL;
+            clearHandlers(conn);
+            conn->close();
+            if (parent_)
+                parent_->noteConnectionRemoved();
+        }
+        // shuffle the list N down.
+        for (;index < (size_t)size_; index++) {
+            theList_[index - n] = theList_[index];
+        }
+        // ensure the last N entries are unset
+        while (index < ((size_t)size_) + n) {
+            theList_[index] = NULL;
+        }
+    }
+
+    if (parent_ && size_ == 0) {
         debugs(48, 3, HERE << "deleting " << hashKeyStr(&hash));
         delete this;
     }
-    return true;
 }
 
 void
@@ -150,6 +193,32 @@ IdleConnList::push(const Comm::ConnectionPointer &conn)
     commSetConnTimeout(conn, Config.Timeout.pconn, timeoutCall);
 }
 
+Comm::ConnectionPointer
+IdleConnList::pop()
+{
+    for (int i=size_-1; i>=0; i--) {
+
+        // Is the FD pending completion of the closure callback?
+        // this flag is set while our early-read/close handler is
+        // waiting for a remote response. It gets unset when the
+        // handler is scheduled.
+        if (!fd_table[theList_[i]->fd].flags.read_pending)
+            continue;
+
+        // connection already closed. useless.
+        if (!Comm::IsConnOpen(theList_[i]))
+            continue;
+
+        // finally, a match. pop and return it.
+        Comm::ConnectionPointer result = theList_[i];
+        /* may delete this */
+        removeAt(i);
+        return result;
+    }
+
+    return Comm::ConnectionPointer();
+}
+
 /*
  * XXX this routine isn't terribly efficient - if there's a pending
  * read event (which signifies the fd will close in the next IO loop!)
@@ -38,6 +38,9 @@ class IdleConnList
     /// Pass control of the connection to the idle list.
     void push(const Comm::ConnectionPointer &conn);
 
+    /// get first conn which is not pending read fd.
+    Comm::ConnectionPointer pop();
+
     /** Search the list for a connection which matches the 'key' details
      * and pop it off the list.
      * The list is created based on remote IP:port hash. This further filters
@@ -49,6 +52,7 @@ class IdleConnList
     void clearHandlers(const Comm::ConnectionPointer &conn);
 
     int count() const { return size_; }
+    void closeN(size_t count);
 
 private:
     bool removeAt(int index);
@@ -219,6 +219,7 @@ redirectStart(ClientHttpRequest * http, RH * handler, void *data)
         return;
     }
 
+    debugs(61,6, HERE << "sending '" << buf << "' to the helper");
     helperSubmit(redirectors, buf, redirectHandleReply, r);
 }
 
@@ -438,11 +438,14 @@ main(int argc, char *argv[])
         }
     }
 
-    if (version[0] == '-' || !version[0] || version[0] == '0') {
+    if (version[0] == '-' || !version[0]) {
         /* HTTP/0.9, no headers, no version */
         snprintf(msg, BUFSIZ, "%s %s\r\n", method, url);
     } else {
-        snprintf(msg, BUFSIZ, "%s %s HTTP/%s\r\n", method, url, version);
+        if (!xisdigit(version[0])) // not HTTP/n.n
+            snprintf(msg, BUFSIZ, "%s %s %s\r\n", method, url, version);
+        else
+            snprintf(msg, BUFSIZ, "%s %s HTTP/%s\r\n", method, url, version);
 
         if (host) {
             snprintf(buf, BUFSIZ, "Host: %s\r\n", host);