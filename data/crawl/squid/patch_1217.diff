@@ -2,7 +2,7 @@
 <article>
 <title>Squid 3.0 release notes</title>
 <author>Squid Developers</author>
-<date>$Id: release-3.0.sgml,v 1.3 2003/05/17 17:35:03 hno Exp $</date>
+<date>$Id: release-3.0.sgml,v 1.4 2003/05/17 19:02:14 hno Exp $</date>
 
 <abstract>
 This document contains the release notes for version 3.0 of Squid.
@@ -127,12 +127,15 @@ This fixes two issues:<itemize><item>Transparently intercepted requests is no lo
 <tag>email_err_data</tag>Allow disabling the data now embedded in the mailto links on Squid's ERR pages.
 <tag>refresh_pattern</tag>Make the default refresh_pattern merely a suggested default. This is consistent with older Squid versions due to a bug in the "DEFAULT-IF-NONE" processing of refresh_pattern.  (Henrik)
 <tag>reply_body_max_size</tag>No longer uses allow/deny. Instead it is specified as a size followed by acl elements. The size "none" can be used for no limit (the default)
+<tag>external_acl_type</tag>The argument which was named concurrenty= in Squid-2.5 is now named children=. concurrency= has a different meaing in Squid-3.0 and your external acls will not work until updated.
 </descrip>
 
 <sect>Known limitations
 <p>
 <itemize>
   <item>SSL Acceleration Support - CRL's are not currently supported. The design has been completed, but time to implement is missing - contact squid-dev@squid-cache.org for more details.
+  <item>tcp_outgoing_addr/tos uses "fast" ACL checks and is somewhat limited in what kind of acl types you may use. Probably only src/my_port/my_addr/dstdomain/method/port/url* acl types is reliable.
+  <item>reply_body_max_size is uses "fast" ACL checks and may occationally fail on acls which may require external lookups (dst/srcdomain/external).
 </itemize>
 
 </article>
@@ -1,6 +1,6 @@
 
 #
-# $Id: cf.data.pre,v 1.313 2003/05/17 17:35:06 hno Exp $
+# $Id: cf.data.pre,v 1.314 2003/05/17 19:02:15 hno Exp $
 #
 #
 # SQUID Web Proxy Cache          http://www.squid-cache.org/
@@ -1730,8 +1730,8 @@ DOC_START
 	  negative_ttl=n
 	  		TTL for cached negative lookups (default same
 	  		as ttl)
-	  concurrency=n	Concurrency level / number of processes spawn
-			to service external acl lookups of this type.
+	  children=n	Number of acl helper processes spawn to service
+			external acl lookups of this type.
 	  cache=n	result cache size, 0 is unbounded (default)
 	
 	FORMAT specifications
@@ -1991,7 +1991,7 @@ NAME: range_offset_limit
 COMMENT: (bytes)
 TYPE: b_size_t
 LOC: Config.rangeOffsetLimit
-DEFAULT: none
+DEFAULT: 0 KB
 DOC_START
 	Sets a upper limit on how far into the the file a Range request
 	may be to cause Squid to prefetch the whole file. If beyond this
@@ -1,6 +1,6 @@
 
 /*
- * $Id: external_acl.cc,v 1.39 2003/05/11 10:11:31 hno Exp $
+ * $Id: external_acl.cc,v 1.40 2003/05/17 19:02:15 hno Exp $
  *
  * DEBUG: section 82    External ACL
  * AUTHOR: Henrik Nordstrom, MARA Systems AB
@@ -55,8 +55,8 @@
 #ifndef DEFAULT_EXTERNAL_ACL_TTL
 #define DEFAULT_EXTERNAL_ACL_TTL 1 * 60 * 60
 #endif
-#ifndef DEFAULT_EXTERNAL_ACL_CONCURRENCY
-#define DEFAULT_EXTERNAL_ACL_CONCURRENCY 5
+#ifndef DEFAULT_EXTERNAL_ACL_CHILDREN
+#define DEFAULT_EXTERNAL_ACL_CHILDREN 5
 #endif
 
 typedef struct _external_acl_format external_acl_format;
@@ -187,7 +187,7 @@ parse_externalAclHelper(external_acl ** list)
 
     a->ttl = DEFAULT_EXTERNAL_ACL_TTL;
     a->negative_ttl = -1;
-    a->children = DEFAULT_EXTERNAL_ACL_CONCURRENCY;
+    a->children = DEFAULT_EXTERNAL_ACL_CHILDREN;
 
     token = strtok(NULL, w_space);
 
@@ -204,7 +204,7 @@ parse_externalAclHelper(external_acl ** list)
             a->ttl = atoi(token + 4);
         } else if (strncmp(token, "negative_ttl=", 13) == 0) {
             a->negative_ttl = atoi(token + 13);
-        } else if (strncmp(token, "concurrency=", 12) == 0) {
+        } else if (strncmp(token, "children=", 12) == 0) {
             a->children = atoi(token + 12);
         } else if (strncmp(token, "cache=", 6) == 0) {
             a->cache_size = atoi(token + 6);
@@ -349,8 +349,8 @@ dump_externalAclHelper(StoreEntry * sentry, const char *name, const external_acl
         if (node->negative_ttl != node->ttl)
             storeAppendPrintf(sentry, " negative_ttl=%d", node->negative_ttl);
 
-        if (node->children != DEFAULT_EXTERNAL_ACL_CONCURRENCY)
-            storeAppendPrintf(sentry, " concurrency=%d", node->children);
+        if (node->children != DEFAULT_EXTERNAL_ACL_CHILDREN)
+            storeAppendPrintf(sentry, " children=%d", node->children);
 
         for (format = node->format; format; format = format->next) {
             switch (format->type) {