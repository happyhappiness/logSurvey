@@ -3,14 +3,6 @@
 
 Ssl::Config Ssl::TheConfig;
 
-Ssl::Config::Config():
-#if USE_SSL_CRTD
-        ssl_crtd(NULL),
-#endif
-        ssl_crt_validator(NULL)
-{
-}
-
 Ssl::Config::~Config()
 {
 #if USE_SSL_CRTD
@@ -16,7 +16,12 @@ class Config
 #endif
     char *ssl_crt_validator;
     HelperChildConfig ssl_crt_validator_Children;
-    Config();
+    Config():
+#if USE_SSL_CRTD
+            ssl_crtd(NULL),
+#endif
+            ssl_crt_validator(NULL) {}
+
     ~Config();
 private:
     Config(const Config &); // not implemented
@@ -38,7 +38,7 @@
 #define STUB_API "stub_DelayId.cc"
 #include "tests/STUB.h"
 
-DelayId::DelayId() {}
+DelayId::DelayId(): pool_(0), compositeId(NULL), markedAsNoDelay(false) {}
 DelayId::~DelayId() {}
 
 void DelayId::delayRead(DeferredRead const&) STUB_NOP
@@ -4,11 +4,10 @@
 #define STUB_API "HttpReply.cc"
 #include "tests/STUB.h"
 
-HttpReply::HttpReply() : HttpMsg(hoReply)
-{
-// XXX: required by testStore
-// STUB
-}
+HttpReply::HttpReply() : HttpMsg(hoReply), date (0), last_modified (0),
+        expires (0), surrogate_control (NULL), content_range (NULL), keep_alive (0),
+        protoPrefix("HTTP/"), bodySizeMax(-2)
+STUB_NOP
 HttpReply::~HttpReply() STUB
 void HttpReply::setHeaders(http_status status, const char *reason, const char *ctype, int64_t clen, time_t lmt, time_t expires_) STUB
 void HttpReply::packHeadersInto(Packer * p) const STUB
@@ -10,8 +10,7 @@
 #include "tests/STUB.h"
 
 #include "ssl/Config.h"
-Ssl::Config::Config() { printf("Ssl::Config::Config No implemented\n"); }
-Ssl::Config::~Config() { printf("Ssl::Config::Config No implemented\n"); }
+Ssl::Config::~Config() STUB_NOP
 Ssl::Config Ssl::TheConfig;
 
 #include "ssl/context_storage.h"
@@ -15,6 +15,7 @@ class testRock : public CPPUNIT_NS::TestFixture
     CPPUNIT_TEST_SUITE_END();
 
 public:
+    testRock() : rr(NULL) {}
     virtual void setUp();
     virtual void tearDown();
 