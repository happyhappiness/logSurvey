diff --git a/ChangeLog b/ChangeLog
index bfc16df..d060c68 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,5 +1,7 @@
 2009-07-05  Micah Cowan  <micah@cowan.name>
 
+	* po/POTFILES.in: Added src/gnutls.c, src/iri.c.
+
 	* lib/*, md5/*: Updated gnulib.
 
 2009-07-04  Steven Schweda  <sms@antinode.info>
diff --git a/po/POTFILES.in b/po/POTFILES.in
index 0bca831..8b2be7d 100644
--- a/po/POTFILES.in
+++ b/po/POTFILES.in
@@ -16,12 +16,14 @@ src/ftp-ls.c
 src/ftp-opie.c
 src/ftp.c
 src/gen-md5.c
+src/gnutls.c
 src/hash.c
 src/host.c
 src/html-parse.c
 src/html-url.c
 src/http.c
 src/init.c
+src/iri.c
 src/log.c
 src/main.c
 src/mswindows.c
diff --git a/src/ChangeLog b/src/ChangeLog
index ec30ceb..098a9b9 100644
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,3 +1,7 @@
+2009-07-05  Micah Cowan  <micah@cowan.name>
+
+	* iri.c: Mark some strings for translation.
+
 2009-07-04  Steven Schweda  <sms@antinode.info>
 
 	* wget.h (ORIG_SFX): Macro added, to supply an alternative "_orig"
diff --git a/src/iri.c b/src/iri.c
index 1803ca7..45650c8 100644
--- a/src/iri.c
+++ b/src/iri.c
@@ -101,7 +101,7 @@ check_encoding_name (char *encoding)
     {
       if (!c_isascii (*s) || c_isspace (*s))
         {
-          logprintf (LOG_VERBOSE, "Encoding %s isn't valid\n", quote (encoding));
+          logprintf (LOG_VERBOSE, _("Encoding %s isn't valid\n"), quote (encoding));
           return false;
         }
 
@@ -129,7 +129,7 @@ locale_to_utf8 (const char *str)
   /* That shouldn't happen, just in case */
   if (!opt.locale)
     {
-      logprintf (LOG_VERBOSE, "open_locale_to_utf8: locale is unset\n");
+      logprintf (LOG_VERBOSE, _("locale_to_utf8: locale is unset\n"));
       opt.locale = find_locale ();
     }
 
@@ -139,7 +139,7 @@ locale_to_utf8 (const char *str)
   l2u = iconv_open ("UTF-8", opt.locale);
   if (l2u != (iconv_t)(-1))
     { 
-      logprintf (LOG_VERBOSE, "Conversion from %s to %s isn't supported\n",
+      logprintf (LOG_VERBOSE, _("Conversion from %s to %s isn't supported\n"),
                  quote (opt.locale), quote ("UTF-8"));
       return str;
     }
@@ -180,7 +180,7 @@ do_conversion (iconv_t cd, char *in, size_t inlen, char **out)
         {
           if (!invalid)
             logprintf (LOG_VERBOSE,
-                      "Incomplete or invalide multibyte sequence encountered\n");
+                      _("Incomplete or invalide multibyte sequence encountered\n"));
 
           invalid++;
           **out = *in;
@@ -205,7 +205,7 @@ do_conversion (iconv_t cd, char *in, size_t inlen, char **out)
         }
       else /* Weird, we got an unspecified error */
         {
-          logprintf (LOG_VERBOSE, "Unhandled errno %d\n", errno);
+          logprintf (LOG_VERBOSE, _("Unhandled errno %d\n"), errno);
           break;
         }
     }
@@ -234,7 +234,7 @@ idn_encode (struct iri *i, char *host)
   if (ret != IDNA_SUCCESS)
     {
       /* sXXXav : free new when needed ! */
-      logprintf (LOG_VERBOSE, "idn_encode failed (%d): %s\n", ret,
+      logprintf (LOG_VERBOSE, _("idn_encode failed (%d): %s\n"), ret,
                  quote (idna_strerror (ret)));
       return NULL;
     }
@@ -253,7 +253,7 @@ idn_decode (char *host)
   ret = idna_to_unicode_8zlz (host, &new, IDNA_FLAGS);
   if (ret != IDNA_SUCCESS)
     {
-      logprintf (LOG_VERBOSE, "idn_decode failed (%d): %s\n", ret,
+      logprintf (LOG_VERBOSE, _("idn_decode failed (%d): %s\n"), ret,
                  quote (idna_strerror (ret)));
       return NULL;
     }
-- 
cgit v1.0-41-gc330

