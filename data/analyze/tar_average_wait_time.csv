url,date,title,changes,file_name,reason_for_consistence,is_trivial,old_hunk_file,new_hunk_file,old_loc,new_loc,old_log,new_log,edit_types,edit_words,edit_feature,cluster,wait_time,cluster_size
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=bb798080beec25634f7552934324b5f5c995707f,17 Nov 2003,"(diff_archive): Use sparse_diff_file.
",67,data/crawl/tar/hunk_209.cpp,invoke same log method,non-trivial,data/crawl/tar/old_hunk_209.cpp,data/crawl/tar/new_hunk_209.cpp,3,3,report_difference (NULL);,"report_difference (&current_stat_info, NULL);","[""addVariable""]","[[], [""&current_stat_info""]]",[6190982474121776615],595,0.0,21
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=799e915cd3a889058eeefeaa25391cfe1eae7c3a,15 Apr 1997,"GNU tar 1.12
",1052,data/crawl/tar/hunk_484.cpp,block change,non-trivial,data/crawl/tar/old_hunk_484.cpp,data/crawl/tar/new_hunk_484.cpp,-1,96,,report_difference (NULL);,"[""addLog""]","[[], [""report_difference"", ""NULL""]]",[-3487817939530578388],593,0.0,9
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=c1b9212b16a53da408548efa3f9c8b1a62335b42,4 Oct 2003,"Moved system dependencies to system.c
",664,data/crawl/tar/hunk_233.cpp,use same constant,trivial,data/crawl/tar/old_hunk_233.cpp,data/crawl/tar/new_hunk_233.cpp,10,9,report_difference (0);,report_difference (NULL);,"[""removeContent"", ""addVariable""]","[[""0""], [""NULL""]]",[-4166558493256717462],592,0.0,9
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=c3fa22fc8023ad21ad32b13f934c3324756c9236,25 Jan 2010,"Read POSIX multivolume archives split at the header boundary.

* src/common.h (read_header_mode): New enum.
(read_header): Change type of the 3rd argument.
* src/list.c (read_header): Change type of the 3rd argument.
All callers updated.
* src/buffer.c (try_new_volume): Allow for volumes split at the
extended/ustar header boundary. This is against POSIX specs, but
we must be able to read such archives anyway.

* tests/multiv07.at: New test case.
* tests/Makefile.am: Add multiv07.at
* tests/testsuite.at: Likewise.

* src/compare.c: Update calls to read_header.
* src/delete.c: Likewise.
* src/update.c: Likewise.",157,data/crawl/tar/hunk_57.cpp,check similar return value,non-trivial,data/crawl/tar/old_hunk_57.cpp,data/crawl/tar/new_hunk_57.cpp,-1,7,,"ERROR ((0, 0, _(""This does not look like a tar archive"")));","[""addLog""]","[[], [""ERROR"", ""0"", ""0"", ""_"", ""This"", ""does"", ""not"", ""look"", ""like"", ""a"", ""tar"", ""archive""]]",[25105532001702206967],591,3915000.0,8
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=0d70f547f3a9ff4a261b82e9b487c3f65b63fadf,21 Sep 1999,"(struct link): Remove unused linkcount member. (base_64_digits): Move
 to list.c. (base_8_digits): Remove. (to_octal): New function, with some of
 old contents of to_base. (to_base): Remove. (to_base256): New function.
 (to_chars): Use base 256, not base 64, for huge values. (mode_to_chars):
 Don't use two's complement in GNU format or POSIX format. (dump_file):
 Interchange last two arguments.  If TOP_LEVEL is negative, it means we have
 an incremental dump where we don't know whether this is a top-level call. Use
 deref_stat instead of statx / stat / lstat. Cast result of alloca. Check for
 dates if 0 < top_level, not if listed_incremental_option. Move multiple-link
 check after directory check. Do not dump avoided names. Dump hard links to
 symbolic names as links, not as separate symbolic links. start_header cannot
 return a null pointer, so don't test for it. Likewise for find_next_block.
",1015,data/crawl/tar/hunk_402.cpp,check similar return value,non-trivial,data/crawl/tar/old_hunk_402.cpp,data/crawl/tar/new_hunk_402.cpp,-1,58,,"ERROR ((0, errno, _(""Cannot remove %s""), p));","[""addLog""]","[[], [""ERROR"", ""0"", ""errno"", ""_"", ""Cannot"", ""remove"", ""%s"", ""p""]]",[8358368121424660287],590,542468.5714285715,7
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=c8764440d9cb0187fcbabe26e7f6191c0148178e,4 Feb 2005,"(extract_archive): Rewritten
",836,data/crawl/tar/hunk_178.cpp,check similar return value,non-trivial,data/crawl/tar/old_hunk_178.cpp,data/crawl/tar/new_hunk_178.cpp,-1,168,,"ERROR ((0, 0, _(""Unexpected EOF in archive"")));","[""addLog""]","[[], [""ERROR"", ""0"", ""0"", ""_"", ""Unexpected"", ""EOF"", ""in"", ""archive""]]",[5167937610357500499],589,3023588.5714285714,7
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=72290b64a6433a3c88ecb7b3044c3047beffeadc,18 Aug 1999,"(extract_sparse_file, extract_archive): Don't assume find_next_block
 yields nonnull. (extract_archive): Fix sparse array bug: we did not find end
 of array correctly.
",14,data/crawl/tar/hunk_412.cpp,check similar return value,non-trivial,data/crawl/tar/old_hunk_412.cpp,data/crawl/tar/new_hunk_412.cpp,-1,5,,"ERROR ((0, 0, _(""Unexpected EOF on archive file"")));","[""addLog""]","[[], [""ERROR"", ""0"", ""0"", ""_"", ""Unexpected"", ""EOF"", ""on"", ""archive"", ""file""]]",[4659174231619724083],588,416640.0,6
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=d858a433c82626309e0d974ca923a79ac7f7f18f,31 Aug 2003,"Use current_stat_info
",2077,data/crawl/tar/hunk_260.cpp,use same text,non-trivial,data/crawl/tar/old_hunk_260.cpp,data/crawl/tar/new_hunk_260.cpp,24,21,"ERROR ((0, 0, _(""Unexpected EOF on archive file"")));","ERROR ((0, 0, _(""Unexpected EOF in archive"")));","[""updateContent""]","[[""on"", ""file""], [""in""]]",[508763378737776416],587,319680.0,6
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=d858a433c82626309e0d974ca923a79ac7f7f18f,31 Aug 2003,"Use current_stat_info
",2077,data/crawl/tar/hunk_259.cpp,use same constant,trivial,data/crawl/tar/old_hunk_259.cpp,data/crawl/tar/new_hunk_259.cpp,68,52,report_difference (NULL);,report_difference (0);,"[""removeVariable"", ""addContent""]","[[""NULL""], [""0""]]",[4166558493256717462],586,0.0,6
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=5c2e32780ed9aa2c03408bf0eeea3fb564fc0b48,6 Feb 2005,"Various fixes in help and diagnostic messages
",20,data/crawl/tar/hunk_164.cpp,use same text format,non-trivial,data/crawl/tar/old_hunk_164.cpp,data/crawl/tar/new_hunk_164.cpp,3,3,"argp_error (state, _(""Malformed density argument: '%s'""), arg);","argp_error (state, _(""Malformed density argument: %s""), quote (arg));","[""updateContent"", ""addVariable""]","[[], [""quote""]]",[-453826349353749559],585,451680.0,6
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=f6458a827ae7a2c41616490f653714068072b257,7 Nov 2005,"(list_archive): Handle incremental backups in pax format.
 (decode_header): Initialize stat_info.dumpdir
",47,data/crawl/tar/hunk_139.cpp,check similar return value,non-trivial,data/crawl/tar/old_hunk_139.cpp,data/crawl/tar/new_hunk_139.cpp,28,-1,"ERROR ((0, 0, _(""Unexpected EOF in archive"")));",,"[""removeLog""]","[[""ERROR"", ""0"", ""0"", ""_"", ""Unexpected"", ""EOF"", ""in"", ""archive""], []]",[-5167937610357500499],584,441840.0,6
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=6e9d1539b665c8f3c173b36702ca1650cac977ad,13 Dec 1999,"(<quotearg.h>): New include. (enum permstatus): New enum. (struct
 delayed_set_stat): file_name is now at end of buffer, to avoid two mallocs. 
 New members file_name_len, invert_permissions, permstatus. (extr_init):
 Remove hack that silently adjusted newdir_umask. (set_mode, set_stat): New
 args invert_permissions, permstatus, typeflag. Use these args to decide
 whether and how to set modes. (set_mode, set_stat, prepare_to_extract,
 extract_sparse_file, extract_archive): Don't assume that gettext preserves
 errno. (set_stat): Remove arg symlink_flag; subsumed by typeflag.
 (delay_set_stat, repair_delayed_set_stat): New functions. (make_directories):
 Avoid mkdir where last part of path is "".."". Create a struct delayed_set_stat
 for each directory made. (prepare_to_extract): Renamed from
 unlink_destination, and return 0 immediately if to_stdout_option; all callers
 changed. (maybe_recoverable): New parameter interdir_made. Add support for
 --overwrite. (extract_sparse_file, extract_archive): Quote arbitrary strings
 in diagnostics. (extract_archive): By default, warn about "".."" in member
 names, and skip them. Don't open files with O_NONBLOCK or O_APPEND. Open with
 O_TRUNC only if --overwrite; otherwise, use O_EXCL to avoid overwriting them.
  Pass only rwxrwxrwx permissions to `open' and `mkdir', minus the current
 umask.  Keep track of intermediate directories made, to avoid looping when
 making x/../x when x doesn't exist; the earlier code solved this in a
 different way that didn't fit well into the new scheme.  Don't extract
 permissions onto existing directories unless --overwrite is given.  Do not
 add -wx------ permissions to new directories permanently; just do it
 temporarily. Remove no-longer-needed hack with MSDOS and directory time
 stamps. (apply_delayed_set_stat): New argument specifies which directories to
 fix statuses of.  Do not wait until the end of extraction to fix statuses;
 instead, fix a directory's status once we exit that directory. This requires
 less memory and does the right thing in some cases where the old method
 didn't. (fatal_exit): New function.
",600,data/crawl/tar/hunk_356.cpp,check similar return value,non-trivial,data/crawl/tar/old_hunk_356.cpp,data/crawl/tar/new_hunk_356.cpp,15,16,"ERROR ((0, errno, _(""Cannot remove %s""), file_name));",unlink_error (file_name);,"[""updateLog"", ""removeVariable"", ""removeContent""]","[[""ERROR"", ""0"", ""errno"", ""_"", ""Cannot"", ""remove"", ""%s""], [""unlink_error""]]",[-12342690591773229784],583,0.0,5
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=f0429c4a22e5b19eefbdbc684e9e175a1cca9a3e,13 Dec 1999,"(<quotearg.h>): New include. (name_init, name_next, name_close,
 names_notfound, collect_and_sort_names): Don't assume that gettext preserves
 errno. Quote arbitrary strings in diagnostics. (excluded_name): Fix typo that
 caused empty patterns to be mishandled.
",20,data/crawl/tar/hunk_351.cpp,use same text format,non-trivial,data/crawl/tar/old_hunk_351.cpp,data/crawl/tar/new_hunk_351.cpp,3,3,"ERROR ((0, 0, _(""%s: Not found in archive""), cursor->name));","ERROR ((0, 0, _(""%s: Not found in archive""),
quotearg_colon (cursor->name)));","[""addVariable""]","[[], [""quotearg_colon""]]",[-1521945047501761070],582,0.0,5
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=df2ff9e4e495a32a962f6a1e61cca714503cbed3,13 Dec 1999,"(read_and, list_archive): Quote arbitrary strings in diagnostics.
 (from_header): Use locale_quoting_style to quote diagnostics. (print_header,
 print_for_mkdir): Quote with quotearg, not quote_copy_string.
",66,data/crawl/tar/hunk_348.cpp,use same text format,non-trivial,data/crawl/tar/old_hunk_348.cpp,data/crawl/tar/new_hunk_348.cpp,3,4,"ERROR ((0, errno, _(""Only wrote %lu of %lu bytes to file %s""),
      (unsigned long) check,
      (unsigned long) written, current_file_name));","ERROR ((0, e, _(""Only wrote %lu of %lu bytes to file %s""),
      (unsigned long) check,
      (unsigned long) written, quote (current_file_name)));","[""updateVariable"", ""moveVariable"", ""addVariable""]","[[""errno""], [""e"", ""quote""]]",[-8738965121426090876],581,0.0,5
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=3999bf6360930179f08a1265ce8713705aafd405,17 Nov 2003,"(diff_sparse_files): Temporary placeholder.
",144,data/crawl/tar/hunk_227.cpp,block change,non-trivial,data/crawl/tar/old_hunk_227.cpp,data/crawl/tar/new_hunk_227.cpp,47,-1,report_difference (NULL);,,"[""removeLog""]","[[""report_difference"", ""NULL""], []]",[3487817939530578388],580,67392.0,5
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=05805868f26533141b8b02d5a6449965652ef187,7 Aug 2006,"(read_incr_db_01): Check input strings more carefully.  Do not pass
 arbitrary char values to isspace, as this has undefined behavior.  Likewise
 for assigning arbitrary uintmax_t values to other types. (read_negative_num,
 read_unsigned_num, read_timespec): New functions, to check input values a bit
 more carefuly. (read_num): Use read_unsigned_num.  New arg MAX_VAL; all
 callers changed. (read_incr_db_2): Use these new functions. Use a consistent
 diagnostic for unexpected EOF. (read_directory_file): Do not assign arbitrary
 uintmax_t value to int. (read_timespec, write_directory_file_entry,
 write_directory_file): Handle negative time_t values correctly.  We don't
 bother to do this with pre-2 formats, since presumably the time stamps were
 output incorrectly.
",434,data/crawl/tar/hunk_102.cpp,use same variable,non-trivial,data/crawl/tar/old_hunk_102.cpp,data/crawl/tar/new_hunk_102.cpp,21,28,"ERROR ((0, 0, ""%s:%ld: %s"",
quotearg_colon (listed_incremental_option),
lineno,
_(""Invalid time stamp"")));","ERROR ((0, errno, ""%s:%ld: %s"",
      quotearg_colon (listed_incremental_option),
      lineno,
      _(""Invalid time stamp"")));","[""removeContent"", ""addVariable""]","[[""0""], [""errno""]]",[8285138778856361720],579,0.0,5
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=799e915cd3a889058eeefeaa25391cfe1eae7c3a,15 Apr 1997,"GNU tar 1.12
",1052,data/crawl/tar/hunk_484.cpp,check similar return value,non-trivial,data/crawl/tar/old_hunk_484.cpp,data/crawl/tar/new_hunk_484.cpp,-1,102,,report_difference (message);,"[""addLog""]","[[], [""report_difference"", ""message""]]",[-6167893420632801877],578,0.0,4
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=27e87f4f2f4d49328c328fd55fa087d8a4507168,25 Apr 1997,"GNU tar 1.12
",4615,data/crawl/tar/hunk_471.cpp,check similar return value,non-trivial,data/crawl/tar/old_hunk_471.cpp,data/crawl/tar/new_hunk_471.cpp,-1,440,,"ERROR ((0, errno, ""%s"", volno_file_option));","[""addLog""]","[[], [""ERROR"", ""0"", ""errno"", ""%s"", ""volno_file_option""]]",[20890249650769766495],577,0.0,4
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=49086e2770abfa6ad6a7647e2d0707b607ee1bf8,31 Oct 1997,"(newdir_umask, current_umask): Now mode_t. (extract_sparse_file):
 Args now use off_t.

(set_mode, set_stat, make_directories, extract_sparse_file,
extract_archive): Use off_t, size_t, ssize_t when appropriate.  Remove
now-useless casts.  Use unsigned long to print *_t types, except use
STRINGIFY_BIGINT for off_t.",130,data/crawl/tar/hunk_456.cpp,check similar variable,non-trivial,data/crawl/tar/old_hunk_456.cpp,data/crawl/tar/new_hunk_456.cpp,3,3,"ERROR ((0, errno, _(""%s: Cannot lchown to uid %d gid %d""),
    file_name, stat_info->st_uid, stat_info->st_gid));","ERROR ((0, errno, _(""%s: Cannot lchown to uid %lu gid %lu""),
    file_name,
    (unsigned long) stat_info->st_uid,
    (unsigned long) stat_info->st_gid));","[""updateContent"", ""addVariable""]","[[""%d"", ""%d""], [""%lu"", ""%lu"", ""unsigned"", ""long"", ""unsigned"", ""long""]]",[-11939518791742488030],576,0.0,4
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=1f27dca9765c886a72629a655d538c36c6cb0fea,20 Jul 1999,"(decode_options): ERROR ((TAREXIT_FAILURE, ... -> FATAL_ERROR ((0,
 for consistency.
",8,data/crawl/tar/hunk_425.cpp,use same constant,trivial,data/crawl/tar/old_hunk_425.cpp,data/crawl/tar/new_hunk_425.cpp,3,3,"ERROR ((TAREXIT_FAILURE, 0, _(""Invalid group given on option"")));","FATAL_ERROR ((0, 0, _(""Invalid group given on option"")));","[""updateLog"", ""removeVariable"", ""addContent""]","[[""ERROR"", ""TAREXIT_FAILURE""], [""FATAL_ERROR"", ""0""]]",[-10039368319591374705],575,0.0,4
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=14b158325624a6e42e8bf4f7169c7a55f0afb6f9,16 Aug 1999,"indenting fixes
",8,data/crawl/tar/hunk_415.cpp,use same text format,trivial,data/crawl/tar/old_hunk_415.cpp,data/crawl/tar/new_hunk_415.cpp,3,3,"ERROR ((0, errno, _(""\
Read error at byte %s, reading %lu bytes, in file %s""),
      STRINGIFY_BIGINT (fullsize - *sizeleft, buf),
      (unsigned long) bufsize, name));","ERROR ((0, errno,
      _(""Read error at byte %s, reading %lu bytes, in file %s""),
      STRINGIFY_BIGINT (fullsize - *sizeleft, buf),
      (unsigned long) bufsize, name));","[""updateContent""]","[[""\\""], []]",[-11776035421],574,2160.0,4
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=fcde5487eb6a6bc6ff80bc85a54fa94746494350,17 Aug 1999,"Ghostscript 6.0
",720,data/crawl/tar/hunk_414.cpp,block change,non-trivial,data/crawl/tar/old_hunk_414.cpp,data/crawl/tar/new_hunk_414.cpp,-1,319,,"fputs(buf, out);","[""addLog""]","[[], [""fputs"", ""buf"", ""out""]]",[961448989603819052],573,0.0,4
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=6e9d1539b665c8f3c173b36702ca1650cac977ad,13 Dec 1999,"(<quotearg.h>): New include. (enum permstatus): New enum. (struct
 delayed_set_stat): file_name is now at end of buffer, to avoid two mallocs. 
 New members file_name_len, invert_permissions, permstatus. (extr_init):
 Remove hack that silently adjusted newdir_umask. (set_mode, set_stat): New
 args invert_permissions, permstatus, typeflag. Use these args to decide
 whether and how to set modes. (set_mode, set_stat, prepare_to_extract,
 extract_sparse_file, extract_archive): Don't assume that gettext preserves
 errno. (set_stat): Remove arg symlink_flag; subsumed by typeflag.
 (delay_set_stat, repair_delayed_set_stat): New functions. (make_directories):
 Avoid mkdir where last part of path is "".."". Create a struct delayed_set_stat
 for each directory made. (prepare_to_extract): Renamed from
 unlink_destination, and return 0 immediately if to_stdout_option; all callers
 changed. (maybe_recoverable): New parameter interdir_made. Add support for
 --overwrite. (extract_sparse_file, extract_archive): Quote arbitrary strings
 in diagnostics. (extract_archive): By default, warn about "".."" in member
 names, and skip them. Don't open files with O_NONBLOCK or O_APPEND. Open with
 O_TRUNC only if --overwrite; otherwise, use O_EXCL to avoid overwriting them.
  Pass only rwxrwxrwx permissions to `open' and `mkdir', minus the current
 umask.  Keep track of intermediate directories made, to avoid looping when
 making x/../x when x doesn't exist; the earlier code solved this in a
 different way that didn't fit well into the new scheme.  Don't extract
 permissions onto existing directories unless --overwrite is given.  Do not
 add -wx------ permissions to new directories permanently; just do it
 temporarily. Remove no-longer-needed hack with MSDOS and directory time
 stamps. (apply_delayed_set_stat): New argument specifies which directories to
 fix statuses of.  Do not wait until the end of extraction to fix statuses;
 instead, fix a directory's status once we exit that directory. This requires
 less memory and does the right thing in some cases where the old method
 didn't. (fatal_exit): New function.
",600,data/crawl/tar/hunk_355.cpp,use same variable,trivial,data/crawl/tar/old_hunk_355.cpp,data/crawl/tar/new_hunk_355.cpp,30,32,"ERROR ((0, errno, _(""%s: Cannot lchown to uid %lu gid %lu""),
    file_name,
    (unsigned long) stat_info->st_uid,
    (unsigned long) stat_info->st_gid));","ERROR ((0, e, _(""%s: Cannot lchown to uid %lu gid %lu""),
      quotearg_colon (file_name),
      (unsigned long) stat_info->st_uid,
      (unsigned long) stat_info->st_gid));","[""updateVariable"", ""moveVariable"", ""addVariable""]","[[""errno""], [""e"", ""quotearg_colon""]]",[-9807083819574102387],572,0.0,4
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=c1b9212b16a53da408548efa3f9c8b1a62335b42,4 Oct 2003,"Moved system dependencies to system.c
",664,data/crawl/tar/hunk_233.cpp,invoke same log method,non-trivial,data/crawl/tar/old_hunk_233.cpp,data/crawl/tar/new_hunk_233.cpp,19,-1,report_difference (message);,,"[""removeLog""]","[[""report_difference"", ""message""], []]",[6167893420632801877],571,0.0,4
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=c30c4ffb9fc874aafea6f6c91f3fc78595db4154,18 Jun 2009,"Remove files that were removed in CVS, but reappeared after migration
 to Git
",5265,data/crawl/tar/hunk_64.cpp,block change,non-trivial,data/crawl/tar/old_hunk_64.cpp,data/crawl/tar/new_hunk_64.cpp,319,-1,"fputs(buf, out);",,"[""removeLog""]","[[""fputs"", ""buf"", ""out""], []]",[-961448989603819052],570,0.0,4
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=239441b5dfd0468858bca2e219aae563e1f96d02,6 Dec 2015,"Bugfix

* src/buffer.c (try_new_volume): Warn if user supplied malformed
tar archive.
Consistently use WARN (instead of ERROR) when reporting.",9,data/crawl/tar/hunk_3.cpp,check similar return value,non-trivial,data/crawl/tar/old_hunk_3.cpp,data/crawl/tar/new_hunk_3.cpp,3,3,"ERROR ((0, 0, _(""This does not look like a tar archive"")));","WARN ((0, 0, _(""This does not look like a tar archive"")));","[""updateLog""]","[[""ERROR""], [""WARN""]]",[-11954066244619719719],569,5156640.0,4
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=799e915cd3a889058eeefeaa25391cfe1eae7c3a,15 Apr 1997,"GNU tar 1.12
",1052,data/crawl/tar/hunk_484.cpp,block change,non-trivial,data/crawl/tar/old_hunk_484.cpp,data/crawl/tar/new_hunk_484.cpp,-1,109,,"report_difference (_(""Data differs""));","[""addLog""]","[[], [""report_difference"", ""_"", ""Data"", ""differs""]]",[-2835912118937840285],568,0.0,3
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=818c240503f808e12705dafb1f69077cdd10053b,23 Apr 1997,"GNU tar 1.12
",1525,data/crawl/tar/hunk_477.cpp,check similar return value,non-trivial,data/crawl/tar/old_hunk_477.cpp,data/crawl/tar/new_hunk_477.cpp,-1,706,,"ERROR ((0, errno, _(""%s: Error while closing""), CURRENT_FILE_NAME));","[""addLog""]","[[], [""ERROR"", ""0"", ""errno"", ""_"", ""%s"", ""Error"", ""while"", ""closing"", ""CURRENT_FILE_NAME""]]",[30110988958145336131],567,3840.0,3
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=fcde5487eb6a6bc6ff80bc85a54fa94746494350,17 Aug 1999,"Ghostscript 6.0
",720,data/crawl/tar/hunk_414.cpp,block change,non-trivial,data/crawl/tar/old_hunk_414.cpp,data/crawl/tar/new_hunk_414.cpp,-1,691,,"fputs("");"", out);","[""addLog""]","[[], [""fputs"", ""out""]]",[634424772777578192],566,0.0,3
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=0d70f547f3a9ff4a261b82e9b487c3f65b63fadf,21 Sep 1999,"(struct link): Remove unused linkcount member. (base_64_digits): Move
 to list.c. (base_8_digits): Remove. (to_octal): New function, with some of
 old contents of to_base. (to_base): Remove. (to_base256): New function.
 (to_chars): Use base 256, not base 64, for huge values. (mode_to_chars):
 Don't use two's complement in GNU format or POSIX format. (dump_file):
 Interchange last two arguments.  If TOP_LEVEL is negative, it means we have
 an incremental dump where we don't know whether this is a top-level call. Use
 deref_stat instead of statx / stat / lstat. Cast result of alloca. Check for
 dates if 0 < top_level, not if listed_incremental_option. Move multiple-link
 check after directory check. Do not dump avoided names. Dump hard links to
 symbolic names as links, not as separate symbolic links. start_header cannot
 return a null pointer, so don't test for it. Likewise for find_next_block.
",1015,data/crawl/tar/hunk_400.cpp,check similar return value,non-trivial,data/crawl/tar/old_hunk_400.cpp,data/crawl/tar/new_hunk_400.cpp,62,-1,"ERROR ((0, errno, _(""Cannot remove %s""), p));",,"[""removeLog""]","[[""ERROR"", ""0"", ""errno"", ""_"", ""Cannot"", ""remove"", ""%s"", ""p""], []]",[-8358368121424660287],565,0.0,3
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=51f0c7c36448cb51018feb81a47fb9bb792784c7,11 Oct 1999,"(tartime): Now extern. (read_and): Invalid headers cause errors, not
 warnings.
",7,data/crawl/tar/hunk_393.cpp,check similar return value,non-trivial,data/crawl/tar/old_hunk_393.cpp,data/crawl/tar/new_hunk_393.cpp,-1,8,,"ERROR ((0, 0, _(""Skipping to next header"")));","[""addLog""]","[[], [""ERROR"", ""0"", ""0"", ""_"", ""Skipping"", ""to"", ""next"", ""header""]]",[-1753903362793465671],564,437280.0,3
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=6e9d1539b665c8f3c173b36702ca1650cac977ad,13 Dec 1999,"(<quotearg.h>): New include. (enum permstatus): New enum. (struct
 delayed_set_stat): file_name is now at end of buffer, to avoid two mallocs. 
 New members file_name_len, invert_permissions, permstatus. (extr_init):
 Remove hack that silently adjusted newdir_umask. (set_mode, set_stat): New
 args invert_permissions, permstatus, typeflag. Use these args to decide
 whether and how to set modes. (set_mode, set_stat, prepare_to_extract,
 extract_sparse_file, extract_archive): Don't assume that gettext preserves
 errno. (set_stat): Remove arg symlink_flag; subsumed by typeflag.
 (delay_set_stat, repair_delayed_set_stat): New functions. (make_directories):
 Avoid mkdir where last part of path is "".."". Create a struct delayed_set_stat
 for each directory made. (prepare_to_extract): Renamed from
 unlink_destination, and return 0 immediately if to_stdout_option; all callers
 changed. (maybe_recoverable): New parameter interdir_made. Add support for
 --overwrite. (extract_sparse_file, extract_archive): Quote arbitrary strings
 in diagnostics. (extract_archive): By default, warn about "".."" in member
 names, and skip them. Don't open files with O_NONBLOCK or O_APPEND. Open with
 O_TRUNC only if --overwrite; otherwise, use O_EXCL to avoid overwriting them.
  Pass only rwxrwxrwx permissions to `open' and `mkdir', minus the current
 umask.  Keep track of intermediate directories made, to avoid looping when
 making x/../x when x doesn't exist; the earlier code solved this in a
 different way that didn't fit well into the new scheme.  Don't extract
 permissions onto existing directories unless --overwrite is given.  Do not
 add -wx------ permissions to new directories permanently; just do it
 temporarily. Remove no-longer-needed hack with MSDOS and directory time
 stamps. (apply_delayed_set_stat): New argument specifies which directories to
 fix statuses of.  Do not wait until the end of extraction to fix statuses;
 instead, fix a directory's status once we exit that directory. This requires
 less memory and does the right thing in some cases where the old method
 didn't. (fatal_exit): New function.
",600,data/crawl/tar/hunk_358.cpp,check similar return value,non-trivial,data/crawl/tar/old_hunk_358.cpp,data/crawl/tar/new_hunk_358.cpp,3,3,"ERROR ((0, errno, _(""%s: Could not write to file""), name));",write_error (name);,"[""updateLog"", ""removeVariable"", ""removeContent""]","[[""ERROR"", ""0"", ""errno"", ""_"", ""%s"", ""Could"", ""not"", ""write"", ""to"", ""file""], [""write_error""]]",[-38846500230814132941],563,0.0,3
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=d858a433c82626309e0d974ca923a79ac7f7f18f,31 Aug 2003,"Use current_stat_info
",2077,data/crawl/tar/hunk_259.cpp,check similar return value,non-trivial,data/crawl/tar/old_hunk_259.cpp,data/crawl/tar/new_hunk_259.cpp,81,65,"report_difference (_(""Data differs""));","report_difference (_(""Contents differ""));","[""updateContent""]","[[""Data"", ""differs""], [""Contents"", ""differ""]]",[5844901200695419596],562,0.0,3
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=374ae10d39e9e52789a00202c831a1c7c45e1610,7 Nov 2005,"(xheader_keyword_deleted_p): Remove static qualifier. (struct
 xhdr_tab.decoder): Change prototype. POSIX allows string values to contain
 embedded nulls, so take an extra argument specifying the length of the
 string. (decx,decg,dummy_decoder,atime_decoder,gid_decoder)
 (gname_decoder,linkpath_decoder,ctime_decoder,mtime_decoder)
 (path_decoder,size_decoder,uid_decoder,uname_decoder)
 (sparse_size_decoder,sparse_numblocks_decoder)
 (sparse_offset_decoder,sparse_numbytes_decoder): Likewise. (decode_record):
 Pass value length to the handler (run_override_list): Pass value length to
 the decoder (xheader_print_n): New function (xheader_print): Rewritten using
 xheader_print_n (xheader_finish): Do not rely om strlen to compute the length
 of the collected string: it can contain embedded nulls
 (xheader_string_begin,xheader_string_add,xheader_string_end): New functions.
 (sparse_map_decoder,dumpdir_coder,dumpdir_decoder): New functions. Handle
 GNU.sparse.map and GNU.dumpdir variables. (xhdr_tab): Add new variables.
",275,data/crawl/tar/hunk_138.cpp,check similar return value,non-trivial,data/crawl/tar/old_hunk_138.cpp,data/crawl/tar/new_hunk_138.cpp,-1,19,,"ERROR ((0, 0, _(""Malformed extended header: invalid %s=%s""),
  keyword, arg));","[""addLog""]","[[], [""ERROR"", ""0"", ""0"", ""_"", ""Malformed"", ""extended"", ""header"", ""invalid"", ""%s"", ""%s"", ""keyword"", ""arg""]]",[-7993277460257527416],561,66240.0,3
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=c9e7465642f8dc879ea589b628176e6c9b6656bf,8 May 2006,"(struct directory.contents, flags): New members (nfs,found,new):
 Remove. Replaced by appropriate bitmask values in `flags' field. All uses
 updated. (directory_meta_table): New table. (hash_directory): Rename to
 hash_directory_name (compare_directories): Rename to compare_directory_names
 (hash_directory_meta,compare_directory_meta,find_directory_meta): New
 functions (compare_dirents): Removed (note_directory): Get 7th argument:
 directory contents. All callers updated (dumpdir_locate,makedumpdir): New
 functions (scan_directory): Rewritten. Use makedumpdir to create a sorted
 dumpdir array. This makes the obstack argument unnecessary. Besides,
 ALL_CHILDREN flag is set only for new directories. (procdir): Change return
 type to struct directory. Return immediately if the directory was already
 initialized. Discover directory renames using directory_meta_table.
 (append_incremental_renames): New function. (read_directory_file,
 write_directory_file): Use new snapshot file format.
",1158,data/crawl/tar/hunk_123.cpp,check similar return value,non-trivial,data/crawl/tar/old_hunk_123.cpp,data/crawl/tar/new_hunk_123.cpp,-1,40,,"ERROR ((0, 0, ""%s:%ld: %s"",
    quotearg_colon (listed_incremental_option),
    lineno,
    _(""Time stamp out of range"")));","[""addLog""]","[[], [""ERROR"", ""0"", ""0"", ""%s"", ""%ld"", ""%s"", ""quotearg_colon"", ""listed_incremental_option"", ""lineno"", ""_"", ""Time"", ""stamp"", ""out"", ""of"", ""range""]]",[-2806195093742348100],560,176640.0,3
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=c9e7465642f8dc879ea589b628176e6c9b6656bf,8 May 2006,"(struct directory.contents, flags): New members (nfs,found,new):
 Remove. Replaced by appropriate bitmask values in `flags' field. All uses
 updated. (directory_meta_table): New table. (hash_directory): Rename to
 hash_directory_name (compare_directories): Rename to compare_directory_names
 (hash_directory_meta,compare_directory_meta,find_directory_meta): New
 functions (compare_dirents): Removed (note_directory): Get 7th argument:
 directory contents. All callers updated (dumpdir_locate,makedumpdir): New
 functions (scan_directory): Rewritten. Use makedumpdir to create a sorted
 dumpdir array. This makes the obstack argument unnecessary. Besides,
 ALL_CHILDREN flag is set only for new directories. (procdir): Change return
 type to struct directory. Return immediately if the directory was already
 initialized. Discover directory renames using directory_meta_table.
 (append_incremental_renames): New function. (read_directory_file,
 write_directory_file): Use new snapshot file format.
",1158,data/crawl/tar/hunk_123.cpp,check similar return value,non-trivial,data/crawl/tar/old_hunk_123.cpp,data/crawl/tar/new_hunk_123.cpp,-1,35,,"ERROR ((0, 0, ""%s:%ld: %s"",
    quotearg_colon (listed_incremental_option),
    lineno,
    _(""Invalid time stamp"")));","[""addLog""]","[[], [""ERROR"", ""0"", ""0"", ""%s"", ""%ld"", ""%s"", ""quotearg_colon"", ""listed_incremental_option"", ""lineno"", ""_"", ""Invalid"", ""time"", ""stamp""]]",[-12204441145755381776],559,176640.0,3
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=090d1d36ae038a82d2b4bb54a8464bb7629188b7,23 Jun 2006,"Implement sparse format versioning. Implement new version (1.0) of
 PAX sparse format. (pax_sparse_member_p): Fix condition (pax_dump_header): A
 dispatcher function (pax_dump_header_0,pax_dump_header_1): New functions.
 (pax_optab): Update (oldgnu_dump_header): Minor fix: make sure
 sparse_header.isextended is set before calling set_next_block_after
",283,data/crawl/tar/hunk_115.cpp,check similar return value,non-trivial,data/crawl/tar/old_hunk_115.cpp,data/crawl/tar/new_hunk_115.cpp,-1,152,,"ERROR ((0, 0, _(""%s: malformed sparse archive member""), 
  file->stat_info->orig_file_name));","[""addLog""]","[[], [""ERROR"", ""0"", ""0"", ""_"", ""%s"", ""malformed"", ""sparse"", ""archive"", ""member"", ""file"", ""stat_info"", ""orig_file_name""]]",[38213462912858489860],558,0.0,3
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=05805868f26533141b8b02d5a6449965652ef187,7 Aug 2006,"(read_incr_db_01): Check input strings more carefully.  Do not pass
 arbitrary char values to isspace, as this has undefined behavior.  Likewise
 for assigning arbitrary uintmax_t values to other types. (read_negative_num,
 read_unsigned_num, read_timespec): New functions, to check input values a bit
 more carefuly. (read_num): Use read_unsigned_num.  New arg MAX_VAL; all
 callers changed. (read_incr_db_2): Use these new functions. Use a consistent
 diagnostic for unexpected EOF. (read_directory_file): Do not assign arbitrary
 uintmax_t value to int. (read_timespec, write_directory_file_entry,
 write_directory_file): Handle negative time_t values correctly.  We don't
 bother to do this with pre-2 formats, since presumably the time stamps were
 output incorrectly.
",434,data/crawl/tar/hunk_102.cpp,check similar return value,non-trivial,data/crawl/tar/old_hunk_102.cpp,data/crawl/tar/new_hunk_102.cpp,26,-1,"ERROR ((0, 0, ""%s:%ld: %s"",
quotearg_colon (listed_incremental_option),
lineno,
_(""Time stamp out of range"")));",,"[""removeLog""]","[[""ERROR"", ""0"", ""0"", ""%s"", ""%ld"", ""%s"", ""quotearg_colon"", ""listed_incremental_option"", ""lineno"", ""_"", ""Time"", ""stamp"", ""out"", ""of"", ""range""], []]",[2806195093742348100],557,43680.0,3
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=05805868f26533141b8b02d5a6449965652ef187,7 Aug 2006,"(read_incr_db_01): Check input strings more carefully.  Do not pass
 arbitrary char values to isspace, as this has undefined behavior.  Likewise
 for assigning arbitrary uintmax_t values to other types. (read_negative_num,
 read_unsigned_num, read_timespec): New functions, to check input values a bit
 more carefuly. (read_num): Use read_unsigned_num.  New arg MAX_VAL; all
 callers changed. (read_incr_db_2): Use these new functions. Use a consistent
 diagnostic for unexpected EOF. (read_directory_file): Do not assign arbitrary
 uintmax_t value to int. (read_timespec, write_directory_file_entry,
 write_directory_file): Handle negative time_t values correctly.  We don't
 bother to do this with pre-2 formats, since presumably the time stamps were
 output incorrectly.
",434,data/crawl/tar/hunk_102.cpp,check similar return value,non-trivial,data/crawl/tar/old_hunk_102.cpp,data/crawl/tar/new_hunk_102.cpp,6,-1,"ERROR ((0, 0, ""%s:%ld: %s"",
    quotearg_colon (listed_incremental_option),
    lineno,
    _(""Invalid time stamp"")));",,"[""removeLog""]","[[""ERROR"", ""0"", ""0"", ""%s"", ""%ld"", ""%s"", ""quotearg_colon"", ""listed_incremental_option"", ""lineno"", ""_"", ""Invalid"", ""time"", ""stamp""], []]",[12204441145755381776],556,43680.0,3
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=c30c4ffb9fc874aafea6f6c91f3fc78595db4154,18 Jun 2009,"Remove files that were removed in CVS, but reappeared after migration
 to Git
",5265,data/crawl/tar/hunk_64.cpp,block change,non-trivial,data/crawl/tar/old_hunk_64.cpp,data/crawl/tar/new_hunk_64.cpp,691,-1,"fputs("");"", out);",,"[""removeLog""]","[[""fputs"", ""out""], []]",[-634424772777578192],555,0.0,3
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=32841f71caa7337a62ce231ed787609003bce86f,16 Nov 1994,"*** empty log message ***
",1369,data/crawl/tar/hunk_500.cpp,use same variable,non-trivial,data/crawl/tar/old_hunk_500.cpp,data/crawl/tar/new_hunk_500.cpp,-1,1170,,"fputs(prefix, stream);","[""addLog""]","[[], [""fputs"", ""prefix"", ""stream""]]",[-17431155182665630263],554,0.0,2
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=799e915cd3a889058eeefeaa25391cfe1eae7c3a,15 Apr 1997,"GNU tar 1.12
",1052,data/crawl/tar/hunk_484.cpp,check similar variable,non-trivial,data/crawl/tar/old_hunk_484.cpp,data/crawl/tar/new_hunk_484.cpp,-1,503,,"report_difference (_(""Size differs""));","[""addLog""]","[[], [""report_difference"", ""_"", ""Size"", ""differs""]]",[4142371617784608422],553,0.0,2
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=799e915cd3a889058eeefeaa25391cfe1eae7c3a,15 Apr 1997,"GNU tar 1.12
",1052,data/crawl/tar/hunk_484.cpp,check similar variable,non-trivial,data/crawl/tar/old_hunk_484.cpp,data/crawl/tar/new_hunk_484.cpp,-1,486,,"report_difference (_(""Mode differs""));","[""addLog""]","[[], [""report_difference"", ""_"", ""Mode"", ""differs""]]",[-2338259091415480836],552,0.0,2
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=799e915cd3a889058eeefeaa25391cfe1eae7c3a,15 Apr 1997,"GNU tar 1.12
",1052,data/crawl/tar/hunk_484.cpp,check similar return value,non-trivial,data/crawl/tar/old_hunk_484.cpp,data/crawl/tar/new_hunk_484.cpp,-1,479,,"report_difference (_(""Not a regular file""));","[""addLog""]","[[], [""report_difference"", ""_"", ""Not"", ""a"", ""regular"", ""file""]]",[-3113032933145235184],551,0.0,2
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=818c240503f808e12705dafb1f69077cdd10053b,23 Apr 1997,"GNU tar 1.12
",1525,data/crawl/tar/hunk_477.cpp,check similar return value,non-trivial,data/crawl/tar/old_hunk_477.cpp,data/crawl/tar/new_hunk_477.cpp,-1,337,,"ERROR ((0, errno, _(""%s: Could not write to file""), name));","[""addLog""]","[[], [""ERROR"", ""0"", ""errno"", ""_"", ""%s"", ""Could"", ""not"", ""write"", ""to"", ""file"", ""name""]]",[33921562830575753003],550,0.0,2
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=818c240503f808e12705dafb1f69077cdd10053b,23 Apr 1997,"GNU tar 1.12
",1525,data/crawl/tar/hunk_477.cpp,check similar return value,non-trivial,data/crawl/tar/old_hunk_477.cpp,data/crawl/tar/new_hunk_477.cpp,-1,181,,"ERROR ((0, errno, _(""%s: Cannot chown to uid %d gid %d""),
    file_name, stat_info->st_uid, stat_info->st_gid));","[""addLog""]","[[], [""ERROR"", ""0"", ""errno"", ""_"", ""%s"", ""Cannot"", ""chown"", ""to"", ""uid"", ""%d"", ""gid"", ""%d"", ""file_name"", ""stat_info"", ""st_uid"", ""stat_info"", ""st_gid""]]",[13735850454740235596],549,0.0,2
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=70b61d565b35d3c97f071177995f55c33d0cfdd0,24 Apr 1997,"GNU tar 1.12
",715,data/crawl/tar/hunk_475.cpp,check similar return value,non-trivial,data/crawl/tar/old_hunk_475.cpp,data/crawl/tar/new_hunk_475.cpp,-1,495,,"ERROR ((0, errno, ""%s"", listed_incremental_option));","[""addLog""]","[[], [""ERROR"", ""0"", ""errno"", ""%s"", ""listed_incremental_option""]]",[12854428047407403626],548,0.0,2
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=27e87f4f2f4d49328c328fd55fa087d8a4507168,25 Apr 1997,"GNU tar 1.12
",4615,data/crawl/tar/hunk_471.cpp,check similar variable,non-trivial,data/crawl/tar/old_hunk_471.cpp,data/crawl/tar/new_hunk_471.cpp,466,-1,"fputs (prefix, stream);",,"[""removeLog""]","[[""fputs"", ""prefix"", ""stream""], []]",[17431155182665630263],547,0.0,2
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=5e0e89eac1a00a2edb87ea7b69f1f38c2b1249e1,25 Apr 1997,"GNU tar 1.12
",2453,data/crawl/tar/hunk_468.cpp,check similar variable,non-trivial,data/crawl/tar/old_hunk_468.cpp,data/crawl/tar/new_hunk_468.cpp,-1,1002,,"fputs (_(""\
This is free software; see the source for copying conditions.  There is NO\n\
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n""),
     stdout);","[""addLog""]","[[], [""fputs"", ""_"", ""\\"", ""This"", ""is"", ""free"", ""software"", ""see"", ""the"", ""source"", ""for"", ""copying"", ""conditions"", ""There"", ""is"", ""NO\\n\\"", ""warranty"", ""not"", ""even"", ""for"", ""MERCHANTABILITY"", ""or"", ""FITNESS"", ""FOR"", ""A"", ""PARTICULAR"", ""PURPOSE"", ""\\n"", ""stdout""]]",[6248968462278530505],546,2160.0,2
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=48be206fbfd81aa56056d7327fa8295e27011e5f,31 Oct 1997,"(to_oct): Now static.  Value arg is now uintmax_t.  Accept new args
 giving name of type of octal field, for error messages.  Report an error if
 the value is too large to fit in the field. (gid_to_oct, major_to_oct,
 minor_to_oct, mode_to_oct, off_to_oct, size_to_oct, time_to_oct, uid_to_oct,
 uintmax_to_oct): New functions.

(write_eot, write_long, finish_header, deal_with_sparse,
finish_sparse_file, dump_file): Use dev_t, off_t, ssize_t, size_t when
appropriate.  Remove now-useless casts.  Use unsigned long to print
*_t types, except use STRINGIFY_BIGINT for off_t.

(find_new_file_size): 1st arg is now off_t*.
(finish_sparse_file): Args now use off_t, not long.
Check for lseek error.
(create_archive, dump_file): Cast -1 to dev_t when necessary.
(dump_file): Device arg is now dev_t.
Avoid overflow when testing whether file has holes
by using the new ST_NBLOCKSIZE macro.",281,data/crawl/tar/hunk_447.cpp,use same variable,non-trivial,data/crawl/tar/old_hunk_447.cpp,data/crawl/tar/new_hunk_447.cpp,3,4,"ERROR ((0, errno, _(""\
Read error at byte %ld, reading %d bytes, in file %s""),
 fullsize - *sizeleft, bufsize, name));","ERROR ((0, errno, _(""\
Read error at byte %s, reading %lu bytes, in file %s""),
      STRINGIFY_BIGINT (fullsize - *sizeleft, buf),
      (unsigned long) bufsize, name));","[""moveVariable"", ""updateContent"", ""addVariable""]","[[""%ld"", ""%d""], [""%lu"", ""%s"", ""STRINGIFY_BIGINT"", ""buf"", ""unsigned"", ""long""]]",[-621088932867069340],545,0.0,2
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=4dd9bd50bdcf78b6fbe86cb1153579d3fe57334b,12 Jul 1999,"(append_file): Open the file before statting it, to avoid a race.
 Complain about file shrinkage only when we reach EOF.
",65,data/crawl/tar/hunk_430.cpp,check similar return value,non-trivial,data/crawl/tar/old_hunk_430.cpp,data/crawl/tar/new_hunk_430.cpp,-1,13,,"ERROR ((0, errno, ""%s"", path));","[""addLog""]","[[], [""ERROR"", ""0"", ""errno"", ""%s"", ""path""]]",[20717563378442670088],544,582480.0,2
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=dc4a8aa0c6a5bd68735e2ae220260242487c3f1e,11 Aug 1999,"(<fnmatch.h>): Do not include. (from_chars): Renamed from from_oct. 
 New parameter specifing the negative of the minimum allowed value.  Support
 negative and base-64 values. (base64_map): New var. (base64_init): New
 function. (print_header): Output numeric uids and gids if
 numeric_owner_option.
",207,data/crawl/tar/hunk_423.cpp,use same text,non-trivial,data/crawl/tar/old_hunk_423.cpp,data/crawl/tar/new_hunk_423.cpp,19,22,"ERROR ((0, 0, _(""Blanks in header where octal %s value expected""),
    type));","ERROR ((0, 0,
    _(""Blanks in header where numeric %s value expected""),
    type));","[""updateContent""]","[[""octal""], [""numeric""]]",[4094980648074829014],543,0.0,2
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=203dea13a40bae5c6d2dfa221036babd0e345ffe,14 Aug 1999,"(time): Don't declare if defined. (child_open_for_compress): Undo
 previous change. (close_archive): Use waitpid, POSIX-style, instead of old
 BSD style. (new_volume): Likewise.
",126,data/crawl/tar/hunk_420.cpp,check similar return value,non-trivial,data/crawl/tar/old_hunk_420.cpp,data/crawl/tar/new_hunk_420.cpp,-1,8,,"ERROR ((0, errno, _(""While waiting for child"")));","[""addLog""]","[[], [""ERROR"", ""0"", ""errno"", ""_"", ""While"", ""waiting"", ""for"", ""child""]]",[9697808245548899792],542,0.0,2
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=fcde5487eb6a6bc6ff80bc85a54fa94746494350,17 Aug 1999,"Ghostscript 6.0
",720,data/crawl/tar/hunk_414.cpp,block change,non-trivial,data/crawl/tar/old_hunk_414.cpp,data/crawl/tar/new_hunk_414.cpp,-1,710,,"fputs(breaks[0], out);","[""addLog""]","[[], [""fputs"", ""breaks[0]"", ""out""]]",[-3244297555930287933],541,0.0,2
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=0d70f547f3a9ff4a261b82e9b487c3f65b63fadf,21 Sep 1999,"(struct link): Remove unused linkcount member. (base_64_digits): Move
 to list.c. (base_8_digits): Remove. (to_octal): New function, with some of
 old contents of to_base. (to_base): Remove. (to_base256): New function.
 (to_chars): Use base 256, not base 64, for huge values. (mode_to_chars):
 Don't use two's complement in GNU format or POSIX format. (dump_file):
 Interchange last two arguments.  If TOP_LEVEL is negative, it means we have
 an incremental dump where we don't know whether this is a top-level call. Use
 deref_stat instead of statx / stat / lstat. Cast result of alloca. Check for
 dates if 0 < top_level, not if listed_incremental_option. Move multiple-link
 check after directory check. Do not dump avoided names. Dump hard links to
 symbolic names as links, not as separate symbolic links. start_header cannot
 return a null pointer, so don't test for it. Likewise for find_next_block.
",1015,data/crawl/tar/hunk_402.cpp,check similar return value,non-trivial,data/crawl/tar/old_hunk_402.cpp,data/crawl/tar/new_hunk_402.cpp,-1,311,,"ERROR ((0, errno, _(""%s: close""), p));","[""addLog""]","[[], [""ERROR"", ""0"", ""errno"", ""_"", ""%s"", ""close"", ""p""]]",[23518771888860101399],540,146160.0,2
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=0d70f547f3a9ff4a261b82e9b487c3f65b63fadf,21 Sep 1999,"(struct link): Remove unused linkcount member. (base_64_digits): Move
 to list.c. (base_8_digits): Remove. (to_octal): New function, with some of
 old contents of to_base. (to_base): Remove. (to_base256): New function.
 (to_chars): Use base 256, not base 64, for huge values. (mode_to_chars):
 Don't use two's complement in GNU format or POSIX format. (dump_file):
 Interchange last two arguments.  If TOP_LEVEL is negative, it means we have
 an incremental dump where we don't know whether this is a top-level call. Use
 deref_stat instead of statx / stat / lstat. Cast result of alloca. Check for
 dates if 0 < top_level, not if listed_incremental_option. Move multiple-link
 check after directory check. Do not dump avoided names. Dump hard links to
 symbolic names as links, not as separate symbolic links. start_header cannot
 return a null pointer, so don't test for it. Likewise for find_next_block.
",1015,data/crawl/tar/hunk_402.cpp,check similar variable,non-trivial,data/crawl/tar/old_hunk_402.cpp,data/crawl/tar/new_hunk_402.cpp,-1,309,,"ERROR ((0, errno, _(""%s: file changed as we read it""), p));","[""addLog""]","[[], [""ERROR"", ""0"", ""errno"", ""_"", ""%s"", ""file"", ""changed"", ""as"", ""we"", ""read"", ""it"", ""p""]]",[2082046952357175080],539,146160.0,2
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=0d70f547f3a9ff4a261b82e9b487c3f65b63fadf,21 Sep 1999,"(struct link): Remove unused linkcount member. (base_64_digits): Move
 to list.c. (base_8_digits): Remove. (to_octal): New function, with some of
 old contents of to_base. (to_base): Remove. (to_base256): New function.
 (to_chars): Use base 256, not base 64, for huge values. (mode_to_chars):
 Don't use two's complement in GNU format or POSIX format. (dump_file):
 Interchange last two arguments.  If TOP_LEVEL is negative, it means we have
 an incremental dump where we don't know whether this is a top-level call. Use
 deref_stat instead of statx / stat / lstat. Cast result of alloca. Check for
 dates if 0 < top_level, not if listed_incremental_option. Move multiple-link
 check after directory check. Do not dump avoided names. Dump hard links to
 symbolic names as links, not as separate symbolic links. start_header cannot
 return a null pointer, so don't test for it. Likewise for find_next_block.
",1015,data/crawl/tar/hunk_402.cpp,check similar return value,non-trivial,data/crawl/tar/old_hunk_402.cpp,data/crawl/tar/new_hunk_402.cpp,-1,306,,"ERROR ((0, errno, ""%s: fstat"", p));","[""addLog""]","[[], [""ERROR"", ""0"", ""errno"", ""%s"", ""fstat"", ""p""]]",[12074517764533803997],538,146160.0,2
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=6e36ce5668fdaf3e710ec29b3082c9a1f5c27de5,23 Sep 1999,"(name_next): Go back to using plain chdir. (name_gather): Use
 chdir_arg to keep track of arguments to chdir. (addname): Likewise.
 (name_match): Use chdir_do to act on chdir args. (merge_sort): Moved here
 from incremen.c. (compare_names, add_hierarchy_to_namelist,
 collect_and_sort_names): Likewise. (name_expand): Remove. (name_from_list):
 Skip fack names. Use chdir_do to act on chdir args. (struct avoided_name):
 New struct. (avoided_names): New var. (add_avoided_name, is_avoided_name):
 New functions.
",299,data/crawl/tar/hunk_398.cpp,check similar return value,non-trivial,data/crawl/tar/old_hunk_398.cpp,data/crawl/tar/new_hunk_398.cpp,-1,184,,"ERROR ((0, errno, _(""Cannot stat %s""), name->name));","[""addLog""]","[[], [""ERROR"", ""0"", ""errno"", ""_"", ""Cannot"", ""stat"", ""%s"", ""name"", ""name""]]",[5291327620340408044],537,635040.0,2
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=196caec187f27a3c3e4a68eee6bb388d79dac960,13 Dec 1999,"(xclose, xdup2, child_open_for_compress, child_open_for_uncompress,
 archive_write_error, archive_read_error, flush_archive, close_archive,
 init_volume_number, new_volume): Don't assume that gettext preserves errno.

(xdup2): Don't report errno if dup returns an unexpected nonnegative value.
(open_archive): Reject multivolume verify attempts a bit earlier.
Rename local variable `access', in case it's defined by system header.

(open_archive, backspace_output): Use `Cannot' uniformly, instead of
`Could not' sometimes and `Cannot' others.

(open_archive, flush_read, flush_archive, close_archive, new_volume):
Quote arbitrary strings in diagnostics.

(read_error): Set archive to STDOUT_FILENO temporarily when writing
archive buffer.

(init_volume_number): Check for input and output errors in volno_file.

(new_volume): Use new fatal_exit function to exit, and new xfork
function to fork.",292,data/crawl/tar/hunk_384.cpp,check similar return value,non-trivial,data/crawl/tar/old_hunk_384.cpp,data/crawl/tar/new_hunk_384.cpp,7,9,"ERROR ((0, errno, ""%s"", volno_file_option));",open_error (volno_file_option);,"[""updateLog"", ""removeVariable"", ""removeContent""]","[[""ERROR"", ""0"", ""errno"", ""%s""], [""open_error""]]",[-16338113477479155614],536,0.0,2
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=6e9d1539b665c8f3c173b36702ca1650cac977ad,13 Dec 1999,"(<quotearg.h>): New include. (enum permstatus): New enum. (struct
 delayed_set_stat): file_name is now at end of buffer, to avoid two mallocs. 
 New members file_name_len, invert_permissions, permstatus. (extr_init):
 Remove hack that silently adjusted newdir_umask. (set_mode, set_stat): New
 args invert_permissions, permstatus, typeflag. Use these args to decide
 whether and how to set modes. (set_mode, set_stat, prepare_to_extract,
 extract_sparse_file, extract_archive): Don't assume that gettext preserves
 errno. (set_stat): Remove arg symlink_flag; subsumed by typeflag.
 (delay_set_stat, repair_delayed_set_stat): New functions. (make_directories):
 Avoid mkdir where last part of path is "".."". Create a struct delayed_set_stat
 for each directory made. (prepare_to_extract): Renamed from
 unlink_destination, and return 0 immediately if to_stdout_option; all callers
 changed. (maybe_recoverable): New parameter interdir_made. Add support for
 --overwrite. (extract_sparse_file, extract_archive): Quote arbitrary strings
 in diagnostics. (extract_archive): By default, warn about "".."" in member
 names, and skip them. Don't open files with O_NONBLOCK or O_APPEND. Open with
 O_TRUNC only if --overwrite; otherwise, use O_EXCL to avoid overwriting them.
  Pass only rwxrwxrwx permissions to `open' and `mkdir', minus the current
 umask.  Keep track of intermediate directories made, to avoid looping when
 making x/../x when x doesn't exist; the earlier code solved this in a
 different way that didn't fit well into the new scheme.  Don't extract
 permissions onto existing directories unless --overwrite is given.  Do not
 add -wx------ permissions to new directories permanently; just do it
 temporarily. Remove no-longer-needed hack with MSDOS and directory time
 stamps. (apply_delayed_set_stat): New argument specifies which directories to
 fix statuses of.  Do not wait until the end of extraction to fix statuses;
 instead, fix a directory's status once we exit that directory. This requires
 less memory and does the right thing in some cases where the old method
 didn't. (fatal_exit): New function.
",600,data/crawl/tar/hunk_365.cpp,use same text format,non-trivial,data/crawl/tar/old_hunk_365.cpp,data/crawl/tar/new_hunk_365.cpp,7,9,"ERROR ((0, errno, _(""%s: Could not create symlink to `%s'""),
  CURRENT_FILE_NAME, current_link_name));","ERROR ((0, e, _(""%s: Cannot create symlink to %s""),
  quotearg_colon (CURRENT_FILE_NAME),
  quote (current_link_name)));","[""updateVariable"", ""moveVariable"", ""updateContent"", ""addVariable""]","[[""errno"", ""Could"", ""not""], [""e"", ""Cannot"", ""quotearg_colon"", ""quote""]]",[-24576053682506722969],535,0.0,2
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=53f16a59713b32843f27332dbe807c06c7fc34bf,7 Jan 2000,"(extr_init): If we run out of memory, invoke apply_delayed_set_stat.
 (set_mode): Use Use error message functions to report errors consistently.
 (set_stat): Likewise. (repair_delayed_set_stat): Quote file names with colons
 if possible. (prepare_to_extract): Don't complain if we can't remove ""."".
 (extract_sparse_file): Use consistent message for unexpected EOF. Use error
 message functions to report errors consistently. (extract_archive): Use
 consistent message for unexpected EOF. Use error message functions to report
 errors consistently. Quote file names with colons if possible.
 (apply_delayed_set_stat): New function. (apply_nonancestor_delayed_set_stat):
 Renamed from apply_delayed_set_stat. Don't remove head if it doesn't apply.
 (fatal_exit): Invoke apply_delayed_set_stat with no args.
",94,data/crawl/tar/hunk_337.cpp,use same text format,non-trivial,data/crawl/tar/old_hunk_337.cpp,data/crawl/tar/new_hunk_337.cpp,3,3,"ERROR ((0, 0, _(""Unexpected inconsistency when making directory %s""),
  quote (dir_name)));","ERROR ((0, 0, _(""%s: Unexpected inconsistency when making directory""),
  quotearg_colon (dir_name)));","[""updateVariable"", ""updateContent""]","[[""quote""], [""quotearg_colon""]]",[-1068118698148011511],534,0.0,2
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=f74454cb37c715674796f21a2fd75eb0a5a34002,7 Jan 2000,"(find_new_file_size): Return size instead of storing through pointer.
 All callers changed. (deal_with_sparse): Don't keep reading after read
 errors. (finish_sparse_file): Just abort if there is an internal error. Use
 error message functions to report errors consistently. (dump_file): Fix typo:
 stat_warn and stat_error were interchanged. Quote file names with colons if
 possible. Don't restore access times on directories during incremental dumps
 until after dealing with the directory. If ignoring failed reads, count
 closedir errors as warnings, not errors. Fix buffer overrun problem when
 dumping sparse files. If ignoring failed reads, count read errors as
 warnings, not errors. Use error message functions to report errors
 consistently. If ignoring failed reads, count unknown files as warnings, not
 errors.
",236,data/crawl/tar/hunk_326.cpp,check similar return value,non-trivial,data/crawl/tar/old_hunk_326.cpp,data/crawl/tar/new_hunk_326.cpp,22,-1,"ERROR ((0, e,
      _(""Read error at byte %s, reading %lu bytes, in file %s""),
      STRINGIFY_BIGINT (fullsize - *sizeleft, buf),
      (unsigned long) bufsize, quote (name)));",,"[""removeLog""]","[[""ERROR"", ""0"", ""e"", ""_"", ""Read"", ""error"", ""at"", ""byte"", ""%s"", ""reading"", ""%lu"", ""bytes"", ""in"", ""file"", ""%s"", ""STRINGIFY_BIGINT"", ""fullsize"", ""*sizeleft"", ""buf"", ""unsigned"", ""long"", ""bufsize"", ""quote"", ""name""], []]",[-2315910437762395717],533,0.0,2
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=31d9c7e2a4344d8f884c93dd4fb467894de69e99,24 Jul 2003,"(chdir_do): Fixed call to restore_cwd
",899,data/crawl/tar/hunk_282.cpp,check similar return value,non-trivial,data/crawl/tar/old_hunk_282.cpp,data/crawl/tar/new_hunk_282.cpp,-1,20,,"ERROR ((0, e, _(""%s: Cannot rename to %s""),
      quotearg_colon (before_backup_name),
      quote_n (1, after_backup_name)));","[""addLog""]","[[], [""ERROR"", ""0"", ""e"", ""_"", ""%s"", ""Cannot"", ""rename"", ""to"", ""%s"", ""quotearg_colon"", ""before_backup_name"", ""quote_n"", ""1"", ""after_backup_name""]]",[16504530862957520272],532,0.0,2
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=31d9c7e2a4344d8f884c93dd4fb467894de69e99,24 Jul 2003,"(chdir_do): Fixed call to restore_cwd
",899,data/crawl/tar/hunk_281.cpp,check similar return value,non-trivial,data/crawl/tar/old_hunk_281.cpp,data/crawl/tar/new_hunk_281.cpp,3,3,"ERROR ((0, errno, ""%s"", path));",stat_error (path);,"[""updateLog"", ""removeVariable"", ""removeContent""]","[[""ERROR"", ""0"", ""errno"", ""%s""], [""stat_error""]]",[-20763455767742925080],531,949680.0,2
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=5be0f2ba491f27074c35875185286d1d425ce044,31 Aug 2003,"New file
",295,data/crawl/tar/hunk_277.cpp,check similar variable,non-trivial,data/crawl/tar/old_hunk_277.cpp,data/crawl/tar/new_hunk_277.cpp,-1,110,,"ERROR ((0, 0, _(""Malformed extended headed"")));","[""addLog""]","[[], [""ERROR"", ""0"", ""0"", ""_"", ""Malformed"", ""extended"", ""headed""]]",[6499775363201000727],530,0.0,2
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=d858a433c82626309e0d974ca923a79ac7f7f18f,31 Aug 2003,"Use current_stat_info
",2077,data/crawl/tar/hunk_274.cpp,check similar return value,non-trivial,data/crawl/tar/old_hunk_274.cpp,data/crawl/tar/new_hunk_274.cpp,181,93,"ERROR ((0, errno, ""%s"", listed_incremental_option));",read_error (listed_incremental_option);,"[""updateLog"", ""removeVariable"", ""removeContent""]","[[""ERROR"", ""0"", ""errno"", ""%s""], [""read_error""]]",[-22658329873496918114],529,977040.0,2
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=d858a433c82626309e0d974ca923a79ac7f7f18f,31 Aug 2003,"Use current_stat_info
",2077,data/crawl/tar/hunk_273.cpp,check similar return value,non-trivial,data/crawl/tar/old_hunk_273.cpp,data/crawl/tar/new_hunk_273.cpp,157,172,"ERROR ((0, errno, _(""Cannot stat %s""), name_buffer));",stat_error (name_buffer);,"[""updateLog"", ""removeVariable"", ""removeContent""]","[[""ERROR"", ""0"", ""errno"", ""_"", ""Cannot"", ""stat"", ""%s""], [""stat_error""]]",[-17812926757777908747],528,977040.0,2
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=d858a433c82626309e0d974ca923a79ac7f7f18f,31 Aug 2003,"Use current_stat_info
",2077,data/crawl/tar/hunk_264.cpp,check similar return value,non-trivial,data/crawl/tar/old_hunk_264.cpp,data/crawl/tar/new_hunk_264.cpp,17,14,"report_difference (_(""Not a regular file""));","report_difference (_(""File type differs""));","[""updateContent""]","[[""Not"", ""a"", ""regular"", ""file""], [""File"", ""type"", ""differs""]]",[10900295297319332681],527,0.0,2
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=10edb315da532371e65a7d83a16f50ade5b545e4,3 Sep 2003,"(struct xhdr_tab.keyword): Now pointer to const. (struct
 xhdr_tab.coder, struct xhdr_tab.decoder, locate_handler, decode_record,
 xheader_store, xheader_print, code_string, code_time, code_num, dummy_coder,
 dummy_decoder, atime_coder, atime_decoder, gid_coder, gid_decoder,
 gname_coder, gname_decoder, linkpath_coder, linkpath_decoder, ctime_coder,
 ctime_decoder, mtime_coder, mtime_decoder, path_coder, path_decoder,
 size_coder, size_decoder, uid_coder, uid_decoder, uname_coder,
 uname_decoder): Use pointers to const when possible. (xhdr_tab): Now const.

(struct xhdr_tab.decoder, dummy_decoder,
atime_decoder, gid_decoder, gname_decoder, linkpath_decoder,
ctime_decoder, mtime_decoder, path_decoder, size_decoder,
uid_decoder, uname_decoder): Remove unused keyword arg.
All uses changed.

(xhdr_tab, format_uintmax): Now static.

(dummy_coder, dummy_decoder, atime_coder,
atime_decoder, gid_coder, gid_decoder, gname_coder, gname_decoder,
linkpath_coder, linkpath_decoder, mtime_coder, mtime_decoder,
ctime_coder, ctime_decoder, path_coder, path_decoder, size_coder,
size_decoder, uid_coder, uid_decoder, uname_coder, uname_decoder):
Remove forward decls; no longer needed.
(xhdr_tab): Move to end, so that the forward decls aren't needed.
Add a forward declaration.

(decode_record): Return bool, not int.

(decode_record): Fix misspelling in diagnostic
""extended headed"" -> ""extended header"".

(decode_record, xheader_decode):
Do not use decls like ""char *p, *q;"".",258,data/crawl/tar/hunk_257.cpp,use same text,non-trivial,data/crawl/tar/old_hunk_257.cpp,data/crawl/tar/new_hunk_257.cpp,17,18,"ERROR ((0, 0, _(""Malformed extended headed"")));","ERROR ((0, 0, _(""Malformed extended header"")));","[""updateContent""]","[[""headed""], [""header""]]",[10],526,0.0,2
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=b085ca30976ec26256344bd3532205d440e69309,4 Oct 2003,"System-dependent functions
",633,data/crawl/tar/hunk_245.cpp,check similar variable,non-trivial,data/crawl/tar/old_hunk_245.cpp,data/crawl/tar/new_hunk_245.cpp,-1,237,,"report_difference (_(""Gid differs""));","[""addLog""]","[[], [""report_difference"", ""_"", ""Gid"", ""differs""]]",[679502179580441274],525,1701360.0,2
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=b085ca30976ec26256344bd3532205d440e69309,4 Oct 2003,"System-dependent functions
",633,data/crawl/tar/hunk_245.cpp,check similar variable,non-trivial,data/crawl/tar/old_hunk_245.cpp,data/crawl/tar/new_hunk_245.cpp,-1,235,,"report_difference (_(""Uid differs""));","[""addLog""]","[[], [""report_difference"", ""_"", ""Uid"", ""differs""]]",[3361469078397983500],524,1701360.0,2
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=b085ca30976ec26256344bd3532205d440e69309,4 Oct 2003,"System-dependent functions
",633,data/crawl/tar/hunk_245.cpp,check similar return value,non-trivial,data/crawl/tar/old_hunk_245.cpp,data/crawl/tar/new_hunk_245.cpp,-1,201,,"ERROR ((0, 0, _(""Child returned status %d""),
WEXITSTATUS (wait_status)));","[""addLog""]","[[], [""ERROR"", ""0"", ""0"", ""_"", ""Child"", ""returned"", ""status"", ""%d"", ""WEXITSTATUS"", ""wait_status""]]",[5089383475775470177],523,1694160.0,2
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=c1b9212b16a53da408548efa3f9c8b1a62335b42,4 Oct 2003,"Moved system dependencies to system.c
",664,data/crawl/tar/hunk_235.cpp,invoke same log method,non-trivial,data/crawl/tar/old_hunk_235.cpp,data/crawl/tar/new_hunk_235.cpp,-1,7,,"report_difference (ngettext (""Could only read %lu of %lu byte"",
     ""Could only read %lu of %lu bytes"",
     chunk_size),
     (unsigned long) status,
     (unsigned long) chunk_size);","[""addLog""]","[[], [""report_difference"", ""ngettext"", ""Could"", ""only"", ""read"", ""%lu"", ""of"", ""%lu"", ""byte"", ""Could"", ""only"", ""read"", ""%lu"", ""of"", ""%lu"", ""bytes"", ""chunk_size"", ""unsigned"", ""long"", ""status"", ""unsigned"", ""long"", ""chunk_size""]]",[-22896553458468658720],522,0.0,2
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=3999bf6360930179f08a1265ce8713705aafd405,17 Nov 2003,"(diff_sparse_files): Temporary placeholder.
",144,data/crawl/tar/hunk_227.cpp,check similar return value,non-trivial,data/crawl/tar/old_hunk_227.cpp,data/crawl/tar/new_hunk_227.cpp,72,-1,"report_difference (ngettext (""Could only read %lu of %lu byte"",
     ""Could only read %lu of %lu bytes"",
     chunk_size),
     (unsigned long) status,
     (unsigned long) chunk_size);",,"[""removeLog""]","[[""report_difference"", ""ngettext"", ""Could"", ""only"", ""read"", ""%lu"", ""of"", ""%lu"", ""byte"", ""Could"", ""only"", ""read"", ""%lu"", ""of"", ""%lu"", ""bytes"", ""chunk_size"", ""unsigned"", ""long"", ""status"", ""unsigned"", ""long"", ""chunk_size""], []]",[22896553458468658720],521,0.0,2
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=d4e70d365615e56cadd4093aaa5c0046cf2c9c95,17 Nov 2003,"(sys_compare_uid,sys_compare_gid): New functions
 (sys_compare_uid_gid): Removed. (sys_compare_links): Changed declaration
",44,data/crawl/tar/hunk_224.cpp,check similar variable,non-trivial,data/crawl/tar/old_hunk_224.cpp,data/crawl/tar/new_hunk_224.cpp,9,-1,"report_difference (_(""Gid differs""));",,"[""removeLog""]","[[""report_difference"", ""_"", ""Gid"", ""differs""], []]",[-679502179580441274],520,31680.0,2
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=d4e70d365615e56cadd4093aaa5c0046cf2c9c95,17 Nov 2003,"(sys_compare_uid,sys_compare_gid): New functions
 (sys_compare_uid_gid): Removed. (sys_compare_links): Changed declaration
",44,data/crawl/tar/hunk_224.cpp,check similar variable,non-trivial,data/crawl/tar/old_hunk_224.cpp,data/crawl/tar/new_hunk_224.cpp,7,-1,"report_difference (_(""Uid differs""));",,"[""removeLog""]","[[""report_difference"", ""_"", ""Uid"", ""differs""], []]",[-3361469078397983500],519,31680.0,2
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=8d6e47cc7fcfb6781b82ba60b8eb823c7fdc7013,17 Nov 2003,"Support for star sparse format
",157,data/crawl/tar/hunk_208.cpp,check similar return value,non-trivial,data/crawl/tar/old_hunk_208.cpp,data/crawl/tar/new_hunk_208.cpp,-1,55,,"ERROR ((0, 0, _(""%s: invalid sparse archive member""),
      file->stat_info->orig_file_name));","[""addLog""]","[[], [""ERROR"", ""0"", ""0"", ""_"", ""%s"", ""invalid"", ""sparse"", ""archive"", ""member"", ""file"", ""stat_info"", ""orig_file_name""]]",[26612204202219195932],518,0.0,2
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=9a71d32d2f16989a8c82d3946d4f7ecd6093a55a,5 Feb 2005,"Code clean up.
",489,data/crawl/tar/hunk_168.cpp,check similar return value,non-trivial,data/crawl/tar/old_hunk_168.cpp,data/crawl/tar/new_hunk_168.cpp,-1,233,,"ERROR ((0, 0, _(""%s: Unknown file type '%c', diffed as normal file""),
      quotearg_colon (current_stat_info.file_name),
      current_header->header.typeflag));","[""addLog""]","[[], [""ERROR"", ""0"", ""0"", ""_"", ""%s"", ""Unknown"", ""file"", ""type"", ""%c"", ""diffed"", ""as"", ""normal"", ""file"", ""quotearg_colon"", ""current_stat_info"", ""file_name"", ""current_header"", ""header"", ""typeflag""]]",[-9769860923353638288],517,377280.0,2
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=1e304fc5fd4fba5455057e74b09d08f954753340,5 Nov 2005,"(struct directory.mtime): New member. (note_directory): Take
 additional arguments. All callers updated. (scan_directory): Updated to use
 more metadata. In particular, this allows to correctly detect renamed files.
 (read_directory_file,write_directory_file) (write_directory_file_entry):
 Support new directory file format.
",284,data/crawl/tar/hunk_141.cpp,check similar variable,non-trivial,data/crawl/tar/old_hunk_141.cpp,data/crawl/tar/new_hunk_141.cpp,-1,11,,"ERROR((1, 0, _(""Bad incremental file format"")));","[""addLog""]","[[], [""ERROR"", ""1"", ""0"", ""_"", ""Bad"", ""incremental"", ""file"", ""format""]]",[11796039148251015704],516,0.0,2
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=1e304fc5fd4fba5455057e74b09d08f954753340,5 Nov 2005,"(struct directory.mtime): New member. (note_directory): Take
 additional arguments. All callers updated. (scan_directory): Updated to use
 more metadata. In particular, this allows to correctly detect renamed files.
 (read_directory_file,write_directory_file) (write_directory_file_entry):
 Support new directory file format.
",284,data/crawl/tar/hunk_141.cpp,use same variable,non-trivial,data/crawl/tar/old_hunk_141.cpp,data/crawl/tar/new_hunk_141.cpp,7,49,"ERROR ((0, 0, ""%s:1: %s"", quotearg_colon (listed_incremental_option),
_(""Invalid time stamp"")));","ERROR ((0, 0, ""%s:%ld: %s"",
    quotearg_colon (listed_incremental_option),
    lineno,
    _(""Invalid time stamp"")));","[""updateContent"", ""addVariable""]","[[""1""], [""%ld"", ""lineno""]]",[-11775054436867289357],515,0.0,2
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=374ae10d39e9e52789a00202c831a1c7c45e1610,7 Nov 2005,"(xheader_keyword_deleted_p): Remove static qualifier. (struct
 xhdr_tab.decoder): Change prototype. POSIX allows string values to contain
 embedded nulls, so take an extra argument specifying the length of the
 string. (decx,decg,dummy_decoder,atime_decoder,gid_decoder)
 (gname_decoder,linkpath_decoder,ctime_decoder,mtime_decoder)
 (path_decoder,size_decoder,uid_decoder,uname_decoder)
 (sparse_size_decoder,sparse_numblocks_decoder)
 (sparse_offset_decoder,sparse_numbytes_decoder): Likewise. (decode_record):
 Pass value length to the handler (run_override_list): Pass value length to
 the decoder (xheader_print_n): New function (xheader_print): Rewritten using
 xheader_print_n (xheader_finish): Do not rely om strlen to compute the length
 of the collected string: it can contain embedded nulls
 (xheader_string_begin,xheader_string_add,xheader_string_end): New functions.
 (sparse_map_decoder,dumpdir_coder,dumpdir_decoder): New functions. Handle
 GNU.sparse.map and GNU.dumpdir variables. (xhdr_tab): Add new variables.
",275,data/crawl/tar/hunk_138.cpp,check similar variable,non-trivial,data/crawl/tar/old_hunk_138.cpp,data/crawl/tar/new_hunk_138.cpp,-1,47,,"ERROR ((0, 0, _(""Malformed extended header: excess %s=%s""),
      ""GNU.sparse.numbytes"", arg));","[""addLog""]","[[], [""ERROR"", ""0"", ""0"", ""_"", ""Malformed"", ""extended"", ""header"", ""excess"", ""%s"", ""%s"", ""GNU"", ""sparse"", ""numbytes"", ""arg""]]",[5762359339431995225],514,98640.0,2
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=c9e7465642f8dc879ea589b628176e6c9b6656bf,8 May 2006,"(struct directory.contents, flags): New members (nfs,found,new):
 Remove. Replaced by appropriate bitmask values in `flags' field. All uses
 updated. (directory_meta_table): New table. (hash_directory): Rename to
 hash_directory_name (compare_directories): Rename to compare_directory_names
 (hash_directory_meta,compare_directory_meta,find_directory_meta): New
 functions (compare_dirents): Removed (note_directory): Get 7th argument:
 directory contents. All callers updated (dumpdir_locate,makedumpdir): New
 functions (scan_directory): Rewritten. Use makedumpdir to create a sorted
 dumpdir array. This makes the obstack argument unnecessary. Besides,
 ALL_CHILDREN flag is set only for new directories. (procdir): Change return
 type to struct directory. Return immediately if the directory was already
 initialized. Discover directory renames using directory_meta_table.
 (append_incremental_renames): New function. (read_directory_file,
 write_directory_file): Use new snapshot file format.
",1158,data/crawl/tar/hunk_123.cpp,check similar variable,non-trivial,data/crawl/tar/old_hunk_123.cpp,data/crawl/tar/new_hunk_123.cpp,-1,129,,"ERROR ((0, 0, ""%s:%ld: %s"",
quotearg_colon (listed_incremental_option), lineno,
_(""Inode number out of range"")));","[""addLog""]","[[], [""ERROR"", ""0"", ""0"", ""%s"", ""%ld"", ""%s"", ""quotearg_colon"", ""listed_incremental_option"", ""lineno"", ""_"", ""Inode"", ""number"", ""out"", ""of"", ""range""]]",[-22812606432656395322],513,706320.0,2
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=c9e7465642f8dc879ea589b628176e6c9b6656bf,8 May 2006,"(struct directory.contents, flags): New members (nfs,found,new):
 Remove. Replaced by appropriate bitmask values in `flags' field. All uses
 updated. (directory_meta_table): New table. (hash_directory): Rename to
 hash_directory_name (compare_directories): Rename to compare_directory_names
 (hash_directory_meta,compare_directory_meta,find_directory_meta): New
 functions (compare_dirents): Removed (note_directory): Get 7th argument:
 directory contents. All callers updated (dumpdir_locate,makedumpdir): New
 functions (scan_directory): Rewritten. Use makedumpdir to create a sorted
 dumpdir array. This makes the obstack argument unnecessary. Besides,
 ALL_CHILDREN flag is set only for new directories. (procdir): Change return
 type to struct directory. Return immediately if the directory was already
 initialized. Discover directory renames using directory_meta_table.
 (append_incremental_renames): New function. (read_directory_file,
 write_directory_file): Use new snapshot file format.
",1158,data/crawl/tar/hunk_123.cpp,check similar variable,non-trivial,data/crawl/tar/old_hunk_123.cpp,data/crawl/tar/new_hunk_123.cpp,-1,113,,"ERROR ((0, 0, ""%s:%ld: %s"",
quotearg_colon (listed_incremental_option), lineno,
_(""Invalid device number"")));","[""addLog""]","[[], [""ERROR"", ""0"", ""0"", ""%s"", ""%ld"", ""%s"", ""quotearg_colon"", ""listed_incremental_option"", ""lineno"", ""_"", ""Invalid"", ""device"", ""number""]]",[-32877137414318571082],512,706320.0,2
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=c9e7465642f8dc879ea589b628176e6c9b6656bf,8 May 2006,"(struct directory.contents, flags): New members (nfs,found,new):
 Remove. Replaced by appropriate bitmask values in `flags' field. All uses
 updated. (directory_meta_table): New table. (hash_directory): Rename to
 hash_directory_name (compare_directories): Rename to compare_directory_names
 (hash_directory_meta,compare_directory_meta,find_directory_meta): New
 functions (compare_dirents): Removed (note_directory): Get 7th argument:
 directory contents. All callers updated (dumpdir_locate,makedumpdir): New
 functions (scan_directory): Rewritten. Use makedumpdir to create a sorted
 dumpdir array. This makes the obstack argument unnecessary. Besides,
 ALL_CHILDREN flag is set only for new directories. (procdir): Change return
 type to struct directory. Return immediately if the directory was already
 initialized. Discover directory renames using directory_meta_table.
 (append_incremental_renames): New function. (read_directory_file,
 write_directory_file): Use new snapshot file format.
",1158,data/crawl/tar/hunk_123.cpp,check similar variable,non-trivial,data/crawl/tar/old_hunk_123.cpp,data/crawl/tar/new_hunk_123.cpp,-1,102,,"ERROR ((0, 0, ""%s:%ld: %s"",
    quotearg_colon (listed_incremental_option), lineno,
    _(""Modification time (nanoseconds) out of range"")));","[""addLog""]","[[], [""ERROR"", ""0"", ""0"", ""%s"", ""%ld"", ""%s"", ""quotearg_colon"", ""listed_incremental_option"", ""lineno"", ""_"", ""Modification"", ""time"", ""nanoseconds"", ""out"", ""of"", ""range""]]",[-10374727969655615658],511,132480.0,2
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=c9e7465642f8dc879ea589b628176e6c9b6656bf,8 May 2006,"(struct directory.contents, flags): New members (nfs,found,new):
 Remove. Replaced by appropriate bitmask values in `flags' field. All uses
 updated. (directory_meta_table): New table. (hash_directory): Rename to
 hash_directory_name (compare_directories): Rename to compare_directory_names
 (hash_directory_meta,compare_directory_meta,find_directory_meta): New
 functions (compare_dirents): Removed (note_directory): Get 7th argument:
 directory contents. All callers updated (dumpdir_locate,makedumpdir): New
 functions (scan_directory): Rewritten. Use makedumpdir to create a sorted
 dumpdir array. This makes the obstack argument unnecessary. Besides,
 ALL_CHILDREN flag is set only for new directories. (procdir): Change return
 type to struct directory. Return immediately if the directory was already
 initialized. Discover directory renames using directory_meta_table.
 (append_incremental_renames): New function. (read_directory_file,
 write_directory_file): Use new snapshot file format.
",1158,data/crawl/tar/hunk_123.cpp,check similar variable,non-trivial,data/crawl/tar/old_hunk_123.cpp,data/crawl/tar/new_hunk_123.cpp,-1,98,,"ERROR ((0, 0, ""%s:%ld: %s"",
    quotearg_colon (listed_incremental_option), lineno,
    _(""Invalid modification time (nanoseconds)"")));","[""addLog""]","[[], [""ERROR"", ""0"", ""0"", ""%s"", ""%ld"", ""%s"", ""quotearg_colon"", ""listed_incremental_option"", ""lineno"", ""_"", ""Invalid"", ""modification"", ""time"", ""nanoseconds""]]",[-19772974021668649334],510,132480.0,2
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=c9e7465642f8dc879ea589b628176e6c9b6656bf,8 May 2006,"(struct directory.contents, flags): New members (nfs,found,new):
 Remove. Replaced by appropriate bitmask values in `flags' field. All uses
 updated. (directory_meta_table): New table. (hash_directory): Rename to
 hash_directory_name (compare_directories): Rename to compare_directory_names
 (hash_directory_meta,compare_directory_meta,find_directory_meta): New
 functions (compare_dirents): Removed (note_directory): Get 7th argument:
 directory contents. All callers updated (dumpdir_locate,makedumpdir): New
 functions (scan_directory): Rewritten. Use makedumpdir to create a sorted
 dumpdir array. This makes the obstack argument unnecessary. Besides,
 ALL_CHILDREN flag is set only for new directories. (procdir): Change return
 type to struct directory. Return immediately if the directory was already
 initialized. Discover directory renames using directory_meta_table.
 (append_incremental_renames): New function. (read_directory_file,
 write_directory_file): Use new snapshot file format.
",1158,data/crawl/tar/hunk_123.cpp,check similar variable,non-trivial,data/crawl/tar/old_hunk_123.cpp,data/crawl/tar/new_hunk_123.cpp,-1,90,,"ERROR ((0, 0, ""%s:%ld: %s"",
    quotearg_colon (listed_incremental_option), lineno,
    _(""Modification time (seconds) out of range"")));","[""addLog""]","[[], [""ERROR"", ""0"", ""0"", ""%s"", ""%ld"", ""%s"", ""quotearg_colon"", ""listed_incremental_option"", ""lineno"", ""_"", ""Modification"", ""time"", ""seconds"", ""out"", ""of"", ""range""]]",[-13329338601747945452],509,132480.0,2
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=c9e7465642f8dc879ea589b628176e6c9b6656bf,8 May 2006,"(struct directory.contents, flags): New members (nfs,found,new):
 Remove. Replaced by appropriate bitmask values in `flags' field. All uses
 updated. (directory_meta_table): New table. (hash_directory): Rename to
 hash_directory_name (compare_directories): Rename to compare_directory_names
 (hash_directory_meta,compare_directory_meta,find_directory_meta): New
 functions (compare_dirents): Removed (note_directory): Get 7th argument:
 directory contents. All callers updated (dumpdir_locate,makedumpdir): New
 functions (scan_directory): Rewritten. Use makedumpdir to create a sorted
 dumpdir array. This makes the obstack argument unnecessary. Besides,
 ALL_CHILDREN flag is set only for new directories. (procdir): Change return
 type to struct directory. Return immediately if the directory was already
 initialized. Discover directory renames using directory_meta_table.
 (append_incremental_renames): New function. (read_directory_file,
 write_directory_file): Use new snapshot file format.
",1158,data/crawl/tar/hunk_123.cpp,check similar variable,non-trivial,data/crawl/tar/old_hunk_123.cpp,data/crawl/tar/new_hunk_123.cpp,-1,86,,"ERROR ((0, 0, ""%s:%ld: %s"",
    quotearg_colon (listed_incremental_option), lineno,
    _(""Invalid modification time (seconds)"")));","[""addLog""]","[[], [""ERROR"", ""0"", ""0"", ""%s"", ""%ld"", ""%s"", ""quotearg_colon"", ""listed_incremental_option"", ""lineno"", ""_"", ""Invalid"", ""modification"", ""time"", ""seconds""]]",[-22727584653760979128],508,132480.0,2
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=05805868f26533141b8b02d5a6449965652ef187,7 Aug 2006,"(read_incr_db_01): Check input strings more carefully.  Do not pass
 arbitrary char values to isspace, as this has undefined behavior.  Likewise
 for assigning arbitrary uintmax_t values to other types. (read_negative_num,
 read_unsigned_num, read_timespec): New functions, to check input values a bit
 more carefuly. (read_num): Use read_unsigned_num.  New arg MAX_VAL; all
 callers changed. (read_incr_db_2): Use these new functions. Use a consistent
 diagnostic for unexpected EOF. (read_directory_file): Do not assign arbitrary
 uintmax_t value to int. (read_timespec, write_directory_file_entry,
 write_directory_file): Handle negative time_t values correctly.  We don't
 bother to do this with pre-2 formats, since presumably the time stamps were
 output incorrectly.
",434,data/crawl/tar/hunk_103.cpp,check similar variable,non-trivial,data/crawl/tar/old_hunk_103.cpp,data/crawl/tar/new_hunk_103.cpp,57,-1,"ERROR ((0, 0, ""%s:%ld: %s"",
quotearg_colon (listed_incremental_option), lineno,
_(""Inode number out of range"")));",,"[""removeLog""]","[[""ERROR"", ""0"", ""0"", ""%s"", ""%ld"", ""%s"", ""quotearg_colon"", ""listed_incremental_option"", ""lineno"", ""_"", ""Inode"", ""number"", ""out"", ""of"", ""range""], []]",[22812606432656395322],507,65520.0,2
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=05805868f26533141b8b02d5a6449965652ef187,7 Aug 2006,"(read_incr_db_01): Check input strings more carefully.  Do not pass
 arbitrary char values to isspace, as this has undefined behavior.  Likewise
 for assigning arbitrary uintmax_t values to other types. (read_negative_num,
 read_unsigned_num, read_timespec): New functions, to check input values a bit
 more carefuly. (read_num): Use read_unsigned_num.  New arg MAX_VAL; all
 callers changed. (read_incr_db_2): Use these new functions. Use a consistent
 diagnostic for unexpected EOF. (read_directory_file): Do not assign arbitrary
 uintmax_t value to int. (read_timespec, write_directory_file_entry,
 write_directory_file): Handle negative time_t values correctly.  We don't
 bother to do this with pre-2 formats, since presumably the time stamps were
 output incorrectly.
",434,data/crawl/tar/hunk_103.cpp,check similar variable,non-trivial,data/crawl/tar/old_hunk_103.cpp,data/crawl/tar/new_hunk_103.cpp,45,-1,"ERROR ((0, 0, ""%s:%ld: %s"",
quotearg_colon (listed_incremental_option), lineno,
_(""Device number out of range"")));",,"[""removeLog""]","[[""ERROR"", ""0"", ""0"", ""%s"", ""%ld"", ""%s"", ""quotearg_colon"", ""listed_incremental_option"", ""lineno"", ""_"", ""Device"", ""number"", ""out"", ""of"", ""range""], []]",[23478891362305537406],506,65520.0,2
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=05805868f26533141b8b02d5a6449965652ef187,7 Aug 2006,"(read_incr_db_01): Check input strings more carefully.  Do not pass
 arbitrary char values to isspace, as this has undefined behavior.  Likewise
 for assigning arbitrary uintmax_t values to other types. (read_negative_num,
 read_unsigned_num, read_timespec): New functions, to check input values a bit
 more carefuly. (read_num): Use read_unsigned_num.  New arg MAX_VAL; all
 callers changed. (read_incr_db_2): Use these new functions. Use a consistent
 diagnostic for unexpected EOF. (read_directory_file): Do not assign arbitrary
 uintmax_t value to int. (read_timespec, write_directory_file_entry,
 write_directory_file): Handle negative time_t values correctly.  We don't
 bother to do this with pre-2 formats, since presumably the time stamps were
 output incorrectly.
",434,data/crawl/tar/hunk_103.cpp,check similar variable,non-trivial,data/crawl/tar/old_hunk_103.cpp,data/crawl/tar/new_hunk_103.cpp,30,-1,"ERROR ((0, 0, ""%s:%ld: %s"",
    quotearg_colon (listed_incremental_option), lineno,
    _(""Modification time (nanoseconds) out of range"")));",,"[""removeLog""]","[[""ERROR"", ""0"", ""0"", ""%s"", ""%ld"", ""%s"", ""quotearg_colon"", ""listed_incremental_option"", ""lineno"", ""_"", ""Modification"", ""time"", ""nanoseconds"", ""out"", ""of"", ""range""], []]",[10374727969655615658],505,65520.0,2
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=05805868f26533141b8b02d5a6449965652ef187,7 Aug 2006,"(read_incr_db_01): Check input strings more carefully.  Do not pass
 arbitrary char values to isspace, as this has undefined behavior.  Likewise
 for assigning arbitrary uintmax_t values to other types. (read_negative_num,
 read_unsigned_num, read_timespec): New functions, to check input values a bit
 more carefuly. (read_num): Use read_unsigned_num.  New arg MAX_VAL; all
 callers changed. (read_incr_db_2): Use these new functions. Use a consistent
 diagnostic for unexpected EOF. (read_directory_file): Do not assign arbitrary
 uintmax_t value to int. (read_timespec, write_directory_file_entry,
 write_directory_file): Handle negative time_t values correctly.  We don't
 bother to do this with pre-2 formats, since presumably the time stamps were
 output incorrectly.
",434,data/crawl/tar/hunk_103.cpp,check similar variable,non-trivial,data/crawl/tar/old_hunk_103.cpp,data/crawl/tar/new_hunk_103.cpp,18,-1,"ERROR ((0, 0, ""%s:%ld: %s"",
    quotearg_colon (listed_incremental_option), lineno,
    _(""Modification time (seconds) out of range"")));",,"[""removeLog""]","[[""ERROR"", ""0"", ""0"", ""%s"", ""%ld"", ""%s"", ""quotearg_colon"", ""listed_incremental_option"", ""lineno"", ""_"", ""Modification"", ""time"", ""seconds"", ""out"", ""of"", ""range""], []]",[13329338601747945452],504,65520.0,2
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=b9588c472262be876400e0804c529c57102d6f0d,23 Jan 2007,"(struct exclude_tag): rename to exclusion_tag (check_exclusion_tags):
 New function (cachedir_file_p): New function (from check_cache_directory)
 (dump_dir0,dump_file0): Use check_exclusion_tags
",215,data/crawl/tar/hunk_91.cpp,check similar return value,non-trivial,data/crawl/tar/old_hunk_91.cpp,data/crawl/tar/new_hunk_91.cpp,-1,42,,"exclusion_tag_warning (st->orig_file_name, tag_file_name,
 _(""contents not dumped""));","[""addLog""]","[[], [""exclusion_tag_warning"", ""st"", ""orig_file_name"", ""tag_file_name"", ""_"", ""contents"", ""not"", ""dumped""]]",[6223220133174504031],503,0.0,2
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=efe6609cd997116b4f29181b57117ff6d91c7d98,26 Sep 2007,"(struct directory): New member tagfile (make_directory): Initialize
 tagfile to NULL (procdir): New argument: entry Hanlde exclusion tags.
 (makedumpdir): Take into account directory->tagfile. (scan_directory): Hanlde
 exclusion tags.
",65,data/crawl/tar/hunk_87.cpp,check similar return value,non-trivial,data/crawl/tar/old_hunk_87.cpp,data/crawl/tar/new_hunk_87.cpp,-1,21,,"exclusion_tag_warning (name_buffer, tag_file_name,
       _(""contents not dumped""));","[""addLog""]","[[], [""exclusion_tag_warning"", ""name_buffer"", ""tag_file_name"", ""_"", ""contents"", ""not"", ""dumped""]]",[4982417520174430025],502,0.0,2
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=ac6caa71bc6077d75ff5073f76f97d53225e78ae,7 Mar 2009,"Migrate to Git
",29623,data/crawl/tar/hunk_67.cpp,,,data/crawl/tar/old_hunk_67.cpp,data/crawl/tar/new_hunk_67.cpp,-1,186,,/buffer.c (try_new_volume);,"[""addLog""]","[[], [""/buffer"", ""c"", ""try_new_volume""]]",[-12530930510547672729],501,182880.0,2
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=c30c4ffb9fc874aafea6f6c91f3fc78595db4154,18 Jun 2009,"Remove files that were removed in CVS, but reappeared after migration
 to Git
",5265,data/crawl/tar/hunk_64.cpp,block change,non-trivial,data/crawl/tar/old_hunk_64.cpp,data/crawl/tar/new_hunk_64.cpp,710,-1,"fputs(breaks[0], out);",,"[""removeLog""]","[[""fputs"", ""breaks[0]"", ""out""], []]",[3244297555930287933],500,0.0,2
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=4dfcd6c054a5e9e1a371c822a3be90564dd9b690,7 Oct 2009,"Fix bugs in handling the --remove-files option.

Make sure the files are deleted only if they were succesfully stored
to the archive.

* src/exit.c: New file.
* src/unlink.c: New file.
* src/Makefile.am (tar_SOURCES): Add exit.c and unlink.c.
* src/common.h: Include progname.h
(program_name): Remove global.
(records_written): New extern.
(queue_deferred_unlink, finish_deferred_unlinks): New prototypes.
(fatal_exit_hook): New extern.
* src/create.c (create_archive): Call finish_deferred_unlinks.
(dump_hard_link, dump_file0): Don't actually unlink the file,
queue it to deferred_unlinks instead.
* src/delete.c (records_written): Remove extern: declared in
common.h.
* src/extract.c (extract_archive): Set fatal_exit_hook.
(fatal_exit, xalloc_die): Move to exit.c
* src/system.c (sys_wait_for_child): Exit immediately
if the child dies or exits with a non-zero status.
(sys_child_open_for_compress)
(sys_child_open_for_uncompress): Use set_program_name,
instead of setting program_name directly.
* src/tar.c (main): Use set_program_name,
instead of setting program_name directly.

* tests/Makefile.am (TESTSUITE_AT): Add remfiles01.at
and remfiles02.at.
* tests/testsuite.at: Likewise.
* tests/gzip.at: Reflect the above changes.",401,data/crawl/tar/hunk_61.cpp,check similar return value,non-trivial,data/crawl/tar/old_hunk_61.cpp,data/crawl/tar/new_hunk_61.cpp,3,3,"ERROR ((0, 0, _(""Child died with signal %d""), sig));","FATAL_ERROR ((0, 0, _(""Child died with signal %d""), sig));","[""updateLog""]","[[""ERROR""], [""FATAL_ERROR""]]",[-2734982981564794265],499,0.0,2
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=4dfcd6c054a5e9e1a371c822a3be90564dd9b690,7 Oct 2009,"Fix bugs in handling the --remove-files option.

Make sure the files are deleted only if they were succesfully stored
to the archive.

* src/exit.c: New file.
* src/unlink.c: New file.
* src/Makefile.am (tar_SOURCES): Add exit.c and unlink.c.
* src/common.h: Include progname.h
(program_name): Remove global.
(records_written): New extern.
(queue_deferred_unlink, finish_deferred_unlinks): New prototypes.
(fatal_exit_hook): New extern.
* src/create.c (create_archive): Call finish_deferred_unlinks.
(dump_hard_link, dump_file0): Don't actually unlink the file,
queue it to deferred_unlinks instead.
* src/delete.c (records_written): Remove extern: declared in
common.h.
* src/extract.c (extract_archive): Set fatal_exit_hook.
(fatal_exit, xalloc_die): Move to exit.c
* src/system.c (sys_wait_for_child): Exit immediately
if the child dies or exits with a non-zero status.
(sys_child_open_for_compress)
(sys_child_open_for_uncompress): Use set_program_name,
instead of setting program_name directly.
* src/tar.c (main): Use set_program_name,
instead of setting program_name directly.

* tests/Makefile.am (TESTSUITE_AT): Add remfiles01.at
and remfiles02.at.
* tests/testsuite.at: Likewise.
* tests/gzip.at: Reflect the above changes.",401,data/crawl/tar/hunk_59.cpp,inner similar method,non-trivial,data/crawl/tar/old_hunk_59.cpp,data/crawl/tar/new_hunk_59.cpp,-1,34,,"error (0, 0, ""%s"", _(""memory exhausted""));","[""addLog""]","[[], [""error"", ""0"", ""0"", ""%s"", ""_"", ""memory"", ""exhausted""]]",[18665186363113048020],498,1355040.0,2
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=4dfcd6c054a5e9e1a371c822a3be90564dd9b690,7 Oct 2009,"Fix bugs in handling the --remove-files option.

Make sure the files are deleted only if they were succesfully stored
to the archive.

* src/exit.c: New file.
* src/unlink.c: New file.
* src/Makefile.am (tar_SOURCES): Add exit.c and unlink.c.
* src/common.h: Include progname.h
(program_name): Remove global.
(records_written): New extern.
(queue_deferred_unlink, finish_deferred_unlinks): New prototypes.
(fatal_exit_hook): New extern.
* src/create.c (create_archive): Call finish_deferred_unlinks.
(dump_hard_link, dump_file0): Don't actually unlink the file,
queue it to deferred_unlinks instead.
* src/delete.c (records_written): Remove extern: declared in
common.h.
* src/extract.c (extract_archive): Set fatal_exit_hook.
(fatal_exit, xalloc_die): Move to exit.c
* src/system.c (sys_wait_for_child): Exit immediately
if the child dies or exits with a non-zero status.
(sys_child_open_for_compress)
(sys_child_open_for_uncompress): Use set_program_name,
instead of setting program_name directly.
* src/tar.c (main): Use set_program_name,
instead of setting program_name directly.

* tests/Makefile.am (TESTSUITE_AT): Add remfiles01.at
and remfiles02.at.
* tests/testsuite.at: Likewise.
* tests/gzip.at: Reflect the above changes.",401,data/crawl/tar/hunk_59.cpp,inner similar method,non-trivial,data/crawl/tar/old_hunk_59.cpp,data/crawl/tar/new_hunk_59.cpp,-1,27,,"error (TAREXIT_FAILURE, 0, _(""Error is not recoverable: exiting now""));","[""addLog""]","[[], [""error"", ""TAREXIT_FAILURE"", ""0"", ""_"", ""Error"", ""is"", ""not"", ""recoverable"", ""exiting"", ""now""]]",[29424550464379772209],497,2581920.0,2
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=d36f5a3cc3280d6c4a58367bf51b527d5c14ac04,18 Nov 2012,"Support for POSIX ACLs

* configure.ac: Check whether ACLs are available on the
host system.
* gnulib.modules: Add acl
* src/create.c (start_header): Store ACLs when creating
a POSIX archive.
(dump_file0): Handle ACLs.
* src/extract.c (delayed_set_stat) <acls_a_ptr, acls_a_len>
<acls_d_ptr, acls_d_len>: New members.
(delayed_link): Likewise.
(set_stat,delay_set_stat)
(apply_nonancestor_delayed_set_stat): Set ACLs.
* src/tar.c: New options: ""--acls"", ""--no-acls""
(tar_stat_destroy): Free acls_a_ptr and acls_d_ptr fields.
* src/tar.h (tar_stat_info) <acls_a_ptr, acls_a_len>
<acls_d_ptr, acls_d_len>: New members.
* src/xattrs.c (xattrs_acls_get, xattrs_acls_set): New functions.
* src/xheader.c: Support new keywors: ""SCHILY.acl.access"" and
""SCHILY.acl.default"".
* tests/Makefile.am: Add new tests.
* tests/testsuite.at: Likewise.
* tests/acls01.at: New test.
* tests/acls02.at: New test.",627,data/crawl/tar/hunk_39.cpp,check similar return value,non-trivial,data/crawl/tar/old_hunk_39.cpp,data/crawl/tar/new_hunk_39.cpp,-1,188,,"call_arg_warn (""acl_to_text"", file_name);","[""addLog""]","[[], [""call_arg_warn"", ""acl_to_text"", ""file_name""]]",[-15072372191576064981],496,0.0,2
http://git.savannah.gnu.org/cgit/tar.git/commit/?id=d36f5a3cc3280d6c4a58367bf51b527d5c14ac04,18 Nov 2012,"Support for POSIX ACLs

* configure.ac: Check whether ACLs are available on the
host system.
* gnulib.modules: Add acl
* src/create.c (start_header): Store ACLs when creating
a POSIX archive.
(dump_file0): Handle ACLs.
* src/extract.c (delayed_set_stat) <acls_a_ptr, acls_a_len>
<acls_d_ptr, acls_d_len>: New members.
(delayed_link): Likewise.
(set_stat,delay_set_stat)
(apply_nonancestor_delayed_set_stat): Set ACLs.
* src/tar.c: New options: ""--acls"", ""--no-acls""
(tar_stat_destroy): Free acls_a_ptr and acls_d_ptr fields.
* src/tar.h (tar_stat_info) <acls_a_ptr, acls_a_len>
<acls_d_ptr, acls_d_len>: New members.
* src/xattrs.c (xattrs_acls_get, xattrs_acls_set): New functions.
* src/xheader.c: Support new keywors: ""SCHILY.acl.access"" and
""SCHILY.acl.default"".
* tests/Makefile.am: Add new tests.
* tests/testsuite.at: Likewise.
* tests/acls01.at: New test.
* tests/acls02.at: New test.",627,data/crawl/tar/hunk_39.cpp,check similar return value,non-trivial,data/crawl/tar/old_hunk_39.cpp,data/crawl/tar/new_hunk_39.cpp,-1,179,,"call_arg_warn (""acl_get_file_at"", file_name);","[""addLog""]","[[], [""call_arg_warn"", ""acl_get_file_at"", ""file_name""]]",[-3821431335537624245],495,0.0,2
