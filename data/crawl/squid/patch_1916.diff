@@ -1,5 +1,5 @@
 /*
- * $Id: acl.cc,v 1.58 1996/11/04 18:12:06 wessels Exp $
+ * $Id: acl.cc,v 1.59 1996/11/05 17:07:57 wessels Exp $
  *
  * DEBUG: section 28    Access Control
  * AUTHOR: Duane Wessels
@@ -721,7 +721,7 @@ aclMatchIp(struct _acl_ip_data *data, struct in_addr c)
 }
 
 static int
-aclMatchDomainList(wordlist *data, const char *host)
+aclMatchDomainList(wordlist * data, const char *host)
 {
     wordlist *first, *prev;
 
@@ -900,7 +900,7 @@ aclMatchAcl(struct _acl *acl, aclCheck_t * checklist)
 }
 
 static int
-aclMatchAclList(const struct _acl_list *list, aclCheck_t *checklist)
+aclMatchAclList(const struct _acl_list *list, aclCheck_t * checklist)
 {
     while (list) {
 	AclMatchedName = list->acl->name;
@@ -917,7 +917,7 @@ aclMatchAclList(const struct _acl_list *list, aclCheck_t *checklist)
 }
 
 int
-aclCheck(const struct _acl_access *A, aclCheck_t *checklist)
+aclCheck(const struct _acl_access *A, aclCheck_t * checklist)
 {
     int allow = 0;
 
@@ -1,5 +1,5 @@
 /*
- * $Id: cache_cf.cc,v 1.128 1996/11/04 22:51:34 wessels Exp $
+ * $Id: cache_cf.cc,v 1.129 1996/11/05 17:07:59 wessels Exp $
  *
  * DEBUG: section 3     Configuration File Parsing
  * AUTHOR: Harvest Derived
@@ -259,7 +259,7 @@ self_destruct(void)
 }
 
 static int
-ip_acl_match(struct in_addr c, const ip_acl *a)
+ip_acl_match(struct in_addr c, const ip_acl * a)
 {
     static struct in_addr h;
 
@@ -283,7 +283,7 @@ ip_acl_destroy(ip_acl ** a)
 }
 
 ip_access_type
-ip_access_check(struct in_addr address, const ip_acl *list)
+ip_access_check(struct in_addr address, const ip_acl * list)
 {
     static int init = 0;
     static struct in_addr localhost;
@@ -317,7 +317,7 @@ ip_access_check(struct in_addr address, const ip_acl *list)
 
 
 static void
-addToIPACL(ip_acl **list, const char *ip_str, ip_access_type access)
+addToIPACL(ip_acl ** list, const char *ip_str, ip_access_type access)
 {
     ip_acl *p, *q;
     int a1, a2, a3, a4;
@@ -407,7 +407,7 @@ wordlistDestroy(wordlist ** list)
 }
 
 static void
-wordlistAdd(wordlist **list, const char *key)
+wordlistAdd(wordlist ** list, const char *key)
 {
     wordlist *p = NULL;
     wordlist *q = NULL;
@@ -1,6 +1,6 @@
 
 /*
- * $Id: cachemgr.cc,v 1.40 1996/11/04 22:07:25 wessels Exp $
+ * $Id: cachemgr.cc,v 1.41 1996/11/05 17:08:01 wessels Exp $
  *
  * DEBUG: Section 0     CGI Cache Manager
  * AUTHOR: Harvest Derived
@@ -979,7 +979,7 @@ main(int argc, char *argv[])
     return 0;
 }
 
-static int 
+static int
 client_comm_connect(int sock, char *dest_host, u_short dest_port)
 {
     const struct hostent *hp;
@@ -1,6 +1,6 @@
 
 /*
- * $Id: client.cc,v 1.13 1996/11/04 18:12:14 wessels Exp $
+ * $Id: client.cc,v 1.14 1996/11/05 17:08:01 wessels Exp $
  *
  * DEBUG: section 0     WWW Client
  * AUTHOR: Harvest Derived
@@ -118,15 +118,15 @@ static void
 usage(const char *progname)
 {
     fprintf(stderr,
-    "Usage: %s [-rs] [-i IMS_time] [-h host] [-p port] [-m method] url\n"
-    "Options:\n"
-    "    -r         Force cache to reload URL.\n"
-    "    -s         Silent.  Do not print data to stdout.\n"
-    "    -i IMS     If-Modified-Since time (in Epoch seconds).\n"
-    "    -h host    Retrieve URL from cache on hostname.  Default is localhost.\n"
-    "    -p port    Port number of cache.  Default is %d.\n"
-    "    -m method  Request method, default is GET.\n",
-    progname, CACHE_HTTP_PORT);
+	"Usage: %s [-rs] [-i IMS_time] [-h host] [-p port] [-m method] url\n"
+	"Options:\n"
+	"    -r         Force cache to reload URL.\n"
+	"    -s         Silent.  Do not print data to stdout.\n"
+	"    -i IMS     If-Modified-Since time (in Epoch seconds).\n"
+	"    -h host    Retrieve URL from cache on hostname.  Default is localhost.\n"
+	"    -p port    Port number of cache.  Default is %d.\n"
+	"    -m method  Request method, default is GET.\n",
+	progname, CACHE_HTTP_PORT);
     exit(1);
 }
 
@@ -1,6 +1,6 @@
 
 /*
- * $Id: client_side.cc,v 1.57 1996/11/04 22:51:35 wessels Exp $
+ * $Id: client_side.cc,v 1.58 1996/11/05 17:08:02 wessels Exp $
  *
  * DEBUG: section 33    Client-side Routines
  * AUTHOR: Duane Wessels
@@ -38,7 +38,7 @@ static void clientLookupSrcFQDNDone _PARAMS((int fd, const char *fqdn, void *dat
 
 
 static void
-clientLookupDstIPDone(int fd, const ipcache_addrs *ia, void *data)
+clientLookupDstIPDone(int fd, const ipcache_addrs * ia, void *data)
 {
     icpStateData *icpState = data;
     debug(33, 5, "clientLookupDstIPDone: FD %d, '%s'\n",
@@ -1,5 +1,5 @@
 /*
- * $Id: debug.cc,v 1.34 1996/11/04 18:12:22 wessels Exp $
+ * $Id: debug.cc,v 1.35 1996/11/05 17:08:03 wessels Exp $
  *
  * DEBUG: section 0     Debug Routines
  * AUTHOR: Harvest Derived
@@ -118,7 +118,7 @@ static char *accessLogTime _PARAMS((time_t));
 
 #ifdef __STDC__
 void
-_db_print(int section, int level, const char *format, ...)
+_db_print(int section, int level, const char *format,...)
 {
     va_list args;
 #else
@@ -1,6 +1,6 @@
 
 /*
- * $Id: errorpage.cc,v 1.48 1996/11/05 16:53:44 wessels Exp $
+ * $Id: errorpage.cc,v 1.49 1996/11/05 17:08:05 wessels Exp $
  *
  * DEBUG: section 4     Error Generation
  * AUTHOR: Duane Wessels
@@ -153,7 +153,7 @@ errorInitialize(void)
 }
 
 void
-squid_error_entry(StoreEntry *entry, log_type type, const char *msg)
+squid_error_entry(StoreEntry * entry, log_type type, const char *msg)
 {
     int error_index;
 
@@ -337,7 +337,7 @@ access_denied_redirect(int code, int method, const char *url, const char *client
 }
 
 char *
-authorization_needed_msg(const request_t *request, const char *realm)
+authorization_needed_msg(const request_t * request, const char *realm)
 {
     sprintf(auth_msg, "<HTML><HEAD><TITLE>Authorization needed</TITLE>\n\
 </HEAD><BODY><H1>Authorization needed</H1>\n\
@@ -1,6 +1,6 @@
 
 /*
- * $Id: fqdncache.cc,v 1.31 1996/11/04 18:12:33 wessels Exp $
+ * $Id: fqdncache.cc,v 1.32 1996/11/05 17:08:06 wessels Exp $
  *
  * DEBUG: section 35    FQDN Cache
  * AUTHOR: Harvest Derived
@@ -279,7 +279,7 @@ fqdncache_compareLastRef(fqdncache_entry ** e1, fqdncache_entry ** e2)
 }
 
 static int
-fqdncacheExpiredEntry(const fqdncache_entry *f)
+fqdncacheExpiredEntry(const fqdncache_entry * f)
 {
     if (f->status == FQDN_PENDING)
 	return 0;
@@ -381,7 +381,7 @@ fqdncache_add_to_hash(fqdncache_entry * f)
 
 
 static void
-fqdncache_add(const char *name, fqdncache_entry *f, const struct hostent *hp, int cached)
+fqdncache_add(const char *name, fqdncache_entry * f, const struct hostent *hp, int cached)
 {
     int k;
 
@@ -443,7 +443,7 @@ fqdncache_call_pending_badname(int fd, FQDNH handler, void *data)
 }
 
 static fqdncache_entry *
-fqdncache_parsebuffer(const char *inbuf, dnsserver_t *dnsData)
+fqdncache_parsebuffer(const char *inbuf, dnsserver_t * dnsData)
 {
     char *buf = xstrdup(inbuf);
     char *token;
@@ -829,7 +829,7 @@ dummy_handler(int u1, const char *u2, void *u3)
 }
 
 static int
-fqdncacheHasPending(const fqdncache_entry *f)
+fqdncacheHasPending(const fqdncache_entry * f)
 {
     const struct _fqdn_pending *p = NULL;
     if (f->status != FQDN_PENDING)
@@ -1,6 +1,6 @@
 
 /*
- * $Id: ftp.cc,v 1.75 1996/11/05 16:54:47 wessels Exp $
+ * $Id: ftp.cc,v 1.76 1996/11/05 17:08:07 wessels Exp $
  *
  * DEBUG: section 9     File Transfer Protocol (FTP)
  * AUTHOR: Harvest Derived
@@ -545,7 +545,7 @@ ftpGetBasicAuth(const char *req_hdr)
 
 
 int
-ftpStart(int unusedfd, const char *url, request_t *request, StoreEntry *entry)
+ftpStart(int unusedfd, const char *url, request_t * request, StoreEntry * entry)
 {
     LOCAL_ARRAY(char, realm, 8192);
     FtpStateData *ftpData = NULL;
@@ -1,5 +1,5 @@
 /*
- * $Id: gopher.cc,v 1.61 1996/11/05 16:54:49 wessels Exp $
+ * $Id: gopher.cc,v 1.62 1996/11/05 17:08:10 wessels Exp $
  *
  * DEBUG: section 10    Gopher
  * AUTHOR: Harvest Derived
@@ -403,10 +403,10 @@ gopherToHTML(GopherStateData * data, char *inbuf, int len)
 
     if (data->conversion == HTML_INDEX_PAGE) {
 	sprintf(outbuf, "<HTML><HEAD><TITLE>Gopher Index %s</TITLE></HEAD>\n"
-		"<BODY><H1>%s<BR>Gopher Search</H1>\n"
-		"<p>This is a searchable Gopher index. Use the search\n"
-		"function of your browser to enter search terms.\n"
-		"<ISINDEX></BODY></HTML>\n", entry->url, entry->url);
+	    "<BODY><H1>%s<BR>Gopher Search</H1>\n"
+	    "<p>This is a searchable Gopher index. Use the search\n"
+	    "function of your browser to enter search terms.\n"
+	    "<ISINDEX></BODY></HTML>\n", entry->url, entry->url);
 	storeAppend(entry, outbuf, strlen(outbuf));
 	/* now let start sending stuff to client */
 	BIT_RESET(entry->flag, DELAY_SENDING);
@@ -416,10 +416,10 @@ gopherToHTML(GopherStateData * data, char *inbuf, int len)
     }
     if (data->conversion == HTML_CSO_PAGE) {
 	sprintf(outbuf, "<HTML><HEAD><TITLE>CSO Search of %s</TITLE></HEAD>\n"
-		"<BODY><H1>%s<BR>CSO Search</H1>\n"
-		"<P>A CSO database usually contains a phonebook or\n"
-		"directory.  Use the search function of your browser to enter\n"
-		"search terms.</P><ISINDEX></BODY></HTML>\n",
+	    "<BODY><H1>%s<BR>CSO Search</H1>\n"
+	    "<P>A CSO database usually contains a phonebook or\n"
+	    "directory.  Use the search function of your browser to enter\n"
+	    "search terms.</P><ISINDEX></BODY></HTML>\n",
 	    entry->url, entry->url);
 
 	storeAppend(entry, outbuf, strlen(outbuf));
@@ -1,5 +1,5 @@
 /*
- * $Id: http.cc,v 1.94 1996/11/05 16:54:50 wessels Exp $
+ * $Id: http.cc,v 1.95 1996/11/05 17:08:12 wessels Exp $
  *
  * DEBUG: section 11    Hypertext Transfer Protocol (HTTP)
  * AUTHOR: Harvest Derived
@@ -653,7 +653,7 @@ httpSendRequest(int fd, void *data)
 }
 
 int
-proxyhttpStart(edge *e, const char *url, StoreEntry *entry)
+proxyhttpStart(edge * e, const char *url, StoreEntry * entry)
 {
     int sock;
     HttpStateData *httpState = NULL;
@@ -702,7 +702,7 @@ proxyhttpStart(edge *e, const char *url, StoreEntry *entry)
 }
 
 static void
-httpConnect(int fd, const ipcache_addrs *ia, void *data)
+httpConnect(int fd, const ipcache_addrs * ia, void *data)
 {
     HttpStateData *httpState = data;
     request_t *request = httpState->request;
@@ -1,6 +1,6 @@
 
 /*
- * $Id: icmp.cc,v 1.26 1996/11/04 18:12:44 wessels Exp $
+ * $Id: icmp.cc,v 1.27 1996/11/05 17:08:13 wessels Exp $
  *
  * DEBUG: section 37    ICMP Routines
  * AUTHOR: Duane Wessels
@@ -222,7 +222,7 @@ icmpPing(struct in_addr to)
 }
 
 void
-icmpSourcePing(struct in_addr to, const icp_common_t *header, const char *url)
+icmpSourcePing(struct in_addr to, const icp_common_t * header, const char *url)
 {
 #if USE_ICMP
     char *payload;
@@ -1,5 +1,5 @@
 /*
- * $Id: ipcache.cc,v 1.82 1996/11/04 18:12:49 wessels Exp $
+ * $Id: ipcache.cc,v 1.83 1996/11/05 17:08:16 wessels Exp $
  *
  * DEBUG: section 14    IP Cache
  * AUTHOR: Harvest Derived
@@ -923,7 +923,7 @@ stat_ipcache_get(StoreEntry * sentry)
 }
 
 static void
-dummy_handler(int u1, const ipcache_addrs *addrs, void *u3)
+dummy_handler(int u1, const ipcache_addrs * addrs, void *u3)
 {
     return;
 }
@@ -1,5 +1,5 @@
 /*
- * $Id: neighbors.cc,v 1.79 1996/11/05 16:59:44 wessels Exp $
+ * $Id: neighbors.cc,v 1.80 1996/11/05 17:08:17 wessels Exp $
  *
  * DEBUG: section 15    Neighbor Routines
  * AUTHOR: Harvest Derived
@@ -155,7 +155,7 @@ whichEdge(const struct sockaddr_in *from)
 }
 
 void
-hierarchyNote(request_t *request, hier_code code, int timeout, const char *cache_host)
+hierarchyNote(request_t * request, hier_code code, int timeout, const char *cache_host)
 {
     if (request) {
 	request->hierarchy.code = code;
@@ -165,7 +165,7 @@ hierarchyNote(request_t *request, hier_code code, int timeout, const char *cache
 }
 
 static neighbor_t
-neighborType(const edge *e, const request_t *request)
+neighborType(const edge * e, const request_t * request)
 {
     const dom_list *d = NULL;
     for (d = e->domains; d; d = d->next) {
@@ -177,7 +177,7 @@ neighborType(const edge *e, const request_t *request)
 }
 
 static int
-edgeWouldBePinged(const edge *e, request_t *request)
+edgeWouldBePinged(const edge * e, request_t * request)
 {
     const dom_list *d = NULL;
     int do_ping = 1;
@@ -527,7 +527,7 @@ neighborsUdpPing(protodispatch_data * proto)
 }
 
 static void
-neighborAlive(edge *e, const MemObject *mem, const icp_common_t *header)
+neighborAlive(edge * e, const MemObject * mem, const icp_common_t * header)
 {
     int rtt;
     int n;
@@ -566,7 +566,7 @@ neighborCountIgnored(edge * e, icp_opcode op_unused)
  * If a hit process is already started, then sobeit
  */
 void
-neighborsUdpAck(int fd, const char *url, icp_common_t *header, const struct sockaddr_in *from, StoreEntry *entry, char *data, int data_sz)
+neighborsUdpAck(int fd, const char *url, icp_common_t * header, const struct sockaddr_in *from, StoreEntry * entry, char *data, int data_sz)
 {
     edge *e = NULL;
     MemObject *mem = entry->mem_obj;
@@ -166,7 +166,7 @@ netdbAdd(struct in_addr addr, const char *hostname)
 }
 
 static void
-netdbSendPing(int fdunused, const ipcache_addrs *ia, void *data)
+netdbSendPing(int fdunused, const ipcache_addrs * ia, void *data)
 {
     struct in_addr addr;
     char *hostname = data;
@@ -1,6 +1,7 @@
 
+
 /*
- * $Id: pinger.cc,v 1.13 1996/11/04 18:12:56 wessels Exp $
+ * $Id: pinger.cc,v 1.14 1996/11/05 17:08:20 wessels Exp $
  *
  * DEBUG: section 37    ICMP Routines
  * AUTHOR: Duane Wessels
@@ -1,6 +1,6 @@
 
 /*
- * $Id: refresh.cc,v 1.4 1996/11/04 18:13:00 wessels Exp $
+ * $Id: refresh.cc,v 1.5 1996/11/05 17:08:22 wessels Exp $
  *
  * DEBUG: section 22    Refresh Calculation
  * AUTHOR: Harvest Derived
@@ -111,7 +111,7 @@ refreshAddToList(const char *pattern, int opts, time_t min, int pct, time_t max)
  *     return 1 if its time to revalidate this entry, 0 otherwise
  */
 int
-refreshCheck(const StoreEntry *entry, const request_t *request_unused)
+refreshCheck(const StoreEntry * entry, const request_t * request_unused)
 {
     refresh_t *R;
     time_t min = REFRESH_DEFAULT_MIN;
@@ -1,6 +1,6 @@
 
 /*
- * $Id: squid.h,v 1.67 1996/11/04 22:07:28 wessels Exp $
+ * $Id: squid.h,v 1.68 1996/11/05 17:08:23 wessels Exp $
  *
  * AUTHOR: Duane Wessels
  *
@@ -292,7 +292,7 @@ extern int opt_catch_signals;	/* main.c */
 extern int opt_no_ipcache;	/* main.c */
 extern int vhost_mode;		/* main.c */
 extern const char *const version_string;	/* main.c */
-extern const char *const appname;		/* main.c */
+extern const char *const appname;	/* main.c */
 extern struct in_addr local_addr;	/* main.c */
 extern const char *const localhost;
 extern struct in_addr any_addr;	/* comm.c */
@@ -1,6 +1,6 @@
 
 /*
- * $Id: ssl.cc,v 1.23 1996/11/04 18:13:03 wessels Exp $
+ * $Id: ssl.cc,v 1.24 1996/11/05 17:08:24 wessels Exp $
  *
  * DEBUG: section 26    Secure Sockets Layer Proxy
  * AUTHOR: Duane Wessels
@@ -311,7 +311,7 @@ sslErrorComplete(int fd, char *buf, int size, int errflag, void *sslState)
 
 
 static void
-sslConnect(int fd, const ipcache_addrs *ia, void *data)
+sslConnect(int fd, const ipcache_addrs * ia, void *data)
 {
     SslStateData *sslState = data;
     request_t *request = sslState->request;
@@ -389,7 +389,7 @@ sslConnectDone(int fd, int status, void *data)
 }
 
 int
-sslStart(int fd, const char *url, request_t *request, char *mime_hdr, int *size_ptr)
+sslStart(int fd, const char *url, request_t * request, char *mime_hdr, int *size_ptr)
 {
     /* Create state structure. */
     SslStateData *sslState = NULL;
@@ -1,6 +1,6 @@
 
 /*
- * $Id: stat.cc,v 1.98 1996/11/04 18:13:05 wessels Exp $
+ * $Id: stat.cc,v 1.99 1996/11/05 17:08:26 wessels Exp $
  *
  * DEBUG: section 18    Cache Manager Statistics
  * AUTHOR: Harvest Derived
@@ -169,7 +169,7 @@ static void info_get_mallstat _PARAMS((int, int, StoreEntry *));
 
 /* process utilization information */
 static void
-stat_utilization_get(cacheinfo *obj, StoreEntry *sentry, const char *desc)
+stat_utilization_get(cacheinfo * obj, StoreEntry * sentry, const char *desc)
 {
     protocol_t proto_id;
     proto_stat *p = &obj->proto_stat_data[PROTO_MAX];
@@ -297,7 +297,7 @@ stat_io_get(StoreEntry * sentry)
  * may not reflect the retrieving object....
  * something need to be done here to get more accurate cache size */
 static int
-cache_size_get(const cacheinfo *obj)
+cache_size_get(const cacheinfo * obj)
 {
     int size = 0;
     protocol_t proto_id;
@@ -308,7 +308,7 @@ cache_size_get(const cacheinfo *obj)
 }
 
 static const char *
-describeStatuses(const StoreEntry *entry)
+describeStatuses(const StoreEntry * entry)
 {
     LOCAL_ARRAY(char, buf, 256);
     sprintf(buf, "%-13s %-13s %-12s %-12s",
@@ -320,7 +320,7 @@ describeStatuses(const StoreEntry *entry)
 }
 
 static const char *
-describeFlags(const StoreEntry *entry)
+describeFlags(const StoreEntry * entry)
 {
     LOCAL_ARRAY(char, buf, 256);
     int flags = (int) entry->flag;
@@ -364,7 +364,7 @@ describeFlags(const StoreEntry *entry)
 }
 
 static const char *
-describeTimestamps(const StoreEntry *entry)
+describeTimestamps(const StoreEntry * entry)
 {
     LOCAL_ARRAY(char, buf, 256);
     sprintf(buf, "LV:%-9d LU:%-9d LM:%-9d EX:%-9d",
@@ -377,7 +377,7 @@ describeTimestamps(const StoreEntry *entry)
 
 /* process objects list */
 static void
-stat_objects_get(const cacheinfo *obj, StoreEntry *sentry, int vm_or_not)
+stat_objects_get(const cacheinfo * obj, StoreEntry * sentry, int vm_or_not)
 {
     StoreEntry *entry = NULL;
     MemObject *mem;
@@ -409,7 +409,7 @@ stat_objects_get(const cacheinfo *obj, StoreEntry *sentry, int vm_or_not)
 
 /* process a requested object into a manager format */
 static void
-stat_get(const cacheinfo *obj, const char *req, StoreEntry *sentry)
+stat_get(const cacheinfo * obj, const char *req, StoreEntry * sentry)
 {
 
     if (strcmp(req, "objects") == 0) {
@@ -441,7 +441,7 @@ stat_get(const cacheinfo *obj, const char *req, StoreEntry *sentry)
 
 /* generate logfile status information */
 static void
-log_status_get(const cacheinfo *obj, StoreEntry *sentry)
+log_status_get(const cacheinfo * obj, StoreEntry * sentry)
 {
     if (obj->logfile_status == LOG_ENABLE) {
 	storeAppendPrintf(sentry, "{\"Logfile is Enabled. Filename: %s\"}\n",
@@ -456,7 +456,7 @@ log_status_get(const cacheinfo *obj, StoreEntry *sentry)
 /* log convert handler */
 /* call for each line in file, use fileWalk routine */
 static int
-logReadHandler(int fd_unused, const char *buf, int size_unused, log_read_data_t *data)
+logReadHandler(int fd_unused, const char *buf, int size_unused, log_read_data_t * data)
 {
     storeAppendPrintf(data->sentry, "{%s}\n", buf);
     return 0;
@@ -477,7 +477,7 @@ logReadEndHandler(int fd, int errflag_unused, log_read_data_t * data)
 
 /* start converting logfile to processed format */
 static void
-log_get_start(const cacheinfo *obj, StoreEntry *sentry)
+log_get_start(const cacheinfo * obj, StoreEntry * sentry)
 {
     log_read_data_t *data = NULL;
     int fd;
@@ -509,7 +509,7 @@ log_get_start(const cacheinfo *obj, StoreEntry *sentry)
 /* squid convert handler */
 /* call for each line in file, use fileWalk routine */
 static int
-squidReadHandler(int fd_unused, const char *buf, int size_unused, squid_read_data_t *data)
+squidReadHandler(int fd_unused, const char *buf, int size_unused, squid_read_data_t * data)
 {
     storeAppendPrintf(data->sentry, "{\"%s\"}\n", buf);
     return 0;
@@ -529,7 +529,7 @@ squidReadEndHandler(int fd_unused, int errflag_unused, squid_read_data_t * data)
 
 /* start convert squid.conf file to processed format */
 static void
-squid_get_start(const cacheinfo *obj, StoreEntry *sentry)
+squid_get_start(const cacheinfo * obj, StoreEntry * sentry)
 {
     squid_read_data_t *data;
 
@@ -549,7 +549,7 @@ dummyhandler(cacheinfo * obj, StoreEntry * sentry)
 }
 
 static void
-server_list(const cacheinfo *obj, StoreEntry *sentry)
+server_list(const cacheinfo * obj, StoreEntry * sentry)
 {
     edge *e = NULL;
     dom_list *d = NULL;
@@ -721,7 +721,7 @@ mallinfoTotal(void)
 #endif
 
 static void
-info_get(const cacheinfo *obj, StoreEntry *sentry)
+info_get(const cacheinfo * obj, StoreEntry * sentry)
 {
     const char *tod = NULL;
     float f;
@@ -935,7 +935,7 @@ info_get(const cacheinfo *obj, StoreEntry *sentry)
 }
 
 static void
-parameter_get(const cacheinfo *obj, StoreEntry *sentry)
+parameter_get(const cacheinfo * obj, StoreEntry * sentry)
 {
     storeAppendPrintf(sentry, open_bracket);
     storeAppendPrintf(sentry,
@@ -1048,7 +1048,7 @@ log_quote(const char *header)
 
 
 static void
-log_append(const cacheinfo *obj,
+log_append(const cacheinfo * obj,
     const char *url,
     struct in_addr caddr,
     int size,
@@ -1258,7 +1258,7 @@ proto_count(cacheinfo * obj, protocol_t proto_id, log_type type)
 
 
 void
-stat_init(cacheinfo **object, const char *logfilename)
+stat_init(cacheinfo ** object, const char *logfilename)
 {
     cacheinfo *obj = NULL;
     int i;
@@ -1,6 +1,6 @@
 
 /*
- * $Id: store.cc,v 1.148 1996/11/05 17:02:58 wessels Exp $
+ * $Id: store.cc,v 1.149 1996/11/05 17:08:29 wessels Exp $
  *
  * DEBUG: section 20    Storeage Manager
  * AUTHOR: Harvest Derived
@@ -465,7 +465,7 @@ time_describe(time_t t)
 }
 
 static void
-storeLog(int tag, const StoreEntry *e)
+storeLog(int tag, const StoreEntry * e)
 {
     LOCAL_ARRAY(char, logmsg, MAX_URL << 1);
     time_t t = -1;
@@ -921,7 +921,7 @@ storeUnregister(StoreEntry * e, int fd)
 }
 
 int
-storeGetLowestReaderOffset(const StoreEntry *entry)
+storeGetLowestReaderOffset(const StoreEntry * entry)
 {
     const MemObject *mem = entry->mem_obj;
     int lowest = mem->e_current_len;
@@ -1004,7 +1004,7 @@ storeStartDeleteBehind(StoreEntry * e)
 
 /* Append incoming data from a primary server to an entry. */
 void
-storeAppend(StoreEntry *e, const char *data, int len)
+storeAppend(StoreEntry * e, const char *data, int len)
 {
     MemObject *mem;
     /* sanity check */
@@ -1035,7 +1035,7 @@ storeAppend(StoreEntry *e, const char *data, int len)
 
 #ifdef __STDC__
 void
-storeAppendPrintf(StoreEntry *e, const char *fmt,...)
+storeAppendPrintf(StoreEntry * e, const char *fmt,...)
 {
     va_list args;
     LOCAL_ARRAY(char, buf, 4096);
@@ -1109,7 +1109,7 @@ storeSwapFullPath(int fn, char *fullpath)
 
 /* swapping in handle */
 static int
-storeSwapInHandle(int fd_notused, const char *buf, int len, int flag, StoreEntry *e, int offset_notused)
+storeSwapInHandle(int fd_notused, const char *buf, int len, int flag, StoreEntry * e, int offset_notused)
 {
     MemObject *mem = e->mem_obj;
     SIH handler = NULL;
@@ -1228,7 +1228,7 @@ storeSwapInStart(StoreEntry * e, SIH swapin_complete_handler, void *swapin_compl
 }
 
 static void
-storeSwapLog(const StoreEntry *e)
+storeSwapLog(const StoreEntry * e)
 {
     LOCAL_ARRAY(char, logmsg, MAX_URL << 1);
     /* Note this printf format appears in storeWriteCleanLog() too */
@@ -2153,7 +2153,7 @@ storeRelease(StoreEntry * e)
 
 /* return if the current key is the original one. */
 int
-storeOriginalKey(const StoreEntry *e)
+storeOriginalKey(const StoreEntry * e)
 {
     if (!e)
 	return 1;
@@ -2162,7 +2162,7 @@ storeOriginalKey(const StoreEntry *e)
 
 /* return 1 if a store entry is locked */
 static int
-storeEntryLocked(const StoreEntry *e)
+storeEntryLocked(const StoreEntry * e)
 {
     if (e->lock_count)
 	return 1;
@@ -2177,7 +2177,7 @@ storeEntryLocked(const StoreEntry *e)
 
 /*  use this for internal call only */
 static int
-storeCopy(const StoreEntry *e, int stateoffset, int maxSize, char *buf, int *size)
+storeCopy(const StoreEntry * e, int stateoffset, int maxSize, char *buf, int *size)
 {
     int available_to_write = 0;
 
@@ -2206,7 +2206,7 @@ storeCopy(const StoreEntry *e, int stateoffset, int maxSize, char *buf, int *siz
 /* check if there is any client waiting for this object at all */
 /* return 1 if there is at least one client */
 int
-storeClientWaiting(const StoreEntry *e)
+storeClientWaiting(const StoreEntry * e)
 {
     int i;
     MemObject *mem = e->mem_obj;
@@ -2227,7 +2227,7 @@ storeClientWaiting(const StoreEntry *e)
 
 /* return index to matched clientstatus in client_list, -1 on NOT_FOUND */
 static int
-storeClientListSearch(const MemObject *mem, int fd)
+storeClientListSearch(const MemObject * mem, int fd)
 {
     int i;
     if (mem->client_list) {
@@ -2316,7 +2316,7 @@ storeClientCopy(StoreEntry * e,
 }
 
 static int
-storeEntryValidLength(const StoreEntry *e)
+storeEntryValidLength(const StoreEntry * e)
 {
     int diff;
     int hdr_sz;
@@ -2715,7 +2715,7 @@ swapInError(int fd_unused, StoreEntry * entry)
 }
 
 int
-storePendingNClients(const StoreEntry *e)
+storePendingNClients(const StoreEntry * e)
 {
     int npend = 0;
     int i;
@@ -2769,7 +2769,7 @@ storeRotateLog(void)
 }
 
 static int
-storeShouldPurgeMem(const StoreEntry *e)
+storeShouldPurgeMem(const StoreEntry * e)
 {
     if (storeCheckPurgeMem(e) == 0)
 	return 0;
@@ -2785,7 +2785,7 @@ storeShouldPurgeMem(const StoreEntry *e)
  * storeUnlockObject() and storeSwapOutHandle().
  */
 static int
-storeCheckPurgeMem(const StoreEntry *e)
+storeCheckPurgeMem(const StoreEntry * e)
 {
     if (storeEntryLocked(e))
 	return 0;
@@ -2797,7 +2797,7 @@ storeCheckPurgeMem(const StoreEntry *e)
 }
 
 static int
-storeCheckExpired(const StoreEntry *e)
+storeCheckExpired(const StoreEntry * e)
 {
     if (storeEntryLocked(e))
 	return 0;
@@ -2809,7 +2809,7 @@ storeCheckExpired(const StoreEntry *e)
 }
 
 static const char *
-storeDescribeStatus(const StoreEntry *e)
+storeDescribeStatus(const StoreEntry * e)
 {
     static char buf[MAX_URL << 1];
     sprintf(buf, "mem:%13s ping:%12s store:%13s swap:%12s locks:%d %s\n",
@@ -1,6 +1,6 @@
 
 /*
- * $Id: tunnel.cc,v 1.23 1996/11/04 18:13:03 wessels Exp $
+ * $Id: tunnel.cc,v 1.24 1996/11/05 17:08:24 wessels Exp $
  *
  * DEBUG: section 26    Secure Sockets Layer Proxy
  * AUTHOR: Duane Wessels
@@ -311,7 +311,7 @@ sslErrorComplete(int fd, char *buf, int size, int errflag, void *sslState)
 
 
 static void
-sslConnect(int fd, const ipcache_addrs *ia, void *data)
+sslConnect(int fd, const ipcache_addrs * ia, void *data)
 {
     SslStateData *sslState = data;
     request_t *request = sslState->request;
@@ -389,7 +389,7 @@ sslConnectDone(int fd, int status, void *data)
 }
 
 int
-sslStart(int fd, const char *url, request_t *request, char *mime_hdr, int *size_ptr)
+sslStart(int fd, const char *url, request_t * request, char *mime_hdr, int *size_ptr)
 {
     /* Create state structure. */
     SslStateData *sslState = NULL;
@@ -1,6 +1,6 @@
 
 /*
- * $Id: url.cc,v 1.37 1996/11/04 18:13:13 wessels Exp $
+ * $Id: url.cc,v 1.38 1996/11/05 17:08:32 wessels Exp $
  *
  * DEBUG: section 23    URL Parsing
  * AUTHOR: Duane Wessels
@@ -249,7 +249,7 @@ urlParse(method_t method, char *url)
 }
 
 char *
-urlCanonical(const request_t *request, char *buf)
+urlCanonical(const request_t * request, char *buf)
 {
     LOCAL_ARRAY(char, urlbuf, MAX_URL + 1);
     LOCAL_ARRAY(char, portbuf, 32);
@@ -312,7 +312,7 @@ matchDomainName(const char *domain, const char *host)
 }
 
 int
-urlCheckRequest(const request_t *r)
+urlCheckRequest(const request_t * r)
 {
     int rc = 0;
     if (r->method == METHOD_CONNECT)
@@ -1,6 +1,6 @@
 
 /*
- * $Id: wais.cc,v 1.51 1996/11/05 16:54:52 wessels Exp $
+ * $Id: wais.cc,v 1.52 1996/11/05 17:08:34 wessels Exp $
  *
  * DEBUG: section 24    WAIS Relay
  * AUTHOR: Harvest Derived
@@ -372,7 +372,7 @@ waisStart(int unusedfd, const char *url, method_t method, char *mime_hdr, StoreE
 
 
 static void
-waisConnect(int fd, const ipcache_addrs *ia, void *data)
+waisConnect(int fd, const ipcache_addrs * ia, void *data)
 {
     WaisStateData *waisState = data;
     if (!ipcache_gethostbyname(waisState->relayhost, 0)) {