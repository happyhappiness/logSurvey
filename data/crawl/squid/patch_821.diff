@@ -28,23 +28,23 @@ libsquid_compat_la_SOURCES = \
 	compat.h \
 	osdetect.h \
 	compat_shared.h \
+	fdsetsize.h \
 	gnuregex.h \
-	squid_fdsetsize.h \
-	squid_stdvarargs.h \
-	squid_valgrind.h \
+	stdvarargs.h \
+	valgrind.h \
 	\
-	os/squid_aix.h \
-	os/squid_freebsd.h \
-	os/squid_hpux.h \
-	os/squid_linux.h \
-	os/squid_mswin.h \
-	os/squid_next.h \
-	os/squid_openbsd.h \
-	os/squid_qnx.h \
-	os/squid_sgi.h \
-	os/squid_solaris.h \
-	os/squid_sunos.h \
-	os/squid_windows.h \
+	os/aix.h \
+	os/freebsd.h \
+	os/hpux.h \
+	os/linux.h \
+	os/mswin.h \
+	os/next.h \
+	os/openbsd.h \
+	os/qnx.h \
+	os/sgi.h \
+	os/solaris.h \
+	os/sunos.h \
+	os/windows.h \
 	\
 	compat.cc \
 	GnuRegex.c
@@ -45,6 +45,12 @@
 #else
 #define assert(EX)  ((EX)?((void)0):xassert("EX", __FILE__, __LINE__))
 #endif
-SQUIDCEXTERN void xassert(const char *, const char *, int);
+
+#ifdef __cplusplus
+extern "C" void
+#else
+extern void
+#endif
+xassert(const char *, const char *, int);
 
 #endif /* SQUID_ASSERT_H */
@@ -24,14 +24,14 @@
 /* Define the _SQUID_TYPE_ based on a guess of the OS */
 /* NP: this MUST come first within compat.h           */
 /******************************************************/
-#include "osdetect.h"
+#include "libsquid-compat/osdetect.h"
 
 
 /*****************************************************/
 /* FDSETSIZE is messy and needs to be done before    */
 /* sys/types.h are defined.                          */
 /*****************************************************/
-#include "squid_fdsetsize.h"
+#include "libsquid-compat/fdsetsize.h"
 
 
 /*****************************************************/
@@ -49,37 +49,37 @@
 /* OS-macro wrapping should be done inside the OS .h */
 /*****************************************************/
 
-#include "os/squid_aix.h"
-#include "os/squid_dragonfly.h"
-#include "os/squid_freebsd.h"
-#include "os/squid_hpux.h"
-#include "os/squid_linux.h"
-#include "os/squid_mswin.h"
-#include "os/squid_next.h"
-#include "os/squid_openbsd.h"
-#include "os/squid_os2.h"
-#include "os/squid_qnx.h"
-#include "os/squid_sgi.h"
-#include "os/squid_solaris.h"
-#include "os/squid_sunos.h"
-#include "os/squid_windows.h"
+#include "libsquid-compat/os/aix.h"
+#include "libsquid-compat/os/dragonfly.h"
+#include "libsquid-compat/os/freebsd.h"
+#include "libsquid-compat/os/hpux.h"
+#include "libsquid-compat/os/linux.h"
+#include "libsquid-compat/os/mswin.h"
+#include "libsquid-compat/os/next.h"
+#include "libsquid-compat/os/openbsd.h"
+#include "libsquid-compat/os/os2.h"
+#include "libsquid-compat/os/qnx.h"
+#include "libsquid-compat/os/sgi.h"
+#include "libsquid-compat/os/solaris.h"
+#include "libsquid-compat/os/sunos.h"
+#include "libsquid-compat/os/windows.h"
 
 
 /*****************************************************/
 /* portabilities shared between all platforms and    */
 /* components as found to be needed                  */
 /*****************************************************/
 
-#include "compat_shared.h"
-#include "squid_stdvarargs.h"
-#include "assert.h"
+#include "libsquid-compat/compat_shared.h"
+#include "libsquid-compat/stdvarargs.h"
+#include "libsquid-compat/assert.h"
 
 /*****************************************************/
 /* component-specific portabilities                  */
 /*****************************************************/
 
 /* Valgrind API macros changed between two versions squid supports */
-#include "squid_valgrind.h"
+#include "libsquid-compat/valgrind.h"
 
 /* Endian functions are usualy handled by the OS but not always. */
 #include "squid_endian.h"
@@ -89,7 +89,7 @@
  * Default is to use a system provided one, but the bundle
  * may be used instead with explicit configuration.
  */
-#include "GnuRegex.h"
+#include "libsquid-compat/GnuRegex.h"
 
 
 #endif /* _SQUID_COMPAT_H */