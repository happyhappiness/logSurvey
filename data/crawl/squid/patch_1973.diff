@@ -1,5 +1,5 @@
 /*
- * $Id: cache_cf.cc,v 1.77 1996/08/28 20:11:30 wessels Exp $
+ * $Id: cache_cf.cc,v 1.78 1996/08/28 20:12:52 wessels Exp $
  *
  * DEBUG: section 3     Configuration File Parsing
  * AUTHOR: Harvest Derived
@@ -1354,7 +1354,7 @@ int parseConfigFile(file_name)
 	fflush(stdout);		/* print message */
     }
     if (Config.cleanRate < 1)
-	Config.cleanRate = 86400 * 365;	/* one year */
+	Config.cleanRate = 86400 * 365;		/* one year */
     if (Config.Announce.rate < 1)
 	Config.Announce.rate = 86400 * 365;	/* one year */
     if (Config.dnsChildren < 1) {
@@ -1,6 +1,6 @@
 
 /*
- * $Id: dnsserver.cc,v 1.16 1996/08/28 17:21:52 wessels Exp $
+ * $Id: dnsserver.cc,v 1.17 1996/08/28 20:12:53 wessels Exp $
  *
  * DEBUG: section 0     DNS Resolver
  * AUTHOR: Harvest Derived
@@ -217,7 +217,7 @@
 extern int h_errno;
 
 #if LIBRESOLV_DNS_TTL_HACK
-extern int _dns_ttl_;	/* this is a really *dirty* hack - bne */
+extern int _dns_ttl_;		/* this is a really *dirty* hack - bne */
 #endif
 
 int do_debug = 0;
@@ -444,7 +444,7 @@ int main(argc, argv)
 	     * for first try it's a dirty hack, by hacking getanswer
 	     * to place th e ttl in a global variable */
 	    if (_dns_ttl_ > -1)
-	    	printf("$ttl %d\n", _dns_ttl_);
+		printf("$ttl %d\n", _dns_ttl_);
 #endif
 
 	    printf("$end\n");
@@ -1,5 +1,5 @@
 /*
- * $Id: ipcache.cc,v 1.50 1996/08/28 20:11:58 wessels Exp $
+ * $Id: ipcache.cc,v 1.51 1996/08/28 20:12:55 wessels Exp $
  *
  * DEBUG: section 14    IP Cache
  * AUTHOR: Harvest Derived
@@ -337,7 +337,6 @@ int ipcache_purgelru()
 	    removed++;
 	    continue;
 	}
-
 	if (LRU_list_count == meta_data.ipcache_count)
 	    break;
 	if (i->status == IP_PENDING)
@@ -1,5 +1,5 @@
 /*
- * $Id: main.cc,v 1.67 1996/08/28 20:12:26 wessels Exp $
+ * $Id: main.cc,v 1.68 1996/08/28 20:12:56 wessels Exp $
  *
  * DEBUG: section 1     Startup and Main Loop
  * AUTHOR: Harvest Derived
@@ -503,8 +503,8 @@ static time_t mainMaintenance()
     time_t next;
     int n;
     if (squid_curtime >= next_maintain) {
-        storeMaintainSwapSpace();
-        next_maintain = squid_curtime + 1;
+	storeMaintainSwapSpace();
+	next_maintain = squid_curtime + 1;
     }
     if (store_rebuilding != STORE_NOT_REBUILDING)
 	goto maintenance_done;