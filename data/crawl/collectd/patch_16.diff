----++++src/utils_cmd_putval.c
@@ -138,14 +138,6 @@ cmd_status_t cmd_parse_putval(size_t argc, char **argv,
   type = NULL;
   type_instance = NULL;
 
-  vl.values_len = ds-&gt;ds_num;
-  vl.values = malloc(vl.values_len * sizeof(*vl.values));
-  if (vl.values == NULL) {
-    cmd_error(CMD_ERROR, err, &quot;malloc failed.&quot;);
-    sfree(identifier_copy);
-    return (CMD_ERROR);
-  }
-
   ret_putval-&gt;raw_identifier = identifier_copy;
   if (ret_putval-&gt;raw_identifier == NULL) {
     cmd_error(CMD_ERROR, err, &quot;malloc failed.&quot;);
@@ -177,33 +169,46 @@ cmd_status_t cmd_parse_putval(size_t argc, char **argv,
     /* else: cmd_parse_option did not find an option; treat this as a
      * value list. */
 
+    vl.values_len = ds-&gt;ds_num;
+    vl.values = calloc(vl.values_len, sizeof(*vl.values));
+    if (vl.values == NULL) {
+      cmd_error(CMD_ERROR, err, &quot;malloc failed.&quot;);
+      result = CMD_ERROR;
+      break;
+    }
+
     status = parse_values(argv[i], &amp;vl, ds);
     if (status != 0) {
       cmd_error(CMD_PARSE_ERROR, err, &quot;Parsing the values string failed.&quot;);
       result = CMD_PARSE_ERROR;
+      vl.values_len = 0;
+      sfree(vl.values);
       break;
     }
 
-    tmp = (value_list_t *)realloc(ret_putval-&gt;vl, (ret_putval-&gt;vl_num + 1) *
-                                                      sizeof(*ret_putval-&gt;vl));
+    tmp = realloc(ret_putval-&gt;vl,
+                  (ret_putval-&gt;vl_num + 1) * sizeof(*ret_putval-&gt;vl));
     if (tmp == NULL) {
       cmd_error(CMD_ERROR, err, &quot;realloc failed.&quot;);
       cmd_destroy_putval(ret_putval);
       result = CMD_ERROR;
+      vl.values_len = 0;
+      sfree(vl.values);
       break;
     }
 
     ret_putval-&gt;vl = tmp;
     ret_putval-&gt;vl_num++;
     memcpy(&amp;ret_putval-&gt;vl[ret_putval-&gt;vl_num - 1], &amp;vl, sizeof(vl));
+
+    /* pointer is now owned by ret_putval-&gt;vl[] */
+    vl.values_len = 0;
+    vl.values = NULL;
   } /* while (*buffer != 0) */
   /* Done parsing the options. */
 
-  if (result != CMD_OK) {
-    if (ret_putval-&gt;vl_num == 0)
-      sfree(vl.values);
+  if (result != CMD_OK)
     cmd_destroy_putval(ret_putval);
-  }
 
   return (result);
 } /* cmd_status_t cmd_parse_putval */
@@ -215,8 +220,7 @@ void cmd_destroy_putval(cmd_putval_t *putval) {
   sfree(putval-&gt;raw_identifier);
 
   for (size_t i = 0; i &lt; putval-&gt;vl_num; ++i) {
-    if (i == 0) /* values is shared between all entries */
-      sfree(putval-&gt;vl[i].values);
+    sfree(putval-&gt;vl[i].values);
     meta_data_destroy(putval-&gt;vl[i].meta);
     putval-&gt;vl[i].meta = NULL;
   }
----++++GitHub