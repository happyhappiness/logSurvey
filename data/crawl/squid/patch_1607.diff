@@ -486,9 +486,9 @@ extern void neighbors_open(int);
 extern peer *peerFindByName(const char *);
 extern peer *getDefaultParent(request_t * request);
 extern peer *getRoundRobinParent(request_t * request);
-extern lookup_t peerDigestLookup(peer *p, request_t * request, StoreEntry * entry);
+extern lookup_t peerDigestLookup(peer * p, request_t * request, StoreEntry * entry);
 extern peer *neighborsDigestSelect(request_t * request, StoreEntry * entry);
-extern void peerNoteDigestLookup(request_t * request, peer *p, lookup_t lookup);
+extern void peerNoteDigestLookup(request_t * request, peer * p, lookup_t lookup);
 extern int neighborUp(const peer * e);
 extern void peerDestroy(peer * e);
 extern char *neighborTypeStr(const peer * e);
@@ -518,7 +518,7 @@ extern peer *peerGetSomeParent(request_t *, hier_code *);
 extern void peerSelectInit(void);
 
 /* peer_digest.c */
-void peerDigestInit(peer *p);
+void peerDigestInit(peer * p);
 
 extern void protoDispatch(int, StoreEntry *, request_t *);
 
@@ -738,6 +738,7 @@ extern int storeDirWriteCleanLogs(int reopen);
 extern int storeDirValidFileno(int fn);
 extern int storeFilenoBelongsHere(int, int, int, int);
 extern OBJH storeDirStats;
+extern int storeDirMapBitsInUse(void);
 
 
 /*
@@ -917,8 +918,8 @@ extern void cacheDigestChangeCap(CacheDigest * cd, int new_cap);
 extern int cacheDigestTest(const CacheDigest * cd, const cache_key * key);
 extern void cacheDigestAdd(CacheDigest * cd, const cache_key * key);
 extern void cacheDigestDel(CacheDigest * cd, const cache_key * key);
-extern void cacheDigestGuessStatsUpdate(cd_guess_stats *stats, int real_hit, int guess_hit);
-extern void cacheDigestGuessStatsReport(const cd_guess_stats *stats, StoreEntry * sentry, const char *label);
+extern void cacheDigestGuessStatsUpdate(cd_guess_stats * stats, int real_hit, int guess_hit);
+extern void cacheDigestGuessStatsReport(const cd_guess_stats * stats, StoreEntry * sentry, const char *label);
 extern void cacheDigestReport(CacheDigest * cd, const char *label, StoreEntry * e);
 
 /*
@@ -1,6 +1,6 @@
 
 /*
- * $Id: stat.cc,v 1.239 1998/04/15 00:34:34 rousskov Exp $
+ * $Id: stat.cc,v 1.240 1998/04/16 17:18:53 wessels Exp $
  *
  * DEBUG: section 18    Cache Manager Statistics
  * AUTHOR: Harvest Derived
@@ -575,6 +575,8 @@ info_get(StoreEntry * sentry)
 	memInUse(MEM_MEM_HDR));
     storeAppendPrintf(sentry, "\t%6d Hot Object Cache Items\n",
 	hot_obj_count);
+    storeAppendPrintf(sentry, "\t%6d Filemap bits set\n",
+	storeDirMapBitsInUse());
 
 #if XMALLOC_STATISTICS
     storeAppendPrintf(sentry, "Memory allocation statistics\n");
@@ -937,7 +939,7 @@ statCountersCopy(StatCounters * dest, const StatCounters * orig)
 }
 
 static void
-statCountersHistograms(StoreEntry *sentry)
+statCountersHistograms(StoreEntry * sentry)
 {
     StatCounters *f = &Counter;
 #if TOO_MUCH_OUTPUT
@@ -1071,17 +1073,17 @@ statCountersDump(StoreEntry * sentry)
 
 #if SQUID_PEER_DIGEST
     storeAppendPrintf(sentry, "icp.times_used = %d\n",
-        f->icp.times_used);
+	f->icp.times_used);
     storeAppendPrintf(sentry, "cd.times_used = %d\n",
-        f->cd.times_used);
+	f->cd.times_used);
     storeAppendPrintf(sentry, "cd.msgs_sent = %d\n",
 	f->cd.msgs_sent);
     storeAppendPrintf(sentry, "cd.msgs_recv = %d\n",
 	f->cd.msgs_recv);
     storeAppendPrintf(sentry, "cd.memory = %d\n",
-	(int)f->cd.memory.kb);
+	(int) f->cd.memory.kb);
     storeAppendPrintf(sentry, "cd.local_memory = %d\n",
-        (int) (store_digest ? store_digest->mask_size/1024 : 0));
+	(int) (store_digest ? store_digest->mask_size / 1024 : 0));
     storeAppendPrintf(sentry, "cd.kbytes_sent = %d\n",
 	(int) f->cd.kbytes_sent.kb);
     storeAppendPrintf(sentry, "cd.kbytes_recv = %d\n",
@@ -1123,13 +1125,13 @@ statPeerSelect(StoreEntry * sentry)
 	storeAppendPrintf(sentry, "peer.kbytes_recv = %d\n",
 	    (int) peer->digest.stats.kbytes_recv.kb);
 	storeAppendPrintf(sentry, "peer.local_memory = %d\n",
-	    peer->digest.cd ? peer->digest.cd->mask_size/1024 : 0);
+	    peer->digest.cd ? peer->digest.cd->mask_size / 1024 : 0);
 	storeAppendPrintf(sentry, "digest state: inited: %d, disabled: %d usable: %d requested: %d\n",
 	    0 < EBIT_TEST(peer->digest.flags, PD_INITED),
 	    0 < EBIT_TEST(peer->digest.flags, PD_DISABLED),
 	    0 < EBIT_TEST(peer->digest.flags, PD_USABLE),
 	    0 < EBIT_TEST(peer->digest.flags, PD_REQUESTED)
-	);
+	    );
 	if (peer->digest.cd)
 	    cacheDigestReport(peer->digest.cd, peer->host, sentry);
 	else
@@ -1,6 +1,6 @@
 
 /*
- * $Id: store_dir.cc,v 1.62 1998/04/08 00:42:24 wessels Exp $
+ * $Id: store_dir.cc,v 1.63 1998/04/16 17:18:53 wessels Exp $
  *
  * DEBUG: section 47    Store Directory Routines
  * AUTHOR: Duane Wessels
@@ -507,9 +507,21 @@ storeDirStats(StoreEntry * sentry)
 	storeAppendPrintf(sentry, "Current Size: %d KB\n", SD->cur_size);
 	storeAppendPrintf(sentry, "Percent Used: %0.2f%%\n",
 	    100.0 * SD->cur_size / SD->max_size);
+	storeAppendPrintf(sentry, "Filemap bits in use: %d\n",
+	    SD->map->n_files_in_map);
     }
 }
 
+int
+storeDirMapBitsInUse(void)
+{
+    int i;
+    int n = 0;
+    for (i = 0; i < Config.cacheSwap.n_configured; i++)
+	n += Config.cacheSwap.swapDirs[i].map->n_files_in_map;
+    return n;
+}
+
 /*
  *  storeDirWriteCleanLogs
  * 